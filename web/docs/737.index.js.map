{"version":3,"sources":["webpack://kind-web/./src/apps/App.Playground.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbfile":"737.index.js","sourcesContent":["module.exports = (function() {\n    function word_to_u16(w) {\n        var u = 0;\n        for (var i = 0; i < 16; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u16_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 16; ++i) {\n            w = {\n                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u16_to_bits(x) {\n        var s = '';\n        for (var i = 0; i < 16; ++i) {\n            s = (x & 1 ? '1' : '0') + s;\n            x = x >>> 1;\n        }\n        return s;\n    };\n\n    function word_to_u32(w) {\n        var u = 0;\n        for (var i = 0; i < 32; ++i) {\n            u = u | (w._ === 'Word.i' ? 1 << i : 0);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u32_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0; i < 32; ++i) {\n            w = {\n                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32_for(state, from, til, func) {\n        for (var i = from; i < til; ++i) {\n            state = func(i)(state);\n        }\n        return state;\n    };\n\n    function word_to_u64(w) {\n        var u = 0n;\n        for (var i = 0n; i < 64n; i += 1n) {\n            u = u | (w._ === 'Word.i' ? 1n << i : 0n);\n            w = w.pred;\n        };\n        return u;\n    };\n\n    function u64_to_word(u) {\n        var w = {\n            _: 'Word.e'\n        };\n        for (var i = 0n; i < 64n; i += 1n) {\n            w = {\n                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',\n                pred: w\n            };\n        };\n        return w;\n    };\n\n    function u32array_to_buffer32(a) {\n        function go(a, buffer) {\n            switch (a._) {\n                case 'Array.tip':\n                    buffer.push(a.value);\n                    break;\n                case 'Array.tie':\n                    go(a.lft, buffer);\n                    go(a.rgt, buffer);\n                    break;\n            }\n            return buffer;\n        };\n        return new Uint32Array(go(a, []));\n    };\n\n    function buffer32_to_u32array(b) {\n        function go(b) {\n            if (b.length === 1) {\n                return {\n                    _: 'Array.tip',\n                    value: b[0]\n                };\n            } else {\n                var lft = go(b.slice(0, b.length / 2));\n                var rgt = go(b.slice(b.length / 2));\n                return {\n                    _: 'Array.tie',\n                    lft,\n                    rgt\n                };\n            };\n        };\n        return go(b);\n    };\n\n    function buffer32_to_depth(b) {\n        return BigInt(Math.log(b.length) / Math.log(2));\n    };\n    const inst_unit = x => x(null);\n    const elim_unit = (x => {\n        var $1 = (() => c0 => {\n            var self = x;\n            switch (\"unit\") {\n                case 'unit':\n                    var $0 = c0;\n                    return $0;\n            };\n        })();\n        return $1;\n    });\n    const inst_bool = x => x(true)(false);\n    const elim_bool = (x => {\n        var $4 = (() => c0 => c1 => {\n            var self = x;\n            if (self) {\n                var $2 = c0;\n                return $2;\n            } else {\n                var $3 = c1;\n                return $3;\n            };\n        })();\n        return $4;\n    });\n    const inst_nat = x => x(0n)(x0 => 1n + x0);\n    const elim_nat = (x => {\n        var $8 = (() => c0 => c1 => {\n            var self = x;\n            if (self === 0n) {\n                var $5 = c0;\n                return $5;\n            } else {\n                var $6 = (self - 1n);\n                var $7 = c1($6);\n                return $7;\n            };\n        })();\n        return $8;\n    });\n    const inst_u16 = x => x(x0 => word_to_u16(x0));\n    const elim_u16 = (x => {\n        var $11 = (() => c0 => {\n            var self = x;\n            switch ('u16') {\n                case 'u16':\n                    var $9 = u16_to_word(self);\n                    var $10 = c0($9);\n                    return $10;\n            };\n        })();\n        return $11;\n    });\n    const inst_u32 = x => x(x0 => word_to_u32(x0));\n    const elim_u32 = (x => {\n        var $14 = (() => c0 => {\n            var self = x;\n            switch ('u32') {\n                case 'u32':\n                    var $12 = u32_to_word(self);\n                    var $13 = c0($12);\n                    return $13;\n            };\n        })();\n        return $14;\n    });\n    const inst_u64 = x => x(x0 => word_to_u64(x0));\n    const elim_u64 = (x => {\n        var $17 = (() => c0 => {\n            var self = x;\n            switch ('u64') {\n                case 'u64':\n                    var $15 = u64_to_word(self);\n                    var $16 = c0($15);\n                    return $16;\n            };\n        })();\n        return $17;\n    });\n    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));\n    const elim_string = (x => {\n        var $22 = (() => c0 => c1 => {\n            var self = x;\n            if (self.length === 0) {\n                var $18 = c0;\n                return $18;\n            } else {\n                var $19 = self.charCodeAt(0);\n                var $20 = self.slice(1);\n                var $21 = c1($19)($20);\n                return $21;\n            };\n        })();\n        return $22;\n    });\n    const inst_buffer32 = x => x(x0 => x1 => u32array_to_buffer32(x1));\n    const elim_buffer32 = (x => {\n        var $26 = (() => c0 => {\n            var self = x;\n            switch ('b32') {\n                case 'b32':\n                    var $23 = buffer32_to_depth(self);\n                    var $24 = buffer32_to_u32array(self);\n                    var $25 = c0($23)($24);\n                    return $25;\n            };\n        })();\n        return $26;\n    });\n\n    function App$Store$new$(_local$2, _global$3) {\n        var $27 = ({\n            _: 'App.Store.new',\n            'local': _local$2,\n            'global': _global$3\n        });\n        return $27;\n    };\n    const App$Store$new = x0 => x1 => App$Store$new$(x0, x1);\n\n    function Pair$new$(_fst$3, _snd$4) {\n        var $28 = ({\n            _: 'Pair.new',\n            'fst': _fst$3,\n            'snd': _snd$4\n        });\n        return $28;\n    };\n    const Pair$new = x0 => x1 => Pair$new$(x0, x1);\n    const App$State$new = Pair$new$(null, null);\n    const App$Playground$State = App$State$new;\n\n    function App$Playground$State$local$new$(_device$1, _window$2, _mouse_over$3, _code$4, _output$5, _kind_version$6) {\n        var $29 = ({\n            _: 'App.Playground.State.local.new',\n            'device': _device$1,\n            'window': _window$2,\n            'mouse_over': _mouse_over$3,\n            'code': _code$4,\n            'output': _output$5,\n            'kind_version': _kind_version$6\n        });\n        return $29;\n    };\n    const App$Playground$State$local$new = x0 => x1 => x2 => x3 => x4 => x5 => App$Playground$State$local$new$(x0, x1, x2, x3, x4, x5);\n    const Device$big_desktop = ({\n        _: 'Device.big_desktop'\n    });\n    const App$Playground$Window$input = ({\n        _: 'App.Playground.Window.input'\n    });\n    const App$Playground$State$local_empty = App$Playground$State$local$new$(Device$big_desktop, App$Playground$Window$input, \"\", \"\", \"\", \"\");\n    const Unit$new = null;\n\n    function DOM$node$(_tag$1, _props$2, _style$3, _children$4) {\n        var $30 = ({\n            _: 'DOM.node',\n            'tag': _tag$1,\n            'props': _props$2,\n            'style': _style$3,\n            'children': _children$4\n        });\n        return $30;\n    };\n    const DOM$node = x0 => x1 => x2 => x3 => DOM$node$(x0, x1, x2, x3);\n\n    function BBL$(_K$1, _V$2) {\n        var $31 = null;\n        return $31;\n    };\n    const BBL = x0 => x1 => BBL$(x0, x1);\n\n    function Pair$fst$(_pair$3) {\n        var self = _pair$3;\n        switch (self._) {\n            case 'Pair.new':\n                var $33 = self.fst;\n                var $34 = $33;\n                var $32 = $34;\n                break;\n        };\n        return $32;\n    };\n    const Pair$fst = x0 => Pair$fst$(x0);\n\n    function Pair$snd$(_pair$3) {\n        var self = _pair$3;\n        switch (self._) {\n            case 'Pair.new':\n                var $36 = self.snd;\n                var $37 = $36;\n                var $35 = $37;\n                break;\n        };\n        return $35;\n    };\n    const Pair$snd = x0 => Pair$snd$(x0);\n\n    function BBL$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {\n        var $38 = ({\n            _: 'BBL.bin',\n            'size': _size$3,\n            'key': _key$4,\n            'val': _val$5,\n            'left': _left$6,\n            'right': _right$7\n        });\n        return $38;\n    };\n    const BBL$bin = x0 => x1 => x2 => x3 => x4 => BBL$bin$(x0, x1, x2, x3, x4);\n\n    function U32$new$(_value$1) {\n        var $39 = word_to_u32(_value$1);\n        return $39;\n    };\n    const U32$new = x0 => U32$new$(x0);\n\n    function Nat$apply$(_n$2, _f$3, _x$4) {\n        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({\n            ctr: 'TCO',\n            arg: [_n$2, _f$3, _x$4]\n        });\n        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);\n        var arg = [_n$2, _f$3, _x$4];\n        while (true) {\n            let [_n$2, _f$3, _x$4] = arg;\n            var R = (() => {\n                var self = _n$2;\n                if (self === 0n) {\n                    var $40 = _x$4;\n                    return $40;\n                } else {\n                    var $41 = (self - 1n);\n                    var $42 = Nat$apply$($41, _f$3, _f$3(_x$4));\n                    return $42;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);\n\n    function Word$(_size$1) {\n        var $43 = null;\n        return $43;\n    };\n    const Word = x0 => Word$(x0);\n    const Word$e = ({\n        _: 'Word.e'\n    });\n\n    function Word$i$(_pred$2) {\n        var $44 = ({\n            _: 'Word.i',\n            'pred': _pred$2\n        });\n        return $44;\n    };\n    const Word$i = x0 => Word$i$(x0);\n\n    function Word$o$(_pred$2) {\n        var $45 = ({\n            _: 'Word.o',\n            'pred': _pred$2\n        });\n        return $45;\n    };\n    const Word$o = x0 => Word$o$(x0);\n\n    function Word$inc$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $47 = self.pred;\n                var $48 = Word$i$($47);\n                var $46 = $48;\n                break;\n            case 'Word.i':\n                var $49 = self.pred;\n                var $50 = Word$o$(Word$inc$($49));\n                var $46 = $50;\n                break;\n            case 'Word.e':\n                var $51 = Word$e;\n                var $46 = $51;\n                break;\n        };\n        return $46;\n    };\n    const Word$inc = x0 => Word$inc$(x0);\n\n    function Word$zero$(_size$1) {\n        var self = _size$1;\n        if (self === 0n) {\n            var $53 = Word$e;\n            var $52 = $53;\n        } else {\n            var $54 = (self - 1n);\n            var $55 = Word$o$(Word$zero$($54));\n            var $52 = $55;\n        };\n        return $52;\n    };\n    const Word$zero = x0 => Word$zero$(x0);\n\n    function Nat$to_word$(_size$1, _n$2) {\n        var $56 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));\n        return $56;\n    };\n    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);\n\n    function Nat$succ$(_pred$1) {\n        var $57 = 1n + _pred$1;\n        return $57;\n    };\n    const Nat$succ = x0 => Nat$succ$(x0);\n    const Nat$zero = 0n;\n    const Nat$to_u32 = a0 => (Number(a0) >>> 0);\n    const BBL$tip = ({\n        _: 'BBL.tip'\n    });\n\n    function BBL$singleton$(_key$3, _val$4) {\n        var $58 = BBL$bin$(1, _key$3, _val$4, BBL$tip, BBL$tip);\n        return $58;\n    };\n    const BBL$singleton = x0 => x1 => BBL$singleton$(x0, x1);\n\n    function BBL$size$(_map$3) {\n        var self = _map$3;\n        switch (self._) {\n            case 'BBL.bin':\n                var $60 = self.size;\n                var $61 = $60;\n                var $59 = $61;\n                break;\n            case 'BBL.tip':\n                var $62 = 0;\n                var $59 = $62;\n                break;\n        };\n        return $59;\n    };\n    const BBL$size = x0 => BBL$size$(x0);\n    const Bool$false = false;\n    const Bool$true = true;\n\n    function Word$adder$(_a$2, _b$3, _c$4) {\n        var self = _a$2;\n        switch (self._) {\n            case 'Word.o':\n                var $64 = self.pred;\n                var $65 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $67 = self.pred;\n                            var $68 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $70 = Word$i$(Word$adder$(_a$pred$10, $67, Bool$false));\n                                    var $69 = $70;\n                                } else {\n                                    var $71 = Word$o$(Word$adder$(_a$pred$10, $67, Bool$false));\n                                    var $69 = $71;\n                                };\n                                return $69;\n                            });\n                            var $66 = $68;\n                            break;\n                        case 'Word.i':\n                            var $72 = self.pred;\n                            var $73 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $75 = Word$o$(Word$adder$(_a$pred$10, $72, Bool$true));\n                                    var $74 = $75;\n                                } else {\n                                    var $76 = Word$i$(Word$adder$(_a$pred$10, $72, Bool$false));\n                                    var $74 = $76;\n                                };\n                                return $74;\n                            });\n                            var $66 = $73;\n                            break;\n                        case 'Word.e':\n                            var $77 = (_a$pred$8 => {\n                                var $78 = Word$e;\n                                return $78;\n                            });\n                            var $66 = $77;\n                            break;\n                    };\n                    var $66 = $66($64);\n                    return $66;\n                });\n                var $63 = $65;\n                break;\n            case 'Word.i':\n                var $79 = self.pred;\n                var $80 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $82 = self.pred;\n                            var $83 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $85 = Word$o$(Word$adder$(_a$pred$10, $82, Bool$true));\n                                    var $84 = $85;\n                                } else {\n                                    var $86 = Word$i$(Word$adder$(_a$pred$10, $82, Bool$false));\n                                    var $84 = $86;\n                                };\n                                return $84;\n                            });\n                            var $81 = $83;\n                            break;\n                        case 'Word.i':\n                            var $87 = self.pred;\n                            var $88 = (_a$pred$10 => {\n                                var self = _c$4;\n                                if (self) {\n                                    var $90 = Word$i$(Word$adder$(_a$pred$10, $87, Bool$true));\n                                    var $89 = $90;\n                                } else {\n                                    var $91 = Word$o$(Word$adder$(_a$pred$10, $87, Bool$true));\n                                    var $89 = $91;\n                                };\n                                return $89;\n                            });\n                            var $81 = $88;\n                            break;\n                        case 'Word.e':\n                            var $92 = (_a$pred$8 => {\n                                var $93 = Word$e;\n                                return $93;\n                            });\n                            var $81 = $92;\n                            break;\n                    };\n                    var $81 = $81($79);\n                    return $81;\n                });\n                var $63 = $80;\n                break;\n            case 'Word.e':\n                var $94 = (_b$5 => {\n                    var $95 = Word$e;\n                    return $95;\n                });\n                var $63 = $94;\n                break;\n        };\n        var $63 = $63(_b$3);\n        return $63;\n    };\n    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);\n\n    function Word$add$(_a$2, _b$3) {\n        var $96 = Word$adder$(_a$2, _b$3, Bool$false);\n        return $96;\n    };\n    const Word$add = x0 => x1 => Word$add$(x0, x1);\n    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);\n\n    function Word$shift_left$one$go$(_word$2, _prev$3) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $98 = self.pred;\n                var self = _prev$3;\n                if (self) {\n                    var $100 = Word$i$(Word$shift_left$one$go$($98, Bool$false));\n                    var $99 = $100;\n                } else {\n                    var $101 = Word$o$(Word$shift_left$one$go$($98, Bool$false));\n                    var $99 = $101;\n                };\n                var $97 = $99;\n                break;\n            case 'Word.i':\n                var $102 = self.pred;\n                var self = _prev$3;\n                if (self) {\n                    var $104 = Word$i$(Word$shift_left$one$go$($102, Bool$true));\n                    var $103 = $104;\n                } else {\n                    var $105 = Word$o$(Word$shift_left$one$go$($102, Bool$true));\n                    var $103 = $105;\n                };\n                var $97 = $103;\n                break;\n            case 'Word.e':\n                var $106 = Word$e;\n                var $97 = $106;\n                break;\n        };\n        return $97;\n    };\n    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);\n\n    function Word$shift_left$one$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $108 = self.pred;\n                var $109 = Word$o$(Word$shift_left$one$go$($108, Bool$false));\n                var $107 = $109;\n                break;\n            case 'Word.i':\n                var $110 = self.pred;\n                var $111 = Word$o$(Word$shift_left$one$go$($110, Bool$true));\n                var $107 = $111;\n                break;\n            case 'Word.e':\n                var $112 = Word$e;\n                var $107 = $112;\n                break;\n        };\n        return $107;\n    };\n    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);\n\n    function Word$shift_left$(_n$2, _value$3) {\n        var Word$shift_left$ = (_n$2, _value$3) => ({\n            ctr: 'TCO',\n            arg: [_n$2, _value$3]\n        });\n        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);\n        var arg = [_n$2, _value$3];\n        while (true) {\n            let [_n$2, _value$3] = arg;\n            var R = (() => {\n                var self = _n$2;\n                if (self === 0n) {\n                    var $113 = _value$3;\n                    return $113;\n                } else {\n                    var $114 = (self - 1n);\n                    var $115 = Word$shift_left$($114, Word$shift_left$one$(_value$3));\n                    return $115;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);\n\n    function Word$mul$go$(_a$3, _b$4, _acc$5) {\n        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({\n            ctr: 'TCO',\n            arg: [_a$3, _b$4, _acc$5]\n        });\n        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);\n        var arg = [_a$3, _b$4, _acc$5];\n        while (true) {\n            let [_a$3, _b$4, _acc$5] = arg;\n            var R = (() => {\n                var self = _a$3;\n                switch (self._) {\n                    case 'Word.o':\n                        var $116 = self.pred;\n                        var $117 = Word$mul$go$($116, Word$shift_left$(1n, _b$4), _acc$5);\n                        return $117;\n                    case 'Word.i':\n                        var $118 = self.pred;\n                        var $119 = Word$mul$go$($118, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));\n                        return $119;\n                    case 'Word.e':\n                        var $120 = _acc$5;\n                        return $120;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);\n\n    function Word$to_zero$(_word$2) {\n        var self = _word$2;\n        switch (self._) {\n            case 'Word.o':\n                var $122 = self.pred;\n                var $123 = Word$o$(Word$to_zero$($122));\n                var $121 = $123;\n                break;\n            case 'Word.i':\n                var $124 = self.pred;\n                var $125 = Word$o$(Word$to_zero$($124));\n                var $121 = $125;\n                break;\n            case 'Word.e':\n                var $126 = Word$e;\n                var $121 = $126;\n                break;\n        };\n        return $121;\n    };\n    const Word$to_zero = x0 => Word$to_zero$(x0);\n\n    function Word$mul$(_a$2, _b$3) {\n        var $127 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));\n        return $127;\n    };\n    const Word$mul = x0 => x1 => Word$mul$(x0, x1);\n    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);\n    const BBL$w = 3;\n\n    function Cmp$as_ltn$(_cmp$1) {\n        var self = _cmp$1;\n        switch (self._) {\n            case 'Cmp.ltn':\n                var $129 = Bool$true;\n                var $128 = $129;\n                break;\n            case 'Cmp.eql':\n            case 'Cmp.gtn':\n                var $130 = Bool$false;\n                var $128 = $130;\n                break;\n        };\n        return $128;\n    };\n    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);\n    const Cmp$ltn = ({\n        _: 'Cmp.ltn'\n    });\n    const Cmp$gtn = ({\n        _: 'Cmp.gtn'\n    });\n\n    function Word$cmp$go$(_a$2, _b$3, _c$4) {\n        var self = _a$2;\n        switch (self._) {\n            case 'Word.o':\n                var $132 = self.pred;\n                var $133 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $135 = self.pred;\n                            var $136 = (_a$pred$10 => {\n                                var $137 = Word$cmp$go$(_a$pred$10, $135, _c$4);\n                                return $137;\n                            });\n                            var $134 = $136;\n                            break;\n                        case 'Word.i':\n                            var $138 = self.pred;\n                            var $139 = (_a$pred$10 => {\n                                var $140 = Word$cmp$go$(_a$pred$10, $138, Cmp$ltn);\n                                return $140;\n                            });\n                            var $134 = $139;\n                            break;\n                        case 'Word.e':\n                            var $141 = (_a$pred$8 => {\n                                var $142 = _c$4;\n                                return $142;\n                            });\n                            var $134 = $141;\n                            break;\n                    };\n                    var $134 = $134($132);\n                    return $134;\n                });\n                var $131 = $133;\n                break;\n            case 'Word.i':\n                var $143 = self.pred;\n                var $144 = (_b$7 => {\n                    var self = _b$7;\n                    switch (self._) {\n                        case 'Word.o':\n                            var $146 = self.pred;\n                            var $147 = (_a$pred$10 => {\n                                var $148 = Word$cmp$go$(_a$pred$10, $146, Cmp$gtn);\n                                return $148;\n                            });\n                            var $145 = $147;\n                            break;\n                        case 'Word.i':\n                            var $149 = self.pred;\n                            var $150 = (_a$pred$10 => {\n                                var $151 = Word$cmp$go$(_a$pred$10, $149, _c$4);\n                                return $151;\n                            });\n                            var $145 = $150;\n                            break;\n                        case 'Word.e':\n                            var $152 = (_a$pred$8 => {\n                                var $153 = _c$4;\n                                return $153;\n                            });\n                            var $145 = $152;\n                            break;\n                    };\n                    var $145 = $145($143);\n                    return $145;\n                });\n                var $131 = $144;\n                break;\n            case 'Word.e':\n                var $154 = (_b$5 => {\n                    var $155 = _c$4;\n                    return $155;\n                });\n                var $131 = $154;\n                break;\n        };\n        var $131 = $131(_b$3);\n        return $131;\n    };\n    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);\n    const Cmp$eql = ({\n        _: 'Cmp.eql'\n    });\n\n    function Word$cmp$(_a$2, _b$3) {\n        var $156 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);\n        return $156;\n    };\n    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);\n\n    function Word$ltn$(_a$2, _b$3) {\n        var $157 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));\n        return $157;\n    };\n    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);\n    const U32$ltn = a0 => a1 => (a0 < a1);\n    const U32$from_nat = a0 => (Number(a0) >>> 0);\n\n    function BBL$node$(_key$3, _val$4, _left$5, _right$6) {\n        var _size_left$7 = BBL$size$(_left$5);\n        var _size_right$8 = BBL$size$(_right$6);\n        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);\n        var $158 = BBL$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);\n        return $158;\n    };\n    const BBL$node = x0 => x1 => x2 => x3 => BBL$node$(x0, x1, x2, x3);\n\n    function Cmp$as_gtn$(_cmp$1) {\n        var self = _cmp$1;\n        switch (self._) {\n            case 'Cmp.ltn':\n            case 'Cmp.eql':\n                var $160 = Bool$false;\n                var $159 = $160;\n                break;\n            case 'Cmp.gtn':\n                var $161 = Bool$true;\n                var $159 = $161;\n                break;\n        };\n        return $159;\n    };\n    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);\n\n    function Word$gtn$(_a$2, _b$3) {\n        var $162 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));\n        return $162;\n    };\n    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);\n    const U32$gtn = a0 => a1 => (a0 > a1);\n\n    function BBL$balance$(_k$3, _v$4, _l$5, _r$6) {\n        var _size_l$7 = BBL$size$(_l$5);\n        var _size_r$8 = BBL$size$(_r$6);\n        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);\n        var _w_x_size_l$10 = ((BBL$w * _size_l$7) >>> 0);\n        var _w_x_size_r$11 = ((BBL$w * _size_r$8) >>> 0);\n        var self = (_size_l_plus_size_r$9 < 2);\n        if (self) {\n            var $164 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n            var $163 = $164;\n        } else {\n            var self = (_size_r$8 > _w_x_size_l$10);\n            if (self) {\n                var self = _r$6;\n                switch (self._) {\n                    case 'BBL.bin':\n                        var $167 = self.key;\n                        var $168 = self.val;\n                        var $169 = self.left;\n                        var $170 = self.right;\n                        var _size_rl$17 = BBL$size$($169);\n                        var _size_rr$18 = BBL$size$($170);\n                        var self = (_size_rl$17 < _size_rr$18);\n                        if (self) {\n                            var _new_key$19 = $167;\n                            var _new_val$20 = $168;\n                            var _new_left$21 = BBL$node$(_k$3, _v$4, _l$5, $169);\n                            var _new_right$22 = $170;\n                            var $172 = BBL$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);\n                            var $171 = $172;\n                        } else {\n                            var self = $169;\n                            switch (self._) {\n                                case 'BBL.bin':\n                                    var $174 = self.key;\n                                    var $175 = self.val;\n                                    var $176 = self.left;\n                                    var $177 = self.right;\n                                    var _new_key$24 = $174;\n                                    var _new_val$25 = $175;\n                                    var _new_left$26 = BBL$node$(_k$3, _v$4, _l$5, $176);\n                                    var _new_right$27 = BBL$node$($167, $168, $177, $170);\n                                    var $178 = BBL$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);\n                                    var $173 = $178;\n                                    break;\n                                case 'BBL.tip':\n                                    var $179 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n                                    var $173 = $179;\n                                    break;\n                            };\n                            var $171 = $173;\n                        };\n                        var $166 = $171;\n                        break;\n                    case 'BBL.tip':\n                        var $180 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n                        var $166 = $180;\n                        break;\n                };\n                var $165 = $166;\n            } else {\n                var self = (_size_l$7 > _w_x_size_r$11);\n                if (self) {\n                    var self = _l$5;\n                    switch (self._) {\n                        case 'BBL.bin':\n                            var $183 = self.key;\n                            var $184 = self.val;\n                            var $185 = self.left;\n                            var $186 = self.right;\n                            var _size_ll$17 = BBL$size$($185);\n                            var _size_lr$18 = BBL$size$($186);\n                            var self = (_size_lr$18 < _size_ll$17);\n                            if (self) {\n                                var _new_key$19 = $183;\n                                var _new_val$20 = $184;\n                                var _new_left$21 = $185;\n                                var _new_right$22 = BBL$node$(_k$3, _v$4, $186, _r$6);\n                                var $188 = BBL$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);\n                                var $187 = $188;\n                            } else {\n                                var self = $186;\n                                switch (self._) {\n                                    case 'BBL.bin':\n                                        var $190 = self.key;\n                                        var $191 = self.val;\n                                        var $192 = self.left;\n                                        var $193 = self.right;\n                                        var _new_key$24 = $190;\n                                        var _new_val$25 = $191;\n                                        var _new_left$26 = BBL$node$($183, $184, $185, $192);\n                                        var _new_right$27 = BBL$node$(_k$3, _v$4, $193, _r$6);\n                                        var $194 = BBL$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);\n                                        var $189 = $194;\n                                        break;\n                                    case 'BBL.tip':\n                                        var $195 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n                                        var $189 = $195;\n                                        break;\n                                };\n                                var $187 = $189;\n                            };\n                            var $182 = $187;\n                            break;\n                        case 'BBL.tip':\n                            var $196 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n                            var $182 = $196;\n                            break;\n                    };\n                    var $181 = $182;\n                } else {\n                    var $197 = BBL$node$(_k$3, _v$4, _l$5, _r$6);\n                    var $181 = $197;\n                };\n                var $165 = $181;\n            };\n            var $163 = $165;\n        };\n        return $163;\n    };\n    const BBL$balance = x0 => x1 => x2 => x3 => BBL$balance$(x0, x1, x2, x3);\n\n    function BBL$insert$(_cmp$3, _key$4, _val$5, _map$6) {\n        var self = _map$6;\n        switch (self._) {\n            case 'BBL.bin':\n                var $199 = self.key;\n                var $200 = self.val;\n                var $201 = self.left;\n                var $202 = self.right;\n                var self = _cmp$3(_key$4)($199);\n                switch (self._) {\n                    case 'Cmp.ltn':\n                        var _new_key$12 = $199;\n                        var _new_val$13 = $200;\n                        var _new_left$14 = BBL$insert$(_cmp$3, _key$4, _val$5, $201);\n                        var _new_right$15 = $202;\n                        var $204 = BBL$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);\n                        var $203 = $204;\n                        break;\n                    case 'Cmp.eql':\n                        var $205 = BBL$node$(_key$4, _val$5, $201, $202);\n                        var $203 = $205;\n                        break;\n                    case 'Cmp.gtn':\n                        var _new_key$12 = $199;\n                        var _new_val$13 = $200;\n                        var _new_left$14 = $201;\n                        var _new_right$15 = BBL$insert$(_cmp$3, _key$4, _val$5, $202);\n                        var $206 = BBL$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);\n                        var $203 = $206;\n                        break;\n                };\n                var $198 = $203;\n                break;\n            case 'BBL.tip':\n                var $207 = BBL$singleton$(_key$4, _val$5);\n                var $198 = $207;\n                break;\n        };\n        return $198;\n    };\n    const BBL$insert = x0 => x1 => x2 => x3 => BBL$insert$(x0, x1, x2, x3);\n\n    function BBL$from_list$go$(_cmp$3, _acc$4, _xs$5) {\n        var BBL$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({\n            ctr: 'TCO',\n            arg: [_cmp$3, _acc$4, _xs$5]\n        });\n        var BBL$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBL$from_list$go$(_cmp$3, _acc$4, _xs$5);\n        var arg = [_cmp$3, _acc$4, _xs$5];\n        while (true) {\n            let [_cmp$3, _acc$4, _xs$5] = arg;\n            var R = (() => {\n                var self = _xs$5;\n                switch (self._) {\n                    case 'List.cons':\n                        var $208 = self.head;\n                        var $209 = self.tail;\n                        var _key$8 = Pair$fst$($208);\n                        var _val$9 = Pair$snd$($208);\n                        var _new_acc$10 = BBL$insert$(_cmp$3, _key$8, _val$9, _acc$4);\n                        var $210 = BBL$from_list$go$(_cmp$3, _new_acc$10, $209);\n                        return $210;\n                    case 'List.nil':\n                        var $211 = _acc$4;\n                        return $211;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const BBL$from_list$go = x0 => x1 => x2 => BBL$from_list$go$(x0, x1, x2);\n\n    function BBL$from_list$(_cmp$3, _xs$4) {\n        var $212 = BBL$from_list$go$(_cmp$3, BBL$tip, _xs$4);\n        return $212;\n    };\n    const BBL$from_list = x0 => x1 => BBL$from_list$(x0, x1);\n    const U16$ltn = a0 => a1 => (a0 < a1);\n\n    function Cmp$as_eql$(_cmp$1) {\n        var self = _cmp$1;\n        switch (self._) {\n            case 'Cmp.ltn':\n            case 'Cmp.gtn':\n                var $214 = Bool$false;\n                var $213 = $214;\n                break;\n            case 'Cmp.eql':\n                var $215 = Bool$true;\n                var $213 = $215;\n                break;\n        };\n        return $213;\n    };\n    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);\n\n    function Word$eql$(_a$2, _b$3) {\n        var $216 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));\n        return $216;\n    };\n    const Word$eql = x0 => x1 => Word$eql$(x0, x1);\n    const U16$eql = a0 => a1 => (a0 === a1);\n\n    function U16$cmp$(_a$1, _b$2) {\n        var self = (_a$1 < _b$2);\n        if (self) {\n            var $218 = Cmp$ltn;\n            var $217 = $218;\n        } else {\n            var self = (_a$1 === _b$2);\n            if (self) {\n                var $220 = Cmp$eql;\n                var $219 = $220;\n            } else {\n                var $221 = Cmp$gtn;\n                var $219 = $221;\n            };\n            var $217 = $219;\n        };\n        return $217;\n    };\n    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);\n\n    function String$cmp$(_a$1, _b$2) {\n        var String$cmp$ = (_a$1, _b$2) => ({\n            ctr: 'TCO',\n            arg: [_a$1, _b$2]\n        });\n        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);\n        var arg = [_a$1, _b$2];\n        while (true) {\n            let [_a$1, _b$2] = arg;\n            var R = (() => {\n                var self = _a$1;\n                if (self.length === 0) {\n                    var self = _b$2;\n                    if (self.length === 0) {\n                        var $223 = Cmp$eql;\n                        var $222 = $223;\n                    } else {\n                        var $224 = self.charCodeAt(0);\n                        var $225 = self.slice(1);\n                        var $226 = Cmp$ltn;\n                        var $222 = $226;\n                    };\n                    return $222;\n                } else {\n                    var $227 = self.charCodeAt(0);\n                    var $228 = self.slice(1);\n                    var self = _b$2;\n                    if (self.length === 0) {\n                        var $230 = Cmp$gtn;\n                        var $229 = $230;\n                    } else {\n                        var $231 = self.charCodeAt(0);\n                        var $232 = self.slice(1);\n                        var self = U16$cmp$($227, $231);\n                        switch (self._) {\n                            case 'Cmp.ltn':\n                                var $234 = Cmp$ltn;\n                                var $233 = $234;\n                                break;\n                            case 'Cmp.eql':\n                                var $235 = String$cmp$($228, $232);\n                                var $233 = $235;\n                                break;\n                            case 'Cmp.gtn':\n                                var $236 = Cmp$gtn;\n                                var $233 = $236;\n                                break;\n                        };\n                        var $229 = $233;\n                    };\n                    return $229;\n                };\n            })();\n            if (R.ctr === 'TCO') arg = R.arg;\n            else return R;\n        }\n    };\n    const String$cmp = x0 => x1 => String$cmp$(x0, x1);\n\n    function Map$from_list$(_xs$2) {\n        var $237 = BBL$from_list$(String$cmp, _xs$2);\n        return $237;\n    };\n    const Map$from_list = x0 => Map$from_list$(x0);\n\n    function List$cons$(_head$2, _tail$3) {\n        var $238 = ({\n            _: 'List.cons',\n            'head': _head$2,\n            'tail': _tail$3\n        });\n        return $238;\n    };\n    const List$cons = x0 => x1 => List$cons$(x0, x1);\n\n    function Pair$(_A$1, _B$2) {\n        var $239 = null;\n        return $239;\n    };\n    const Pair = x0 => x1 => Pair$(x0, x1);\n    const List$nil = ({\n        _: 'List.nil'\n    });\n    const App$Playground$constant$light_gray_color = \"#E0E0E0\";\n    const App$Playground$constant$white_smoke = \"#F5F5F5\";\n\n    function DOM$text$(_value$1) {\n        var $240 = ({\n            _: 'DOM.text',\n            'value': _value$1\n        });\n        return $240;\n    };\n    const DOM$text = x0 => DOM$text$(x0);\n    const Bool$and = a0 => a1 => (a0 && a1);\n    const String$eql = a0 => a1 => (a0 === a1);\n\n    function Map$(_V$1) {\n        var $241 = null;\n        return $241;\n    };\n    const Map = x0 => Map$(x0);\n\n    function BBL$concat3$(_cmp$3, _key$4, _val$5, _left$6, _right$7) {\n        var self = _left$6;\n        switch (self._) {\n            case 'BBL.bin':\n                var $243 = self.size;\n                var $244 = self.key;\n                var $245 = self.val;\n                var $246 = self.left;\n                var $247 = self.right;\n                var self = _right$7;\n                switch (self._) {\n                    case 'BBL.bin':\n                        var $249 = self.size;\n                        var $250 = self.key;\n                        var $251 = self.val;\n                        var $252 = self.left;\n                        var $253 = self.right;\n                        var _right_is_heavier$18 = (((BBL$w * $243) >>> 0) < $249);\n                        var _left_is_heavier$19 = (((BBL$w * $249) >>> 0) < $243);\n                        var self = _right_is_heavier$18;\n                        if (self) {\n                            var _new_key$20 = $250;\n                            var _new_val$21 = $251;\n                            var _new_left$22 = BBL$concat3$(_cmp$3, _key$4, _val$5, _left$6, $252);\n                            var _new_right$23 = $253;\n                            var $255 = BBL$balance$(_new_key$20, _new_val$21, _new_left$22, _new_right$23);\n                            var $254 = $255;\n                        } else {\n                            var self = _left_is_heavier$19;\n                            if (self) {\n                                var _new_key$20 = $244;\n                                var _new_val$21 = $245;\n                                var _new_left$22 = $246;\n                                var _new_right$23 = BBL$concat3$(_cmp$3, _key$4, _val$5, $247, _right$7);\n                                var $257 = BBL$balance$(_new_key$20, _new_val$21, _new_left$22, _new_right$23);\n                                var $256 = $257;\n                            } else {\n                                var $258 = BBL$node$(_key$4, _val$5, _left$6, _right$7);\n                                var $256 = $258;\n                            };\n                            var $254 = $256;\n                        };\n                        var $248 = $254;\n                        break;\n                    case 'BBL.tip':\n                        var $259 = BBL$insert$(_cmp$3, _key$4, _val$5, _left$6);\n                        var $248 = $259;\n                        break;\n                };\n                var $242 = $248;\n                break;\n            case 'BBL.tip':\n                var self = _right$7;\n                switch (self._) {\n                    case 'BBL.tip':\n                        var $261 = BBL$singleton$(_key$4, _val$5);\n                        var $260 = $261;\n                        break;\n                    case 'BBL.bin':\n                        var $262 = BBL$insert$(_cmp$3, _key$4, _val$5, _right$7);\n                        var $260 = $262;\n                        break;\n                };\n                var $242 = $260;\n                break;\n        };\n        return $242;\n    };\n    const BBL$concat3 = x0 => x1 => x2 => x3 => x4 => BBL$concat3$(x0, x1, x2, x3, x4);\n\n    function BBL$split_ltn$(_cmp$3, _cut$4, _map$5) {\n        var self = _map$5;\n        switch (self._) {\n            case 'BBL.bin':\n                var $264 = self.key;\n                var $265 = self.val;\n                var $266 = self.left;\n                var $267 = self.right;\n                var self = _cmp$3(_cut$4)($264);\n                switch (self._) {\n                    case 'Cmp.ltn':\n                        var $269 = BBL$split_ltn$(_cmp$3, _cut$4, $266);\n                        var $268 = $269;\n                        break;\n                    case 'Cmp.eql':\n                        var $270 = $266;\n                        var $268 = $270;\n                        break;\n                    case 'Cmp.gtn':\n                        var _key$11 = $264;\n                        var _val$12 = $265;\n                        var _left$13 = $266;\n                        var _right$14 = BBL$split_ltn$(_cmp$3, _cut$4, $267);\n                        var $271 = BBL$concat3$(_cmp$3, _key$11, _val$12, _left$13, _right$14);\n                        var $268 = $271;\n                        break;\n                };\n                var $263 = $268;\n                break;\n            case 'BBL.tip':\n                var $272 = _map$5;\n                var $263 = $272;\n                break;\n        };\n        return $263;\n    };\n    const BBL$split_ltn = x0 => x1 => x2 => BBL$split_ltn$(x0, x1, x2);\n\n    function BBL$split_gtn$(_cmp$3, _cut$4, _map$5) {\n        var self = _map$5;\n        switch (self._) {\n            case 'BBL.bin':\n                var $274 = self.key;\n                var $275 = self.val;\n                var $276 = self.left;\n                var $277 = self.right;\n                var self = _cmp$3(_cut$4)($274);\n                switch (self._) {\n                    case 'Cmp.ltn':\n                        var _key$11 = $274;\n                        var _val$12 = $275;\n                        var _left$13 = BBL$split_gtn$(_cmp$3, _cut$4, $276);\n                        var _right$14 = $277;\n                        var $279 = BBL$concat3$(_cmp$3, _key$11, _val$12, _left$13, _right$14);\n                        var $278 = $279;\n                        break;\n                    case 'Cmp.eql':\n                        var $280 = $277;\n                        var $278 = $280;\n                        break;\n                    case 'Cmp.gtn':\n                        var $281 = BBL$split_gtn$(_cmp$3, _cut$4, $277);\n                        var $278 = $281;\n                        break;\n                };\n                var $273 = $278;\n                break;\n            case 'BBL.tip':\n                var $282 = _map$5;\n                var $273 = $282;\n                break;\n        };\n        return $273;\n    };\n    const BBL$split_gtn = x0 => x1 => x2 => BBL$split_gtn$(x0, x1, x2);\n\n    function BBL$union$(_cmp$3, _map_a$4, _map_b$5) {\n        var self = _map_a$4;\n        switch (self._) {\n            case 'BBL.tip':\n                var self = _map_b$5;\n                switch (self._) {\n                    case 'BBL.tip':\n                        var $285 = BBL$tip;\n                        var $284 = $285;\n                        break;\n                    case 'BBL.bin':\n                        var $286 = _map_b$5;\n                        var $284 = $286;\n                        break;\n                };\n                var $283 = $284;\n                break;\n            case 'BBL.bin':\n                var self = _map_b$5;\n                switch (self._) {\n                    case 'BBL.bin':\n                        var $288 = self.key;\n                        var $289 = self.val;\n                        var $290 = self.left;\n                        var $291 = self.right;\n                        var _key$16 = $288;\n                        var _val$17 = $289;\n                        var _ltn$18 = BBL$split_ltn$(_cmp$3, $288, _map_a$4);\n                        var _gtn$19 = BBL$split_gtn$(_cmp$3, $288, _map_a$4);\n                        var _left$20 = BBL$union$(_cmp$3, _ltn$18, $290);\n                        var _right$21 = BBL$union$(_cmp$3, _gtn$19, $291);\n                        var $292 = BBL$concat3$(_cmp$3, _key$16, _val$17, _left$20, _right$21);\n                        var $287 = $292;\n                        break;\n                    case 'BBL.tip':\n                        var $293 = _map_a$4;\n                        var $287 = $293;\n                        break;\n                };\n                var $283 = $287;\n                break;\n        };\n        return $283;\n    };\n    const BBL$union = x0 => x1 => x2 => BBL$union$(x0, x1, x2);\n\n    function Map$union$(_a$2, _b$3) {\n        var $294 = BBL$union$(String$cmp, _a$2, _b$3);\n        return $294;\n    };\n    const Map$union = x0 => x1 => Map$union$(x0, x1);\n    const App$Kind$constant$secondary_color = \"#3891A6\";\n\n    function App$Playground$comp$btn$(_mouse_over$1, _id$2, _text$3) {\n        var _is_hover$4 = (_id$2 === _mouse_over$1);\n        var _normal$5 = Map$from_list$(List$cons$(Pair$new$(\"width\", \"50px\"), List$cons$(Pair$new$(\"height\", \"25px\"), List$cons$(Pair$new$(\"margin\", \"5px 0px\"), List$cons$(Pair$new$(\"color\", \"white\"), List$cons$(Pair$new$(\"cursor\", \"pointer\"), List$cons$(Pair$new$(\"border\", \"none\"), List$cons$(Pair$new$(\"border-radius\", \"4px\"), List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"justify-content\", \"center\"), List$cons$(Pair$new$(\"align-content\", \"center\"), List$cons$(Pair$new$(\"align-items\", \"center\"), List$nil))))))))))));\n        var $295 = DOM$node$(\"div\", Map$from_list$(List$cons$(Pair$new$(\"id\", _id$2), List$nil)), (() => {\n            var self = _is_hover$4;\n            if (self) {\n                var $296 = Map$union$(_normal$5, Map$from_list$(List$cons$(Pair$new$(\"background-color\", \"#44B8D3\"), List$nil)));\n                return $296;\n            } else {\n                var $297 = Map$union$(_normal$5, Map$from_list$(List$cons$(Pair$new$(\"background-color\", App$Kind$constant$secondary_color), List$nil)));\n                return $297;\n            };\n        })(), List$cons$(DOM$text$(_text$3), List$nil));\n        return $295;\n    };\n    const App$Playground$comp$btn = x0 => x1 => x2 => App$Playground$comp$btn$(x0, x1, x2);\n\n    function App$Playground$comp$header$(_device$1, _mouse_over$2, _window$3) {\n        var _playground$4 = DOM$node$(\"div\", Map$from_list$(List$cons$(Pair$new$(\"id\", \"input_view\"), List$nil)), Map$from_list$(List$cons$(Pair$new$(\"font-size\", \"14px\"), List$cons$(Pair$new$(\"height\", \"35px\"), List$cons$(Pair$new$(\"padding\", \"8px 15px 0px 15px\"), List$cons$(Pair$new$(\"background-color\", (() => {\n            var self = _window$3;\n            switch (self._) {\n                case 'App.Playground.Window.input':\n                    var $299 = App$Playground$constant$light_gray_color;\n                    return $299;\n                case 'App.Playground.Window.terminal':\n                    var $300 = App$Playground$constant$white_smoke;\n                    return $300;\n            };\n        })()), List$cons$(Pair$new$(\"display\", \"flex\"), List$nil)))))), List$cons$(DOM$text$(\"playground.kind\"), List$nil));\n        var _btn_check$5 = App$Playground$comp$btn$(_mouse_over$2, \"btn_type_check\", \"check\");\n        var _btn_run$6 = App$Playground$comp$btn$(_mouse_over$2, \"btn_run_code\", \"run\");\n        var _style_header$7 = Map$from_list$(List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"flex-direction\", \"row\"), List$cons$(Pair$new$(\"justify-content\", \"space-between\"), List$nil))));\n        var _btn_area$8 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"width\", \"120px\"), List$cons$(Pair$new$(\"flex-direction\", \"row\"), List$cons$(Pair$new$(\"justify-content\", \"space-between\"), List$nil))))), List$cons$(_btn_check$5, List$cons$(_btn_run$6, List$nil)));\n        var self = _device$1;\n        switch (self._) {\n            case 'Device.phone':\n                var _terminal$9 = DOM$node$(\"div\", Map$from_list$(List$cons$(Pair$new$(\"id\", \"terminal_view\"), List$nil)), Map$from_list$(List$cons$(Pair$new$(\"font-size\", \"14px\"), List$cons$(Pair$new$(\"height\", \"35px\"), List$cons$(Pair$new$(\"padding\", \"8px 15px 0px 15px\"), List$cons$(Pair$new$(\"background-color\", (() => {\n                    var self = _window$3;\n                    switch (self._) {\n                        case 'App.Playground.Window.input':\n                            var $302 = App$Playground$constant$white_smoke;\n                            return $302;\n                        case 'App.Playground.Window.terminal':\n                            var $303 = App$Playground$constant$light_gray_color;\n                            return $303;\n                    };\n                })()), List$cons$(Pair$new$(\"display\", \"flex\"), List$nil)))))), List$cons$(DOM$text$(\"output\"), List$nil));\n                var $301 = DOM$node$(\"div\", Map$from_list$(List$nil), _style_header$7, List$cons$(DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"justify-content\", \"flex-start\"), List$cons$(Pair$new$(\"flex-direction\", \"row\"), List$nil)))), List$cons$(_playground$4, List$cons$(_terminal$9, List$nil))), List$cons$(_btn_area$8, List$nil)));\n                var $298 = $301;\n                break;\n            case 'Device.tablet':\n            case 'Device.desktop':\n            case 'Device.big_desktop':\n                var $304 = DOM$node$(\"div\", Map$from_list$(List$nil), _style_header$7, List$cons$(_playground$4, List$cons$(_btn_area$8, List$nil)));\n                var $298 = $304;\n                break;\n        };\n        return $298;\n    };\n    const App$Playground$comp$header = x0 => x1 => x2 => App$Playground$comp$header$(x0, x1, x2);\n\n    function String$cons$(_head$1, _tail$2) {\n        var $305 = (String.fromCharCode(_head$1) + _tail$2);\n        return $305;\n    };\n    const String$cons = x0 => x1 => String$cons$(x0, x1);\n    const String$concat = a0 => a1 => (a0 + a1);\n\n    function App$Playground$comp$input$(_code$1) {\n        var $306 = DOM$node$(\"textarea\", Map$from_list$(List$cons$(Pair$new$(\"id\", \"input_code\"), List$cons$(Pair$new$(\"placeholder\", \"Write Kind code in this online editor and run it <3\"), List$nil))), Map$from_list$(List$cons$(Pair$new$(\"cols\", \"100\"), List$cons$(Pair$new$(\"height\", \"100%\"), List$cons$(Pair$new$(\"border\", (\"solid 5px \" + App$Playground$constant$light_gray_color)), List$cons$(Pair$new$(\"resize\", \"none\"), List$cons$(Pair$new$(\"padding\", \"10px\"), List$nil)))))), List$cons$(DOM$text$(_code$1), List$nil));\n        return $306;\n    };\n    const App$Playground$comp$input = x0 => App$Playground$comp$input$(x0);\n\n    function App$Playground$comp$output_area$(_output$1, _device$2) {\n        var _style$3 = Map$from_list$(List$cons$(Pair$new$(\"width\", \"400px\"), List$cons$(Pair$new$(\"max-width\", \"500px\"), List$cons$(Pair$new$(\"overflow\", \"auto\"), List$cons$(Pair$new$(\"padding\", \"10px\"), List$cons$(Pair$new$(\"background-color\", App$Playground$constant$light_gray_color), List$nil))))));\n        var $307 = DOM$node$(\"div\", Map$from_list$(List$nil), (() => {\n            var self = _device$2;\n            switch (self._) {\n                case 'Device.phone':\n                    var $308 = Map$union$(_style$3, Map$from_list$(List$cons$(Pair$new$(\"height\", \"100%\"), List$cons$(Pair$new$(\"margin-top\", \"0px\"), List$nil))));\n                    return $308;\n                case 'Device.tablet':\n                case 'Device.desktop':\n                case 'Device.big_desktop':\n                    var $309 = Map$union$(_style$3, Map$from_list$(List$cons$(Pair$new$(\"height\", \"100% - 35px\"), List$cons$(Pair$new$(\"margin-top\", \"35px\"), List$nil))));\n                    return $309;\n            };\n        })(), List$cons$(DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$nil), List$cons$(DOM$text$(\"kind-lang@1.0.51\"), List$nil)), List$cons$(DOM$node$(\"pre\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"margin-top\", \"10px\"), List$nil)), List$cons$(DOM$text$(_output$1), List$nil)), List$nil)));\n        return $307;\n    };\n    const App$Playground$comp$output_area = x0 => x1 => App$Playground$comp$output_area$(x0, x1);\n\n    function App$Playground$comp$main_area$(_stt$1) {\n        var self = _stt$1;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $311 = self.device;\n                var $312 = self.window;\n                var $313 = self.mouse_over;\n                var $314 = self.code;\n                var $315 = self.output;\n                var _header$8 = App$Playground$comp$header$($311, $313, $312);\n                var _input_view$9 = App$Playground$comp$input$($314);\n                var _output_view$10 = App$Playground$comp$output_area$($315, $311);\n                var self = $311;\n                switch (self._) {\n                    case 'Device.phone':\n                        var $317 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"width\", \"100%\"), List$cons$(Pair$new$(\"height\", \"100%\"), List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"flex-direction\", \"column\"), List$nil))))), List$cons$(_header$8, List$cons$((() => {\n                            var self = $312;\n                            switch (self._) {\n                                case 'App.Playground.Window.input':\n                                    var $318 = _input_view$9;\n                                    return $318;\n                                case 'App.Playground.Window.terminal':\n                                    var $319 = _output_view$10;\n                                    return $319;\n                            };\n                        })(), List$nil)));\n                        var $316 = $317;\n                        break;\n                    case 'Device.tablet':\n                    case 'Device.desktop':\n                    case 'Device.big_desktop':\n                        var $320 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"width\", \"100%\"), List$cons$(Pair$new$(\"height\", \"100%\"), List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"flex-direction\", \"row\"), List$nil))))), List$cons$(DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"display\", \"flex\"), List$cons$(Pair$new$(\"flex-direction\", \"column\"), List$cons$(Pair$new$(\"width\", \"60%\"), List$nil)))), List$cons$(_header$8, List$cons$(_input_view$9, List$nil))), List$cons$(_output_view$10, List$nil)));\n                        var $316 = $320;\n                        break;\n                };\n                var $310 = $316;\n                break;\n        };\n        return $310;\n    };\n    const App$Playground$comp$main_area = x0 => App$Playground$comp$main_area$(x0);\n\n    function App$Playground$draw$(_stt$1) {\n        var self = _stt$1;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $322 = DOM$node$(\"div\", Map$from_list$(List$nil), Map$from_list$(List$cons$(Pair$new$(\"width\", \"100%\"), List$cons$(Pair$new$(\"height\", \"100%\"), List$cons$(Pair$new$(\"margin\", \"20px 0x\"), List$cons$(Pair$new$(\"display\", \"flex\"), List$nil))))), List$cons$(App$Playground$comp$main_area$(_stt$1), List$nil));\n                var $321 = $322;\n                break;\n        };\n        return $321;\n    };\n    const App$Playground$draw = x0 => App$Playground$draw$(x0);\n\n    function App$playground$body$(_stt$1) {\n        var self = _stt$1;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $324 = self.device;\n                var self = $324;\n                switch (self._) {\n                    case 'Device.phone':\n                        var $326 = DOM$node$(\"div\", Map$from_list$(List$cons$(Pair$new$(\"id\", \"page\"), List$nil)), Map$from_list$(List$cons$(Pair$new$(\"margin\", \"10px\"), List$cons$(Pair$new$(\"height\", \"300px\"), List$nil))), List$cons$(App$Playground$draw$(_stt$1), List$nil));\n                        var $325 = $326;\n                        break;\n                    case 'Device.tablet':\n                    case 'Device.desktop':\n                    case 'Device.big_desktop':\n                        var $327 = DOM$node$(\"div\", Map$from_list$(List$cons$(Pair$new$(\"id\", \"page\"), List$nil)), Map$from_list$(List$cons$(Pair$new$(\"margin\", \"100px\"), List$cons$(Pair$new$(\"height\", \"500px\"), List$nil))), List$cons$(App$Playground$draw$(_stt$1), List$nil));\n                        var $325 = $327;\n                        break;\n                };\n                var $323 = $325;\n                break;\n        };\n        return $323;\n    };\n    const App$playground$body = x0 => App$playground$body$(x0);\n    const App$State$local = Pair$fst;\n\n    function IO$(_A$1) {\n        var $328 = null;\n        return $328;\n    };\n    const IO = x0 => IO$(x0);\n\n    function Maybe$(_A$1) {\n        var $329 = null;\n        return $329;\n    };\n    const Maybe = x0 => Maybe$(x0);\n\n    function IO$ask$(_query$2, _param$3, _then$4) {\n        var $330 = ({\n            _: 'IO.ask',\n            'query': _query$2,\n            'param': _param$3,\n            'then': _then$4\n        });\n        return $330;\n    };\n    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);\n\n    function IO$bind$(_a$3, _f$4) {\n        var self = _a$3;\n        switch (self._) {\n            case 'IO.end':\n                var $332 = self.value;\n                var $333 = _f$4($332);\n                var $331 = $333;\n                break;\n            case 'IO.ask':\n                var $334 = self.query;\n                var $335 = self.param;\n                var $336 = self.then;\n                var $337 = IO$ask$($334, $335, (_x$8 => {\n                    var $338 = IO$bind$($336(_x$8), _f$4);\n                    return $338;\n                }));\n                var $331 = $337;\n                break;\n        };\n        return $331;\n    };\n    const IO$bind = x0 => x1 => IO$bind$(x0, x1);\n\n    function IO$end$(_value$2) {\n        var $339 = ({\n            _: 'IO.end',\n            'value': _value$2\n        });\n        return $339;\n    };\n    const IO$end = x0 => IO$end$(x0);\n\n    function IO$monad$(_new$2) {\n        var $340 = _new$2(IO$bind)(IO$end);\n        return $340;\n    };\n    const IO$monad = x0 => IO$monad$(x0);\n    const Maybe$none = ({\n        _: 'Maybe.none'\n    });\n    const App$pass = IO$monad$((_m$bind$2 => _m$pure$3 => {\n        var $341 = _m$pure$3;\n        return $341;\n    }))(Maybe$none);\n\n    function Cmp$as_lte$(_cmp$1) {\n        var self = _cmp$1;\n        switch (self._) {\n            case 'Cmp.ltn':\n            case 'Cmp.eql':\n                var $343 = Bool$true;\n                var $342 = $343;\n                break;\n            case 'Cmp.gtn':\n                var $344 = Bool$false;\n                var $342 = $344;\n                break;\n        };\n        return $342;\n    };\n    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);\n\n    function Word$lte$(_a$2, _b$3) {\n        var $345 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));\n        return $345;\n    };\n    const Word$lte = x0 => x1 => Word$lte$(x0, x1);\n    const U32$lte = a0 => a1 => (a0 <= a1);\n    const Device$phone = ({\n        _: 'Device.phone'\n    });\n    const Device$tablet = ({\n        _: 'Device.tablet'\n    });\n    const Device$desktop = ({\n        _: 'Device.desktop'\n    });\n\n    function Device$classify$(_width$1) {\n        var self = (_width$1 <= 600);\n        if (self) {\n            var $347 = Device$phone;\n            var $346 = $347;\n        } else {\n            var self = (_width$1 <= 768);\n            if (self) {\n                var $349 = Device$tablet;\n                var $348 = $349;\n            } else {\n                var self = (_width$1 <= 992);\n                if (self) {\n                    var $351 = Device$desktop;\n                    var $350 = $351;\n                } else {\n                    var $352 = Device$big_desktop;\n                    var $350 = $352;\n                };\n                var $348 = $350;\n            };\n            var $346 = $348;\n        };\n        return $346;\n    };\n    const Device$classify = x0 => Device$classify$(x0);\n\n    function Maybe$some$(_value$2) {\n        var $353 = ({\n            _: 'Maybe.some',\n            'value': _value$2\n        });\n        return $353;\n    };\n    const Maybe$some = x0 => Maybe$some$(x0);\n\n    function App$set_local$(_value$2) {\n        var $354 = IO$monad$((_m$bind$3 => _m$pure$4 => {\n            var $355 = _m$pure$4;\n            return $355;\n        }))(Maybe$some$(_value$2));\n        return $354;\n    };\n    const App$set_local = x0 => App$set_local$(x0);\n\n    function App$Playground$set_mouse_over$(_id$1, _stt$2) {\n        var self = _stt$2;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $357 = self.device;\n                var $358 = self.window;\n                var $359 = self.code;\n                var $360 = self.output;\n                var $361 = self.kind_version;\n                var $362 = App$Playground$State$local$new$($357, $358, _id$1, $359, $360, $361);\n                var $356 = $362;\n                break;\n        };\n        return $356;\n    };\n    const App$Playground$set_mouse_over = x0 => x1 => App$Playground$set_mouse_over$(x0, x1);\n    const App$Playground$Window$terminal = ({\n        _: 'App.Playground.Window.terminal'\n    });\n\n    function String$is_empty$(_str$1) {\n        var self = _str$1;\n        if (self.length === 0) {\n            var $364 = Bool$true;\n            var $363 = $364;\n        } else {\n            var $365 = self.charCodeAt(0);\n            var $366 = self.slice(1);\n            var $367 = Bool$false;\n            var $363 = $367;\n        };\n        return $363;\n    };\n    const String$is_empty = x0 => String$is_empty$(x0);\n\n    function App$Playground$set_output$(_output$1, _state$2) {\n        var self = _state$2;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $369 = self.device;\n                var $370 = self.window;\n                var $371 = self.mouse_over;\n                var $372 = self.code;\n                var $373 = self.kind_version;\n                var $374 = App$Playground$State$local$new$($369, $370, $371, $372, _output$1, $373);\n                var $368 = $374;\n                break;\n        };\n        return $368;\n    };\n    const App$Playground$set_output = x0 => x1 => App$Playground$set_output$(x0, x1);\n\n    function IO$request$(_url$1) {\n        var $375 = IO$ask$(\"request\", _url$1, (_text$2 => {\n            var $376 = IO$end$(_text$2);\n            return $376;\n        }));\n        return $375;\n    };\n    const IO$request = x0 => IO$request$(x0);\n\n    function App$Playground$set_window$(_window$1, _state$2) {\n        var self = _state$2;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $378 = self.device;\n                var $379 = self.mouse_over;\n                var $380 = self.code;\n                var $381 = self.output;\n                var $382 = self.kind_version;\n                var $383 = App$Playground$State$local$new$($378, _window$1, $379, $380, $381, $382);\n                var $377 = $383;\n                break;\n        };\n        return $377;\n    };\n    const App$Playground$set_window = x0 => x1 => App$Playground$set_window$(x0, x1);\n\n    function App$Playground$set_code$(_input$1, _state$2) {\n        var self = _state$2;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $385 = self.device;\n                var $386 = self.window;\n                var $387 = self.mouse_over;\n                var $388 = self.output;\n                var $389 = self.kind_version;\n                var $390 = App$Playground$State$local$new$($385, $386, $387, _input$1, $388, $389);\n                var $384 = $390;\n                break;\n        };\n        return $384;\n    };\n    const App$Playground$set_code = x0 => x1 => App$Playground$set_code$(x0, x1);\n\n    function App$Playground$when$(_event$1, _stt$2) {\n        var self = _stt$2;\n        switch (self._) {\n            case 'App.Store.new':\n                var $392 = self.local;\n                var $393 = $392;\n                var _state$3 = $393;\n                break;\n        };\n        var self = _state$3;\n        switch (self._) {\n            case 'App.Playground.State.local.new':\n                var $394 = self.device;\n                var $395 = self.code;\n                var self = _event$1;\n                switch (self._) {\n                    case 'App.Event.frame':\n                        var $397 = self.info;\n                        var self = $397;\n                        switch (self._) {\n                            case 'App.EnvInfo.new':\n                                var $399 = self.screen_size;\n                                var self = $399;\n                                switch (self._) {\n                                    case 'Pair.new':\n                                        var $401 = self.fst;\n                                        var _device$16 = Device$classify$($401);\n                                        var self = _state$3;\n                                        switch (self._) {\n                                            case 'App.Playground.State.local.new':\n                                                var $403 = self.window;\n                                                var $404 = self.mouse_over;\n                                                var $405 = self.code;\n                                                var $406 = self.output;\n                                                var $407 = self.kind_version;\n                                                var $408 = App$Playground$State$local$new$(_device$16, $403, $404, $405, $406, $407);\n                                                var _stt$17 = $408;\n                                                break;\n                                        };\n                                        var $402 = App$set_local$(_stt$17);\n                                        var $400 = $402;\n                                        break;\n                                };\n                                var $398 = $400;\n                                break;\n                        };\n                        var $396 = $398;\n                        break;\n                    case 'App.Event.mouse_over':\n                        var $409 = self.id;\n                        var $410 = App$set_local$(App$Playground$set_mouse_over$($409, _state$3));\n                        var $396 = $410;\n                        break;\n                    case 'App.Event.mouse_click':\n                        var $411 = self.id;\n                        var self = $394;\n                        switch (self._) {\n                            case 'Device.phone':\n                                var $413 = App$Playground$Window$terminal;\n                                var _window$13 = $413;\n                                break;\n                            case 'Device.tablet':\n                            case 'Device.desktop':\n                            case 'Device.big_desktop':\n                                var $414 = App$Playground$Window$input;\n                                var _window$13 = $414;\n                                break;\n                        };\n                        var self = ($411 === \"btn_type_check\");\n                        if (self) {\n                            var self = String$is_empty$($395);\n                            if (self) {\n                                var _stt$14 = App$Playground$set_output$(\"How can I type check an empty code? haha\", _state$3);\n                                var $416 = App$set_local$(_stt$14);\n                                var $415 = $416;\n                            } else {\n                                var $417 = IO$monad$((_m$bind$14 => _m$pure$15 => {\n                                    var $418 = _m$bind$14;\n                                    return $418;\n                                }))(IO$request$((\"http://18.222.191.174:3030/api/check_term?code=\" + $395)))((_checked$14 => {\n                                    var _stt$15 = App$Playground$set_output$(_checked$14, _state$3);\n                                    var _stt$16 = App$Playground$set_window$(_window$13, _stt$15);\n                                    var $419 = App$set_local$(_stt$16);\n                                    return $419;\n                                }));\n                                var $415 = $417;\n                            };\n                            var $412 = $415;\n                        } else {\n                            var self = ($411 === \"btn_run_code\");\n                            if (self) {\n                                var self = String$is_empty$($395);\n                                if (self) {\n                                    var self = _state$3;\n                                    switch (self._) {\n                                        case 'App.Playground.State.local.new':\n                                            var $423 = self.device;\n                                            var $424 = self.window;\n                                            var $425 = self.mouse_over;\n                                            var $426 = self.code;\n                                            var $427 = self.kind_version;\n                                            var $428 = App$Playground$State$local$new$($423, $424, $425, $426, \"How can I type check an empty code? haha\", $427);\n                                            var _stt$14 = $428;\n                                            break;\n                                    };\n                                    var $422 = App$set_local$(_stt$14);\n                                    var $421 = $422;\n                                } else {\n                                    var $429 = IO$monad$((_m$bind$14 => _m$pure$15 => {\n                                        var $430 = _m$bind$14;\n                                        return $430;\n                                    }))(IO$request$((\"http://18.222.191.174:3030/api/run_term?code=\" + $395)))((_checked$14 => {\n                                        var _stt$15 = App$Playground$set_output$(_checked$14, _state$3);\n                                        var _stt$16 = App$Playground$set_window$(_window$13, _stt$15);\n                                        var $431 = App$set_local$(_stt$16);\n                                        return $431;\n                                    }));\n                                    var $421 = $429;\n                                };\n                                var $420 = $421;\n                            } else {\n                                var self = ($411 === \"terminal_view\");\n                                if (self) {\n                                    var _stt$14 = App$Playground$set_window$(App$Playground$Window$terminal, _state$3);\n                                    var $433 = App$set_local$(_stt$14);\n                                    var $432 = $433;\n                                } else {\n                                    var self = ($411 === \"input_view\");\n                                    if (self) {\n                                        var _stt$14 = App$Playground$set_window$(App$Playground$Window$input, _state$3);\n                                        var $435 = App$set_local$(_stt$14);\n                                        var $434 = $435;\n                                    } else {\n                                        var $436 = App$pass;\n                                        var $434 = $436;\n                                    };\n                                    var $432 = $434;\n                                };\n                                var $420 = $432;\n                            };\n                            var $412 = $420;\n                        };\n                        var $396 = $412;\n                        break;\n                    case 'App.Event.input':\n                        var $437 = self.id;\n                        var $438 = self.text;\n                        var self = ($437 === \"input_code\");\n                        if (self) {\n                            var $440 = App$set_local$(App$Playground$set_code$($438, _state$3));\n                            var $439 = $440;\n                        } else {\n                            var $441 = App$pass;\n                            var $439 = $441;\n                        };\n                        var $396 = $439;\n                        break;\n                    case 'App.Event.init':\n                    case 'App.Event.mouse_down':\n                    case 'App.Event.mouse_up':\n                    case 'App.Event.key_down':\n                    case 'App.Event.key_up':\n                    case 'App.Event.mouse_move':\n                        var $442 = App$pass;\n                        var $396 = $442;\n                        break;\n                };\n                var $391 = $396;\n                break;\n        };\n        return $391;\n    };\n    const App$Playground$when = x0 => x1 => App$Playground$when$(x0, x1);\n\n    function App$new$(_init$2, _draw$3, _when$4, _tick$5, _post$6) {\n        var $443 = ({\n            _: 'App.new',\n            'init': _init$2,\n            'draw': _draw$3,\n            'when': _when$4,\n            'tick': _tick$5,\n            'post': _post$6\n        });\n        return $443;\n    };\n    const App$new = x0 => x1 => x2 => x3 => x4 => App$new$(x0, x1, x2, x3, x4);\n    const App$Playground = (() => {\n        var _init$1 = App$Store$new$(App$Playground$State$local_empty, Unit$new);\n        var _draw$2 = (_state$2 => {\n            var $445 = App$playground$body$((() => {\n                var self = _state$2;\n                switch (self._) {\n                    case 'App.Store.new':\n                        var $446 = self.local;\n                        var $447 = $446;\n                        return $447;\n                };\n            })());\n            return $445;\n        });\n        var _when$3 = App$Playground$when;\n        var _tick$4 = (_tick$4 => _glob$5 => {\n            var $448 = _glob$5;\n            return $448;\n        });\n        var _post$5 = (_time$5 => _room$6 => _addr$7 => _data$8 => _glob$9 => {\n            var $449 = _glob$9;\n            return $449;\n        });\n        var $444 = App$new$(_init$1, _draw$2, _when$3, _tick$4, _post$5);\n        return $444;\n    })();\n    return {\n        'App.Store.new': App$Store$new,\n        'Pair.new': Pair$new,\n        'App.State.new': App$State$new,\n        'App.Playground.State': App$Playground$State,\n        'App.Playground.State.local.new': App$Playground$State$local$new,\n        'Device.big_desktop': Device$big_desktop,\n        'App.Playground.Window.input': App$Playground$Window$input,\n        'App.Playground.State.local_empty': App$Playground$State$local_empty,\n        'Unit.new': Unit$new,\n        'DOM.node': DOM$node,\n        'BBL': BBL,\n        'Pair.fst': Pair$fst,\n        'Pair.snd': Pair$snd,\n        'BBL.bin': BBL$bin,\n        'U32.new': U32$new,\n        'Nat.apply': Nat$apply,\n        'Word': Word,\n        'Word.e': Word$e,\n        'Word.i': Word$i,\n        'Word.o': Word$o,\n        'Word.inc': Word$inc,\n        'Word.zero': Word$zero,\n        'Nat.to_word': Nat$to_word,\n        'Nat.succ': Nat$succ,\n        'Nat.zero': Nat$zero,\n        'Nat.to_u32': Nat$to_u32,\n        'BBL.tip': BBL$tip,\n        'BBL.singleton': BBL$singleton,\n        'BBL.size': BBL$size,\n        'Bool.false': Bool$false,\n        'Bool.true': Bool$true,\n        'Word.adder': Word$adder,\n        'Word.add': Word$add,\n        'U32.add': U32$add,\n        'Word.shift_left.one.go': Word$shift_left$one$go,\n        'Word.shift_left.one': Word$shift_left$one,\n        'Word.shift_left': Word$shift_left,\n        'Word.mul.go': Word$mul$go,\n        'Word.to_zero': Word$to_zero,\n        'Word.mul': Word$mul,\n        'U32.mul': U32$mul,\n        'BBL.w': BBL$w,\n        'Cmp.as_ltn': Cmp$as_ltn,\n        'Cmp.ltn': Cmp$ltn,\n        'Cmp.gtn': Cmp$gtn,\n        'Word.cmp.go': Word$cmp$go,\n        'Cmp.eql': Cmp$eql,\n        'Word.cmp': Word$cmp,\n        'Word.ltn': Word$ltn,\n        'U32.ltn': U32$ltn,\n        'U32.from_nat': U32$from_nat,\n        'BBL.node': BBL$node,\n        'Cmp.as_gtn': Cmp$as_gtn,\n        'Word.gtn': Word$gtn,\n        'U32.gtn': U32$gtn,\n        'BBL.balance': BBL$balance,\n        'BBL.insert': BBL$insert,\n        'BBL.from_list.go': BBL$from_list$go,\n        'BBL.from_list': BBL$from_list,\n        'U16.ltn': U16$ltn,\n        'Cmp.as_eql': Cmp$as_eql,\n        'Word.eql': Word$eql,\n        'U16.eql': U16$eql,\n        'U16.cmp': U16$cmp,\n        'String.cmp': String$cmp,\n        'Map.from_list': Map$from_list,\n        'List.cons': List$cons,\n        'Pair': Pair,\n        'List.nil': List$nil,\n        'App.Playground.constant.light_gray_color': App$Playground$constant$light_gray_color,\n        'App.Playground.constant.white_smoke': App$Playground$constant$white_smoke,\n        'DOM.text': DOM$text,\n        'Bool.and': Bool$and,\n        'String.eql': String$eql,\n        'Map': Map,\n        'BBL.concat3': BBL$concat3,\n        'BBL.split_ltn': BBL$split_ltn,\n        'BBL.split_gtn': BBL$split_gtn,\n        'BBL.union': BBL$union,\n        'Map.union': Map$union,\n        'App.Kind.constant.secondary_color': App$Kind$constant$secondary_color,\n        'App.Playground.comp.btn': App$Playground$comp$btn,\n        'App.Playground.comp.header': App$Playground$comp$header,\n        'String.cons': String$cons,\n        'String.concat': String$concat,\n        'App.Playground.comp.input': App$Playground$comp$input,\n        'App.Playground.comp.output_area': App$Playground$comp$output_area,\n        'App.Playground.comp.main_area': App$Playground$comp$main_area,\n        'App.Playground.draw': App$Playground$draw,\n        'App.playground.body': App$playground$body,\n        'App.State.local': App$State$local,\n        'IO': IO,\n        'Maybe': Maybe,\n        'IO.ask': IO$ask,\n        'IO.bind': IO$bind,\n        'IO.end': IO$end,\n        'IO.monad': IO$monad,\n        'Maybe.none': Maybe$none,\n        'App.pass': App$pass,\n        'Cmp.as_lte': Cmp$as_lte,\n        'Word.lte': Word$lte,\n        'U32.lte': U32$lte,\n        'Device.phone': Device$phone,\n        'Device.tablet': Device$tablet,\n        'Device.desktop': Device$desktop,\n        'Device.classify': Device$classify,\n        'Maybe.some': Maybe$some,\n        'App.set_local': App$set_local,\n        'App.Playground.set_mouse_over': App$Playground$set_mouse_over,\n        'App.Playground.Window.terminal': App$Playground$Window$terminal,\n        'String.is_empty': String$is_empty,\n        'App.Playground.set_output': App$Playground$set_output,\n        'IO.request': IO$request,\n        'App.Playground.set_window': App$Playground$set_window,\n        'App.Playground.set_code': App$Playground$set_code,\n        'App.Playground.when': App$Playground$when,\n        'App.new': App$new,\n        'App.Playground': App$Playground,\n    };\n})();"],"sourceRoot":""}