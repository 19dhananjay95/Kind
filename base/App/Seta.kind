// App states (local = clicks, global = visitors)
App.Seta.State: App.State
  App.State.new(Nat, Nat)

// Initial state
App.Seta.init: App.Init<App.Seta.State>
  App.Store.new<App.Seta.State>(0, 0)

// Render function
App.Seta.draw(img: VoxBox): App.Draw<App.Seta.State>
  (state)
    let img = VoxBox.draw.arrow(100, 20, 40, 100, 0, 20, Col32.new(0, 0, 0, 255), img)
    DOM.vbox({"id": "game_screen", "width": "500px", "height": "500px", "scale": "2"}, {}, img) 

// Event handler
App.Seta.when: App.When<App.Seta.State>
  (event, state)
  case event {
    init: IO {
      App.watch!(App.room_zero)
      App.new_post!(App.room_zero, App.empty_post)
    }
    mouse_down: IO {
      App.set_local!(state@local + 1)
    }
  } default App.pass!

// Global ticker: not used
App.Seta.tick: App.Tick<App.Seta.State>
  App.no_tick<App.Seta.State>

// Global visitor: counts posts to room_zero
App.Seta.post: App.Post<App.Seta.State>
  (time, room, addr, data, global_state)
  global_state + 1

// A "Seta, world!" + counter application
App.Seta: App<App.Seta.State>
  let img = VoxBox.alloc_capacity(U32.mul(65536#32, 8#32))
  App.new<App.Seta.State>(
    App.Seta.init
    App.Seta.draw(img)
    App.Seta.when
    App.Seta.tick
    App.Seta.post
  )
