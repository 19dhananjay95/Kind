Web.AsManga.Sprite.render(spr: Web.AsManga.Sprite, pos: V3): DOM
  let attrs = {
    "src": spr@data
  }
  let pos_x = pos@x - spr@pivot_x
  let pos_y = pos@y - spr@pivot_y
  let style = {
    "position": "absolute"
    "left": F64.show(pos_x) | "px"
    "top": F64.show(pos_y) | "px"
  }
  DOM.node("img", attrs, style, [])

type Web.AsManga.Pad {
  new(
    left: Bool
    right: Bool
    up: Bool
    down: Bool
  )
}

type Web.AsManga.State {
  new(
    time: F64
    pos: V3
    pad: Web.AsManga.Pad
    spd: F64
    spr: Web.AsManga.Sprite
  )
}

Web.AsManga.pad_dir(pad: Web.AsManga.Pad, spd: F64): V3
  open pad
  let x
    = (if pad.left then spd * (-1.0) else 0.0)
    + (if pad.right then spd else 0.0)
  let y
    = (if pad.up   then spd * (-1.0) else 0.0)
    + (if pad.down  then spd else 0.0)
  V3.new(x, y, 0)

Web.AsManga.is_walking(pad: Web.AsManga.Pad): Bool
  open pad
  List.any!((x) x, [pad.left, pad.right, pad.up, pad.down])

Web.AsManga.sprite(time: F64, is_walking: Bool): Web.AsManga.Sprite
  if is_walking then
    let walk_sprites = [
      Web.AsManga.Assets.Among.Walk.0
      Web.AsManga.Assets.Among.Walk.1
      Web.AsManga.Assets.Among.Walk.2
      Web.AsManga.Assets.Among.Walk.3
      Web.AsManga.Assets.Among.Walk.4
      Web.AsManga.Assets.Among.Walk.5
      Web.AsManga.Assets.Among.Walk.6
      Web.AsManga.Assets.Among.Walk.7
      Web.AsManga.Assets.Among.Walk.8
      Web.AsManga.Assets.Among.Walk.9
      Web.AsManga.Assets.Among.Walk.10
      Web.AsManga.Assets.Among.Walk.11
    ]
    let idx = F64.to_nat(F64.mul(F64.mod(F64.div(time, 1000.0), 1.0), 12.0))
    let spr = walk_sprites[idx] <> Web.AsManga.Assets.Among.Idle.0
    spr
  else
    Web.AsManga.Assets.Among.Idle.0

Web.AsManga.AsManga: App<Web.AsManga.State>
  let init =
    let time = 0.0
    let pos  = {50,100,0} :: V3
    let pad  = Web.AsManga.Pad.new(false, false, false, false)
    let spd  = 3.0
    let spr  = Web.AsManga.Assets.Among.Walk.5
    Web.AsManga.State.new(time, pos, pad, spd, spr)

  let draw = (state)
    let among_str = Web.AsManga.sprite(state@time, Web.AsManga.is_walking(state@pad))
    let among_pos = state@pos

    DOM.node("div", {}, {}, [
      DOM.node("div", {}, {}, [
        DOM.text(`
          Bem-vindo ao AsManga! Esse é o primeiro deploy do joguinho, que se
          tornará uma paródia de Among Us, porém o impostor é uma manga. A
          intenção é replicar um protótipo jogável do Among Us no menor tempo
          possível. Por enquanto, o app é apenas esse bloco de textos. Aos poucos,
          ele vai evoluir. Quanto tempo vou levar?
        `)
      ])
      DOM.node("div", {}, {}, [
        DOM.text(`
          No momento, estou programando a funcionalidade de networking.
          Isso deve levar cerca de 3 horas. Espero que até 17h de hoje
          já seja possível andar com outras pessoas online!
        `)
      ])
      DOM.node("div", {}, {}, [
        Web.AsManga.Sprite.render(among_str, among_pos)
      ])
    ])

  let when = (event, state)
    case event {
      init:
        App.store!(state@time <- U64.to_f64(event.time))
      frame:
        let state = state@time <- U64.to_f64(event.time)
        let state = state@pos <- state@pos + Web.AsManga.pad_dir(state@pad, state@spd)
        //let state = state@pos <- state@pos + V3.scale(state@spd, state@pad)
        App.store!(state)
      key_down:
        let pad = state@pad
        let pad = switch U16.eql(event.code) {
          'A': pad@left  <- true
          'D': pad@right <- true
          'W': pad@up    <- true
          'S': pad@down  <- true
        } default pad
        App.store!(state@pad <- pad)
      key_up:
        let pad = state@pad
        let pad = switch U16.eql(event.code) {
          'A': pad@left  <- false
          'D': pad@right <- false
          'W': pad@up    <- false
          'S': pad@down  <- false
        } default pad
        App.store!(state@pad <- pad)
    } default App.pass

  App.new!(init, draw, when)
