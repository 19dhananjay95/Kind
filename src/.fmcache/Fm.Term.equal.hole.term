#path #term (((((((((((((((((term #term (Fm.Check Bool)) #term.name #term.indx ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.name ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.eras #term.self #term.name #term.xtyp #term.body ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.name #term.body ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.func #term.argm ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.name #term.expr #term.body ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.name #term.expr #term.body ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.done #term.term #term.type ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.name #term.dref #term.verb ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.path (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (List.nil Fm.Error))) #term.natx ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.chrx ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.strx ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.path #term.expr #term.name #term.with #term.cses #term.moti ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error))))) #term.orig #term.expr ((((Fm.Term.has_holes term) # (Fm.Check Bool)) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.false)) (List.nil Fm.Error))) (((Fm.Check.result Bool) ((Maybe.some Bool) Bool.true)) (((List.cons Fm.Error) ((Fm.Error.patch path) ((Fm.Term.normalize term) (Map.new Fm.Def)))) (List.nil Fm.Error)))))