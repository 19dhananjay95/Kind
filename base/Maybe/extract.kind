// Maybe.extract<A: Type>(m: Maybe<A>)<B: Type>(a: B, f: A -> B): B
//   case m {
//     none: a,
//     some: f(m.value),
//   }

// NOTE: review this function parameters. Is it necessary to have a 
// f: A -> B?
Maybe.extract<A: Type>(m: Maybe(A), a: A): A
  case m {
    none: a
    some: m.value
  }