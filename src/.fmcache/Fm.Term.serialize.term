#term #depth #init #diff #x (((((((((((((((((term #term Bits) #term.name #term.indx (((((Nat.gte term.indx) init) # Bits) !name = (Bits.concat (Nat.to_bits (Nat.pred ((Nat.sub depth) term.indx)))); (Bits.o (Bits.o (Bits.i (name x))))) !name = (Bits.concat (Nat.to_bits term.indx)); (Bits.o (Bits.i (Bits.o (name x)))))) #term.name !name = (Bits.concat (Fm.Term.serialize.name term.name)); (Bits.o (Bits.o (Bits.o (name x))))) (Bits.o (Bits.i (Bits.i x)))) #term.eras #term.self #term.name #term.xtyp #term.body !eras = (((term.eras # @(pred:Bits) Bits) Bits.i) Bits.o); !self = (Bits.concat (Fm.Name.to_bits term.self)); !xtyp = ((((Fm.Term.serialize term.xtyp) depth) init) diff); !body = ((((Fm.Term.serialize ((term.body ((Fm.Term.var term.self) depth)) ((Fm.Term.var term.name) (Nat.succ depth)))) (Nat.succ (Nat.succ depth))) init) diff); (Bits.i (Bits.o (Bits.o (eras (self (xtyp (body x)))))))) #term.name #term.body !body = ((((Fm.Term.serialize (term.body ((Fm.Term.var term.name) depth))) (Nat.succ depth)) init) diff); (Bits.i (Bits.o (Bits.i (body x))))) #term.func #term.argm !func = ((((Fm.Term.serialize term.func) depth) init) diff); !argm = ((((Fm.Term.serialize term.argm) depth) init) diff); (Bits.i (Bits.i (Bits.o (func (argm x)))))) #term.name #term.expr #term.body !expr = ((((Fm.Term.serialize term.expr) depth) init) diff); !body = ((((Fm.Term.serialize (term.body ((Fm.Term.var term.name) depth))) (Nat.succ depth)) init) diff); (Bits.i (Bits.i (Bits.i (expr (body x)))))) #term.name #term.expr #term.body (((((Fm.Term.serialize (term.body term.expr)) depth) init) diff) x)) #term.done #term.term #term.type (((((Fm.Term.serialize term.term) depth) init) diff) x)) #term.name #term.dref #term.verb !name = (Bits.concat (Fm.Name.to_bits term.name)); (Bits.o (Bits.o (Bits.o (name x))))) #term.path x) #term.natx (((((Fm.Term.serialize (Fm.Term.unroll_nat term.natx)) depth) init) diff) x)) #term.chrx (((((Fm.Term.serialize (Fm.Term.unroll_chr term.chrx)) depth) init) diff) x)) #term.strx (((((Fm.Term.serialize (Fm.Term.unroll_str term.strx)) depth) init) diff) x)) #term.path #term.expr #term.name #term.with #term.cses #term.moti (diff x)) #term.orig #term.expr (((((Fm.Term.serialize term.expr) depth) init) diff) x))