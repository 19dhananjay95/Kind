App.KL.Game.Hero.Croni.hero: App.KL.Game.Hero
  let name = "Croni"

  let draw = (player)
    App.KL.Game.Hero.Croni.Assets.vbox_idle

  let picture = (bool, time)
    App.KL.Game.Hero.Croni.Assets.base64_idle

  let max_hp = 25 :: I32

  let max_ap = 10 :: I32

  let skills = {
    "X": App.KL.Game.Skill.new("Walk", 500, 16, 2, App.KL.Game.Effect.common.walk(2))
    "Q": App.KL.Game.Skill.new("Shadow Ball", 800, 16, 6, App.KL.Game.Hero.croni.hero.Skills.shadow_ball(6, 1, 3))
    "W": App.KL.Game.Skill.new("Shadow Flux", 800, 16, 6, App.KL.Game.Hero.croni.hero.Skills.shadow_flux(6, 8))
    "E": App.KL.Game.Skill.new("Trap", 300, 16, 6, App.KL.Game.Hero.Croni.Skills.trap)
  }

  let on_stepped = none

  App.KL.Game.Hero.new(name, draw, picture, max_hp, max_ap, skills, none)


// SKILLS

App.KL.Game.Hero.Croni.Skills.trap: App.KL.Game.Effect<Unit>
  App.KL.Game.Effect {
    App.KL.Game.Effect.limit_range(6)
    get target = App.KL.Game.Effect.coord.get_target
    get board = App.KL.Game.Effect.board.get
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red, [target])
    if App.KL.Game.Board.is_occupied(target, board) then
      App.KL.Game.Effect.pass
    else
      let trap = App.KL.Game.Creature.new(none, App.KL.Game.Hero.Croni.hero.trap, App.KL.Game.Team.neutral, [], 0, 0)
      App.KL.Game.Effect.board.summon(target, trap)
  }

App.KL.Game.Hero.croni.hero.Skills.shadow_ball(range: I32, area: I32, dmg: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    get center = App.KL.Game.Effect.coord.get_center
    get target = App.KL.Game.Effect.coord.get_target
    let circle = App.KL.Game.Effect.area.circle(target, area)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red, circle)
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue, [center])
    App.KL.Game.Effect.common.dmg.circle(range, area, dmg)
  }


App.KL.Game.Hero.croni.hero.Skills.shadow_flux(range: I32, dmg: I32): App.KL.Game.Effect<Unit>
  App.KL.Game.Effect { 
    get target  = App.KL.Game.Effect.coord.get_target
    get center  = App.KL.Game.Effect.coord.get_center
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.blue, [center])
    App.KL.Game.Effect.indicators.list(App.KL.Game.Indicator.red, [target])
    App.KL.Game.Effect.common.dmg.single(range, dmg)
  }

App.KL.Game.Hero.Croni.hero.trap: App.KL.Game.Hero
  let name = "Croni_Trap"
  let draw = (player) App.KL.Game.Field.Elements.mushroom_0_0
  let picture = (bool, time) App.KL.Game.Hero.Croni.Assets.base64_idle
  let max_hp = 10 :: I32
  let max_ap = 0 :: I32
  let skills = {}
  let on_stepped = some(App.KL.Game.Effect {
    get center = App.KL.Game.Effect.coord.get_center
    get target = App.KL.Game.Effect.coord.get_target
    App.KL.Game.Effect.hp.damage_at(3, center)
    App.KL.Game.Effect.board.creature.move(center, target)
    return unit
  })
  App.KL.Game.Hero.new(name, draw, picture, max_hp, max_ap, skills, on_stepped)
