App.KL.Game.Creature.Status.protect.add(
  creature: App.KL.Game.Creature
  caster_id: String
  duration: I32
  amount: I32
): App.KL.Game.Creature
  
  protect_added = App.KL.Game.Creature.Status.protect.add.aux(caster_id, duration, amount, creature@status)
  creature@status <- protect_added

App.KL.Game.Creature.Status.protect.add.aux(
  caster_id: String
  duration: I32
  amount: I32
  status: List<App.KL.Game.Creature.Status>
): List<App.KL.Game.Creature.Status>

  let new_protect = App.KL.Game.Creature.Status.protect(caster_id, duration, amount)
  case status { 
    nil:
      new_protect & status
    cons:
      case status.head { 
        protect: 
          status
      }default status.head & App.KL.Game.Creature.Status.protect.add.aux(caster_id, duration, amount, status.tail)
  }
