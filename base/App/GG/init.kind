// Initial state
App.GG.init: App.Init<App.GG.State>
  let lobby = App.GG.Lobby.new(none)
  let local = App.GG.State.local.lobby(lobby)
  App.Store.new<App.GG.State>(local, unit)

App.GG.init.game(body: App.GG.Body): App.GG.State.local
  let grid = App.GG.init.grid(body)
  let setup = App.GG.Phase.setup({[], none}, [], 0)
  let grid  = 
    let slime = App.GG.Slime.find(grid)
    without slime: grid
    let new_grid = App.GG.Creature.modify_at(App.GG.Creature.shuffle_folder(10000), slime@snd, grid) 
    new_grid

  let {phase, grid} =
    let slime = App.GG.Slime.find(grid)
    without slime: {setup grid}
    case slime@fst@category as monster {
      minion: {setup grid}
      slime: 
        let table_size = 10
        let mod = App.GG.Creature.sub_folder(table_size)
        let slots = App.GG.Table.from_folder(table_size, monster.folder)
        let table = App.GG.Table.new(slots, none)
        let hand = [] :: App.GG.Chips
        let energy = monster.energy + monster.attributes@energy
        let phase = App.GG.Phase.setup(table, hand, energy)
        let new_grid  = App.GG.Creature.modify_at(mod, slime@snd, grid)
        {phase, new_grid}
    }
  let local = App.GG.State.local.game({phase, grid, {0, 0}})
  local

App.GG.init.grid(body: App.GG.Body): App.GG.Grid
  let blue = App.GG.Tile.new([], none, App.GG.Team.blue, App.GG.Tile.Statuses.pure)
  let red = App.GG.Tile.new([], none, App.GG.Team.red, App.GG.Tile.Statuses.pure)
  let list = 
    [
      {{0#32,0#32}, blue} {{1#32,0#32}, blue} {{2#32,0#32}, blue}
      {{0#32,1#32}, blue} {{1#32,1#32}, blue} {{2#32,1#32}, blue}
      {{0#32,2#32}, blue} {{1#32,2#32}, blue} {{2#32,2#32}, blue}
     
      {{3#32,0#32}, red } {{4#32,0#32}, red } {{5#32,0#32}, red }
      {{3#32,1#32}, red } {{4#32,1#32}, red } {{5#32,1#32}, red }
      {{3#32,2#32}, red } {{4#32,2#32}, red } {{5#32,2#32}, red }
    ]
  let grid = BBT.from_list<App.GG.Coord, App.GG.Tile>(App.GG.Grid.cmp, list)
  let parts = App.GG.Parts.new(0,0,0)
  let slime = App.GG.Creature.create_slime(App.GG.Creatures.slime(body), grid)
  let minion =  App.GG.Creature.create_minion(App.GG.Creatures.minion, grid)
  let grid = App.GG.Creature.place(slime,  {1#32,1#32}, grid)
  let grid = App.GG.Creature.place(minion, {4#32,1#32}, grid)
  grid
  

