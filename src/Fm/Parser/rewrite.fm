Fm.Parser.rewrite(init: Nat, subt: Fm.Term): Parser(Fm.Term)
  do Parser {
    Fm.Parser.text("::");
    Fm.Parser.text("rewrite");
    var name = Fm.Parser.name1;
    Fm.Parser.text("in");
    var type = Fm.Parser.term;
    Fm.Parser.text("with");
    var iseq = Fm.Parser.term;
    var orig = Fm.Parser.stop(init);
    let term = Fm.Term.ref("Equal.rewrite");
    let term = Fm.Term.app(term, Fm.Term.hol(Bits.e));
    let term = Fm.Term.app(term, Fm.Term.hol(Bits.e));
    let term = Fm.Term.app(term, Fm.Term.hol(Bits.e));
    let term = Fm.Term.app(term, iseq);
    let term = Fm.Term.app(term, Fm.Term.lam(name, (x) type));
    let term = Fm.Term.app(term, subt);
    return Fm.Term.ori(orig, term);
  }