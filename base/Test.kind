foo(a: Nat): Maybe<Nat>
  case Nat.ltn(a, 10) {
    true: some(a)
    false: none
  }

f(a: Nat): Maybe<Nat>
  foo(a * 2)

g(a: Nat): Maybe<Nat>
  foo(a - 1)

Test: Maybe<Nat>
  Maybe {
    get a = f(2)
    get b = g(3)
    return (a + b)
  }