((((((Monad.bind Parser) Parser.monad) Nat) Fm.Term) Fm.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) ((Parser.first_of Fm.Term) (((List.cons (Parser Fm.Term)) Fm.Parser.type) (((List.cons (Parser Fm.Term)) Fm.Parser.forall) (((List.cons (Parser Fm.Term)) Fm.Parser.lambda) (((List.cons (Parser Fm.Term)) Fm.Parser.lambda.erased) (((List.cons (Parser Fm.Term)) Fm.Parser.lambda.nameless) (((List.cons (Parser Fm.Term)) Fm.Parser.parenthesis) (((List.cons (Parser Fm.Term)) Fm.Parser.letforrange.u32) (((List.cons (Parser Fm.Term)) Fm.Parser.letforin) (((List.cons (Parser Fm.Term)) Fm.Parser.let) (((List.cons (Parser Fm.Term)) Fm.Parser.get) (((List.cons (Parser Fm.Term)) Fm.Parser.def) (((List.cons (Parser Fm.Term)) Fm.Parser.if) (((List.cons (Parser Fm.Term)) Fm.Parser.char) (((List.cons (Parser Fm.Term)) Fm.Parser.string) (((List.cons (Parser Fm.Term)) Fm.Parser.pair) (((List.cons (Parser Fm.Term)) Fm.Parser.sigma.type) (((List.cons (Parser Fm.Term)) Fm.Parser.some) (((List.cons (Parser Fm.Term)) Fm.Parser.apply) (((List.cons (Parser Fm.Term)) Fm.Parser.mirror) (((List.cons (Parser Fm.Term)) Fm.Parser.list) (((List.cons (Parser Fm.Term)) Fm.Parser.log) (((List.cons (Parser Fm.Term)) Fm.Parser.forrange.u32) (((List.cons (Parser Fm.Term)) Fm.Parser.forrange.u32.2) (((List.cons (Parser Fm.Term)) Fm.Parser.forin) (((List.cons (Parser Fm.Term)) Fm.Parser.forin.2) (((List.cons (Parser Fm.Term)) Fm.Parser.do) (((List.cons (Parser Fm.Term)) Fm.Parser.case) (((List.cons (Parser Fm.Term)) Fm.Parser.open) (((List.cons (Parser Fm.Term)) Fm.Parser.goal) (((List.cons (Parser Fm.Term)) Fm.Parser.hole) (((List.cons (Parser Fm.Term)) Fm.Parser.u8) (((List.cons (Parser Fm.Term)) Fm.Parser.u16) (((List.cons (Parser Fm.Term)) Fm.Parser.u32) (((List.cons (Parser Fm.Term)) Fm.Parser.u64) (((List.cons (Parser Fm.Term)) Fm.Parser.nat) (((List.cons (Parser Fm.Term)) Fm.Parser.reference) (List.nil (Parser Fm.Term)))))))))))))))))))))))))))))))))))))))) #term ((Fm.Parser.suffix init) term)))