module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };
    var bitsmap_new = {
        _: 'BitsMap.new'
    };
    var bitsmap_tie = function(val, lft, rgt) {
        return {
            _: 'BitsMap.tip',
            val,
            lft,
            rgt
        };
    }
    var maybe_none = {
        _: 'Maybe.none'
    };
    var maybe_some = function(value) {
        return {
            _: 'Maybe.some',
            value
        };
    }
    var bitsmap_get = function(bits, map) {
        for (var i = bits.length - 1; i >= 0; --i) {
            if (map._ !== 'BitsMap.new') {
                map = bits[i] === '0' ? map.lft : map.rgt;
            }
        }
        return map._ === 'BitsMap.new' ? maybe_none : map.val;
    }
    var bitsmap_set = function(bits, val, map, mode) {
        var res = {
            value: map
        };
        var key = 'value';
        var obj = res;
        for (var i = bits.length - 1; i >= 0; --i) {
            var map = obj[key];
            if (map._ === 'BitsMap.new') {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: maybe_none,
                    lft: bitsmap_new,
                    rgt: bitsmap_new
                };
            } else {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: map.val,
                    lft: map.lft,
                    rgt: map.rgt
                };
            }
            obj = obj[key];
            key = bits[i] === '0' ? 'lft' : 'rgt';
        }
        var map = obj[key];
        if (map._ === 'BitsMap.new') {
            var x = mode === 'del' ? maybe_none : {
                _: 'Maybe.some',
                value: val
            };
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: bitsmap_new,
                rgt: bitsmap_new
            };
        } else {
            var x = mode === 'set' ? {
                _: 'Maybe.some',
                value: val
            } : mode === 'del' ? maybe_none : map.val;
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: map.lft,
                rgt: map.rgt
            };
        }
        return res.value;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    var nat_to_bits = n => {
        return n === 0n ? '' : n.toString(2);
    };
    var kind_name_to_bits = name => {
        const TABLE = {
            'A': '000000',
            'B': '100000',
            'C': '010000',
            'D': '110000',
            'E': '001000',
            'F': '101000',
            'G': '011000',
            'H': '111000',
            'I': '000100',
            'J': '100100',
            'K': '010100',
            'L': '110100',
            'M': '001100',
            'N': '101100',
            'O': '011100',
            'P': '111100',
            'Q': '000010',
            'R': '100010',
            'S': '010010',
            'T': '110010',
            'U': '001010',
            'V': '101010',
            'W': '011010',
            'X': '111010',
            'Y': '000110',
            'Z': '100110',
            'a': '010110',
            'b': '110110',
            'c': '001110',
            'd': '101110',
            'e': '011110',
            'f': '111110',
            'g': '000001',
            'h': '100001',
            'i': '010001',
            'j': '110001',
            'k': '001001',
            'l': '101001',
            'm': '011001',
            'n': '111001',
            'o': '000101',
            'p': '100101',
            'q': '010101',
            'r': '110101',
            's': '001101',
            't': '101101',
            'u': '011101',
            'v': '111101',
            'w': '000011',
            'x': '100011',
            'y': '010011',
            'z': '110011',
            '0': '001011',
            '1': '101011',
            '2': '011011',
            '3': '111011',
            '4': '000111',
            '5': '100111',
            '6': '010111',
            '7': '110111',
            '8': '001111',
            '9': '101111',
            '.': '011111',
            '_': '111111',
        }
        var a = '';
        for (var i = name.length - 1; i >= 0; --i) {
            a += TABLE[name[i]];
        }
        return a;
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $25 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $21 = c0;
                return $21;
            } else {
                var $22 = self.charCodeAt(0);
                var $23 = self.slice(1);
                var $24 = c1($22)($23);
                return $24;
            };
        })();
        return $25;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
        };
        return run_io({
            rl,
            fs,
            pc,
            ht,
            hs
        }, p).then((x) => {
            rl.close();
            return x;
        }).catch((e) => {
            rl.close();
            throw e;
        });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function IO$(_A$1) {
        var $26 = null;
        return $26;
    };
    const IO = x0 => IO$(x0);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $27 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $27;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $29 = self.value;
                var $30 = _f$4($29);
                var $28 = $30;
                break;
            case 'IO.ask':
                var $31 = self.query;
                var $32 = self.param;
                var $33 = self.then;
                var $34 = IO$ask$($31, $32, (_x$8 => {
                    var $35 = IO$bind$($33(_x$8), _f$4);
                    return $35;
                }));
                var $28 = $34;
                break;
        };
        return $28;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $36 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $36;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $37 = _new$2(IO$bind)(IO$end);
        return $37;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function Maybe$(_A$1) {
        var $38 = null;
        return $38;
    };
    const Maybe = x0 => Maybe$(x0);

    function BitsMap$(_A$1) {
        var $39 = null;
        return $39;
    };
    const BitsMap = x0 => BitsMap$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });
    const BitsMap$get = a0 => a1 => (bitsmap_get(a0, a1));
    const Bits$o = a0 => (a0 + '0');
    const Bits$i = a0 => (a0 + '1');
    const Bool$true = true;
    const Bool$false = false;

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $41 = Bool$true;
                var $40 = $41;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $42 = Bool$false;
                var $40 = $42;
                break;
        };
        return $40;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $44 = self.pred;
                var $45 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $47 = self.pred;
                            var $48 = (_a$pred$10 => {
                                var $49 = Word$cmp$go$(_a$pred$10, $47, _c$4);
                                return $49;
                            });
                            var $46 = $48;
                            break;
                        case 'Word.i':
                            var $50 = self.pred;
                            var $51 = (_a$pred$10 => {
                                var $52 = Word$cmp$go$(_a$pred$10, $50, Cmp$ltn);
                                return $52;
                            });
                            var $46 = $51;
                            break;
                        case 'Word.e':
                            var $53 = (_a$pred$8 => {
                                var $54 = _c$4;
                                return $54;
                            });
                            var $46 = $53;
                            break;
                    };
                    var $46 = $46($44);
                    return $46;
                });
                var $43 = $45;
                break;
            case 'Word.i':
                var $55 = self.pred;
                var $56 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $58 = self.pred;
                            var $59 = (_a$pred$10 => {
                                var $60 = Word$cmp$go$(_a$pred$10, $58, Cmp$gtn);
                                return $60;
                            });
                            var $57 = $59;
                            break;
                        case 'Word.i':
                            var $61 = self.pred;
                            var $62 = (_a$pred$10 => {
                                var $63 = Word$cmp$go$(_a$pred$10, $61, _c$4);
                                return $63;
                            });
                            var $57 = $62;
                            break;
                        case 'Word.e':
                            var $64 = (_a$pred$8 => {
                                var $65 = _c$4;
                                return $65;
                            });
                            var $57 = $64;
                            break;
                    };
                    var $57 = $57($55);
                    return $57;
                });
                var $43 = $56;
                break;
            case 'Word.e':
                var $66 = (_b$5 => {
                    var $67 = _c$4;
                    return $67;
                });
                var $43 = $66;
                break;
        };
        var $43 = $43(_b$3);
        return $43;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $68 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $68;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$ltn$(_a$2, _b$3) {
        var $69 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $69;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $70 = 1n + _pred$1;
        return $70;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$new$(_value$1) {
        var $71 = word_to_u16(_value$1);
        return $71;
    };
    const U16$new = x0 => U16$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $72 = _x$4;
                    return $72;
                } else {
                    var $73 = (self - 1n);
                    var $74 = Nat$apply$($73, _f$3, _f$3(_x$4));
                    return $74;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $75 = null;
        return $75;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $76 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $76;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $77 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $77;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $79 = self.pred;
                var $80 = Word$i$($79);
                var $78 = $80;
                break;
            case 'Word.i':
                var $81 = self.pred;
                var $82 = Word$o$(Word$inc$($81));
                var $78 = $82;
                break;
            case 'Word.e':
                var $83 = Word$e;
                var $78 = $83;
                break;
        };
        return $78;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $85 = Word$e;
            var $84 = $85;
        } else {
            var $86 = (self - 1n);
            var $87 = Word$o$(Word$zero$($86));
            var $84 = $87;
        };
        return $84;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $88 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $88;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Name$to_bits$go$(_name$1, _end$2) {
        var self = _name$1;
        if (self.length === 0) {
            var $90 = _end$2;
            var $89 = $90;
        } else {
            var $91 = self.charCodeAt(0);
            var $92 = self.slice(1);
            var _x$5 = $91;
            var _O$6 = Bits$o;
            var _I$7 = Bits$i;
            var self = (_x$5 < 47);
            if (self) {
                var $94 = _I$7(_I$7(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                var $93 = $94;
            } else {
                var self = (_x$5 < 58);
                if (self) {
                    var self = (_x$5 < 53);
                    if (self) {
                        var self = (_x$5 < 50);
                        if (self) {
                            var self = (_x$5 < 49);
                            if (self) {
                                var $99 = _I$7(_I$7(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                var $98 = $99;
                            } else {
                                var $100 = _I$7(_I$7(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                var $98 = $100;
                            };
                            var $97 = $98;
                        } else {
                            var self = (_x$5 < 51);
                            if (self) {
                                var $102 = _I$7(_I$7(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                var $101 = $102;
                            } else {
                                var self = (_x$5 < 52);
                                if (self) {
                                    var $104 = _I$7(_I$7(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                    var $103 = $104;
                                } else {
                                    var $105 = _I$7(_I$7(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                    var $103 = $105;
                                };
                                var $101 = $103;
                            };
                            var $97 = $101;
                        };
                        var $96 = $97;
                    } else {
                        var self = (_x$5 < 55);
                        if (self) {
                            var self = (_x$5 < 54);
                            if (self) {
                                var $108 = _I$7(_I$7(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                var $107 = $108;
                            } else {
                                var $109 = _I$7(_I$7(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                var $107 = $109;
                            };
                            var $106 = $107;
                        } else {
                            var self = (_x$5 < 56);
                            if (self) {
                                var $111 = _I$7(_I$7(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                var $110 = $111;
                            } else {
                                var self = (_x$5 < 57);
                                if (self) {
                                    var $113 = _I$7(_I$7(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                    var $112 = $113;
                                } else {
                                    var $114 = _I$7(_I$7(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                    var $112 = $114;
                                };
                                var $110 = $112;
                            };
                            var $106 = $110;
                        };
                        var $96 = $106;
                    };
                    var $95 = $96;
                } else {
                    var self = (_x$5 < 91);
                    if (self) {
                        var self = (_x$5 < 78);
                        if (self) {
                            var self = (_x$5 < 71);
                            if (self) {
                                var self = (_x$5 < 68);
                                if (self) {
                                    var self = (_x$5 < 66);
                                    if (self) {
                                        var $120 = _O$6(_O$6(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                        var $119 = $120;
                                    } else {
                                        var self = (_x$5 < 67);
                                        if (self) {
                                            var $122 = _O$6(_O$6(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $121 = $122;
                                        } else {
                                            var $123 = _O$6(_O$6(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $121 = $123;
                                        };
                                        var $119 = $121;
                                    };
                                    var $118 = $119;
                                } else {
                                    var self = (_x$5 < 69);
                                    if (self) {
                                        var $125 = _O$6(_O$6(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                        var $124 = $125;
                                    } else {
                                        var self = (_x$5 < 70);
                                        if (self) {
                                            var $127 = _O$6(_O$6(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $126 = $127;
                                        } else {
                                            var $128 = _O$6(_O$6(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $126 = $128;
                                        };
                                        var $124 = $126;
                                    };
                                    var $118 = $124;
                                };
                                var $117 = $118;
                            } else {
                                var self = (_x$5 < 74);
                                if (self) {
                                    var self = (_x$5 < 72);
                                    if (self) {
                                        var $131 = _O$6(_O$6(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                        var $130 = $131;
                                    } else {
                                        var self = (_x$5 < 73);
                                        if (self) {
                                            var $133 = _O$6(_O$6(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $132 = $133;
                                        } else {
                                            var $134 = _O$6(_O$6(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $132 = $134;
                                        };
                                        var $130 = $132;
                                    };
                                    var $129 = $130;
                                } else {
                                    var self = (_x$5 < 76);
                                    if (self) {
                                        var self = (_x$5 < 75);
                                        if (self) {
                                            var $137 = _O$6(_O$6(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $136 = $137;
                                        } else {
                                            var $138 = _O$6(_O$6(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $136 = $138;
                                        };
                                        var $135 = $136;
                                    } else {
                                        var self = (_x$5 < 77);
                                        if (self) {
                                            var $140 = _O$6(_O$6(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $139 = $140;
                                        } else {
                                            var $141 = _O$6(_O$6(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $139 = $141;
                                        };
                                        var $135 = $139;
                                    };
                                    var $129 = $135;
                                };
                                var $117 = $129;
                            };
                            var $116 = $117;
                        } else {
                            var self = (_x$5 < 84);
                            if (self) {
                                var self = (_x$5 < 81);
                                if (self) {
                                    var self = (_x$5 < 79);
                                    if (self) {
                                        var $145 = _O$6(_O$6(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                        var $144 = $145;
                                    } else {
                                        var self = (_x$5 < 80);
                                        if (self) {
                                            var $147 = _O$6(_O$6(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $146 = $147;
                                        } else {
                                            var $148 = _O$6(_O$6(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $146 = $148;
                                        };
                                        var $144 = $146;
                                    };
                                    var $143 = $144;
                                } else {
                                    var self = (_x$5 < 82);
                                    if (self) {
                                        var $150 = _O$6(_I$7(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                        var $149 = $150;
                                    } else {
                                        var self = (_x$5 < 83);
                                        if (self) {
                                            var $152 = _O$6(_I$7(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $151 = $152;
                                        } else {
                                            var $153 = _O$6(_I$7(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $151 = $153;
                                        };
                                        var $149 = $151;
                                    };
                                    var $143 = $149;
                                };
                                var $142 = $143;
                            } else {
                                var self = (_x$5 < 87);
                                if (self) {
                                    var self = (_x$5 < 85);
                                    if (self) {
                                        var $156 = _O$6(_I$7(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                        var $155 = $156;
                                    } else {
                                        var self = (_x$5 < 86);
                                        if (self) {
                                            var $158 = _O$6(_I$7(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $157 = $158;
                                        } else {
                                            var $159 = _O$6(_I$7(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $157 = $159;
                                        };
                                        var $155 = $157;
                                    };
                                    var $154 = $155;
                                } else {
                                    var self = (_x$5 < 89);
                                    if (self) {
                                        var self = (_x$5 < 88);
                                        if (self) {
                                            var $162 = _O$6(_I$7(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $161 = $162;
                                        } else {
                                            var $163 = _O$6(_I$7(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $161 = $163;
                                        };
                                        var $160 = $161;
                                    } else {
                                        var self = (_x$5 < 90);
                                        if (self) {
                                            var $165 = _O$6(_I$7(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $164 = $165;
                                        } else {
                                            var $166 = _O$6(_I$7(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $164 = $166;
                                        };
                                        var $160 = $164;
                                    };
                                    var $154 = $160;
                                };
                                var $142 = $154;
                            };
                            var $116 = $142;
                        };
                        var $115 = $116;
                    } else {
                        var self = (_x$5 < 96);
                        if (self) {
                            var $168 = _I$7(_I$7(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                            var $167 = $168;
                        } else {
                            var self = (_x$5 < 110);
                            if (self) {
                                var self = (_x$5 < 103);
                                if (self) {
                                    var self = (_x$5 < 100);
                                    if (self) {
                                        var self = (_x$5 < 98);
                                        if (self) {
                                            var $173 = _O$6(_I$7(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $172 = $173;
                                        } else {
                                            var self = (_x$5 < 99);
                                            if (self) {
                                                var $175 = _O$6(_I$7(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $174 = $175;
                                            } else {
                                                var $176 = _O$6(_I$7(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $174 = $176;
                                            };
                                            var $172 = $174;
                                        };
                                        var $171 = $172;
                                    } else {
                                        var self = (_x$5 < 101);
                                        if (self) {
                                            var $178 = _O$6(_I$7(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $177 = $178;
                                        } else {
                                            var self = (_x$5 < 102);
                                            if (self) {
                                                var $180 = _O$6(_I$7(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $179 = $180;
                                            } else {
                                                var $181 = _O$6(_I$7(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $179 = $181;
                                            };
                                            var $177 = $179;
                                        };
                                        var $171 = $177;
                                    };
                                    var $170 = $171;
                                } else {
                                    var self = (_x$5 < 106);
                                    if (self) {
                                        var self = (_x$5 < 104);
                                        if (self) {
                                            var $184 = _I$7(_O$6(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                            var $183 = $184;
                                        } else {
                                            var self = (_x$5 < 105);
                                            if (self) {
                                                var $186 = _I$7(_O$6(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $185 = $186;
                                            } else {
                                                var $187 = _I$7(_O$6(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $185 = $187;
                                            };
                                            var $183 = $185;
                                        };
                                        var $182 = $183;
                                    } else {
                                        var self = (_x$5 < 108);
                                        if (self) {
                                            var self = (_x$5 < 107);
                                            if (self) {
                                                var $190 = _I$7(_O$6(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $189 = $190;
                                            } else {
                                                var $191 = _I$7(_O$6(_O$6(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $189 = $191;
                                            };
                                            var $188 = $189;
                                        } else {
                                            var self = (_x$5 < 109);
                                            if (self) {
                                                var $193 = _I$7(_O$6(_O$6(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $192 = $193;
                                            } else {
                                                var $194 = _I$7(_O$6(_O$6(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $192 = $194;
                                            };
                                            var $188 = $192;
                                        };
                                        var $182 = $188;
                                    };
                                    var $170 = $182;
                                };
                                var $169 = $170;
                            } else {
                                var self = (_x$5 < 116);
                                if (self) {
                                    var self = (_x$5 < 113);
                                    if (self) {
                                        var self = (_x$5 < 111);
                                        if (self) {
                                            var $198 = _I$7(_O$6(_O$6(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                            var $197 = $198;
                                        } else {
                                            var self = (_x$5 < 112);
                                            if (self) {
                                                var $200 = _I$7(_O$6(_I$7(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $199 = $200;
                                            } else {
                                                var $201 = _I$7(_O$6(_I$7(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $199 = $201;
                                            };
                                            var $197 = $199;
                                        };
                                        var $196 = $197;
                                    } else {
                                        var self = (_x$5 < 114);
                                        if (self) {
                                            var $203 = _I$7(_O$6(_I$7(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                            var $202 = $203;
                                        } else {
                                            var self = (_x$5 < 115);
                                            if (self) {
                                                var $205 = _I$7(_O$6(_I$7(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $204 = $205;
                                            } else {
                                                var $206 = _I$7(_O$6(_I$7(_I$7(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $204 = $206;
                                            };
                                            var $202 = $204;
                                        };
                                        var $196 = $202;
                                    };
                                    var $195 = $196;
                                } else {
                                    var self = (_x$5 < 119);
                                    if (self) {
                                        var self = (_x$5 < 117);
                                        if (self) {
                                            var $209 = _I$7(_O$6(_I$7(_I$7(_O$6(_I$7((kind_name_to_bits($92))))))));
                                            var $208 = $209;
                                        } else {
                                            var self = (_x$5 < 118);
                                            if (self) {
                                                var $211 = _I$7(_O$6(_I$7(_I$7(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $210 = $211;
                                            } else {
                                                var $212 = _I$7(_O$6(_I$7(_I$7(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $210 = $212;
                                            };
                                            var $208 = $210;
                                        };
                                        var $207 = $208;
                                    } else {
                                        var self = (_x$5 < 121);
                                        if (self) {
                                            var self = (_x$5 < 120);
                                            if (self) {
                                                var $215 = _I$7(_I$7(_O$6(_O$6(_O$6(_O$6((kind_name_to_bits($92))))))));
                                                var $214 = $215;
                                            } else {
                                                var $216 = _I$7(_I$7(_O$6(_O$6(_O$6(_I$7((kind_name_to_bits($92))))))));
                                                var $214 = $216;
                                            };
                                            var $213 = $214;
                                        } else {
                                            var self = (_x$5 < 122);
                                            if (self) {
                                                var $218 = _I$7(_I$7(_O$6(_O$6(_I$7(_O$6((kind_name_to_bits($92))))))));
                                                var $217 = $218;
                                            } else {
                                                var $219 = _I$7(_I$7(_O$6(_O$6(_I$7(_I$7((kind_name_to_bits($92))))))));
                                                var $217 = $219;
                                            };
                                            var $213 = $217;
                                        };
                                        var $207 = $213;
                                    };
                                    var $195 = $207;
                                };
                                var $169 = $195;
                            };
                            var $167 = $169;
                        };
                        var $115 = $167;
                    };
                    var $95 = $115;
                };
                var $93 = $95;
            };
            var $89 = $93;
        };
        return $89;
    };
    const Kind$Name$to_bits$go = x0 => x1 => Kind$Name$to_bits$go$(x0, x1);
    const Bits$e = '';
    const Kind$Name$to_bits = a0 => (kind_name_to_bits(a0));

    function Kind$Map$get$(_name$2, _map$3) {
        var $220 = (bitsmap_get((kind_name_to_bits(_name$2)), _map$3));
        return $220;
    };
    const Kind$Map$get = x0 => x1 => Kind$Map$get$(x0, x1);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $222 = self.value;
                var $223 = $222;
                var $221 = $223;
                break;
            case 'Maybe.none':
                var $224 = _a$3;
                var $221 = $224;
                break;
        };
        return $221;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $225 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $225;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Maybe$some$(_value$2) {
        var $226 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $226;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Parser$run$(_parser$2, _code$3) {
        var self = _parser$2(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        switch (self._) {
            case 'Parser.Reply.value':
                var $228 = self.val;
                var $229 = Maybe$some$($228);
                var $227 = $229;
                break;
            case 'Parser.Reply.error':
                var $230 = Maybe$none;
                var $227 = $230;
                break;
        };
        return $227;
    };
    const Parser$run = x0 => x1 => Parser$run$(x0, x1);

    function Parser$Reply$(_V$1) {
        var $231 = null;
        return $231;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $232 = null;
        return $232;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $233 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $233;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $235 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $237 = self.idx;
                        var self = ($235 > $237);
                        if (self) {
                            var $239 = _a$1;
                            var $238 = $239;
                        } else {
                            var $240 = _b$2;
                            var $238 = $240;
                        };
                        var $236 = $238;
                        break;
                };
                var $234 = $236;
                break;
        };
        return $234;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $242 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $244 = self.value;
                        var $245 = Maybe$some$(Parser$Error$combine$($242, $244));
                        var $243 = $245;
                        break;
                    case 'Maybe.none':
                        var $246 = _a$1;
                        var $243 = $246;
                        break;
                };
                var $241 = $243;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $248 = Maybe$none;
                        var $247 = $248;
                        break;
                    case 'Maybe.some':
                        var $249 = _b$2;
                        var $247 = $249;
                        break;
                };
                var $241 = $247;
                break;
        };
        return $241;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $250 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $250;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$cons$(_head$2, _tail$3) {
        var $251 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $251;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $253 = self.pst;
                                var $254 = self.val;
                                var $255 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $256 = _values$3(List$cons$($254, _xs$12));
                                    return $256;
                                }), $253);
                                var $252 = $255;
                                break;
                            case 'Parser.Reply.error':
                                var $257 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $252 = $257;
                                break;
                        };
                        return $252;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $258 = Parser$many$go(_parser$2)((_x$3 => {
            var $259 = _x$3;
            return $259;
        }));
        return $258;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $261 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $263 = self.err;
                        var self = $261;
                        switch (self._) {
                            case 'Maybe.some':
                                var $265 = self.value;
                                var $266 = Parser$Reply$error$(Parser$Error$combine$($265, $263));
                                var $264 = $266;
                                break;
                            case 'Maybe.none':
                                var $267 = Parser$Reply$error$($263);
                                var $264 = $267;
                                break;
                        };
                        var $262 = $264;
                        break;
                    case 'Parser.Reply.value':
                        var $268 = self.pst;
                        var $269 = self.val;
                        var self = $268;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $271 = self.err;
                                var $272 = self.nam;
                                var $273 = self.ini;
                                var $274 = self.idx;
                                var $275 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($261, $271), $272, $273, $274, $275);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $277 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $279 = self.err;
                                                var self = $277;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $281 = self.value;
                                                        var $282 = Parser$Reply$error$(Parser$Error$combine$($281, $279));
                                                        var $280 = $282;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $283 = Parser$Reply$error$($279);
                                                        var $280 = $283;
                                                        break;
                                                };
                                                var $278 = $280;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $284 = self.pst;
                                                var $285 = self.val;
                                                var self = $284;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $287 = self.err;
                                                        var $288 = self.nam;
                                                        var $289 = self.ini;
                                                        var $290 = self.idx;
                                                        var $291 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($277, $287), $288, $289, $290, $291);
                                                        var $292 = Parser$Reply$value$(_reply$pst$31, List$cons$($269, $285));
                                                        var $286 = $292;
                                                        break;
                                                };
                                                var $278 = $286;
                                                break;
                                        };
                                        var $276 = $278;
                                        break;
                                };
                                var $270 = $276;
                                break;
                        };
                        var $262 = $270;
                        break;
                };
                var $260 = $262;
                break;
        };
        return $260;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $293 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $293;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $294 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $294;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $296 = Bool$false;
                var $295 = $296;
                break;
            case 'Cmp.eql':
                var $297 = Bool$true;
                var $295 = $297;
                break;
        };
        return $295;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);

    function Word$eql$(_a$2, _b$3) {
        var $298 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $298;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);
    const U16$eql = a0 => a1 => (a0 === a1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $300 = self.err;
                var $301 = self.nam;
                var $302 = self.ini;
                var $303 = self.idx;
                var $304 = self.str;
                var self = $304;
                if (self.length === 0) {
                    var $306 = Parser$Reply$fail$($301, $302, $303, "Not a digit.");
                    var $305 = $306;
                } else {
                    var $307 = self.charCodeAt(0);
                    var $308 = self.slice(1);
                    var _pst$9 = Parser$State$new$($300, $301, $302, Nat$succ$($303), $308);
                    var self = ($307 === 48);
                    if (self) {
                        var $310 = Parser$Reply$value$(_pst$9, 0n);
                        var $309 = $310;
                    } else {
                        var self = ($307 === 49);
                        if (self) {
                            var $312 = Parser$Reply$value$(_pst$9, 1n);
                            var $311 = $312;
                        } else {
                            var self = ($307 === 50);
                            if (self) {
                                var $314 = Parser$Reply$value$(_pst$9, 2n);
                                var $313 = $314;
                            } else {
                                var self = ($307 === 51);
                                if (self) {
                                    var $316 = Parser$Reply$value$(_pst$9, 3n);
                                    var $315 = $316;
                                } else {
                                    var self = ($307 === 52);
                                    if (self) {
                                        var $318 = Parser$Reply$value$(_pst$9, 4n);
                                        var $317 = $318;
                                    } else {
                                        var self = ($307 === 53);
                                        if (self) {
                                            var $320 = Parser$Reply$value$(_pst$9, 5n);
                                            var $319 = $320;
                                        } else {
                                            var self = ($307 === 54);
                                            if (self) {
                                                var $322 = Parser$Reply$value$(_pst$9, 6n);
                                                var $321 = $322;
                                            } else {
                                                var self = ($307 === 55);
                                                if (self) {
                                                    var $324 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $323 = $324;
                                                } else {
                                                    var self = ($307 === 56);
                                                    if (self) {
                                                        var $326 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $325 = $326;
                                                    } else {
                                                        var self = ($307 === 57);
                                                        if (self) {
                                                            var $328 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $327 = $328;
                                                        } else {
                                                            var $329 = Parser$Reply$fail$($301, $302, $303, "Not a digit.");
                                                            var $327 = $329;
                                                        };
                                                        var $325 = $327;
                                                    };
                                                    var $323 = $325;
                                                };
                                                var $321 = $323;
                                            };
                                            var $319 = $321;
                                        };
                                        var $317 = $319;
                                    };
                                    var $315 = $317;
                                };
                                var $313 = $315;
                            };
                            var $311 = $313;
                        };
                        var $309 = $311;
                    };
                    var $305 = $309;
                };
                var $299 = $305;
                break;
        };
        return $299;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $330 = self.head;
                        var $331 = self.tail;
                        var $332 = Nat$from_base$go$(_b$1, $331, (_b$1 * _p$3), (($330 * _p$3) + _res$4));
                        return $332;
                    case 'List.nil':
                        var $333 = _res$4;
                        return $333;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $334 = self.head;
                        var $335 = self.tail;
                        var $336 = List$reverse$go$($335, List$cons$($334, _res$3));
                        return $336;
                    case 'List.nil':
                        var $337 = _res$3;
                        return $337;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);

    function List$reverse$(_xs$2) {
        var $338 = List$reverse$go$(_xs$2, List$nil);
        return $338;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Nat$from_base$(_base$1, _ds$2) {
        var $339 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $339;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $341 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $343 = self.err;
                        var self = $341;
                        switch (self._) {
                            case 'Maybe.some':
                                var $345 = self.value;
                                var $346 = Parser$Reply$error$(Parser$Error$combine$($345, $343));
                                var $344 = $346;
                                break;
                            case 'Maybe.none':
                                var $347 = Parser$Reply$error$($343);
                                var $344 = $347;
                                break;
                        };
                        var $342 = $344;
                        break;
                    case 'Parser.Reply.value':
                        var $348 = self.pst;
                        var $349 = self.val;
                        var self = $348;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $351 = self.err;
                                var $352 = self.nam;
                                var $353 = self.ini;
                                var $354 = self.idx;
                                var $355 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($341, $351), $352, $353, $354, $355);
                                var $356 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $349));
                                var $350 = $356;
                                break;
                        };
                        var $342 = $350;
                        break;
                };
                var $340 = $342;
                break;
        };
        return $340;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$read = a0 => (BigInt(a0));
    const IO$get_time = IO$ask$("get_time", "", (_time$1 => {
        var $357 = IO$end$((BigInt(_time$1)));
        return $357;
    }));

    function Kind$Synth$load$cached$is_loop$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $359 = self.value;
                var self = $359;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $361 = self.stat;
                        var self = $361;
                        switch (self._) {
                            case 'Kind.Status.done':
                                var $363 = self.cached;
                                var $364 = $363;
                                var $362 = $364;
                                break;
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $365 = Bool$false;
                                var $362 = $365;
                                break;
                        };
                        var $360 = $362;
                        break;
                };
                var $358 = $360;
                break;
            case 'Maybe.none':
                var $366 = Bool$false;
                var $358 = $366;
                break;
        };
        return $358;
    };
    const Kind$Synth$load$cached$is_loop = x0 => x1 => Kind$Synth$load$cached$is_loop$(x0, x1);

    function IO$get_file$(_name$1) {
        var $367 = IO$ask$("get_file", _name$1, (_file$2 => {
            var $368 = IO$end$(_file$2);
            return $368;
        }));
        return $367;
    };
    const IO$get_file = x0 => IO$get_file$(x0);

    function String$cons$(_head$1, _tail$2) {
        var $369 = (String.fromCharCode(_head$1) + _tail$2);
        return $369;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $371 = self.slice(0, -1);
                var self = $371;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $373 = self.slice(0, -1);
                        var self = $373;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $375 = self.slice(0, -1);
                                var self = $375;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $377 = self.slice(0, -1);
                                        var $378 = ("0" + Bits$hex$encode$($377));
                                        var $376 = $378;
                                        break;
                                    case 'i':
                                        var $379 = self.slice(0, -1);
                                        var $380 = ("8" + Bits$hex$encode$($379));
                                        var $376 = $380;
                                        break;
                                    case 'e':
                                        var $381 = "0";
                                        var $376 = $381;
                                        break;
                                };
                                var $374 = $376;
                                break;
                            case 'i':
                                var $382 = self.slice(0, -1);
                                var self = $382;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $384 = self.slice(0, -1);
                                        var $385 = ("4" + Bits$hex$encode$($384));
                                        var $383 = $385;
                                        break;
                                    case 'i':
                                        var $386 = self.slice(0, -1);
                                        var $387 = ("c" + Bits$hex$encode$($386));
                                        var $383 = $387;
                                        break;
                                    case 'e':
                                        var $388 = "4";
                                        var $383 = $388;
                                        break;
                                };
                                var $374 = $383;
                                break;
                            case 'e':
                                var $389 = "0";
                                var $374 = $389;
                                break;
                        };
                        var $372 = $374;
                        break;
                    case 'i':
                        var $390 = self.slice(0, -1);
                        var self = $390;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $392 = self.slice(0, -1);
                                var self = $392;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $394 = self.slice(0, -1);
                                        var $395 = ("2" + Bits$hex$encode$($394));
                                        var $393 = $395;
                                        break;
                                    case 'i':
                                        var $396 = self.slice(0, -1);
                                        var $397 = ("a" + Bits$hex$encode$($396));
                                        var $393 = $397;
                                        break;
                                    case 'e':
                                        var $398 = "2";
                                        var $393 = $398;
                                        break;
                                };
                                var $391 = $393;
                                break;
                            case 'i':
                                var $399 = self.slice(0, -1);
                                var self = $399;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $401 = self.slice(0, -1);
                                        var $402 = ("6" + Bits$hex$encode$($401));
                                        var $400 = $402;
                                        break;
                                    case 'i':
                                        var $403 = self.slice(0, -1);
                                        var $404 = ("e" + Bits$hex$encode$($403));
                                        var $400 = $404;
                                        break;
                                    case 'e':
                                        var $405 = "6";
                                        var $400 = $405;
                                        break;
                                };
                                var $391 = $400;
                                break;
                            case 'e':
                                var $406 = "2";
                                var $391 = $406;
                                break;
                        };
                        var $372 = $391;
                        break;
                    case 'e':
                        var $407 = "0";
                        var $372 = $407;
                        break;
                };
                var $370 = $372;
                break;
            case 'i':
                var $408 = self.slice(0, -1);
                var self = $408;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $410 = self.slice(0, -1);
                        var self = $410;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $412 = self.slice(0, -1);
                                var self = $412;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $414 = self.slice(0, -1);
                                        var $415 = ("1" + Bits$hex$encode$($414));
                                        var $413 = $415;
                                        break;
                                    case 'i':
                                        var $416 = self.slice(0, -1);
                                        var $417 = ("9" + Bits$hex$encode$($416));
                                        var $413 = $417;
                                        break;
                                    case 'e':
                                        var $418 = "1";
                                        var $413 = $418;
                                        break;
                                };
                                var $411 = $413;
                                break;
                            case 'i':
                                var $419 = self.slice(0, -1);
                                var self = $419;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $421 = self.slice(0, -1);
                                        var $422 = ("5" + Bits$hex$encode$($421));
                                        var $420 = $422;
                                        break;
                                    case 'i':
                                        var $423 = self.slice(0, -1);
                                        var $424 = ("d" + Bits$hex$encode$($423));
                                        var $420 = $424;
                                        break;
                                    case 'e':
                                        var $425 = "5";
                                        var $420 = $425;
                                        break;
                                };
                                var $411 = $420;
                                break;
                            case 'e':
                                var $426 = "1";
                                var $411 = $426;
                                break;
                        };
                        var $409 = $411;
                        break;
                    case 'i':
                        var $427 = self.slice(0, -1);
                        var self = $427;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $429 = self.slice(0, -1);
                                var self = $429;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $431 = self.slice(0, -1);
                                        var $432 = ("3" + Bits$hex$encode$($431));
                                        var $430 = $432;
                                        break;
                                    case 'i':
                                        var $433 = self.slice(0, -1);
                                        var $434 = ("b" + Bits$hex$encode$($433));
                                        var $430 = $434;
                                        break;
                                    case 'e':
                                        var $435 = "3";
                                        var $430 = $435;
                                        break;
                                };
                                var $428 = $430;
                                break;
                            case 'i':
                                var $436 = self.slice(0, -1);
                                var self = $436;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $438 = self.slice(0, -1);
                                        var $439 = ("7" + Bits$hex$encode$($438));
                                        var $437 = $439;
                                        break;
                                    case 'i':
                                        var $440 = self.slice(0, -1);
                                        var $441 = ("f" + Bits$hex$encode$($440));
                                        var $437 = $441;
                                        break;
                                    case 'e':
                                        var $442 = "7";
                                        var $437 = $442;
                                        break;
                                };
                                var $428 = $437;
                                break;
                            case 'e':
                                var $443 = "3";
                                var $428 = $443;
                                break;
                        };
                        var $409 = $428;
                        break;
                    case 'e':
                        var $444 = "1";
                        var $409 = $444;
                        break;
                };
                var $370 = $409;
                break;
            case 'e':
                var $445 = "";
                var $370 = $445;
                break;
        };
        return $370;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);

    function Kind$Synth$load$cached$name$(_name$1) {
        var $446 = (".cache/" + Bits$hex$encode$((kind_name_to_bits(_name$1))));
        return $446;
    };
    const Kind$Synth$load$cached$name = x0 => Kind$Synth$load$cached$name$(x0);

    function Kind$Synth$load$cached$get_file$(_name$1) {
        var $447 = IO$get_file$(Kind$Synth$load$cached$name$(_name$1));
        return $447;
    };
    const Kind$Synth$load$cached$get_file = x0 => Kind$Synth$load$cached$get_file$(x0);
    const Bool$not = a0 => (!a0);

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $449 = Bool$true;
            var $448 = $449;
        } else {
            var $450 = self.charCodeAt(0);
            var $451 = self.slice(1);
            var $452 = Bool$false;
            var $448 = $452;
        };
        return $448;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function IO$get_file_mtime$(_name$1) {
        var $453 = IO$ask$("get_file_mtime", _name$1, (_file$2 => {
            var $454 = IO$end$(_file$2);
            return $454;
        }));
        return $453;
    };
    const IO$get_file_mtime = x0 => IO$get_file_mtime$(x0);
    const Bool$and = a0 => a1 => (a0 && a1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Pair$new$(_fst$3, _snd$4) {
        var $455 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $455;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $457 = self.value;
                var $458 = _f$4($457);
                var $456 = $458;
                break;
            case 'Maybe.none':
                var $459 = Maybe$none;
                var $456 = $459;
                break;
        };
        return $456;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $460 = _new$2(Maybe$bind)(Maybe$some);
        return $460;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function Pair$(_A$1, _B$2) {
        var $461 = null;
        return $461;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);
    const Unit$new = null;
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kind$Core$read$spaces$(_code$1) {
        var Kind$Core$read$spaces$ = (_code$1) => ({
            ctr: 'TCO',
            arg: [_code$1]
        });
        var Kind$Core$read$spaces = _code$1 => Kind$Core$read$spaces$(_code$1);
        var arg = [_code$1];
        while (true) {
            let [_code$1] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $462 = Pair$new$(_code$1, Unit$new);
                    return $462;
                } else {
                    var $463 = self.charCodeAt(0);
                    var $464 = self.slice(1);
                    var _is_space$4 = (($463 === 32) || (($463 === 10) || (($463 === 13) || (($463 === 9) || (($463 === 11) || (($463 === 12) || Bool$false))))));
                    var self = _is_space$4;
                    if (self) {
                        var $466 = Kind$Core$read$spaces$($464);
                        var $465 = $466;
                    } else {
                        var $467 = Pair$new$(_code$1, Unit$new);
                        var $465 = $467;
                    };
                    return $465;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$spaces = x0 => Kind$Core$read$spaces$(x0);

    function Kind$Term$ref$(_name$1) {
        var $468 = ({
            _: 'Kind.Term.ref',
            'name': _name$1
        });
        return $468;
    };
    const Kind$Term$ref = x0 => Kind$Term$ref$(x0);

    function Char$eql$(_a$1, _b$2) {
        var $469 = (_a$1 === _b$2);
        return $469;
    };
    const Char$eql = x0 => x1 => Char$eql$(x0, x1);
    const Kind$Term$typ = ({
        _: 'Kind.Term.typ'
    });

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $471 = Bool$false;
                var $470 = $471;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $472 = Bool$true;
                var $470 = $472;
                break;
        };
        return $470;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $473 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $473;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);
    const U16$gte = a0 => a1 => (a0 >= a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $475 = Bool$true;
                var $474 = $475;
                break;
            case 'Cmp.gtn':
                var $476 = Bool$false;
                var $474 = $476;
                break;
        };
        return $474;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $477 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $477;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function Kind$Core$read$is_name$(_chr$1) {
        var $478 = (((_chr$1 >= 46) && (_chr$1 <= 47)) || (((_chr$1 >= 48) && (_chr$1 < 58)) || (((_chr$1 >= 65) && (_chr$1 < 91)) || (((_chr$1 >= 95) && (_chr$1 < 96)) || (((_chr$1 >= 97) && (_chr$1 < 123)) || Bool$false)))));
        return $478;
    };
    const Kind$Core$read$is_name = x0 => Kind$Core$read$is_name$(x0);

    function Kind$Core$read$name$(_code$1) {
        var self = _code$1;
        if (self.length === 0) {
            var $480 = Pair$new$(_code$1, "");
            var $479 = $480;
        } else {
            var $481 = self.charCodeAt(0);
            var $482 = self.slice(1);
            var self = Kind$Core$read$is_name$($481);
            if (self) {
                var self = Kind$Core$read$name$($482);
                switch (self._) {
                    case 'Pair.new':
                        var $485 = self.fst;
                        var $486 = self.snd;
                        var $487 = Pair$new$($485, String$cons$($481, $486));
                        var $484 = $487;
                        break;
                };
                var $483 = $484;
            } else {
                var $488 = Pair$new$(_code$1, "");
                var $483 = $488;
            };
            var $479 = $483;
        };
        return $479;
    };
    const Kind$Core$read$name = x0 => Kind$Core$read$name$(x0);

    function Kind$Core$read$char$(_code$1, _chr$2) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $490 = self.fst;
                var self = $490;
                if (self.length === 0) {
                    var $492 = Pair$new$("", Unit$new);
                    var $491 = $492;
                } else {
                    var $493 = self.charCodeAt(0);
                    var $494 = self.slice(1);
                    var self = ($493 === _chr$2);
                    if (self) {
                        var $496 = Pair$new$($494, Unit$new);
                        var $495 = $496;
                    } else {
                        var $497 = Pair$new$("", Unit$new);
                        var $495 = $497;
                    };
                    var $491 = $495;
                };
                var $489 = $491;
                break;
        };
        return $489;
    };
    const Kind$Core$read$char = x0 => x1 => Kind$Core$read$char$(x0, x1);

    function Kind$Term$all$(_eras$1, _self$2, _name$3, _xtyp$4, _body$5) {
        var $498 = ({
            _: 'Kind.Term.all',
            'eras': _eras$1,
            'self': _self$2,
            'name': _name$3,
            'xtyp': _xtyp$4,
            'body': _body$5
        });
        return $498;
    };
    const Kind$Term$all = x0 => x1 => x2 => x3 => x4 => Kind$Term$all$(x0, x1, x2, x3, x4);

    function Kind$Term$lam$(_name$1, _body$2) {
        var $499 = ({
            _: 'Kind.Term.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $499;
    };
    const Kind$Term$lam = x0 => x1 => Kind$Term$lam$(x0, x1);

    function Kind$Term$app$(_func$1, _argm$2) {
        var $500 = ({
            _: 'Kind.Term.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $500;
    };
    const Kind$Term$app = x0 => x1 => Kind$Term$app$(x0, x1);

    function Kind$Term$let$(_name$1, _expr$2, _body$3) {
        var $501 = ({
            _: 'Kind.Term.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $501;
    };
    const Kind$Term$let = x0 => x1 => x2 => Kind$Term$let$(x0, x1, x2);

    function Kind$Term$def$(_name$1, _expr$2, _body$3) {
        var $502 = ({
            _: 'Kind.Term.def',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $502;
    };
    const Kind$Term$def = x0 => x1 => x2 => Kind$Term$def$(x0, x1, x2);

    function Kind$Term$ann$(_done$1, _term$2, _type$3) {
        var $503 = ({
            _: 'Kind.Term.ann',
            'done': _done$1,
            'term': _term$2,
            'type': _type$3
        });
        return $503;
    };
    const Kind$Term$ann = x0 => x1 => x2 => Kind$Term$ann$(x0, x1, x2);

    function String$starts_with$(_xs$1, _match$2) {
        var String$starts_with$ = (_xs$1, _match$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _match$2]
        });
        var String$starts_with = _xs$1 => _match$2 => String$starts_with$(_xs$1, _match$2);
        var arg = [_xs$1, _match$2];
        while (true) {
            let [_xs$1, _match$2] = arg;
            var R = (() => {
                var self = _match$2;
                if (self.length === 0) {
                    var $504 = Bool$true;
                    return $504;
                } else {
                    var $505 = self.charCodeAt(0);
                    var $506 = self.slice(1);
                    var self = _xs$1;
                    if (self.length === 0) {
                        var $508 = Bool$false;
                        var $507 = $508;
                    } else {
                        var $509 = self.charCodeAt(0);
                        var $510 = self.slice(1);
                        var self = Char$eql$($505, $509);
                        if (self) {
                            var $512 = String$starts_with$($510, $506);
                            var $511 = $512;
                        } else {
                            var $513 = Bool$false;
                            var $511 = $513;
                        };
                        var $507 = $511;
                    };
                    return $507;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$starts_with = x0 => x1 => String$starts_with$(x0, x1);
    const String$nil = '';

    function String$drop$(_n$1, _xs$2) {
        var String$drop$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var String$drop = _n$1 => _xs$2 => String$drop$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $514 = _xs$2;
                    return $514;
                } else {
                    var $515 = (self - 1n);
                    var self = _xs$2;
                    if (self.length === 0) {
                        var $517 = String$nil;
                        var $516 = $517;
                    } else {
                        var $518 = self.charCodeAt(0);
                        var $519 = self.slice(1);
                        var $520 = String$drop$($515, $519);
                        var $516 = $520;
                    };
                    return $516;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop = x0 => x1 => String$drop$(x0, x1);

    function Char$is_hex$(_chr$1) {
        var $521 = (((_chr$1 >= 48) && (_chr$1 <= 57)) || (((_chr$1 >= 97) && (_chr$1 <= 102)) || (((_chr$1 >= 65) && (_chr$1 <= 70)) || Bool$false)));
        return $521;
    };
    const Char$is_hex = x0 => Char$is_hex$(x0);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $523 = self.pred;
                var $524 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $526 = self.pred;
                            var $527 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $529 = Word$i$(Word$adder$(_a$pred$10, $526, Bool$false));
                                    var $528 = $529;
                                } else {
                                    var $530 = Word$o$(Word$adder$(_a$pred$10, $526, Bool$false));
                                    var $528 = $530;
                                };
                                return $528;
                            });
                            var $525 = $527;
                            break;
                        case 'Word.i':
                            var $531 = self.pred;
                            var $532 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $534 = Word$o$(Word$adder$(_a$pred$10, $531, Bool$true));
                                    var $533 = $534;
                                } else {
                                    var $535 = Word$i$(Word$adder$(_a$pred$10, $531, Bool$false));
                                    var $533 = $535;
                                };
                                return $533;
                            });
                            var $525 = $532;
                            break;
                        case 'Word.e':
                            var $536 = (_a$pred$8 => {
                                var $537 = Word$e;
                                return $537;
                            });
                            var $525 = $536;
                            break;
                    };
                    var $525 = $525($523);
                    return $525;
                });
                var $522 = $524;
                break;
            case 'Word.i':
                var $538 = self.pred;
                var $539 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $541 = self.pred;
                            var $542 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $544 = Word$o$(Word$adder$(_a$pred$10, $541, Bool$true));
                                    var $543 = $544;
                                } else {
                                    var $545 = Word$i$(Word$adder$(_a$pred$10, $541, Bool$false));
                                    var $543 = $545;
                                };
                                return $543;
                            });
                            var $540 = $542;
                            break;
                        case 'Word.i':
                            var $546 = self.pred;
                            var $547 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $549 = Word$i$(Word$adder$(_a$pred$10, $546, Bool$true));
                                    var $548 = $549;
                                } else {
                                    var $550 = Word$o$(Word$adder$(_a$pred$10, $546, Bool$true));
                                    var $548 = $550;
                                };
                                return $548;
                            });
                            var $540 = $547;
                            break;
                        case 'Word.e':
                            var $551 = (_a$pred$8 => {
                                var $552 = Word$e;
                                return $552;
                            });
                            var $540 = $551;
                            break;
                    };
                    var $540 = $540($538);
                    return $540;
                });
                var $522 = $539;
                break;
            case 'Word.e':
                var $553 = (_b$5 => {
                    var $554 = Word$e;
                    return $554;
                });
                var $522 = $553;
                break;
        };
        var $522 = $522(_b$3);
        return $522;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $555 = Word$adder$(_a$2, _b$3, Bool$false);
        return $555;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $557 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $559 = Word$i$(Word$shift_left$one$go$($557, Bool$false));
                    var $558 = $559;
                } else {
                    var $560 = Word$o$(Word$shift_left$one$go$($557, Bool$false));
                    var $558 = $560;
                };
                var $556 = $558;
                break;
            case 'Word.i':
                var $561 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $563 = Word$i$(Word$shift_left$one$go$($561, Bool$true));
                    var $562 = $563;
                } else {
                    var $564 = Word$o$(Word$shift_left$one$go$($561, Bool$true));
                    var $562 = $564;
                };
                var $556 = $562;
                break;
            case 'Word.e':
                var $565 = Word$e;
                var $556 = $565;
                break;
        };
        return $556;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $567 = self.pred;
                var $568 = Word$o$(Word$shift_left$one$go$($567, Bool$false));
                var $566 = $568;
                break;
            case 'Word.i':
                var $569 = self.pred;
                var $570 = Word$o$(Word$shift_left$one$go$($569, Bool$true));
                var $566 = $570;
                break;
            case 'Word.e':
                var $571 = Word$e;
                var $566 = $571;
                break;
        };
        return $566;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_n$2, _value$3) {
        var Word$shift_left$ = (_n$2, _value$3) => ({
            ctr: 'TCO',
            arg: [_n$2, _value$3]
        });
        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);
        var arg = [_n$2, _value$3];
        while (true) {
            let [_n$2, _value$3] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $572 = _value$3;
                    return $572;
                } else {
                    var $573 = (self - 1n);
                    var $574 = Word$shift_left$($573, Word$shift_left$one$(_value$3));
                    return $574;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $575 = self.pred;
                        var $576 = Word$mul$go$($575, Word$shift_left$(1n, _b$4), _acc$5);
                        return $576;
                    case 'Word.i':
                        var $577 = self.pred;
                        var $578 = Word$mul$go$($577, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));
                        return $578;
                    case 'Word.e':
                        var $579 = _acc$5;
                        return $579;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $581 = self.pred;
                var $582 = Word$o$(Word$to_zero$($581));
                var $580 = $582;
                break;
            case 'Word.i':
                var $583 = self.pred;
                var $584 = Word$o$(Word$to_zero$($583));
                var $580 = $584;
                break;
            case 'Word.e':
                var $585 = Word$e;
                var $580 = $585;
                break;
        };
        return $580;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $586 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $586;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U16$mul = a0 => a1 => ((a0 * a1) & 0xFFFF);
    const U16$inc = a0 => ((a0 + 1) & 0xFFFF);

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $588 = self.pred;
                var $589 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $591 = self.pred;
                            var $592 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $594 = Word$i$(Word$subber$(_a$pred$10, $591, Bool$true));
                                    var $593 = $594;
                                } else {
                                    var $595 = Word$o$(Word$subber$(_a$pred$10, $591, Bool$false));
                                    var $593 = $595;
                                };
                                return $593;
                            });
                            var $590 = $592;
                            break;
                        case 'Word.i':
                            var $596 = self.pred;
                            var $597 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $599 = Word$o$(Word$subber$(_a$pred$10, $596, Bool$true));
                                    var $598 = $599;
                                } else {
                                    var $600 = Word$i$(Word$subber$(_a$pred$10, $596, Bool$true));
                                    var $598 = $600;
                                };
                                return $598;
                            });
                            var $590 = $597;
                            break;
                        case 'Word.e':
                            var $601 = (_a$pred$8 => {
                                var $602 = Word$e;
                                return $602;
                            });
                            var $590 = $601;
                            break;
                    };
                    var $590 = $590($588);
                    return $590;
                });
                var $587 = $589;
                break;
            case 'Word.i':
                var $603 = self.pred;
                var $604 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $606 = self.pred;
                            var $607 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $609 = Word$o$(Word$subber$(_a$pred$10, $606, Bool$false));
                                    var $608 = $609;
                                } else {
                                    var $610 = Word$i$(Word$subber$(_a$pred$10, $606, Bool$false));
                                    var $608 = $610;
                                };
                                return $608;
                            });
                            var $605 = $607;
                            break;
                        case 'Word.i':
                            var $611 = self.pred;
                            var $612 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $614 = Word$i$(Word$subber$(_a$pred$10, $611, Bool$true));
                                    var $613 = $614;
                                } else {
                                    var $615 = Word$o$(Word$subber$(_a$pred$10, $611, Bool$false));
                                    var $613 = $615;
                                };
                                return $613;
                            });
                            var $605 = $612;
                            break;
                        case 'Word.e':
                            var $616 = (_a$pred$8 => {
                                var $617 = Word$e;
                                return $617;
                            });
                            var $605 = $616;
                            break;
                    };
                    var $605 = $605($603);
                    return $605;
                });
                var $587 = $604;
                break;
            case 'Word.e':
                var $618 = (_b$5 => {
                    var $619 = Word$e;
                    return $619;
                });
                var $587 = $618;
                break;
        };
        var $587 = $587(_b$3);
        return $587;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $620 = Word$subber$(_a$2, _b$3, Bool$false);
        return $620;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);
    const U16$zero = U16$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))));

    function Char$hex_value16$(_chr$1) {
        var self = ((_chr$1 >= 48) && (_chr$1 <= 57));
        if (self) {
            var $622 = ((_chr$1 - 48) & 0xFFFF);
            var $621 = $622;
        } else {
            var self = ((_chr$1 >= 97) && (_chr$1 <= 102));
            if (self) {
                var $624 = (_x0$2 => {
                    var $625 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                    return $625;
                })(((_chr$1 - 97) & 0xFFFF));
                var $623 = $624;
            } else {
                var self = ((_chr$1 >= 65) && (_chr$1 <= 70));
                if (self) {
                    var $627 = (_x0$2 => {
                        var $628 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                        return $628;
                    })(((_chr$1 - 65) & 0xFFFF));
                    var $626 = $627;
                } else {
                    var $629 = U16$zero;
                    var $626 = $629;
                };
                var $623 = $626;
            };
            var $621 = $623;
        };
        return $621;
    };
    const Char$hex_value16 = x0 => Char$hex_value16$(x0);

    function Kind$Core$read$u16$(_code$1, _u16$2) {
        var Kind$Core$read$u16$ = (_code$1, _u16$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _u16$2]
        });
        var Kind$Core$read$u16 = _code$1 => _u16$2 => Kind$Core$read$u16$(_code$1, _u16$2);
        var arg = [_code$1, _u16$2];
        while (true) {
            let [_code$1, _u16$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $630 = Pair$new$(_code$1, _u16$2);
                    return $630;
                } else {
                    var $631 = self.charCodeAt(0);
                    var $632 = self.slice(1);
                    var self = Char$is_hex$($631);
                    if (self) {
                        var _u16$5 = ((((_u16$2 * 16) & 0xFFFF) + Char$hex_value16$($631)) & 0xFFFF);
                        var $634 = Kind$Core$read$u16$($632, _u16$5);
                        var $633 = $634;
                    } else {
                        var $635 = Pair$new$(_code$1, _u16$2);
                        var $633 = $635;
                    };
                    return $633;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$u16 = x0 => x1 => Kind$Core$read$u16$(x0, x1);

    function Kind$Core$read$chrx$(_code$1) {
        var self = String$starts_with$(_code$1, "\\u{");
        if (self) {
            var _code$2 = String$drop$(3n, _code$1);
            var self = Kind$Core$read$u16$(_code$2, 0);
            switch (self._) {
                case 'Pair.new':
                    var $638 = self.fst;
                    var $639 = self.snd;
                    var self = String$starts_with$($638, "}");
                    if (self) {
                        var $641 = Pair$new$(String$drop$(1n, $638), $639);
                        var $640 = $641;
                    } else {
                        var $642 = Pair$new$("", 63);
                        var $640 = $642;
                    };
                    var $637 = $640;
                    break;
            };
            var $636 = $637;
        } else {
            var self = String$starts_with$(_code$1, "\\\'");
            if (self) {
                var $644 = Pair$new$(String$drop$(2n, _code$1), 39);
                var $643 = $644;
            } else {
                var self = String$starts_with$(_code$1, "\\\"");
                if (self) {
                    var $646 = Pair$new$(String$drop$(2n, _code$1), 34);
                    var $645 = $646;
                } else {
                    var self = String$starts_with$(_code$1, "\\\\");
                    if (self) {
                        var $648 = Pair$new$(String$drop$(2n, _code$1), 92);
                        var $647 = $648;
                    } else {
                        var self = _code$1;
                        if (self.length === 0) {
                            var $650 = Pair$new$("", 63);
                            var $649 = $650;
                        } else {
                            var $651 = self.charCodeAt(0);
                            var $652 = self.slice(1);
                            var $653 = Pair$new$($652, $651);
                            var $649 = $653;
                        };
                        var $647 = $649;
                    };
                    var $645 = $647;
                };
                var $643 = $645;
            };
            var $636 = $643;
        };
        return $636;
    };
    const Kind$Core$read$chrx = x0 => Kind$Core$read$chrx$(x0);

    function Kind$Term$chr$(_chrx$1) {
        var $654 = ({
            _: 'Kind.Term.chr',
            'chrx': _chrx$1
        });
        return $654;
    };
    const Kind$Term$chr = x0 => Kind$Term$chr$(x0);

    function Kind$Core$read$strx$(_code$1) {
        var self = String$starts_with$(_code$1, "\"");
        if (self) {
            var $656 = Pair$new$(_code$1, "");
            var $655 = $656;
        } else {
            var self = Kind$Core$read$chrx$(_code$1);
            switch (self._) {
                case 'Pair.new':
                    var $658 = self.fst;
                    var $659 = self.snd;
                    var self = Kind$Core$read$strx$($658);
                    switch (self._) {
                        case 'Pair.new':
                            var $661 = self.fst;
                            var $662 = self.snd;
                            var $663 = Pair$new$($661, String$cons$($659, $662));
                            var $660 = $663;
                            break;
                    };
                    var $657 = $660;
                    break;
            };
            var $655 = $657;
        };
        return $655;
    };
    const Kind$Core$read$strx = x0 => Kind$Core$read$strx$(x0);

    function Kind$Term$str$(_strx$1) {
        var $664 = ({
            _: 'Kind.Term.str',
            'strx': _strx$1
        });
        return $664;
    };
    const Kind$Term$str = x0 => Kind$Term$str$(x0);

    function Char$dec_value$(_chr$1) {
        var self = (_chr$1 === 48);
        if (self) {
            var $666 = 0n;
            var $665 = $666;
        } else {
            var self = (_chr$1 === 49);
            if (self) {
                var $668 = 1n;
                var $667 = $668;
            } else {
                var self = (_chr$1 === 50);
                if (self) {
                    var $670 = 2n;
                    var $669 = $670;
                } else {
                    var self = (_chr$1 === 51);
                    if (self) {
                        var $672 = 3n;
                        var $671 = $672;
                    } else {
                        var self = (_chr$1 === 52);
                        if (self) {
                            var $674 = 4n;
                            var $673 = $674;
                        } else {
                            var self = (_chr$1 === 53);
                            if (self) {
                                var $676 = 5n;
                                var $675 = $676;
                            } else {
                                var self = (_chr$1 === 54);
                                if (self) {
                                    var $678 = 6n;
                                    var $677 = $678;
                                } else {
                                    var self = (_chr$1 === 55);
                                    if (self) {
                                        var $680 = 7n;
                                        var $679 = $680;
                                    } else {
                                        var self = (_chr$1 === 56);
                                        if (self) {
                                            var $682 = 8n;
                                            var $681 = $682;
                                        } else {
                                            var self = (_chr$1 === 57);
                                            if (self) {
                                                var $684 = 9n;
                                                var $683 = $684;
                                            } else {
                                                var $685 = 0n;
                                                var $683 = $685;
                                            };
                                            var $681 = $683;
                                        };
                                        var $679 = $681;
                                    };
                                    var $677 = $679;
                                };
                                var $675 = $677;
                            };
                            var $673 = $675;
                        };
                        var $671 = $673;
                    };
                    var $669 = $671;
                };
                var $667 = $669;
            };
            var $665 = $667;
        };
        return $665;
    };
    const Char$dec_value = x0 => Char$dec_value$(x0);

    function Kind$Core$read$natx$(_code$1, _nat$2) {
        var Kind$Core$read$natx$ = (_code$1, _nat$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _nat$2]
        });
        var Kind$Core$read$natx = _code$1 => _nat$2 => Kind$Core$read$natx$(_code$1, _nat$2);
        var arg = [_code$1, _nat$2];
        while (true) {
            let [_code$1, _nat$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $686 = Pair$new$(_code$1, _nat$2);
                    return $686;
                } else {
                    var $687 = self.charCodeAt(0);
                    var $688 = self.slice(1);
                    var self = Char$is_hex$($687);
                    if (self) {
                        var _nat$5 = ((_nat$2 * 10n) + Char$dec_value$($687));
                        var $690 = Kind$Core$read$natx$($688, _nat$5);
                        var $689 = $690;
                    } else {
                        var $691 = Pair$new$(_code$1, _nat$2);
                        var $689 = $691;
                    };
                    return $689;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$natx = x0 => x1 => Kind$Core$read$natx$(x0, x1);

    function Kind$Term$nat$(_natx$1) {
        var $692 = ({
            _: 'Kind.Term.nat',
            'natx': _natx$1
        });
        return $692;
    };
    const Kind$Term$nat = x0 => Kind$Term$nat$(x0);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $694 = self.fst;
                var $695 = $694;
                var $693 = $695;
                break;
        };
        return $693;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $697 = Nat$zero;
            var $696 = $697;
        } else {
            var $698 = (self - 1n);
            var $699 = $698;
            var $696 = $699;
        };
        return $696;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5) {
        var Kind$Core$read$find$ = (_list$2, _cond$3, _indx$4, _skip$5) => ({
            ctr: 'TCO',
            arg: [_list$2, _cond$3, _indx$4, _skip$5]
        });
        var Kind$Core$read$find = _list$2 => _cond$3 => _indx$4 => _skip$5 => Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5);
        var arg = [_list$2, _cond$3, _indx$4, _skip$5];
        while (true) {
            let [_list$2, _cond$3, _indx$4, _skip$5] = arg;
            var R = (() => {
                var self = _list$2;
                switch (self._) {
                    case 'List.cons':
                        var $700 = self.head;
                        var $701 = self.tail;
                        var self = _cond$3($700)(_indx$4);
                        if (self) {
                            var self = (_skip$5 === 0n);
                            if (self) {
                                var $704 = Maybe$some$(Pair$new$($700, _indx$4));
                                var $703 = $704;
                            } else {
                                var $705 = Kind$Core$read$find$($701, _cond$3, Nat$succ$(_indx$4), Nat$pred$(_skip$5));
                                var $703 = $705;
                            };
                            var $702 = $703;
                        } else {
                            var $706 = Kind$Core$read$find$($701, _cond$3, Nat$succ$(_indx$4), _skip$5);
                            var $702 = $706;
                        };
                        return $702;
                    case 'List.nil':
                        var $707 = Maybe$none;
                        return $707;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$find = x0 => x1 => x2 => x3 => Kind$Core$read$find$(x0, x1, x2, x3);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $709 = self.snd;
                var $710 = $709;
                var $708 = $710;
                break;
        };
        return $708;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function Kind$Core$read$term$(_code$1) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $712 = self.fst;
                var self = $712;
                if (self.length === 0) {
                    var $714 = Pair$new$("", (_ctx$4 => {
                        var $715 = Kind$Term$ref$("error");
                        return $715;
                    }));
                    var $713 = $714;
                } else {
                    var $716 = self.charCodeAt(0);
                    var $717 = self.slice(1);
                    var _head$6 = $716;
                    var _code$7 = $717;
                    var self = Char$eql$(_head$6, 42);
                    if (self) {
                        var $719 = Pair$new$(_code$7, (_ctx$8 => {
                            var $720 = Kind$Term$typ;
                            return $720;
                        }));
                        var $718 = $719;
                    } else {
                        var self = (_head$6 === 64);
                        if (self) {
                            var self = Kind$Core$read$name$(_code$7);
                            switch (self._) {
                                case 'Pair.new':
                                    var $723 = self.fst;
                                    var $724 = self.snd;
                                    var self = Kind$Core$read$char$($723, 40);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $726 = self.fst;
                                            var self = Kind$Core$read$name$($726);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $728 = self.fst;
                                                    var $729 = self.snd;
                                                    var self = Kind$Core$read$char$($728, 58);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $731 = self.fst;
                                                            var self = Kind$Core$read$term$($731);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $733 = self.fst;
                                                                    var $734 = self.snd;
                                                                    var self = Kind$Core$read$char$($733, 41);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $736 = self.fst;
                                                                            var self = Kind$Core$read$term$($736);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $738 = self.fst;
                                                                                    var $739 = self.snd;
                                                                                    var $740 = Pair$new$($738, (_ctx$22 => {
                                                                                        var $741 = Kind$Term$all$(Bool$false, $724, $729, $734(_ctx$22), (_s$23 => _x$24 => {
                                                                                            var $742 = $739(List$cons$(Pair$new$($729, _x$24), List$cons$(Pair$new$($724, _s$23), _ctx$22)));
                                                                                            return $742;
                                                                                        }));
                                                                                        return $741;
                                                                                    }));
                                                                                    var $737 = $740;
                                                                                    break;
                                                                            };
                                                                            var $735 = $737;
                                                                            break;
                                                                    };
                                                                    var $732 = $735;
                                                                    break;
                                                            };
                                                            var $730 = $732;
                                                            break;
                                                    };
                                                    var $727 = $730;
                                                    break;
                                            };
                                            var $725 = $727;
                                            break;
                                    };
                                    var $722 = $725;
                                    break;
                            };
                            var $721 = $722;
                        } else {
                            var self = (_head$6 === 37);
                            if (self) {
                                var self = Kind$Core$read$name$(_code$7);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $745 = self.fst;
                                        var $746 = self.snd;
                                        var self = Kind$Core$read$char$($745, 40);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $748 = self.fst;
                                                var self = Kind$Core$read$name$($748);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $750 = self.fst;
                                                        var $751 = self.snd;
                                                        var self = Kind$Core$read$char$($750, 58);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $753 = self.fst;
                                                                var self = Kind$Core$read$term$($753);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $755 = self.fst;
                                                                        var $756 = self.snd;
                                                                        var self = Kind$Core$read$char$($755, 41);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $758 = self.fst;
                                                                                var self = Kind$Core$read$term$($758);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $760 = self.fst;
                                                                                        var $761 = self.snd;
                                                                                        var $762 = Pair$new$($760, (_ctx$22 => {
                                                                                            var $763 = Kind$Term$all$(Bool$true, $746, $751, $756(_ctx$22), (_s$23 => _x$24 => {
                                                                                                var $764 = $761(List$cons$(Pair$new$($751, _x$24), List$cons$(Pair$new$($746, _s$23), _ctx$22)));
                                                                                                return $764;
                                                                                            }));
                                                                                            return $763;
                                                                                        }));
                                                                                        var $759 = $762;
                                                                                        break;
                                                                                };
                                                                                var $757 = $759;
                                                                                break;
                                                                        };
                                                                        var $754 = $757;
                                                                        break;
                                                                };
                                                                var $752 = $754;
                                                                break;
                                                        };
                                                        var $749 = $752;
                                                        break;
                                                };
                                                var $747 = $749;
                                                break;
                                        };
                                        var $744 = $747;
                                        break;
                                };
                                var $743 = $744;
                            } else {
                                var self = (_head$6 === 35);
                                if (self) {
                                    var self = Kind$Core$read$name$(_code$7);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $767 = self.fst;
                                            var $768 = self.snd;
                                            var self = Kind$Core$read$term$($767);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $770 = self.fst;
                                                    var $771 = self.snd;
                                                    var $772 = Pair$new$($770, (_ctx$12 => {
                                                        var $773 = Kind$Term$lam$($768, (_x$13 => {
                                                            var $774 = $771(List$cons$(Pair$new$($768, _x$13), _ctx$12));
                                                            return $774;
                                                        }));
                                                        return $773;
                                                    }));
                                                    var $769 = $772;
                                                    break;
                                            };
                                            var $766 = $769;
                                            break;
                                    };
                                    var $765 = $766;
                                } else {
                                    var self = (_head$6 === 40);
                                    if (self) {
                                        var self = Kind$Core$read$term$(_code$7);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $777 = self.fst;
                                                var $778 = self.snd;
                                                var self = Kind$Core$read$term$($777);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $780 = self.fst;
                                                        var $781 = self.snd;
                                                        var self = Kind$Core$read$char$($780, 41);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $783 = self.fst;
                                                                var $784 = Pair$new$($783, (_ctx$14 => {
                                                                    var $785 = Kind$Term$app$($778(_ctx$14), $781(_ctx$14));
                                                                    return $785;
                                                                }));
                                                                var $782 = $784;
                                                                break;
                                                        };
                                                        var $779 = $782;
                                                        break;
                                                };
                                                var $776 = $779;
                                                break;
                                        };
                                        var $775 = $776;
                                    } else {
                                        var self = (_head$6 === 33);
                                        if (self) {
                                            var self = Kind$Core$read$name$(_code$7);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $788 = self.fst;
                                                    var $789 = self.snd;
                                                    var self = Kind$Core$read$char$($788, 61);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $791 = self.fst;
                                                            var self = Kind$Core$read$term$($791);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $793 = self.fst;
                                                                    var $794 = self.snd;
                                                                    var self = Kind$Core$read$char$($793, 59);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $796 = self.fst;
                                                                            var self = Kind$Core$read$term$($796);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $798 = self.fst;
                                                                                    var $799 = self.snd;
                                                                                    var $800 = Pair$new$($798, (_ctx$18 => {
                                                                                        var $801 = Kind$Term$let$($789, $794(_ctx$18), (_x$19 => {
                                                                                            var $802 = $799(List$cons$(Pair$new$($789, _x$19), _ctx$18));
                                                                                            return $802;
                                                                                        }));
                                                                                        return $801;
                                                                                    }));
                                                                                    var $797 = $800;
                                                                                    break;
                                                                            };
                                                                            var $795 = $797;
                                                                            break;
                                                                    };
                                                                    var $792 = $795;
                                                                    break;
                                                            };
                                                            var $790 = $792;
                                                            break;
                                                    };
                                                    var $787 = $790;
                                                    break;
                                            };
                                            var $786 = $787;
                                        } else {
                                            var self = (_head$6 === 36);
                                            if (self) {
                                                var self = Kind$Core$read$name$(_code$7);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $805 = self.fst;
                                                        var $806 = self.snd;
                                                        var self = Kind$Core$read$char$($805, 61);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $808 = self.fst;
                                                                var self = Kind$Core$read$term$($808);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $810 = self.fst;
                                                                        var $811 = self.snd;
                                                                        var self = Kind$Core$read$char$($810, 59);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $813 = self.fst;
                                                                                var self = Kind$Core$read$term$($813);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $815 = self.fst;
                                                                                        var $816 = self.snd;
                                                                                        var $817 = Pair$new$($815, (_ctx$18 => {
                                                                                            var $818 = Kind$Term$def$($806, $811(_ctx$18), (_x$19 => {
                                                                                                var $819 = $816(List$cons$(Pair$new$($806, _x$19), _ctx$18));
                                                                                                return $819;
                                                                                            }));
                                                                                            return $818;
                                                                                        }));
                                                                                        var $814 = $817;
                                                                                        break;
                                                                                };
                                                                                var $812 = $814;
                                                                                break;
                                                                        };
                                                                        var $809 = $812;
                                                                        break;
                                                                };
                                                                var $807 = $809;
                                                                break;
                                                        };
                                                        var $804 = $807;
                                                        break;
                                                };
                                                var $803 = $804;
                                            } else {
                                                var self = (_head$6 === 123);
                                                if (self) {
                                                    var self = Kind$Core$read$term$(_code$7);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $822 = self.fst;
                                                            var $823 = self.snd;
                                                            var self = Kind$Core$read$char$($822, 58);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $825 = self.fst;
                                                                    var self = Kind$Core$read$term$($825);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $827 = self.fst;
                                                                            var $828 = self.snd;
                                                                            var self = Kind$Core$read$char$($827, 125);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $830 = self.fst;
                                                                                    var $831 = Pair$new$($830, (_ctx$16 => {
                                                                                        var $832 = Kind$Term$ann$(Bool$false, $823(_ctx$16), $828(_ctx$16));
                                                                                        return $832;
                                                                                    }));
                                                                                    var $829 = $831;
                                                                                    break;
                                                                            };
                                                                            var $826 = $829;
                                                                            break;
                                                                    };
                                                                    var $824 = $826;
                                                                    break;
                                                            };
                                                            var $821 = $824;
                                                            break;
                                                    };
                                                    var $820 = $821;
                                                } else {
                                                    var self = (_head$6 === 39);
                                                    if (self) {
                                                        var self = Kind$Core$read$chrx$(_code$7);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $835 = self.fst;
                                                                var $836 = self.snd;
                                                                var self = Kind$Core$read$char$($835, 39);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $838 = self.fst;
                                                                        var $839 = Pair$new$($838, (_ctx$12 => {
                                                                            var $840 = Kind$Term$chr$($836);
                                                                            return $840;
                                                                        }));
                                                                        var $837 = $839;
                                                                        break;
                                                                };
                                                                var $834 = $837;
                                                                break;
                                                        };
                                                        var $833 = $834;
                                                    } else {
                                                        var self = (_head$6 === 34);
                                                        if (self) {
                                                            var self = Kind$Core$read$strx$(_code$7);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $843 = self.fst;
                                                                    var $844 = self.snd;
                                                                    var self = Kind$Core$read$char$($843, 34);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $846 = self.fst;
                                                                            var $847 = Pair$new$($846, (_ctx$12 => {
                                                                                var $848 = Kind$Term$str$($844);
                                                                                return $848;
                                                                            }));
                                                                            var $845 = $847;
                                                                            break;
                                                                    };
                                                                    var $842 = $845;
                                                                    break;
                                                            };
                                                            var $841 = $842;
                                                        } else {
                                                            var self = (_head$6 === 43);
                                                            if (self) {
                                                                var self = Kind$Core$read$natx$(_code$7, 0n);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $851 = self.fst;
                                                                        var $852 = self.snd;
                                                                        var $853 = Pair$new$($851, (_ctx$10 => {
                                                                            var $854 = Kind$Term$nat$($852);
                                                                            return $854;
                                                                        }));
                                                                        var $850 = $853;
                                                                        break;
                                                                };
                                                                var $849 = $850;
                                                            } else {
                                                                var self = Kind$Core$read$is_name$(_head$6);
                                                                if (self) {
                                                                    var self = Kind$Core$read$name$(_code$7);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $857 = self.fst;
                                                                            var $858 = self.snd;
                                                                            var _name$10 = String$cons$(_head$6, $858);
                                                                            var self = $857;
                                                                            if (self.length === 0) {
                                                                                var $860 = Pair$new$("", 0n);
                                                                                var self = $860;
                                                                            } else {
                                                                                var $861 = self.charCodeAt(0);
                                                                                var $862 = self.slice(1);
                                                                                var self = ($861 === 94);
                                                                                if (self) {
                                                                                    var $864 = Kind$Core$read$natx$($862, 0n);
                                                                                    var $863 = $864;
                                                                                } else {
                                                                                    var $865 = Pair$new$($857, 0n);
                                                                                    var $863 = $865;
                                                                                };
                                                                                var self = $863;
                                                                            };
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $866 = self.fst;
                                                                                    var $867 = self.snd;
                                                                                    var $868 = Pair$new$($866, (_ctx$13 => {
                                                                                        var _got$14 = Kind$Core$read$find$(_ctx$13, (_x$14 => _i$15 => {
                                                                                            var $870 = (Pair$fst$(_x$14) === _name$10);
                                                                                            return $870;
                                                                                        }), 0n, $867);
                                                                                        var self = _got$14;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $871 = self.value;
                                                                                                var $872 = Pair$snd$(Pair$fst$($871));
                                                                                                var $869 = $872;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $873 = Kind$Term$ref$(_name$10);
                                                                                                var $869 = $873;
                                                                                                break;
                                                                                        };
                                                                                        return $869;
                                                                                    }));
                                                                                    var $859 = $868;
                                                                                    break;
                                                                            };
                                                                            var $856 = $859;
                                                                            break;
                                                                    };
                                                                    var $855 = $856;
                                                                } else {
                                                                    var $874 = Pair$new$("", (_ctx$8 => {
                                                                        var $875 = Kind$Term$ref$("error");
                                                                        return $875;
                                                                    }));
                                                                    var $855 = $874;
                                                                };
                                                                var $849 = $855;
                                                            };
                                                            var $841 = $849;
                                                        };
                                                        var $833 = $841;
                                                    };
                                                    var $820 = $833;
                                                };
                                                var $803 = $820;
                                            };
                                            var $786 = $803;
                                        };
                                        var $775 = $786;
                                    };
                                    var $765 = $775;
                                };
                                var $743 = $765;
                            };
                            var $721 = $743;
                        };
                        var $718 = $721;
                    };
                    var $713 = $718;
                };
                var $711 = $713;
                break;
        };
        return $711;
    };
    const Kind$Core$read$term = x0 => Kind$Core$read$term$(x0);

    function Kind$Core$read$(_code$1) {
        var self = Kind$Core$read$term$((_code$1 + ";"));
        switch (self._) {
            case 'Pair.new':
                var $877 = self.fst;
                var $878 = self.snd;
                var self = $877;
                if (self.length === 0) {
                    var $880 = Maybe$none;
                    var $879 = $880;
                } else {
                    var $881 = self.charCodeAt(0);
                    var $882 = self.slice(1);
                    var $883 = Maybe$some$($878(List$nil));
                    var $879 = $883;
                };
                var $876 = $879;
                break;
        };
        return $876;
    };
    const Kind$Core$read = x0 => Kind$Core$read$(x0);

    function Bool$read$(_code$1) {
        var self = (_code$1 === "Bool.true");
        if (self) {
            var $885 = Maybe$some$(Bool$true);
            var $884 = $885;
        } else {
            var self = (_code$1 === "Bool.false");
            if (self) {
                var $887 = Maybe$some$(Bool$false);
                var $886 = $887;
            } else {
                var $888 = Maybe$none;
                var $886 = $888;
            };
            var $884 = $886;
        };
        return $884;
    };
    const Bool$read = x0 => Bool$read$(x0);

    function Kind$Status$done$(_cached$1) {
        var $889 = ({
            _: 'Kind.Status.done',
            'cached': _cached$1
        });
        return $889;
    };
    const Kind$Status$done = x0 => Kind$Status$done$(x0);

    function Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _stat$9) {
        var $890 = ({
            _: 'Kind.Def.new',
            'file': _file$1,
            'code': _code$2,
            'orig': _orig$3,
            'name': _name$4,
            'term': _term$5,
            'type': _type$6,
            'isct': _isct$7,
            'arit': _arit$8,
            'stat': _stat$9
        });
        return $890;
    };
    const Kind$Def$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Def$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Synth$load$cached$def$(_name$1) {
        var $891 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $892 = _m$bind$2;
            return $892;
        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".file")))((_cache_file$2 => {
            var self = (!String$is_empty$(_cache_file$2));
            if (self) {
                var $894 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $895 = _m$bind$3;
                    return $895;
                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".time")))((_cache_time$3 => {
                    var $896 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $897 = _m$bind$4;
                        return $897;
                    }))(IO$get_file_mtime$(_cache_file$2))((_cache_file_time$4 => {
                        var self = (_cache_time$3 === _cache_file_time$4);
                        if (self) {
                            var $899 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $900 = _m$bind$5;
                                return $900;
                            }))(Kind$Synth$load$cached$get_file$((_name$1 + ".term")))((_cache_term$5 => {
                                var $901 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $902 = _m$bind$6;
                                    return $902;
                                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".type")))((_cache_type$6 => {
                                    var $903 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $904 = _m$bind$7;
                                        return $904;
                                    }))(Kind$Synth$load$cached$get_file$((_name$1 + ".isct")))((_cache_isct$7 => {
                                        var $905 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $906 = _m$bind$8;
                                            return $906;
                                        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".arit")))((_cache_arit$8 => {
                                            var $907 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $908 = _m$pure$10;
                                                return $908;
                                            }))((() => {
                                                var _file$9 = _cache_file$2;
                                                var _code$10 = "<cached>";
                                                var _orig$11 = Pair$new$(0n, 0n);
                                                var $909 = Maybe$monad$((_m$bind$12 => _m$pure$13 => {
                                                    var $910 = _m$bind$12;
                                                    return $910;
                                                }))(Kind$Core$read$(_cache_term$5))((_term$12 => {
                                                    var $911 = Maybe$monad$((_m$bind$13 => _m$pure$14 => {
                                                        var $912 = _m$bind$13;
                                                        return $912;
                                                    }))(Kind$Core$read$(_cache_type$6))((_type$13 => {
                                                        var $913 = Maybe$monad$((_m$bind$14 => _m$pure$15 => {
                                                            var $914 = _m$bind$14;
                                                            return $914;
                                                        }))(Bool$read$(_cache_isct$7))((_isct$14 => {
                                                            var $915 = Maybe$monad$((_m$bind$15 => _m$pure$16 => {
                                                                var $916 = _m$bind$15;
                                                                return $916;
                                                            }))(Maybe$some$((BigInt(_cache_arit$8))))((_arit$15 => {
                                                                var _stat$16 = Kind$Status$done$(Bool$true);
                                                                var $917 = Maybe$monad$((_m$bind$17 => _m$pure$18 => {
                                                                    var $918 = _m$pure$18;
                                                                    return $918;
                                                                }))(Kind$Def$new$(_file$9, _code$10, _orig$11, _name$1, _term$12, _type$13, _isct$14, _arit$15, _stat$16));
                                                                return $917;
                                                            }));
                                                            return $915;
                                                        }));
                                                        return $913;
                                                    }));
                                                    return $911;
                                                }));
                                                return $909;
                                            })());
                                            return $907;
                                        }));
                                        return $905;
                                    }));
                                    return $903;
                                }));
                                return $901;
                            }));
                            var $898 = $899;
                        } else {
                            var $919 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $920 = _m$pure$6;
                                return $920;
                            }))(Maybe$none);
                            var $898 = $919;
                        };
                        return $898;
                    }));
                    return $896;
                }));
                var $893 = $894;
            } else {
                var $921 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $922 = _m$pure$4;
                    return $922;
                }))(Maybe$none);
                var $893 = $921;
            };
            return $893;
        }));
        return $891;
    };
    const Kind$Synth$load$cached$def = x0 => Kind$Synth$load$cached$def$(x0);

    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {
        var $923 = ({
            _: 'BitsMap.tie',
            'val': _val$2,
            'lft': _lft$3,
            'rgt': _rgt$4
        });
        return $923;
    };
    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);
    const BitsMap$new = ({
        _: 'BitsMap.new'
    });
    const BitsMap$set = a0 => a1 => a2 => (bitsmap_set(a0, a1, a2, 'set'));

    function Kind$Map$set$(_name$2, _val$3, _map$4) {
        var $924 = (bitsmap_set((kind_name_to_bits(_name$2)), _val$3, _map$4, 'set'));
        return $924;
    };
    const Kind$Map$set = x0 => x1 => x2 => Kind$Map$set$(x0, x1, x2);
    const Kind$Map$new = BitsMap$new;
    const Kind$Map = null;

    function Kind$Core$dependencies$go$(_term$1, _deps$2) {
        var _nil$3 = Kind$Term$typ;
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $926 = self.name;
                var $927 = Kind$Map$set$($926, Unit$new, _deps$2);
                var $925 = $927;
                break;
            case 'Kind.Term.all':
                var $928 = self.xtyp;
                var $929 = self.body;
                var _deps$9 = Kind$Core$dependencies$go$($928, _deps$2);
                var _deps$10 = Kind$Core$dependencies$go$($929(_nil$3)(_nil$3), _deps$9);
                var $930 = _deps$10;
                var $925 = $930;
                break;
            case 'Kind.Term.lam':
                var $931 = self.body;
                var _deps$6 = Kind$Core$dependencies$go$($931(_nil$3), _deps$2);
                var $932 = _deps$6;
                var $925 = $932;
                break;
            case 'Kind.Term.app':
                var $933 = self.func;
                var $934 = self.argm;
                var _deps$6 = Kind$Core$dependencies$go$($933, _deps$2);
                var _deps$7 = Kind$Core$dependencies$go$($934, _deps$6);
                var $935 = _deps$7;
                var $925 = $935;
                break;
            case 'Kind.Term.let':
                var $936 = self.expr;
                var $937 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($936, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($937(_nil$3), _deps$7);
                var $938 = _deps$8;
                var $925 = $938;
                break;
            case 'Kind.Term.def':
                var $939 = self.expr;
                var $940 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($939, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($940(_nil$3), _deps$7);
                var $941 = _deps$8;
                var $925 = $941;
                break;
            case 'Kind.Term.ann':
                var $942 = self.term;
                var $943 = self.type;
                var _deps$7 = Kind$Core$dependencies$go$($942, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($943, _deps$7);
                var $944 = _deps$8;
                var $925 = $944;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $945 = _deps$2;
                var $925 = $945;
                break;
        };
        return $925;
    };
    const Kind$Core$dependencies$go = x0 => x1 => Kind$Core$dependencies$go$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $947 = self.head;
                var $948 = self.tail;
                var $949 = List$cons$(_f$4($947), List$mapped$($948, _f$4));
                var $946 = $949;
                break;
            case 'List.nil':
                var $950 = List$nil;
                var $946 = $950;
                break;
        };
        return $946;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Bits$reverse$tco$(_a$1, _r$2) {
        var Bits$reverse$tco$ = (_a$1, _r$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _r$2]
        });
        var Bits$reverse$tco = _a$1 => _r$2 => Bits$reverse$tco$(_a$1, _r$2);
        var arg = [_a$1, _r$2];
        while (true) {
            let [_a$1, _r$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $951 = self.slice(0, -1);
                        var $952 = Bits$reverse$tco$($951, (_r$2 + '0'));
                        return $952;
                    case 'i':
                        var $953 = self.slice(0, -1);
                        var $954 = Bits$reverse$tco$($953, (_r$2 + '1'));
                        return $954;
                    case 'e':
                        var $955 = _r$2;
                        return $955;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Bits$reverse$tco = x0 => x1 => Bits$reverse$tco$(x0, x1);

    function Bits$reverse$(_a$1) {
        var $956 = Bits$reverse$tco$(_a$1, Bits$e);
        return $956;
    };
    const Bits$reverse = x0 => Bits$reverse$(x0);

    function BitsMap$to_list$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $958 = self.val;
                var $959 = self.lft;
                var $960 = self.rgt;
                var self = $958;
                switch (self._) {
                    case 'Maybe.some':
                        var $962 = self.value;
                        var $963 = List$cons$(Pair$new$(Bits$reverse$(_key$3), $962), _list$4);
                        var _list0$8 = $963;
                        break;
                    case 'Maybe.none':
                        var $964 = _list$4;
                        var _list0$8 = $964;
                        break;
                };
                var _list1$9 = BitsMap$to_list$go$($959, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$to_list$go$($960, (_key$3 + '1'), _list1$9);
                var $961 = _list2$10;
                var $957 = $961;
                break;
            case 'BitsMap.new':
                var $965 = _list$4;
                var $957 = $965;
                break;
        };
        return $957;
    };
    const BitsMap$to_list$go = x0 => x1 => x2 => BitsMap$to_list$go$(x0, x1, x2);

    function Kind$Name$from_bits$(_bs$1) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $967 = self.slice(0, -1);
                var _bs$3 = $967;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $969 = self.slice(0, -1);
                        var _bs$5 = $969;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $971 = self.slice(0, -1);
                                var _bs$7 = $971;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $973 = self.slice(0, -1);
                                        var _bs$9 = $973;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $975 = self.slice(0, -1);
                                                var _bs$11 = $975;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $977 = self.slice(0, -1);
                                                        var _bs$13 = $977;
                                                        var $978 = String$cons$(65, Kind$Name$from_bits$(_bs$13));
                                                        var $976 = $978;
                                                        break;
                                                    case 'i':
                                                        var $979 = self.slice(0, -1);
                                                        var _bs$13 = $979;
                                                        var $980 = String$cons$(66, Kind$Name$from_bits$(_bs$13));
                                                        var $976 = $980;
                                                        break;
                                                    case 'e':
                                                        var $981 = String$nil;
                                                        var $976 = $981;
                                                        break;
                                                };
                                                var $974 = $976;
                                                break;
                                            case 'i':
                                                var $982 = self.slice(0, -1);
                                                var _bs$11 = $982;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $984 = self.slice(0, -1);
                                                        var _bs$13 = $984;
                                                        var $985 = String$cons$(67, Kind$Name$from_bits$(_bs$13));
                                                        var $983 = $985;
                                                        break;
                                                    case 'i':
                                                        var $986 = self.slice(0, -1);
                                                        var _bs$13 = $986;
                                                        var $987 = String$cons$(68, Kind$Name$from_bits$(_bs$13));
                                                        var $983 = $987;
                                                        break;
                                                    case 'e':
                                                        var $988 = String$nil;
                                                        var $983 = $988;
                                                        break;
                                                };
                                                var $974 = $983;
                                                break;
                                            case 'e':
                                                var $989 = String$nil;
                                                var $974 = $989;
                                                break;
                                        };
                                        var $972 = $974;
                                        break;
                                    case 'i':
                                        var $990 = self.slice(0, -1);
                                        var _bs$9 = $990;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $992 = self.slice(0, -1);
                                                var _bs$11 = $992;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $994 = self.slice(0, -1);
                                                        var _bs$13 = $994;
                                                        var $995 = String$cons$(69, Kind$Name$from_bits$(_bs$13));
                                                        var $993 = $995;
                                                        break;
                                                    case 'i':
                                                        var $996 = self.slice(0, -1);
                                                        var _bs$13 = $996;
                                                        var $997 = String$cons$(70, Kind$Name$from_bits$(_bs$13));
                                                        var $993 = $997;
                                                        break;
                                                    case 'e':
                                                        var $998 = String$nil;
                                                        var $993 = $998;
                                                        break;
                                                };
                                                var $991 = $993;
                                                break;
                                            case 'i':
                                                var $999 = self.slice(0, -1);
                                                var _bs$11 = $999;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1001 = self.slice(0, -1);
                                                        var _bs$13 = $1001;
                                                        var $1002 = String$cons$(71, Kind$Name$from_bits$(_bs$13));
                                                        var $1000 = $1002;
                                                        break;
                                                    case 'i':
                                                        var $1003 = self.slice(0, -1);
                                                        var _bs$13 = $1003;
                                                        var $1004 = String$cons$(72, Kind$Name$from_bits$(_bs$13));
                                                        var $1000 = $1004;
                                                        break;
                                                    case 'e':
                                                        var $1005 = String$nil;
                                                        var $1000 = $1005;
                                                        break;
                                                };
                                                var $991 = $1000;
                                                break;
                                            case 'e':
                                                var $1006 = String$nil;
                                                var $991 = $1006;
                                                break;
                                        };
                                        var $972 = $991;
                                        break;
                                    case 'e':
                                        var $1007 = String$nil;
                                        var $972 = $1007;
                                        break;
                                };
                                var $970 = $972;
                                break;
                            case 'i':
                                var $1008 = self.slice(0, -1);
                                var _bs$7 = $1008;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1010 = self.slice(0, -1);
                                        var _bs$9 = $1010;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1012 = self.slice(0, -1);
                                                var _bs$11 = $1012;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1014 = self.slice(0, -1);
                                                        var _bs$13 = $1014;
                                                        var $1015 = String$cons$(73, Kind$Name$from_bits$(_bs$13));
                                                        var $1013 = $1015;
                                                        break;
                                                    case 'i':
                                                        var $1016 = self.slice(0, -1);
                                                        var _bs$13 = $1016;
                                                        var $1017 = String$cons$(74, Kind$Name$from_bits$(_bs$13));
                                                        var $1013 = $1017;
                                                        break;
                                                    case 'e':
                                                        var $1018 = String$nil;
                                                        var $1013 = $1018;
                                                        break;
                                                };
                                                var $1011 = $1013;
                                                break;
                                            case 'i':
                                                var $1019 = self.slice(0, -1);
                                                var _bs$11 = $1019;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1021 = self.slice(0, -1);
                                                        var _bs$13 = $1021;
                                                        var $1022 = String$cons$(75, Kind$Name$from_bits$(_bs$13));
                                                        var $1020 = $1022;
                                                        break;
                                                    case 'i':
                                                        var $1023 = self.slice(0, -1);
                                                        var _bs$13 = $1023;
                                                        var $1024 = String$cons$(76, Kind$Name$from_bits$(_bs$13));
                                                        var $1020 = $1024;
                                                        break;
                                                    case 'e':
                                                        var $1025 = String$nil;
                                                        var $1020 = $1025;
                                                        break;
                                                };
                                                var $1011 = $1020;
                                                break;
                                            case 'e':
                                                var $1026 = String$nil;
                                                var $1011 = $1026;
                                                break;
                                        };
                                        var $1009 = $1011;
                                        break;
                                    case 'i':
                                        var $1027 = self.slice(0, -1);
                                        var _bs$9 = $1027;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1029 = self.slice(0, -1);
                                                var _bs$11 = $1029;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1031 = self.slice(0, -1);
                                                        var _bs$13 = $1031;
                                                        var $1032 = String$cons$(77, Kind$Name$from_bits$(_bs$13));
                                                        var $1030 = $1032;
                                                        break;
                                                    case 'i':
                                                        var $1033 = self.slice(0, -1);
                                                        var _bs$13 = $1033;
                                                        var $1034 = String$cons$(78, Kind$Name$from_bits$(_bs$13));
                                                        var $1030 = $1034;
                                                        break;
                                                    case 'e':
                                                        var $1035 = String$nil;
                                                        var $1030 = $1035;
                                                        break;
                                                };
                                                var $1028 = $1030;
                                                break;
                                            case 'i':
                                                var $1036 = self.slice(0, -1);
                                                var _bs$11 = $1036;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1038 = self.slice(0, -1);
                                                        var _bs$13 = $1038;
                                                        var $1039 = String$cons$(79, Kind$Name$from_bits$(_bs$13));
                                                        var $1037 = $1039;
                                                        break;
                                                    case 'i':
                                                        var $1040 = self.slice(0, -1);
                                                        var _bs$13 = $1040;
                                                        var $1041 = String$cons$(80, Kind$Name$from_bits$(_bs$13));
                                                        var $1037 = $1041;
                                                        break;
                                                    case 'e':
                                                        var $1042 = String$nil;
                                                        var $1037 = $1042;
                                                        break;
                                                };
                                                var $1028 = $1037;
                                                break;
                                            case 'e':
                                                var $1043 = String$nil;
                                                var $1028 = $1043;
                                                break;
                                        };
                                        var $1009 = $1028;
                                        break;
                                    case 'e':
                                        var $1044 = String$nil;
                                        var $1009 = $1044;
                                        break;
                                };
                                var $970 = $1009;
                                break;
                            case 'e':
                                var $1045 = String$nil;
                                var $970 = $1045;
                                break;
                        };
                        var $968 = $970;
                        break;
                    case 'i':
                        var $1046 = self.slice(0, -1);
                        var _bs$5 = $1046;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1048 = self.slice(0, -1);
                                var _bs$7 = $1048;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1050 = self.slice(0, -1);
                                        var _bs$9 = $1050;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1052 = self.slice(0, -1);
                                                var _bs$11 = $1052;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1054 = self.slice(0, -1);
                                                        var _bs$13 = $1054;
                                                        var $1055 = String$cons$(81, Kind$Name$from_bits$(_bs$13));
                                                        var $1053 = $1055;
                                                        break;
                                                    case 'i':
                                                        var $1056 = self.slice(0, -1);
                                                        var _bs$13 = $1056;
                                                        var $1057 = String$cons$(82, Kind$Name$from_bits$(_bs$13));
                                                        var $1053 = $1057;
                                                        break;
                                                    case 'e':
                                                        var $1058 = String$nil;
                                                        var $1053 = $1058;
                                                        break;
                                                };
                                                var $1051 = $1053;
                                                break;
                                            case 'i':
                                                var $1059 = self.slice(0, -1);
                                                var _bs$11 = $1059;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1061 = self.slice(0, -1);
                                                        var _bs$13 = $1061;
                                                        var $1062 = String$cons$(83, Kind$Name$from_bits$(_bs$13));
                                                        var $1060 = $1062;
                                                        break;
                                                    case 'i':
                                                        var $1063 = self.slice(0, -1);
                                                        var _bs$13 = $1063;
                                                        var $1064 = String$cons$(84, Kind$Name$from_bits$(_bs$13));
                                                        var $1060 = $1064;
                                                        break;
                                                    case 'e':
                                                        var $1065 = String$nil;
                                                        var $1060 = $1065;
                                                        break;
                                                };
                                                var $1051 = $1060;
                                                break;
                                            case 'e':
                                                var $1066 = String$nil;
                                                var $1051 = $1066;
                                                break;
                                        };
                                        var $1049 = $1051;
                                        break;
                                    case 'i':
                                        var $1067 = self.slice(0, -1);
                                        var _bs$9 = $1067;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1069 = self.slice(0, -1);
                                                var _bs$11 = $1069;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1071 = self.slice(0, -1);
                                                        var _bs$13 = $1071;
                                                        var $1072 = String$cons$(85, Kind$Name$from_bits$(_bs$13));
                                                        var $1070 = $1072;
                                                        break;
                                                    case 'i':
                                                        var $1073 = self.slice(0, -1);
                                                        var _bs$13 = $1073;
                                                        var $1074 = String$cons$(86, Kind$Name$from_bits$(_bs$13));
                                                        var $1070 = $1074;
                                                        break;
                                                    case 'e':
                                                        var $1075 = String$nil;
                                                        var $1070 = $1075;
                                                        break;
                                                };
                                                var $1068 = $1070;
                                                break;
                                            case 'i':
                                                var $1076 = self.slice(0, -1);
                                                var _bs$11 = $1076;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1078 = self.slice(0, -1);
                                                        var _bs$13 = $1078;
                                                        var $1079 = String$cons$(87, Kind$Name$from_bits$(_bs$13));
                                                        var $1077 = $1079;
                                                        break;
                                                    case 'i':
                                                        var $1080 = self.slice(0, -1);
                                                        var _bs$13 = $1080;
                                                        var $1081 = String$cons$(88, Kind$Name$from_bits$(_bs$13));
                                                        var $1077 = $1081;
                                                        break;
                                                    case 'e':
                                                        var $1082 = String$nil;
                                                        var $1077 = $1082;
                                                        break;
                                                };
                                                var $1068 = $1077;
                                                break;
                                            case 'e':
                                                var $1083 = String$nil;
                                                var $1068 = $1083;
                                                break;
                                        };
                                        var $1049 = $1068;
                                        break;
                                    case 'e':
                                        var $1084 = String$nil;
                                        var $1049 = $1084;
                                        break;
                                };
                                var $1047 = $1049;
                                break;
                            case 'i':
                                var $1085 = self.slice(0, -1);
                                var _bs$7 = $1085;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1087 = self.slice(0, -1);
                                        var _bs$9 = $1087;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1089 = self.slice(0, -1);
                                                var _bs$11 = $1089;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1091 = self.slice(0, -1);
                                                        var _bs$13 = $1091;
                                                        var $1092 = String$cons$(89, Kind$Name$from_bits$(_bs$13));
                                                        var $1090 = $1092;
                                                        break;
                                                    case 'i':
                                                        var $1093 = self.slice(0, -1);
                                                        var _bs$13 = $1093;
                                                        var $1094 = String$cons$(90, Kind$Name$from_bits$(_bs$13));
                                                        var $1090 = $1094;
                                                        break;
                                                    case 'e':
                                                        var $1095 = String$nil;
                                                        var $1090 = $1095;
                                                        break;
                                                };
                                                var $1088 = $1090;
                                                break;
                                            case 'i':
                                                var $1096 = self.slice(0, -1);
                                                var _bs$11 = $1096;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1098 = self.slice(0, -1);
                                                        var _bs$13 = $1098;
                                                        var $1099 = String$cons$(97, Kind$Name$from_bits$(_bs$13));
                                                        var $1097 = $1099;
                                                        break;
                                                    case 'i':
                                                        var $1100 = self.slice(0, -1);
                                                        var _bs$13 = $1100;
                                                        var $1101 = String$cons$(98, Kind$Name$from_bits$(_bs$13));
                                                        var $1097 = $1101;
                                                        break;
                                                    case 'e':
                                                        var $1102 = String$nil;
                                                        var $1097 = $1102;
                                                        break;
                                                };
                                                var $1088 = $1097;
                                                break;
                                            case 'e':
                                                var $1103 = String$nil;
                                                var $1088 = $1103;
                                                break;
                                        };
                                        var $1086 = $1088;
                                        break;
                                    case 'i':
                                        var $1104 = self.slice(0, -1);
                                        var _bs$9 = $1104;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1106 = self.slice(0, -1);
                                                var _bs$11 = $1106;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1108 = self.slice(0, -1);
                                                        var _bs$13 = $1108;
                                                        var $1109 = String$cons$(99, Kind$Name$from_bits$(_bs$13));
                                                        var $1107 = $1109;
                                                        break;
                                                    case 'i':
                                                        var $1110 = self.slice(0, -1);
                                                        var _bs$13 = $1110;
                                                        var $1111 = String$cons$(100, Kind$Name$from_bits$(_bs$13));
                                                        var $1107 = $1111;
                                                        break;
                                                    case 'e':
                                                        var $1112 = String$nil;
                                                        var $1107 = $1112;
                                                        break;
                                                };
                                                var $1105 = $1107;
                                                break;
                                            case 'i':
                                                var $1113 = self.slice(0, -1);
                                                var _bs$11 = $1113;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1115 = self.slice(0, -1);
                                                        var _bs$13 = $1115;
                                                        var $1116 = String$cons$(101, Kind$Name$from_bits$(_bs$13));
                                                        var $1114 = $1116;
                                                        break;
                                                    case 'i':
                                                        var $1117 = self.slice(0, -1);
                                                        var _bs$13 = $1117;
                                                        var $1118 = String$cons$(102, Kind$Name$from_bits$(_bs$13));
                                                        var $1114 = $1118;
                                                        break;
                                                    case 'e':
                                                        var $1119 = String$nil;
                                                        var $1114 = $1119;
                                                        break;
                                                };
                                                var $1105 = $1114;
                                                break;
                                            case 'e':
                                                var $1120 = String$nil;
                                                var $1105 = $1120;
                                                break;
                                        };
                                        var $1086 = $1105;
                                        break;
                                    case 'e':
                                        var $1121 = String$nil;
                                        var $1086 = $1121;
                                        break;
                                };
                                var $1047 = $1086;
                                break;
                            case 'e':
                                var $1122 = String$nil;
                                var $1047 = $1122;
                                break;
                        };
                        var $968 = $1047;
                        break;
                    case 'e':
                        var $1123 = String$nil;
                        var $968 = $1123;
                        break;
                };
                var $966 = $968;
                break;
            case 'i':
                var $1124 = self.slice(0, -1);
                var _bs$3 = $1124;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $1126 = self.slice(0, -1);
                        var _bs$5 = $1126;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1128 = self.slice(0, -1);
                                var _bs$7 = $1128;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1130 = self.slice(0, -1);
                                        var _bs$9 = $1130;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1132 = self.slice(0, -1);
                                                var _bs$11 = $1132;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1134 = self.slice(0, -1);
                                                        var _bs$13 = $1134;
                                                        var $1135 = String$cons$(103, Kind$Name$from_bits$(_bs$13));
                                                        var $1133 = $1135;
                                                        break;
                                                    case 'i':
                                                        var $1136 = self.slice(0, -1);
                                                        var _bs$13 = $1136;
                                                        var $1137 = String$cons$(104, Kind$Name$from_bits$(_bs$13));
                                                        var $1133 = $1137;
                                                        break;
                                                    case 'e':
                                                        var $1138 = String$nil;
                                                        var $1133 = $1138;
                                                        break;
                                                };
                                                var $1131 = $1133;
                                                break;
                                            case 'i':
                                                var $1139 = self.slice(0, -1);
                                                var _bs$11 = $1139;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1141 = self.slice(0, -1);
                                                        var _bs$13 = $1141;
                                                        var $1142 = String$cons$(105, Kind$Name$from_bits$(_bs$13));
                                                        var $1140 = $1142;
                                                        break;
                                                    case 'i':
                                                        var $1143 = self.slice(0, -1);
                                                        var _bs$13 = $1143;
                                                        var $1144 = String$cons$(106, Kind$Name$from_bits$(_bs$13));
                                                        var $1140 = $1144;
                                                        break;
                                                    case 'e':
                                                        var $1145 = String$nil;
                                                        var $1140 = $1145;
                                                        break;
                                                };
                                                var $1131 = $1140;
                                                break;
                                            case 'e':
                                                var $1146 = String$nil;
                                                var $1131 = $1146;
                                                break;
                                        };
                                        var $1129 = $1131;
                                        break;
                                    case 'i':
                                        var $1147 = self.slice(0, -1);
                                        var _bs$9 = $1147;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1149 = self.slice(0, -1);
                                                var _bs$11 = $1149;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1151 = self.slice(0, -1);
                                                        var _bs$13 = $1151;
                                                        var $1152 = String$cons$(107, Kind$Name$from_bits$(_bs$13));
                                                        var $1150 = $1152;
                                                        break;
                                                    case 'i':
                                                        var $1153 = self.slice(0, -1);
                                                        var _bs$13 = $1153;
                                                        var $1154 = String$cons$(108, Kind$Name$from_bits$(_bs$13));
                                                        var $1150 = $1154;
                                                        break;
                                                    case 'e':
                                                        var $1155 = String$nil;
                                                        var $1150 = $1155;
                                                        break;
                                                };
                                                var $1148 = $1150;
                                                break;
                                            case 'i':
                                                var $1156 = self.slice(0, -1);
                                                var _bs$11 = $1156;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1158 = self.slice(0, -1);
                                                        var _bs$13 = $1158;
                                                        var $1159 = String$cons$(109, Kind$Name$from_bits$(_bs$13));
                                                        var $1157 = $1159;
                                                        break;
                                                    case 'i':
                                                        var $1160 = self.slice(0, -1);
                                                        var _bs$13 = $1160;
                                                        var $1161 = String$cons$(110, Kind$Name$from_bits$(_bs$13));
                                                        var $1157 = $1161;
                                                        break;
                                                    case 'e':
                                                        var $1162 = String$nil;
                                                        var $1157 = $1162;
                                                        break;
                                                };
                                                var $1148 = $1157;
                                                break;
                                            case 'e':
                                                var $1163 = String$nil;
                                                var $1148 = $1163;
                                                break;
                                        };
                                        var $1129 = $1148;
                                        break;
                                    case 'e':
                                        var $1164 = String$nil;
                                        var $1129 = $1164;
                                        break;
                                };
                                var $1127 = $1129;
                                break;
                            case 'i':
                                var $1165 = self.slice(0, -1);
                                var _bs$7 = $1165;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1167 = self.slice(0, -1);
                                        var _bs$9 = $1167;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1169 = self.slice(0, -1);
                                                var _bs$11 = $1169;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1171 = self.slice(0, -1);
                                                        var _bs$13 = $1171;
                                                        var $1172 = String$cons$(111, Kind$Name$from_bits$(_bs$13));
                                                        var $1170 = $1172;
                                                        break;
                                                    case 'i':
                                                        var $1173 = self.slice(0, -1);
                                                        var _bs$13 = $1173;
                                                        var $1174 = String$cons$(112, Kind$Name$from_bits$(_bs$13));
                                                        var $1170 = $1174;
                                                        break;
                                                    case 'e':
                                                        var $1175 = String$nil;
                                                        var $1170 = $1175;
                                                        break;
                                                };
                                                var $1168 = $1170;
                                                break;
                                            case 'i':
                                                var $1176 = self.slice(0, -1);
                                                var _bs$11 = $1176;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1178 = self.slice(0, -1);
                                                        var _bs$13 = $1178;
                                                        var $1179 = String$cons$(113, Kind$Name$from_bits$(_bs$13));
                                                        var $1177 = $1179;
                                                        break;
                                                    case 'i':
                                                        var $1180 = self.slice(0, -1);
                                                        var _bs$13 = $1180;
                                                        var $1181 = String$cons$(114, Kind$Name$from_bits$(_bs$13));
                                                        var $1177 = $1181;
                                                        break;
                                                    case 'e':
                                                        var $1182 = String$nil;
                                                        var $1177 = $1182;
                                                        break;
                                                };
                                                var $1168 = $1177;
                                                break;
                                            case 'e':
                                                var $1183 = String$nil;
                                                var $1168 = $1183;
                                                break;
                                        };
                                        var $1166 = $1168;
                                        break;
                                    case 'i':
                                        var $1184 = self.slice(0, -1);
                                        var _bs$9 = $1184;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1186 = self.slice(0, -1);
                                                var _bs$11 = $1186;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1188 = self.slice(0, -1);
                                                        var _bs$13 = $1188;
                                                        var $1189 = String$cons$(115, Kind$Name$from_bits$(_bs$13));
                                                        var $1187 = $1189;
                                                        break;
                                                    case 'i':
                                                        var $1190 = self.slice(0, -1);
                                                        var _bs$13 = $1190;
                                                        var $1191 = String$cons$(116, Kind$Name$from_bits$(_bs$13));
                                                        var $1187 = $1191;
                                                        break;
                                                    case 'e':
                                                        var $1192 = String$nil;
                                                        var $1187 = $1192;
                                                        break;
                                                };
                                                var $1185 = $1187;
                                                break;
                                            case 'i':
                                                var $1193 = self.slice(0, -1);
                                                var _bs$11 = $1193;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1195 = self.slice(0, -1);
                                                        var _bs$13 = $1195;
                                                        var $1196 = String$cons$(117, Kind$Name$from_bits$(_bs$13));
                                                        var $1194 = $1196;
                                                        break;
                                                    case 'i':
                                                        var $1197 = self.slice(0, -1);
                                                        var _bs$13 = $1197;
                                                        var $1198 = String$cons$(118, Kind$Name$from_bits$(_bs$13));
                                                        var $1194 = $1198;
                                                        break;
                                                    case 'e':
                                                        var $1199 = String$nil;
                                                        var $1194 = $1199;
                                                        break;
                                                };
                                                var $1185 = $1194;
                                                break;
                                            case 'e':
                                                var $1200 = String$nil;
                                                var $1185 = $1200;
                                                break;
                                        };
                                        var $1166 = $1185;
                                        break;
                                    case 'e':
                                        var $1201 = String$nil;
                                        var $1166 = $1201;
                                        break;
                                };
                                var $1127 = $1166;
                                break;
                            case 'e':
                                var $1202 = String$nil;
                                var $1127 = $1202;
                                break;
                        };
                        var $1125 = $1127;
                        break;
                    case 'i':
                        var $1203 = self.slice(0, -1);
                        var _bs$5 = $1203;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1205 = self.slice(0, -1);
                                var _bs$7 = $1205;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1207 = self.slice(0, -1);
                                        var _bs$9 = $1207;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1209 = self.slice(0, -1);
                                                var _bs$11 = $1209;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1211 = self.slice(0, -1);
                                                        var _bs$13 = $1211;
                                                        var $1212 = String$cons$(119, Kind$Name$from_bits$(_bs$13));
                                                        var $1210 = $1212;
                                                        break;
                                                    case 'i':
                                                        var $1213 = self.slice(0, -1);
                                                        var _bs$13 = $1213;
                                                        var $1214 = String$cons$(120, Kind$Name$from_bits$(_bs$13));
                                                        var $1210 = $1214;
                                                        break;
                                                    case 'e':
                                                        var $1215 = String$nil;
                                                        var $1210 = $1215;
                                                        break;
                                                };
                                                var $1208 = $1210;
                                                break;
                                            case 'i':
                                                var $1216 = self.slice(0, -1);
                                                var _bs$11 = $1216;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1218 = self.slice(0, -1);
                                                        var _bs$13 = $1218;
                                                        var $1219 = String$cons$(121, Kind$Name$from_bits$(_bs$13));
                                                        var $1217 = $1219;
                                                        break;
                                                    case 'i':
                                                        var $1220 = self.slice(0, -1);
                                                        var _bs$13 = $1220;
                                                        var $1221 = String$cons$(122, Kind$Name$from_bits$(_bs$13));
                                                        var $1217 = $1221;
                                                        break;
                                                    case 'e':
                                                        var $1222 = String$nil;
                                                        var $1217 = $1222;
                                                        break;
                                                };
                                                var $1208 = $1217;
                                                break;
                                            case 'e':
                                                var $1223 = String$nil;
                                                var $1208 = $1223;
                                                break;
                                        };
                                        var $1206 = $1208;
                                        break;
                                    case 'i':
                                        var $1224 = self.slice(0, -1);
                                        var _bs$9 = $1224;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1226 = self.slice(0, -1);
                                                var _bs$11 = $1226;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1228 = self.slice(0, -1);
                                                        var _bs$13 = $1228;
                                                        var $1229 = String$cons$(48, Kind$Name$from_bits$(_bs$13));
                                                        var $1227 = $1229;
                                                        break;
                                                    case 'i':
                                                        var $1230 = self.slice(0, -1);
                                                        var _bs$13 = $1230;
                                                        var $1231 = String$cons$(49, Kind$Name$from_bits$(_bs$13));
                                                        var $1227 = $1231;
                                                        break;
                                                    case 'e':
                                                        var $1232 = String$nil;
                                                        var $1227 = $1232;
                                                        break;
                                                };
                                                var $1225 = $1227;
                                                break;
                                            case 'i':
                                                var $1233 = self.slice(0, -1);
                                                var _bs$11 = $1233;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1235 = self.slice(0, -1);
                                                        var _bs$13 = $1235;
                                                        var $1236 = String$cons$(50, Kind$Name$from_bits$(_bs$13));
                                                        var $1234 = $1236;
                                                        break;
                                                    case 'i':
                                                        var $1237 = self.slice(0, -1);
                                                        var _bs$13 = $1237;
                                                        var $1238 = String$cons$(51, Kind$Name$from_bits$(_bs$13));
                                                        var $1234 = $1238;
                                                        break;
                                                    case 'e':
                                                        var $1239 = String$nil;
                                                        var $1234 = $1239;
                                                        break;
                                                };
                                                var $1225 = $1234;
                                                break;
                                            case 'e':
                                                var $1240 = String$nil;
                                                var $1225 = $1240;
                                                break;
                                        };
                                        var $1206 = $1225;
                                        break;
                                    case 'e':
                                        var $1241 = String$nil;
                                        var $1206 = $1241;
                                        break;
                                };
                                var $1204 = $1206;
                                break;
                            case 'i':
                                var $1242 = self.slice(0, -1);
                                var _bs$7 = $1242;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1244 = self.slice(0, -1);
                                        var _bs$9 = $1244;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1246 = self.slice(0, -1);
                                                var _bs$11 = $1246;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1248 = self.slice(0, -1);
                                                        var _bs$13 = $1248;
                                                        var $1249 = String$cons$(52, Kind$Name$from_bits$(_bs$13));
                                                        var $1247 = $1249;
                                                        break;
                                                    case 'i':
                                                        var $1250 = self.slice(0, -1);
                                                        var _bs$13 = $1250;
                                                        var $1251 = String$cons$(53, Kind$Name$from_bits$(_bs$13));
                                                        var $1247 = $1251;
                                                        break;
                                                    case 'e':
                                                        var $1252 = String$nil;
                                                        var $1247 = $1252;
                                                        break;
                                                };
                                                var $1245 = $1247;
                                                break;
                                            case 'i':
                                                var $1253 = self.slice(0, -1);
                                                var _bs$11 = $1253;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1255 = self.slice(0, -1);
                                                        var _bs$13 = $1255;
                                                        var $1256 = String$cons$(54, Kind$Name$from_bits$(_bs$13));
                                                        var $1254 = $1256;
                                                        break;
                                                    case 'i':
                                                        var $1257 = self.slice(0, -1);
                                                        var _bs$13 = $1257;
                                                        var $1258 = String$cons$(55, Kind$Name$from_bits$(_bs$13));
                                                        var $1254 = $1258;
                                                        break;
                                                    case 'e':
                                                        var $1259 = String$nil;
                                                        var $1254 = $1259;
                                                        break;
                                                };
                                                var $1245 = $1254;
                                                break;
                                            case 'e':
                                                var $1260 = String$nil;
                                                var $1245 = $1260;
                                                break;
                                        };
                                        var $1243 = $1245;
                                        break;
                                    case 'i':
                                        var $1261 = self.slice(0, -1);
                                        var _bs$9 = $1261;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1263 = self.slice(0, -1);
                                                var _bs$11 = $1263;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1265 = self.slice(0, -1);
                                                        var _bs$13 = $1265;
                                                        var $1266 = String$cons$(56, Kind$Name$from_bits$(_bs$13));
                                                        var $1264 = $1266;
                                                        break;
                                                    case 'i':
                                                        var $1267 = self.slice(0, -1);
                                                        var _bs$13 = $1267;
                                                        var $1268 = String$cons$(57, Kind$Name$from_bits$(_bs$13));
                                                        var $1264 = $1268;
                                                        break;
                                                    case 'e':
                                                        var $1269 = String$nil;
                                                        var $1264 = $1269;
                                                        break;
                                                };
                                                var $1262 = $1264;
                                                break;
                                            case 'i':
                                                var $1270 = self.slice(0, -1);
                                                var _bs$11 = $1270;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1272 = self.slice(0, -1);
                                                        var _bs$13 = $1272;
                                                        var $1273 = String$cons$(46, Kind$Name$from_bits$(_bs$13));
                                                        var $1271 = $1273;
                                                        break;
                                                    case 'i':
                                                        var $1274 = self.slice(0, -1);
                                                        var _bs$13 = $1274;
                                                        var $1275 = String$cons$(95, Kind$Name$from_bits$(_bs$13));
                                                        var $1271 = $1275;
                                                        break;
                                                    case 'e':
                                                        var $1276 = String$nil;
                                                        var $1271 = $1276;
                                                        break;
                                                };
                                                var $1262 = $1271;
                                                break;
                                            case 'e':
                                                var $1277 = String$nil;
                                                var $1262 = $1277;
                                                break;
                                        };
                                        var $1243 = $1262;
                                        break;
                                    case 'e':
                                        var $1278 = String$nil;
                                        var $1243 = $1278;
                                        break;
                                };
                                var $1204 = $1243;
                                break;
                            case 'e':
                                var $1279 = String$nil;
                                var $1204 = $1279;
                                break;
                        };
                        var $1125 = $1204;
                        break;
                    case 'e':
                        var $1280 = String$nil;
                        var $1125 = $1280;
                        break;
                };
                var $966 = $1125;
                break;
            case 'e':
                var $1281 = String$nil;
                var $966 = $1281;
                break;
        };
        return $966;
    };
    const Kind$Name$from_bits = x0 => Kind$Name$from_bits$(x0);

    function Kind$Map$to_list$(_xs$2) {
        var _kvs$3 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        var $1282 = List$mapped$(_kvs$3, (_kv$4 => {
            var self = _kv$4;
            switch (self._) {
                case 'Pair.new':
                    var $1284 = self.fst;
                    var $1285 = self.snd;
                    var $1286 = Pair$new$(Kind$Name$from_bits$($1284), $1285);
                    var $1283 = $1286;
                    break;
            };
            return $1283;
        }));
        return $1282;
    };
    const Kind$Map$to_list = x0 => Kind$Map$to_list$(x0);

    function Kind$Map$keys$(_xs$2) {
        var $1287 = List$mapped$(Kind$Map$to_list$(_xs$2), Pair$fst);
        return $1287;
    };
    const Kind$Map$keys = x0 => Kind$Map$keys$(x0);

    function Kind$Synth$load$cached$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $1289 = self.head;
                var $1290 = self.tail;
                var self = Kind$Synth$load$cached$is_loop$($1289, _defs$2);
                if (self) {
                    var $1292 = Kind$Synth$load$cached$($1290, _defs$2);
                    var $1291 = $1292;
                } else {
                    var _name$5 = $1289;
                    var $1293 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $1294 = _m$bind$6;
                        return $1294;
                    }))(Kind$Synth$load$cached$def$(_name$5))((_defn$6 => {
                        var self = _defn$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1296 = self.value;
                                var self = $1296;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $1298 = self.term;
                                        var $1299 = self.type;
                                        var _defs$17 = Kind$Map$set$(_name$5, $1296, _defs$2);
                                        var _deps$18 = Kind$Map$new;
                                        var _deps$19 = Kind$Core$dependencies$go$($1298, _deps$18);
                                        var _deps$20 = Kind$Core$dependencies$go$($1299, _deps$19);
                                        var _deps$21 = Kind$Map$keys$(_deps$20);
                                        var $1300 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                            var $1301 = _m$bind$22;
                                            return $1301;
                                        }))(Kind$Synth$load$cached$(_deps$21, _defs$17))((_defs$22 => {
                                            var self = _defs$22;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $1303 = self.value;
                                                    var $1304 = Kind$Synth$load$cached$($1290, $1303);
                                                    var $1302 = $1304;
                                                    break;
                                                case 'Maybe.none':
                                                    var $1305 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                                        var $1306 = _m$pure$24;
                                                        return $1306;
                                                    }))(Maybe$none);
                                                    var $1302 = $1305;
                                                    break;
                                            };
                                            return $1302;
                                        }));
                                        var $1297 = $1300;
                                        break;
                                };
                                var $1295 = $1297;
                                break;
                            case 'Maybe.none':
                                var $1307 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                    var $1308 = _m$pure$8;
                                    return $1308;
                                }))(Maybe$none);
                                var $1295 = $1307;
                                break;
                        };
                        return $1295;
                    }));
                    var $1291 = $1293;
                };
                var $1288 = $1291;
                break;
            case 'List.nil':
                var $1309 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1310 = _m$pure$4;
                    return $1310;
                }))(Maybe$some$(_defs$2));
                var $1288 = $1309;
                break;
        };
        return $1288;
    };
    const Kind$Synth$load$cached = x0 => x1 => Kind$Synth$load$cached$(x0, x1);

    function IO$request$(_url$1) {
        var $1311 = IO$ask$("request", _url$1, (_text$2 => {
            var $1312 = IO$end$(_text$2);
            return $1312;
        }));
        return $1311;
    };
    const IO$request = x0 => IO$request$(x0);

    function Kind$Synth$get_kind_code$(_file$1) {
        var $1313 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $1314 = _m$bind$2;
            return $1314;
        }))(IO$get_file$(_file$1))((_code$2 => {
            var self = (_code$2 === "");
            if (self) {
                var $1316 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1317 = _m$bind$3;
                    return $1317;
                }))(IO$request$(("http://uwu.tech:7172/" + _file$1)))((_code$3 => {
                    var $1318 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $1319 = _m$pure$5;
                        return $1319;
                    }))(_code$3);
                    return $1318;
                }));
                var $1315 = $1316;
            } else {
                var $1320 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1321 = _m$pure$4;
                    return $1321;
                }))(_code$2);
                var $1315 = $1320;
            };
            return $1315;
        }));
        return $1313;
    };
    const Kind$Synth$get_kind_code = x0 => Kind$Synth$get_kind_code$(x0);

    function Parser$is_eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1323 = self.str;
                var self = $1323;
                if (self.length === 0) {
                    var $1325 = Parser$Reply$value$(_pst$1, Bool$true);
                    var $1324 = $1325;
                } else {
                    var $1326 = self.charCodeAt(0);
                    var $1327 = self.slice(1);
                    var $1328 = Parser$Reply$value$(_pst$1, Bool$false);
                    var $1324 = $1328;
                };
                var $1322 = $1324;
                break;
        };
        return $1322;
    };
    const Parser$is_eof = x0 => Parser$is_eof$(x0);

    function Parser$(_V$1) {
        var $1329 = null;
        return $1329;
    };
    const Parser = x0 => Parser$(x0);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1330 = self.err;
                        var $1331 = self.nam;
                        var $1332 = self.ini;
                        var $1333 = self.idx;
                        var $1334 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $1336 = self.head;
                                var $1337 = self.tail;
                                var _parsed$11 = $1336(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1339 = self.err;
                                        var _cur_err$13 = Maybe$some$($1339);
                                        var _far_err$14 = Parser$Error$maybe_combine$($1330, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $1331, $1332, $1333, $1334);
                                        var $1340 = Parser$choice$($1337, _new_pst$15);
                                        var $1338 = $1340;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1341 = self.pst;
                                        var $1342 = self.val;
                                        var $1343 = Parser$Reply$value$($1341, $1342);
                                        var $1338 = $1343;
                                        break;
                                };
                                var $1335 = $1338;
                                break;
                            case 'List.nil':
                                var self = $1330;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1345 = self.value;
                                        var $1346 = Parser$Reply$error$($1345);
                                        var $1344 = $1346;
                                        break;
                                    case 'Maybe.none':
                                        var $1347 = Parser$Reply$fail$($1331, $1332, $1333, "No parse.");
                                        var $1344 = $1347;
                                        break;
                                };
                                var $1335 = $1344;
                                break;
                        };
                        return $1335;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1348 = self.err;
                        var $1349 = self.nam;
                        var $1350 = self.ini;
                        var $1351 = self.idx;
                        var $1352 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $1354 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $1353 = $1354;
                        } else {
                            var $1355 = self.charCodeAt(0);
                            var $1356 = self.slice(1);
                            var self = $1352;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $1358 = Parser$Reply$fail$($1349, $1350, _ini_idx$1, _error_msg$12);
                                var $1357 = $1358;
                            } else {
                                var $1359 = self.charCodeAt(0);
                                var $1360 = self.slice(1);
                                var self = ($1355 === $1359);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($1348, $1349, $1350, Nat$succ$($1351), $1360);
                                    var $1362 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $1356, _pst$14);
                                    var $1361 = $1362;
                                } else {
                                    var _chr$14 = String$cons$($1359, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $1363 = Parser$Reply$fail$($1349, $1350, _ini_idx$1, _err$15);
                                    var $1361 = $1363;
                                };
                                var $1357 = $1361;
                            };
                            var $1353 = $1357;
                        };
                        return $1353;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1365 = self.idx;
                var self = Parser$text$go$($1365, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1367 = self.err;
                        var $1368 = Parser$Reply$error$($1367);
                        var $1366 = $1368;
                        break;
                    case 'Parser.Reply.value':
                        var $1369 = self.pst;
                        var $1370 = self.val;
                        var $1371 = Parser$Reply$value$($1369, $1370);
                        var $1366 = $1371;
                        break;
                };
                var $1364 = $1366;
                break;
        };
        return $1364;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1373 = self.nam;
                var $1374 = self.ini;
                var $1375 = self.idx;
                var $1376 = self.str;
                var self = $1376;
                if (self.length === 0) {
                    var $1378 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $1377 = $1378;
                } else {
                    var $1379 = self.charCodeAt(0);
                    var $1380 = self.slice(1);
                    var $1381 = Parser$Reply$fail$($1373, $1374, $1375, "Expected end-of-file.");
                    var $1377 = $1381;
                };
                var $1372 = $1377;
                break;
        };
        return $1372;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1383 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $1385 = self.err;
                                var $1386 = Parser$Reply$error$(Parser$Error$combine$($1385, $1383));
                                var $1384 = $1386;
                                break;
                            case 'Parser.Reply.value':
                                var $1387 = self.pst;
                                var $1388 = self.val;
                                var $1389 = Parser$until$go$(_until$2, _parse$3, List$cons$($1388, _values$4), $1387);
                                var $1384 = $1389;
                                break;
                        };
                        var $1382 = $1384;
                        break;
                    case 'Parser.Reply.value':
                        var $1390 = self.pst;
                        var $1391 = Parser$Reply$value$($1390, List$reverse$(_values$4));
                        var $1382 = $1391;
                        break;
                };
                return $1382;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $1392 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $1392;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1394 = self.err;
                var $1395 = self.nam;
                var $1396 = self.ini;
                var $1397 = self.idx;
                var $1398 = self.str;
                var self = $1398;
                if (self.length === 0) {
                    var $1400 = Parser$Reply$fail$($1395, $1396, $1397, "Unexpected end of file.");
                    var $1399 = $1400;
                } else {
                    var $1401 = self.charCodeAt(0);
                    var $1402 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1394, $1395, $1396, Nat$succ$($1397), $1402);
                    var $1403 = Parser$Reply$value$(_pst$9, $1401);
                    var $1399 = $1403;
                };
                var $1393 = $1399;
                break;
        };
        return $1393;
    };
    const Parser$one = x0 => Parser$one$(x0);

    function Kind$Parser$comment$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1405 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1407 = self.err;
                        var self = $1405;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1409 = self.value;
                                var $1410 = Parser$Reply$error$(Parser$Error$combine$($1409, $1407));
                                var $1408 = $1410;
                                break;
                            case 'Maybe.none':
                                var $1411 = Parser$Reply$error$($1407);
                                var $1408 = $1411;
                                break;
                        };
                        var $1406 = $1408;
                        break;
                    case 'Parser.Reply.value':
                        var $1412 = self.pst;
                        var self = $1412;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1414 = self.err;
                                var $1415 = self.nam;
                                var $1416 = self.ini;
                                var $1417 = self.idx;
                                var $1418 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1405, $1414), $1415, $1416, $1417, $1418);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1420 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1422 = self.err;
                                                var self = $1420;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1424 = self.value;
                                                        var $1425 = Parser$Reply$error$(Parser$Error$combine$($1424, $1422));
                                                        var $1423 = $1425;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1426 = Parser$Reply$error$($1422);
                                                        var $1423 = $1426;
                                                        break;
                                                };
                                                var $1421 = $1423;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1427 = self.pst;
                                                var self = $1427;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1429 = self.err;
                                                        var $1430 = self.nam;
                                                        var $1431 = self.ini;
                                                        var $1432 = self.idx;
                                                        var $1433 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1420, $1429), $1430, $1431, $1432, $1433);
                                                        var $1434 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $1428 = $1434;
                                                        break;
                                                };
                                                var $1421 = $1428;
                                                break;
                                        };
                                        var $1419 = $1421;
                                        break;
                                };
                                var $1413 = $1419;
                                break;
                        };
                        var $1406 = $1413;
                        break;
                };
                var $1404 = $1406;
                break;
        };
        return $1404;
    };
    const Kind$Parser$comment = x0 => Kind$Parser$comment$(x0);
    const Kind$Parser$spaces = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$(Kind$Parser$comment, List$nil)))))));

    function Parser$get_idx$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1436 = self.idx;
                var $1437 = Parser$Reply$value$(_pst$1, $1436);
                var $1435 = $1437;
                break;
        };
        return $1435;
    };
    const Parser$get_idx = x0 => Parser$get_idx$(x0);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $1438 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $1438;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);

    function Kind$Name$is_letter$(_chr$1) {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $1440 = Bool$true;
            var $1439 = $1440;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $1442 = Bool$true;
                var $1441 = $1442;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $1444 = Bool$true;
                    var $1443 = $1444;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $1446 = Bool$true;
                        var $1445 = $1446;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $1448 = Bool$true;
                            var $1447 = $1448;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $1450 = Bool$true;
                                var $1449 = $1450;
                            } else {
                                var $1451 = Bool$false;
                                var $1449 = $1451;
                            };
                            var $1447 = $1449;
                        };
                        var $1445 = $1447;
                    };
                    var $1443 = $1445;
                };
                var $1441 = $1443;
            };
            var $1439 = $1441;
        };
        return $1439;
    };
    const Kind$Name$is_letter = x0 => Kind$Name$is_letter$(x0);

    function Kind$Parser$letter$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1453 = self.err;
                var $1454 = self.nam;
                var $1455 = self.ini;
                var $1456 = self.idx;
                var $1457 = self.str;
                var self = $1457;
                if (self.length === 0) {
                    var $1459 = Parser$Reply$fail$($1454, $1455, $1456, "Unexpected eof.");
                    var $1458 = $1459;
                } else {
                    var $1460 = self.charCodeAt(0);
                    var $1461 = self.slice(1);
                    var self = Kind$Name$is_letter$($1460);
                    if (self) {
                        var _pst$9 = Parser$State$new$($1453, $1454, $1455, Nat$succ$($1456), $1461);
                        var $1463 = Parser$Reply$value$(_pst$9, $1460);
                        var $1462 = $1463;
                    } else {
                        var $1464 = Parser$Reply$fail$($1454, $1455, $1456, "Expected name.");
                        var $1462 = $1464;
                    };
                    var $1458 = $1462;
                };
                var $1452 = $1458;
                break;
        };
        return $1452;
    };
    const Kind$Parser$letter = x0 => Kind$Parser$letter$(x0);

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $1466 = self.head;
                var $1467 = self.tail;
                var $1468 = _cons$5($1466)(List$fold$($1467, _nil$4, _cons$5));
                var $1465 = $1468;
                break;
            case 'List.nil':
                var $1469 = _nil$4;
                var $1465 = $1469;
                break;
        };
        return $1465;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1471 = self.nam;
                var $1472 = self.ini;
                var $1473 = self.idx;
                var $1474 = Parser$Reply$fail$($1471, $1472, $1473, _error$2);
                var $1470 = $1474;
                break;
        };
        return $1470;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function String$head$(_xs$1) {
        var self = _xs$1;
        if (self.length === 0) {
            var $1476 = Maybe$none;
            var $1475 = $1476;
        } else {
            var $1477 = self.charCodeAt(0);
            var $1478 = self.slice(1);
            var $1479 = Maybe$some$($1477);
            var $1475 = $1479;
        };
        return $1475;
    };
    const String$head = x0 => String$head$(x0);

    function Kind$Parser$name1$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1481 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1483 = self.err;
                        var self = $1481;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1485 = self.value;
                                var $1486 = Parser$Reply$error$(Parser$Error$combine$($1485, $1483));
                                var $1484 = $1486;
                                break;
                            case 'Maybe.none':
                                var $1487 = Parser$Reply$error$($1483);
                                var $1484 = $1487;
                                break;
                        };
                        var $1482 = $1484;
                        break;
                    case 'Parser.Reply.value':
                        var $1488 = self.pst;
                        var self = $1488;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1490 = self.err;
                                var $1491 = self.nam;
                                var $1492 = self.ini;
                                var $1493 = self.idx;
                                var $1494 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1481, $1490), $1491, $1492, $1493, $1494);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1496 = self.err;
                                        var _reply$21 = Parser$many1$(Kind$Parser$letter, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1498 = self.err;
                                                var self = $1496;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1500 = self.value;
                                                        var $1501 = Parser$Reply$error$(Parser$Error$combine$($1500, $1498));
                                                        var $1499 = $1501;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1502 = Parser$Reply$error$($1498);
                                                        var $1499 = $1502;
                                                        break;
                                                };
                                                var $1497 = $1499;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1503 = self.pst;
                                                var $1504 = self.val;
                                                var self = $1503;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1506 = self.err;
                                                        var $1507 = self.nam;
                                                        var $1508 = self.ini;
                                                        var $1509 = self.idx;
                                                        var $1510 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1496, $1506), $1507, $1508, $1509, $1510);
                                                        var _name$30 = List$fold$($1504, String$nil, String$cons);
                                                        var _reserved$31 = Parser$fail("Reserved keyword.");
                                                        var _numeric$32 = Parser$fail("Name can\'t start with number or sign.");
                                                        var self = (_name$30 === "case");
                                                        if (self) {
                                                            var $1512 = _reserved$31;
                                                            var $1511 = $1512;
                                                        } else {
                                                            var self = (_name$30 === "do");
                                                            if (self) {
                                                                var $1514 = _reserved$31;
                                                                var $1513 = $1514;
                                                            } else {
                                                                var self = (_name$30 === "if");
                                                                if (self) {
                                                                    var $1516 = _reserved$31;
                                                                    var $1515 = $1516;
                                                                } else {
                                                                    var self = (_name$30 === "with");
                                                                    if (self) {
                                                                        var $1518 = _reserved$31;
                                                                        var $1517 = $1518;
                                                                    } else {
                                                                        var self = (_name$30 === "for");
                                                                        if (self) {
                                                                            var $1520 = _reserved$31;
                                                                            var $1519 = $1520;
                                                                        } else {
                                                                            var self = (_name$30 === "else");
                                                                            if (self) {
                                                                                var $1522 = _reserved$31;
                                                                                var $1521 = $1522;
                                                                            } else {
                                                                                var self = (_name$30 === "switch");
                                                                                if (self) {
                                                                                    var $1524 = _reserved$31;
                                                                                    var $1523 = $1524;
                                                                                } else {
                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 43);
                                                                                    if (self) {
                                                                                        var $1526 = _numeric$32;
                                                                                        var $1525 = $1526;
                                                                                    } else {
                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 45);
                                                                                        if (self) {
                                                                                            var $1528 = _numeric$32;
                                                                                            var $1527 = $1528;
                                                                                        } else {
                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 48);
                                                                                            if (self) {
                                                                                                var $1530 = _numeric$32;
                                                                                                var $1529 = $1530;
                                                                                            } else {
                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 49);
                                                                                                if (self) {
                                                                                                    var $1532 = _numeric$32;
                                                                                                    var $1531 = $1532;
                                                                                                } else {
                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 50);
                                                                                                    if (self) {
                                                                                                        var $1534 = _numeric$32;
                                                                                                        var $1533 = $1534;
                                                                                                    } else {
                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 51);
                                                                                                        if (self) {
                                                                                                            var $1536 = _numeric$32;
                                                                                                            var $1535 = $1536;
                                                                                                        } else {
                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 52);
                                                                                                            if (self) {
                                                                                                                var $1538 = _numeric$32;
                                                                                                                var $1537 = $1538;
                                                                                                            } else {
                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 53);
                                                                                                                if (self) {
                                                                                                                    var $1540 = _numeric$32;
                                                                                                                    var $1539 = $1540;
                                                                                                                } else {
                                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 54);
                                                                                                                    if (self) {
                                                                                                                        var $1542 = _numeric$32;
                                                                                                                        var $1541 = $1542;
                                                                                                                    } else {
                                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 55);
                                                                                                                        if (self) {
                                                                                                                            var $1544 = _numeric$32;
                                                                                                                            var $1543 = $1544;
                                                                                                                        } else {
                                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 56);
                                                                                                                            if (self) {
                                                                                                                                var $1546 = _numeric$32;
                                                                                                                                var $1545 = $1546;
                                                                                                                            } else {
                                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 57);
                                                                                                                                if (self) {
                                                                                                                                    var $1548 = _numeric$32;
                                                                                                                                    var $1547 = $1548;
                                                                                                                                } else {
                                                                                                                                    var $1549 = (_pst$33 => {
                                                                                                                                        var $1550 = Parser$Reply$value$(_pst$33, _name$30);
                                                                                                                                        return $1550;
                                                                                                                                    });
                                                                                                                                    var $1547 = $1549;
                                                                                                                                };
                                                                                                                                var $1545 = $1547;
                                                                                                                            };
                                                                                                                            var $1543 = $1545;
                                                                                                                        };
                                                                                                                        var $1541 = $1543;
                                                                                                                    };
                                                                                                                    var $1539 = $1541;
                                                                                                                };
                                                                                                                var $1537 = $1539;
                                                                                                            };
                                                                                                            var $1535 = $1537;
                                                                                                        };
                                                                                                        var $1533 = $1535;
                                                                                                    };
                                                                                                    var $1531 = $1533;
                                                                                                };
                                                                                                var $1529 = $1531;
                                                                                            };
                                                                                            var $1527 = $1529;
                                                                                        };
                                                                                        var $1525 = $1527;
                                                                                    };
                                                                                    var $1523 = $1525;
                                                                                };
                                                                                var $1521 = $1523;
                                                                            };
                                                                            var $1519 = $1521;
                                                                        };
                                                                        var $1517 = $1519;
                                                                    };
                                                                    var $1515 = $1517;
                                                                };
                                                                var $1513 = $1515;
                                                            };
                                                            var $1511 = $1513;
                                                        };
                                                        var $1511 = $1511(_reply$pst$29);
                                                        var $1505 = $1511;
                                                        break;
                                                };
                                                var $1497 = $1505;
                                                break;
                                        };
                                        var $1495 = $1497;
                                        break;
                                };
                                var $1489 = $1495;
                                break;
                        };
                        var $1482 = $1489;
                        break;
                };
                var $1480 = $1482;
                break;
        };
        return $1480;
    };
    const Kind$Parser$name1 = x0 => Kind$Parser$name1$(x0);

    function Parser$until1$(_cond$2, _parser$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $1552 = self.err;
                var _reply$10 = _parser$3(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1554 = self.err;
                        var self = $1552;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1556 = self.value;
                                var $1557 = Parser$Reply$error$(Parser$Error$combine$($1556, $1554));
                                var $1555 = $1557;
                                break;
                            case 'Maybe.none':
                                var $1558 = Parser$Reply$error$($1554);
                                var $1555 = $1558;
                                break;
                        };
                        var $1553 = $1555;
                        break;
                    case 'Parser.Reply.value':
                        var $1559 = self.pst;
                        var $1560 = self.val;
                        var self = $1559;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1562 = self.err;
                                var $1563 = self.nam;
                                var $1564 = self.ini;
                                var $1565 = self.idx;
                                var $1566 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($1552, $1562), $1563, $1564, $1565, $1566);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1568 = self.err;
                                        var _reply$24 = Parser$until$(_cond$2, _parser$3)(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1570 = self.err;
                                                var self = $1568;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1572 = self.value;
                                                        var $1573 = Parser$Reply$error$(Parser$Error$combine$($1572, $1570));
                                                        var $1571 = $1573;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1574 = Parser$Reply$error$($1570);
                                                        var $1571 = $1574;
                                                        break;
                                                };
                                                var $1569 = $1571;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1575 = self.pst;
                                                var $1576 = self.val;
                                                var self = $1575;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1578 = self.err;
                                                        var $1579 = self.nam;
                                                        var $1580 = self.ini;
                                                        var $1581 = self.idx;
                                                        var $1582 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1568, $1578), $1579, $1580, $1581, $1582);
                                                        var $1583 = Parser$Reply$value$(_reply$pst$32, List$cons$($1560, $1576));
                                                        var $1577 = $1583;
                                                        break;
                                                };
                                                var $1569 = $1577;
                                                break;
                                        };
                                        var $1567 = $1569;
                                        break;
                                };
                                var $1561 = $1567;
                                break;
                        };
                        var $1553 = $1561;
                        break;
                };
                var $1551 = $1553;
                break;
        };
        return $1551;
    };
    const Parser$until1 = x0 => x1 => x2 => Parser$until1$(x0, x1, x2);

    function Parser$wrap1$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1585 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1587 = self.err;
                        var self = $1585;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1589 = self.value;
                                var $1590 = Parser$Reply$error$(Parser$Error$combine$($1589, $1587));
                                var $1588 = $1590;
                                break;
                            case 'Maybe.none':
                                var $1591 = Parser$Reply$error$($1587);
                                var $1588 = $1591;
                                break;
                        };
                        var $1586 = $1588;
                        break;
                    case 'Parser.Reply.value':
                        var $1592 = self.pst;
                        var self = $1592;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1594 = self.err;
                                var $1595 = self.nam;
                                var $1596 = self.ini;
                                var $1597 = self.idx;
                                var $1598 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1585, $1594), $1595, $1596, $1597, $1598);
                                var $1599 = Parser$until1$(_close$4, _parse$3, _reply$pst$19);
                                var $1593 = $1599;
                                break;
                        };
                        var $1586 = $1593;
                        break;
                };
                var $1584 = $1586;
                break;
        };
        return $1584;
    };
    const Parser$wrap1 = x0 => x1 => x2 => x3 => Parser$wrap1$(x0, x1, x2, x3);

    function Kind$Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1601 = self.err;
                var _reply$8 = Kind$Parser$spaces(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1603 = self.err;
                        var self = $1601;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1605 = self.value;
                                var $1606 = Parser$Reply$error$(Parser$Error$combine$($1605, $1603));
                                var $1604 = $1606;
                                break;
                            case 'Maybe.none':
                                var $1607 = Parser$Reply$error$($1603);
                                var $1604 = $1607;
                                break;
                        };
                        var $1602 = $1604;
                        break;
                    case 'Parser.Reply.value':
                        var $1608 = self.pst;
                        var self = $1608;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1610 = self.err;
                                var $1611 = self.nam;
                                var $1612 = self.ini;
                                var $1613 = self.idx;
                                var $1614 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1601, $1610), $1611, $1612, $1613, $1614);
                                var $1615 = Parser$text$(_text$1, _reply$pst$16);
                                var $1609 = $1615;
                                break;
                        };
                        var $1602 = $1609;
                        break;
                };
                var $1600 = $1602;
                break;
        };
        return $1600;
    };
    const Kind$Parser$text = x0 => x1 => Kind$Parser$text$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $1618 = self.pst;
                        var $1619 = self.val;
                        var $1620 = Parser$Reply$value$($1618, Maybe$some$($1619));
                        var $1617 = $1620;
                        break;
                    case 'Parser.Reply.error':
                        var $1621 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $1617 = $1621;
                        break;
                };
                var $1616 = $1617;
                break;
        };
        return $1616;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kind$Parser$items1$(_ini$2, _parser$3, _end$4) {
        var $1622 = Parser$wrap1(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1624 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1626 = self.err;
                            var self = $1624;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1628 = self.value;
                                    var $1629 = Parser$Reply$error$(Parser$Error$combine$($1628, $1626));
                                    var $1627 = $1629;
                                    break;
                                case 'Maybe.none':
                                    var $1630 = Parser$Reply$error$($1626);
                                    var $1627 = $1630;
                                    break;
                            };
                            var $1625 = $1627;
                            break;
                        case 'Parser.Reply.value':
                            var $1631 = self.pst;
                            var self = $1631;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1633 = self.err;
                                    var $1634 = self.nam;
                                    var $1635 = self.ini;
                                    var $1636 = self.idx;
                                    var $1637 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1624, $1633), $1634, $1635, $1636, $1637);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1639 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1641 = self.err;
                                                    var self = $1639;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1643 = self.value;
                                                            var $1644 = Parser$Reply$error$(Parser$Error$combine$($1643, $1641));
                                                            var $1642 = $1644;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1645 = Parser$Reply$error$($1641);
                                                            var $1642 = $1645;
                                                            break;
                                                    };
                                                    var $1640 = $1642;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1646 = self.pst;
                                                    var $1647 = self.val;
                                                    var self = $1646;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1649 = self.err;
                                                            var $1650 = self.nam;
                                                            var $1651 = self.ini;
                                                            var $1652 = self.idx;
                                                            var $1653 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1639, $1649), $1650, $1651, $1652, $1653);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1655 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1657 = self.err;
                                                                            var self = $1655;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1659 = self.value;
                                                                                    var $1660 = Parser$Reply$error$(Parser$Error$combine$($1659, $1657));
                                                                                    var $1658 = $1660;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1661 = Parser$Reply$error$($1657);
                                                                                    var $1658 = $1661;
                                                                                    break;
                                                                            };
                                                                            var $1656 = $1658;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1662 = self.pst;
                                                                            var self = $1662;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1664 = self.err;
                                                                                    var $1665 = self.nam;
                                                                                    var $1666 = self.ini;
                                                                                    var $1667 = self.idx;
                                                                                    var $1668 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1655, $1664), $1665, $1666, $1667, $1668);
                                                                                    var $1669 = Parser$Reply$value$(_reply$pst$47, $1647);
                                                                                    var $1663 = $1669;
                                                                                    break;
                                                                            };
                                                                            var $1656 = $1663;
                                                                            break;
                                                                    };
                                                                    var $1654 = $1656;
                                                                    break;
                                                            };
                                                            var $1648 = $1654;
                                                            break;
                                                    };
                                                    var $1640 = $1648;
                                                    break;
                                            };
                                            var $1638 = $1640;
                                            break;
                                    };
                                    var $1632 = $1638;
                                    break;
                            };
                            var $1625 = $1632;
                            break;
                    };
                    var $1623 = $1625;
                    break;
            };
            return $1623;
        }))(Kind$Parser$text(_end$4));
        return $1622;
    };
    const Kind$Parser$items1 = x0 => x1 => x2 => Kind$Parser$items1$(x0, x1, x2);

    function Kind$Parser$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1671 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1673 = self.err;
                        var self = $1671;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1675 = self.value;
                                var $1676 = Parser$Reply$error$(Parser$Error$combine$($1675, $1673));
                                var $1674 = $1676;
                                break;
                            case 'Maybe.none':
                                var $1677 = Parser$Reply$error$($1673);
                                var $1674 = $1677;
                                break;
                        };
                        var $1672 = $1674;
                        break;
                    case 'Parser.Reply.value':
                        var $1678 = self.pst;
                        var self = $1678;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1680 = self.err;
                                var $1681 = self.nam;
                                var $1682 = self.ini;
                                var $1683 = self.idx;
                                var $1684 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1671, $1680), $1681, $1682, $1683, $1684);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1686 = self.err;
                                        var _reply$21 = Parser$many$(Kind$Parser$letter)(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1688 = self.err;
                                                var self = $1686;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1690 = self.value;
                                                        var $1691 = Parser$Reply$error$(Parser$Error$combine$($1690, $1688));
                                                        var $1689 = $1691;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1692 = Parser$Reply$error$($1688);
                                                        var $1689 = $1692;
                                                        break;
                                                };
                                                var $1687 = $1689;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1693 = self.pst;
                                                var $1694 = self.val;
                                                var self = $1693;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1696 = self.err;
                                                        var $1697 = self.nam;
                                                        var $1698 = self.ini;
                                                        var $1699 = self.idx;
                                                        var $1700 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1686, $1696), $1697, $1698, $1699, $1700);
                                                        var $1701 = Parser$Reply$value$(_reply$pst$29, List$fold$($1694, String$nil, String$cons));
                                                        var $1695 = $1701;
                                                        break;
                                                };
                                                var $1687 = $1695;
                                                break;
                                        };
                                        var $1685 = $1687;
                                        break;
                                };
                                var $1679 = $1685;
                                break;
                        };
                        var $1672 = $1679;
                        break;
                };
                var $1670 = $1672;
                break;
        };
        return $1670;
    };
    const Kind$Parser$name = x0 => Kind$Parser$name$(x0);

    function Kind$Term$ori$(_orig$1, _expr$2) {
        var $1702 = ({
            _: 'Kind.Term.ori',
            'orig': _orig$1,
            'expr': _expr$2
        });
        return $1702;
    };
    const Kind$Term$ori = x0 => x1 => Kind$Term$ori$(x0, x1);

    function Kind$Parser$block$(_name$1, _parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var _reply$9 = Kind$Parser$spaces(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1705 = self.err;
                        var $1706 = Parser$Reply$error$($1705);
                        var $1704 = $1706;
                        break;
                    case 'Parser.Reply.value':
                        var $1707 = self.pst;
                        var _pst$12 = $1707;
                        var self = _pst$12;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1709 = self.err;
                                var $1710 = self.nam;
                                var $1711 = self.ini;
                                var $1712 = self.idx;
                                var $1713 = self.str;
                                var _reply$18 = _parse$2(Parser$State$new$($1709, _name$1, $1712, $1712, $1713));
                                var self = _reply$18;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1715 = self.err;
                                        var $1716 = Parser$Reply$error$($1715);
                                        var $1714 = $1716;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1717 = self.pst;
                                        var $1718 = self.val;
                                        var self = $1717;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1720 = self.err;
                                                var $1721 = self.idx;
                                                var $1722 = self.str;
                                                var _new_pst$26 = Parser$State$new$($1720, $1710, $1711, $1721, $1722);
                                                var $1723 = Parser$Reply$value$(_new_pst$26, Kind$Term$ori$(Pair$new$($1712, $1721), $1718));
                                                var $1719 = $1723;
                                                break;
                                        };
                                        var $1714 = $1719;
                                        break;
                                };
                                var $1708 = $1714;
                                break;
                        };
                        var $1704 = $1708;
                        break;
                };
                var $1703 = $1704;
                break;
        };
        return $1703;
    };
    const Kind$Parser$block = x0 => x1 => x2 => Kind$Parser$block$(x0, x1, x2);

    function Kind$Parser$dom$prop$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1725 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1727 = self.err;
                        var self = $1725;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1729 = self.value;
                                var $1730 = Parser$Reply$error$(Parser$Error$combine$($1729, $1727));
                                var $1728 = $1730;
                                break;
                            case 'Maybe.none':
                                var $1731 = Parser$Reply$error$($1727);
                                var $1728 = $1731;
                                break;
                        };
                        var $1726 = $1728;
                        break;
                    case 'Parser.Reply.value':
                        var $1732 = self.pst;
                        var $1733 = self.val;
                        var self = $1732;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1735 = self.err;
                                var $1736 = self.nam;
                                var $1737 = self.ini;
                                var $1738 = self.idx;
                                var $1739 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1725, $1735), $1736, $1737, $1738, $1739);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1741 = self.err;
                                        var _reply$21 = Kind$Parser$text$("=", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1743 = self.err;
                                                var self = $1741;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1745 = self.value;
                                                        var $1746 = Parser$Reply$error$(Parser$Error$combine$($1745, $1743));
                                                        var $1744 = $1746;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1747 = Parser$Reply$error$($1743);
                                                        var $1744 = $1747;
                                                        break;
                                                };
                                                var $1742 = $1744;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1748 = self.pst;
                                                var self = $1748;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1750 = self.err;
                                                        var $1751 = self.nam;
                                                        var $1752 = self.ini;
                                                        var $1753 = self.idx;
                                                        var $1754 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1741, $1750), $1751, $1752, $1753, $1754);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1756 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1758 = self.err;
                                                                        var self = $1756;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1760 = self.value;
                                                                                var $1761 = Parser$Reply$error$(Parser$Error$combine$($1760, $1758));
                                                                                var $1759 = $1761;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1762 = Parser$Reply$error$($1758);
                                                                                var $1759 = $1762;
                                                                                break;
                                                                        };
                                                                        var $1757 = $1759;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1763 = self.pst;
                                                                        var $1764 = self.val;
                                                                        var self = $1763;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1766 = self.err;
                                                                                var $1767 = self.nam;
                                                                                var $1768 = self.ini;
                                                                                var $1769 = self.idx;
                                                                                var $1770 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1756, $1766), $1767, $1768, $1769, $1770);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1772 = self.err;
                                                                                        var _reply$49 = Kind$Parser$spaces(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1774 = self.err;
                                                                                                var self = $1772;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1776 = self.value;
                                                                                                        var $1777 = Parser$Reply$error$(Parser$Error$combine$($1776, $1774));
                                                                                                        var $1775 = $1777;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1778 = Parser$Reply$error$($1774);
                                                                                                        var $1775 = $1778;
                                                                                                        break;
                                                                                                };
                                                                                                var $1773 = $1775;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1779 = self.pst;
                                                                                                var self = $1779;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1781 = self.err;
                                                                                                        var $1782 = self.nam;
                                                                                                        var $1783 = self.ini;
                                                                                                        var $1784 = self.idx;
                                                                                                        var $1785 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1772, $1781), $1782, $1783, $1784, $1785);
                                                                                                        var $1786 = Parser$Reply$value$(_reply$pst$57, Pair$new$($1733, $1764));
                                                                                                        var $1780 = $1786;
                                                                                                        break;
                                                                                                };
                                                                                                var $1773 = $1780;
                                                                                                break;
                                                                                        };
                                                                                        var $1771 = $1773;
                                                                                        break;
                                                                                };
                                                                                var $1765 = $1771;
                                                                                break;
                                                                        };
                                                                        var $1757 = $1765;
                                                                        break;
                                                                };
                                                                var $1755 = $1757;
                                                                break;
                                                        };
                                                        var $1749 = $1755;
                                                        break;
                                                };
                                                var $1742 = $1749;
                                                break;
                                        };
                                        var $1740 = $1742;
                                        break;
                                };
                                var $1734 = $1740;
                                break;
                        };
                        var $1726 = $1734;
                        break;
                };
                var $1724 = $1726;
                break;
        };
        return $1724;
    };
    const Kind$Parser$dom$prop = x0 => Kind$Parser$dom$prop$(x0);

    function Kind$Term$hol$(_path$1) {
        var $1787 = ({
            _: 'Kind.Term.hol',
            'path': _path$1
        });
        return $1787;
    };
    const Kind$Term$hol = x0 => Kind$Term$hol$(x0);

    function Kind$Parser$dom$gen_prop$go$(_values$1, _result$2) {
        var Kind$Parser$dom$gen_prop$go$ = (_values$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_values$1, _result$2]
        });
        var Kind$Parser$dom$gen_prop$go = _values$1 => _result$2 => Kind$Parser$dom$gen_prop$go$(_values$1, _result$2);
        var arg = [_values$1, _result$2];
        while (true) {
            let [_values$1, _result$2] = arg;
            var R = (() => {
                var self = _values$1;
                switch (self._) {
                    case 'List.cons':
                        var $1788 = self.head;
                        var $1789 = self.tail;
                        var self = $1788;
                        switch (self._) {
                            case 'Pair.new':
                                var $1791 = self.fst;
                                var $1792 = self.snd;
                                var self = ($1791 === "style");
                                if (self) {
                                    var $1794 = Kind$Parser$dom$gen_prop$go$($1789, Pair$new$((() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1795 = self.fst;
                                                var $1796 = $1795;
                                                return $1796;
                                        };
                                    })(), $1792));
                                    var $1793 = $1794;
                                } else {
                                    var _pair$7 = Kind$Term$ref$("Pair.new");
                                    var _pair$8 = Kind$Term$app$(_pair$7, Kind$Term$hol$(Bits$e));
                                    var _pair$9 = Kind$Term$app$(_pair$8, Kind$Term$hol$(Bits$e));
                                    var _pair$10 = Kind$Term$app$(_pair$9, Kind$Term$str$($1791));
                                    var _pair$11 = Kind$Term$app$(_pair$10, $1792);
                                    var _term$12 = Kind$Term$ref$("List.cons");
                                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                                    var _term$14 = Kind$Term$app$(_term$13, _pair$11);
                                    var _term$15 = Kind$Term$app$(_term$14, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1798 = self.fst;
                                                var $1799 = $1798;
                                                return $1799;
                                        };
                                    })());
                                    var $1797 = Kind$Parser$dom$gen_prop$go$($1789, Pair$new$(_term$15, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1800 = self.snd;
                                                var $1801 = $1800;
                                                return $1801;
                                        };
                                    })()));
                                    var $1793 = $1797;
                                };
                                var $1790 = $1793;
                                break;
                        };
                        return $1790;
                    case 'List.nil':
                        var $1802 = _result$2;
                        return $1802;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$dom$gen_prop$go = x0 => x1 => Kind$Parser$dom$gen_prop$go$(x0, x1);

    function Kind$Parser$dom$gen_prop$(_values$1) {
        var _empty_list$2 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
        var _empty_map$3 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
        var self = Kind$Parser$dom$gen_prop$go$(_values$1, Pair$new$(_empty_list$2, _empty_map$3));
        switch (self._) {
            case 'Pair.new':
                var $1804 = self.fst;
                var $1805 = self.snd;
                var _term_prop$6 = Kind$Term$ref$("Map.from_list");
                var _term_prop$7 = Kind$Term$app$(_term_prop$6, Kind$Term$hol$(Bits$e));
                var _term_prop$8 = Kind$Term$app$(_term_prop$7, $1804);
                var $1806 = Pair$new$(_term_prop$8, $1805);
                var $1803 = $1806;
                break;
        };
        return $1803;
    };
    const Kind$Parser$dom$gen_prop = x0 => Kind$Parser$dom$gen_prop$(x0);
    const Kind$Parser$dom$for = Kind$Parser$block("for_dom")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1808 = self.err;
                var _reply$7 = Kind$Parser$text$("for ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1810 = self.err;
                        var self = $1808;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1812 = self.value;
                                var $1813 = Parser$Reply$error$(Parser$Error$combine$($1812, $1810));
                                var $1811 = $1813;
                                break;
                            case 'Maybe.none':
                                var $1814 = Parser$Reply$error$($1810);
                                var $1811 = $1814;
                                break;
                        };
                        var $1809 = $1811;
                        break;
                    case 'Parser.Reply.value':
                        var $1815 = self.pst;
                        var self = $1815;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1817 = self.err;
                                var $1818 = self.nam;
                                var $1819 = self.ini;
                                var $1820 = self.idx;
                                var $1821 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1808, $1817), $1818, $1819, $1820, $1821);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1823 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1825 = self.err;
                                                var self = $1823;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1827 = self.value;
                                                        var $1828 = Parser$Reply$error$(Parser$Error$combine$($1827, $1825));
                                                        var $1826 = $1828;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1829 = Parser$Reply$error$($1825);
                                                        var $1826 = $1829;
                                                        break;
                                                };
                                                var $1824 = $1826;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1830 = self.pst;
                                                var $1831 = self.val;
                                                var self = $1830;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1833 = self.err;
                                                        var $1834 = self.nam;
                                                        var $1835 = self.ini;
                                                        var $1836 = self.idx;
                                                        var $1837 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1823, $1833), $1834, $1835, $1836, $1837);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1839 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1841 = self.err;
                                                                        var self = $1839;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1843 = self.value;
                                                                                var $1844 = Parser$Reply$error$(Parser$Error$combine$($1843, $1841));
                                                                                var $1842 = $1844;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1845 = Parser$Reply$error$($1841);
                                                                                var $1842 = $1845;
                                                                                break;
                                                                        };
                                                                        var $1840 = $1842;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1846 = self.pst;
                                                                        var self = $1846;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1848 = self.err;
                                                                                var $1849 = self.nam;
                                                                                var $1850 = self.ini;
                                                                                var $1851 = self.idx;
                                                                                var $1852 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1839, $1848), $1849, $1850, $1851, $1852);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1854 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1856 = self.err;
                                                                                                var self = $1854;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1858 = self.value;
                                                                                                        var $1859 = Parser$Reply$error$(Parser$Error$combine$($1858, $1856));
                                                                                                        var $1857 = $1859;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1860 = Parser$Reply$error$($1856);
                                                                                                        var $1857 = $1860;
                                                                                                        break;
                                                                                                };
                                                                                                var $1855 = $1857;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1861 = self.pst;
                                                                                                var $1862 = self.val;
                                                                                                var self = $1861;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1864 = self.err;
                                                                                                        var $1865 = self.nam;
                                                                                                        var $1866 = self.ini;
                                                                                                        var $1867 = self.idx;
                                                                                                        var $1868 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1854, $1864), $1865, $1866, $1867, $1868);
                                                                                                        var _empty_list$58 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                                                                                                        var _list_cons$59 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                                                                                                        var _empty_map$60 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1870 = self.err;
                                                                                                                var _reply$66 = Kind$Parser$text$(":", _reply$pst$57);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1872 = self.err;
                                                                                                                        var self = $1870;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1874 = self.value;
                                                                                                                                var $1875 = Parser$Reply$error$(Parser$Error$combine$($1874, $1872));
                                                                                                                                var $1873 = $1875;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1876 = Parser$Reply$error$($1872);
                                                                                                                                var $1873 = $1876;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1871 = $1873;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1877 = self.pst;
                                                                                                                        var self = $1877;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1879 = self.err;
                                                                                                                                var $1880 = self.nam;
                                                                                                                                var $1881 = self.ini;
                                                                                                                                var $1882 = self.idx;
                                                                                                                                var $1883 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1870, $1879), $1880, $1881, $1882, $1883);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1885 = self.err;
                                                                                                                                        var _reply$80 = Kind$Parser$term(_reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1887 = self.err;
                                                                                                                                                var self = $1885;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1889 = self.value;
                                                                                                                                                        var $1890 = Parser$Reply$error$(Parser$Error$combine$($1889, $1887));
                                                                                                                                                        var $1888 = $1890;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1891 = Parser$Reply$error$($1887);
                                                                                                                                                        var $1888 = $1891;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1886 = $1888;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1892 = self.pst;
                                                                                                                                                var $1893 = self.val;
                                                                                                                                                var self = $1892;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1895 = self.err;
                                                                                                                                                        var $1896 = self.nam;
                                                                                                                                                        var $1897 = self.ini;
                                                                                                                                                        var $1898 = self.idx;
                                                                                                                                                        var $1899 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1885, $1895), $1896, $1897, $1898, $1899);
                                                                                                                                                        var _term$89 = Kind$Term$ref$("List.fold");
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, $1862);
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$93 = Kind$Term$app$(_term$92, _empty_list$58);
                                                                                                                                                        var _lamb$94 = Kind$Term$lam$($1831, (_i$94 => {
                                                                                                                                                            var $1901 = Kind$Term$lam$("placeholder", (_b$95 => {
                                                                                                                                                                var $1902 = Kind$Term$app$(Kind$Term$app$(_list_cons$59, $1893), _b$95);
                                                                                                                                                                return $1902;
                                                                                                                                                            }));
                                                                                                                                                            return $1901;
                                                                                                                                                        }));
                                                                                                                                                        var _term$95 = Kind$Term$app$(_term$93, _lamb$94);
                                                                                                                                                        var _display_content$96 = Kind$Term$app$(Kind$Term$ref$("Map.set"), Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _display_content$97 = Kind$Term$app$(_display_content$96, Kind$Term$str$("display"));
                                                                                                                                                        var _display_content$98 = Kind$Term$app$(_display_content$97, Kind$Term$str$("contents"));
                                                                                                                                                        var _display_content$99 = Kind$Term$app$(_display_content$98, _empty_map$60);
                                                                                                                                                        var _root$100 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _root$101 = Kind$Term$app$(_root$100, Kind$Term$str$("div"));
                                                                                                                                                        var _root$102 = Kind$Term$app$(_root$101, _empty_map$60);
                                                                                                                                                        var _root$103 = Kind$Term$app$(_root$102, _display_content$99);
                                                                                                                                                        var _root$104 = Kind$Term$app$(_root$103, _term$95);
                                                                                                                                                        var $1900 = Parser$Reply$value$(_reply$pst$88, _root$104);
                                                                                                                                                        var $1894 = $1900;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1886 = $1894;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1884 = $1886;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1878 = $1884;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1871 = $1878;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1869 = $1871;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1863 = $1869;
                                                                                                        break;
                                                                                                };
                                                                                                var $1855 = $1863;
                                                                                                break;
                                                                                        };
                                                                                        var $1853 = $1855;
                                                                                        break;
                                                                                };
                                                                                var $1847 = $1853;
                                                                                break;
                                                                        };
                                                                        var $1840 = $1847;
                                                                        break;
                                                                };
                                                                var $1838 = $1840;
                                                                break;
                                                        };
                                                        var $1832 = $1838;
                                                        break;
                                                };
                                                var $1824 = $1832;
                                                break;
                                        };
                                        var $1822 = $1824;
                                        break;
                                };
                                var $1816 = $1822;
                                break;
                        };
                        var $1809 = $1816;
                        break;
                };
                var $1807 = $1809;
                break;
        };
        return $1807;
    }));
    const Kind$Parser$dom$dynamic = Kind$Parser$block("DOM_dynamic")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1904 = self.err;
                var _reply$7 = Kind$Parser$text$("{", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1906 = self.err;
                        var self = $1904;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1908 = self.value;
                                var $1909 = Parser$Reply$error$(Parser$Error$combine$($1908, $1906));
                                var $1907 = $1909;
                                break;
                            case 'Maybe.none':
                                var $1910 = Parser$Reply$error$($1906);
                                var $1907 = $1910;
                                break;
                        };
                        var $1905 = $1907;
                        break;
                    case 'Parser.Reply.value':
                        var $1911 = self.pst;
                        var self = $1911;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1913 = self.err;
                                var $1914 = self.nam;
                                var $1915 = self.ini;
                                var $1916 = self.idx;
                                var $1917 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1904, $1913), $1914, $1915, $1916, $1917);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1919 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Kind$Parser$term, List$nil), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1921 = self.err;
                                                var self = $1919;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1923 = self.value;
                                                        var $1924 = Parser$Reply$error$(Parser$Error$combine$($1923, $1921));
                                                        var $1922 = $1924;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1925 = Parser$Reply$error$($1921);
                                                        var $1922 = $1925;
                                                        break;
                                                };
                                                var $1920 = $1922;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1926 = self.pst;
                                                var $1927 = self.val;
                                                var self = $1926;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1929 = self.err;
                                                        var $1930 = self.nam;
                                                        var $1931 = self.ini;
                                                        var $1932 = self.idx;
                                                        var $1933 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1919, $1929), $1930, $1931, $1932, $1933);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1935 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("}", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1937 = self.err;
                                                                        var self = $1935;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1939 = self.value;
                                                                                var $1940 = Parser$Reply$error$(Parser$Error$combine$($1939, $1937));
                                                                                var $1938 = $1940;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1941 = Parser$Reply$error$($1937);
                                                                                var $1938 = $1941;
                                                                                break;
                                                                        };
                                                                        var $1936 = $1938;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1942 = self.pst;
                                                                        var self = $1942;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1944 = self.err;
                                                                                var $1945 = self.nam;
                                                                                var $1946 = self.ini;
                                                                                var $1947 = self.idx;
                                                                                var $1948 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1935, $1944), $1945, $1946, $1947, $1948);
                                                                                var $1949 = Parser$Reply$value$(_reply$pst$43, $1927);
                                                                                var $1943 = $1949;
                                                                                break;
                                                                        };
                                                                        var $1936 = $1943;
                                                                        break;
                                                                };
                                                                var $1934 = $1936;
                                                                break;
                                                        };
                                                        var $1928 = $1934;
                                                        break;
                                                };
                                                var $1920 = $1928;
                                                break;
                                        };
                                        var $1918 = $1920;
                                        break;
                                };
                                var $1912 = $1918;
                                break;
                        };
                        var $1905 = $1912;
                        break;
                };
                var $1903 = $1905;
                break;
        };
        return $1903;
    }));
    const Kind$Parser$dom$text = Kind$Parser$block("DOM_text")((() => {
        var _term$1 = Kind$Term$ref$("DOM.text");
        var $1950 = (_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1952 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1954 = self.err;
                            var self = $1952;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1956 = self.value;
                                    var $1957 = Parser$Reply$error$(Parser$Error$combine$($1956, $1954));
                                    var $1955 = $1957;
                                    break;
                                case 'Maybe.none':
                                    var $1958 = Parser$Reply$error$($1954);
                                    var $1955 = $1958;
                                    break;
                            };
                            var $1953 = $1955;
                            break;
                        case 'Parser.Reply.value':
                            var $1959 = self.pst;
                            var $1960 = self.val;
                            var self = $1959;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1962 = self.err;
                                    var $1963 = self.nam;
                                    var $1964 = self.ini;
                                    var $1965 = self.idx;
                                    var $1966 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1952, $1962), $1963, $1964, $1965, $1966);
                                    var _term$17 = Kind$Term$app$(_term$1, $1960);
                                    var $1967 = Parser$Reply$value$(_reply$pst$16, _term$17);
                                    var $1961 = $1967;
                                    break;
                            };
                            var $1953 = $1961;
                            break;
                    };
                    var $1951 = $1953;
                    break;
            };
            return $1951;
        });
        return $1950;
    })());
    const Kind$Parser$dom$leaf = Kind$Parser$block("DOM_leaf")(Parser$choice(List$cons$(Kind$Parser$dom$for, List$cons$(Kind$Parser$dom$dynamic, List$cons$(Kind$Parser$dom$text, List$nil)))));

    function Kind$Parser$dom$transform_children$(_a$1) {
        var self = _a$1;
        switch (self._) {
            case 'List.cons':
                var $1969 = self.head;
                var $1970 = self.tail;
                var _term$4 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                var _term$5 = Kind$Term$app$(_term$4, $1969);
                var _term$6 = Kind$Term$app$(_term$5, Kind$Parser$dom$transform_children$($1970));
                var $1971 = _term$6;
                var $1968 = $1971;
                break;
            case 'List.nil':
                var $1972 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                var $1968 = $1972;
                break;
        };
        return $1968;
    };
    const Kind$Parser$dom$transform_children = x0 => Kind$Parser$dom$transform_children$(x0);
    const Kind$Parser$dom$node = Kind$Parser$block("DOM.node")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1974 = self.err;
                var _reply$7 = Kind$Parser$text$("<", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1976 = self.err;
                        var self = $1974;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1978 = self.value;
                                var $1979 = Parser$Reply$error$(Parser$Error$combine$($1978, $1976));
                                var $1977 = $1979;
                                break;
                            case 'Maybe.none':
                                var $1980 = Parser$Reply$error$($1976);
                                var $1977 = $1980;
                                break;
                        };
                        var $1975 = $1977;
                        break;
                    case 'Parser.Reply.value':
                        var $1981 = self.pst;
                        var self = $1981;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1983 = self.err;
                                var $1984 = self.nam;
                                var $1985 = self.ini;
                                var $1986 = self.idx;
                                var $1987 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1974, $1983), $1984, $1985, $1986, $1987);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1989 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1991 = self.err;
                                                var self = $1989;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1993 = self.value;
                                                        var $1994 = Parser$Reply$error$(Parser$Error$combine$($1993, $1991));
                                                        var $1992 = $1994;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1995 = Parser$Reply$error$($1991);
                                                        var $1992 = $1995;
                                                        break;
                                                };
                                                var $1990 = $1992;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1996 = self.pst;
                                                var $1997 = self.val;
                                                var self = $1996;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1999 = self.err;
                                                        var $2000 = self.nam;
                                                        var $2001 = self.ini;
                                                        var $2002 = self.idx;
                                                        var $2003 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1989, $1999), $2000, $2001, $2002, $2003);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2005 = self.err;
                                                                var _reply$35 = Kind$Parser$spaces(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2007 = self.err;
                                                                        var self = $2005;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2009 = self.value;
                                                                                var $2010 = Parser$Reply$error$(Parser$Error$combine$($2009, $2007));
                                                                                var $2008 = $2010;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2011 = Parser$Reply$error$($2007);
                                                                                var $2008 = $2011;
                                                                                break;
                                                                        };
                                                                        var $2006 = $2008;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2012 = self.pst;
                                                                        var self = $2012;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2014 = self.err;
                                                                                var $2015 = self.nam;
                                                                                var $2016 = self.ini;
                                                                                var $2017 = self.idx;
                                                                                var $2018 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2005, $2014), $2015, $2016, $2017, $2018);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2020 = self.err;
                                                                                        var _reply$49 = Parser$until$(Kind$Parser$text(">"), Kind$Parser$dom$prop)(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2022 = self.err;
                                                                                                var self = $2020;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2024 = self.value;
                                                                                                        var $2025 = Parser$Reply$error$(Parser$Error$combine$($2024, $2022));
                                                                                                        var $2023 = $2025;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2026 = Parser$Reply$error$($2022);
                                                                                                        var $2023 = $2026;
                                                                                                        break;
                                                                                                };
                                                                                                var $2021 = $2023;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2027 = self.pst;
                                                                                                var $2028 = self.val;
                                                                                                var self = $2027;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2030 = self.err;
                                                                                                        var $2031 = self.nam;
                                                                                                        var $2032 = self.ini;
                                                                                                        var $2033 = self.idx;
                                                                                                        var $2034 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($2020, $2030), $2031, $2032, $2033, $2034);
                                                                                                        var _props$58 = Kind$Parser$dom$gen_prop$($2028);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2036 = self.err;
                                                                                                                var _reply$64 = Parser$many$(Parser$choice(List$cons$(Kind$Parser$dom$node, List$cons$(Kind$Parser$dom$leaf, List$nil))))(_reply$pst$57);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2038 = self.err;
                                                                                                                        var self = $2036;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2040 = self.value;
                                                                                                                                var $2041 = Parser$Reply$error$(Parser$Error$combine$($2040, $2038));
                                                                                                                                var $2039 = $2041;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2042 = Parser$Reply$error$($2038);
                                                                                                                                var $2039 = $2042;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2037 = $2039;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2043 = self.pst;
                                                                                                                        var $2044 = self.val;
                                                                                                                        var self = $2043;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2046 = self.err;
                                                                                                                                var $2047 = self.nam;
                                                                                                                                var $2048 = self.ini;
                                                                                                                                var $2049 = self.idx;
                                                                                                                                var $2050 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2036, $2046), $2047, $2048, $2049, $2050);
                                                                                                                                var _children$73 = Kind$Parser$dom$transform_children$($2044);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2052 = self.err;
                                                                                                                                        var _reply$79 = Kind$Parser$text$(("</" + ($1997 + ">")), _reply$pst$72);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2054 = self.err;
                                                                                                                                                var self = $2052;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2056 = self.value;
                                                                                                                                                        var $2057 = Parser$Reply$error$(Parser$Error$combine$($2056, $2054));
                                                                                                                                                        var $2055 = $2057;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2058 = Parser$Reply$error$($2054);
                                                                                                                                                        var $2055 = $2058;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2053 = $2055;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2059 = self.pst;
                                                                                                                                                var self = $2059;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2061 = self.err;
                                                                                                                                                        var $2062 = self.nam;
                                                                                                                                                        var $2063 = self.ini;
                                                                                                                                                        var $2064 = self.idx;
                                                                                                                                                        var $2065 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2052, $2061), $2062, $2063, $2064, $2065);
                                                                                                                                                        var _term$88 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, Kind$Term$str$($1997));
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $2067 = self.fst;
                                                                                                                                                                    var $2068 = $2067;
                                                                                                                                                                    return $2068;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $2069 = self.snd;
                                                                                                                                                                    var $2070 = $2069;
                                                                                                                                                                    return $2070;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, _children$73);
                                                                                                                                                        var $2066 = Parser$Reply$value$(_reply$pst$87, _term$92);
                                                                                                                                                        var $2060 = $2066;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2053 = $2060;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2051 = $2053;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2045 = $2051;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2037 = $2045;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2035 = $2037;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2029 = $2035;
                                                                                                        break;
                                                                                                };
                                                                                                var $2021 = $2029;
                                                                                                break;
                                                                                        };
                                                                                        var $2019 = $2021;
                                                                                        break;
                                                                                };
                                                                                var $2013 = $2019;
                                                                                break;
                                                                        };
                                                                        var $2006 = $2013;
                                                                        break;
                                                                };
                                                                var $2004 = $2006;
                                                                break;
                                                        };
                                                        var $1998 = $2004;
                                                        break;
                                                };
                                                var $1990 = $1998;
                                                break;
                                        };
                                        var $1988 = $1990;
                                        break;
                                };
                                var $1982 = $1988;
                                break;
                        };
                        var $1975 = $1982;
                        break;
                };
                var $1973 = $1975;
                break;
        };
        return $1973;
    }));
    const Kind$Parser$dom = Kind$Parser$dom$node;
    const Kind$Parser$forall = Kind$Parser$block("forall")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2072 = self.err;
                var _reply$7 = Kind$Parser$name$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2074 = self.err;
                        var self = $2072;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2076 = self.value;
                                var $2077 = Parser$Reply$error$(Parser$Error$combine$($2076, $2074));
                                var $2075 = $2077;
                                break;
                            case 'Maybe.none':
                                var $2078 = Parser$Reply$error$($2074);
                                var $2075 = $2078;
                                break;
                        };
                        var $2073 = $2075;
                        break;
                    case 'Parser.Reply.value':
                        var $2079 = self.pst;
                        var $2080 = self.val;
                        var self = $2079;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2082 = self.err;
                                var $2083 = self.nam;
                                var $2084 = self.ini;
                                var $2085 = self.idx;
                                var $2086 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2072, $2082), $2083, $2084, $2085, $2086);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2088 = self.err;
                                        var _reply$21 = Kind$Parser$binder$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2090 = self.err;
                                                var self = $2088;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2092 = self.value;
                                                        var $2093 = Parser$Reply$error$(Parser$Error$combine$($2092, $2090));
                                                        var $2091 = $2093;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2094 = Parser$Reply$error$($2090);
                                                        var $2091 = $2094;
                                                        break;
                                                };
                                                var $2089 = $2091;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2095 = self.pst;
                                                var $2096 = self.val;
                                                var self = $2095;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2098 = self.err;
                                                        var $2099 = self.nam;
                                                        var $2100 = self.ini;
                                                        var $2101 = self.idx;
                                                        var $2102 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2088, $2098), $2099, $2100, $2101, $2102);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2104 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$text("->"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2106 = self.err;
                                                                        var self = $2104;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2108 = self.value;
                                                                                var $2109 = Parser$Reply$error$(Parser$Error$combine$($2108, $2106));
                                                                                var $2107 = $2109;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2110 = Parser$Reply$error$($2106);
                                                                                var $2107 = $2110;
                                                                                break;
                                                                        };
                                                                        var $2105 = $2107;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2111 = self.pst;
                                                                        var self = $2111;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2113 = self.err;
                                                                                var $2114 = self.nam;
                                                                                var $2115 = self.ini;
                                                                                var $2116 = self.idx;
                                                                                var $2117 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2104, $2113), $2114, $2115, $2116, $2117);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2119 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2121 = self.err;
                                                                                                var self = $2119;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2123 = self.value;
                                                                                                        var $2124 = Parser$Reply$error$(Parser$Error$combine$($2123, $2121));
                                                                                                        var $2122 = $2124;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2125 = Parser$Reply$error$($2121);
                                                                                                        var $2122 = $2125;
                                                                                                        break;
                                                                                                };
                                                                                                var $2120 = $2122;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2126 = self.pst;
                                                                                                var $2127 = self.val;
                                                                                                var self = $2126;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2129 = self.err;
                                                                                                        var $2130 = self.nam;
                                                                                                        var $2131 = self.ini;
                                                                                                        var $2132 = self.idx;
                                                                                                        var $2133 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($2119, $2129), $2130, $2131, $2132, $2133);
                                                                                                        var _term$58 = List$fold$($2096, $2127, (_x$58 => _t$59 => {
                                                                                                            var self = _x$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Binder.new':
                                                                                                                    var $2136 = self.eras;
                                                                                                                    var $2137 = self.name;
                                                                                                                    var $2138 = self.term;
                                                                                                                    var $2139 = Kind$Term$all$($2136, "", $2137, $2138, (_s$63 => _x$64 => {
                                                                                                                        var $2140 = _t$59;
                                                                                                                        return $2140;
                                                                                                                    }));
                                                                                                                    var $2135 = $2139;
                                                                                                                    break;
                                                                                                            };
                                                                                                            return $2135;
                                                                                                        }));
                                                                                                        var $2134 = Parser$Reply$value$(_reply$pst$57, (() => {
                                                                                                            var self = _term$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Term.all':
                                                                                                                    var $2141 = self.eras;
                                                                                                                    var $2142 = self.name;
                                                                                                                    var $2143 = self.xtyp;
                                                                                                                    var $2144 = self.body;
                                                                                                                    var $2145 = Kind$Term$all$($2141, $2080, $2142, $2143, $2144);
                                                                                                                    return $2145;
                                                                                                                case 'Kind.Term.var':
                                                                                                                case 'Kind.Term.ref':
                                                                                                                case 'Kind.Term.typ':
                                                                                                                case 'Kind.Term.lam':
                                                                                                                case 'Kind.Term.app':
                                                                                                                case 'Kind.Term.let':
                                                                                                                case 'Kind.Term.def':
                                                                                                                case 'Kind.Term.ann':
                                                                                                                case 'Kind.Term.gol':
                                                                                                                case 'Kind.Term.hol':
                                                                                                                case 'Kind.Term.nat':
                                                                                                                case 'Kind.Term.chr':
                                                                                                                case 'Kind.Term.str':
                                                                                                                case 'Kind.Term.num':
                                                                                                                case 'Kind.Term.cse':
                                                                                                                case 'Kind.Term.new':
                                                                                                                case 'Kind.Term.get':
                                                                                                                case 'Kind.Term.set':
                                                                                                                case 'Kind.Term.ope':
                                                                                                                case 'Kind.Term.ori':
                                                                                                                    var $2146 = _term$58;
                                                                                                                    return $2146;
                                                                                                            };
                                                                                                        })());
                                                                                                        var $2128 = $2134;
                                                                                                        break;
                                                                                                };
                                                                                                var $2120 = $2128;
                                                                                                break;
                                                                                        };
                                                                                        var $2118 = $2120;
                                                                                        break;
                                                                                };
                                                                                var $2112 = $2118;
                                                                                break;
                                                                        };
                                                                        var $2105 = $2112;
                                                                        break;
                                                                };
                                                                var $2103 = $2105;
                                                                break;
                                                        };
                                                        var $2097 = $2103;
                                                        break;
                                                };
                                                var $2089 = $2097;
                                                break;
                                        };
                                        var $2087 = $2089;
                                        break;
                                };
                                var $2081 = $2087;
                                break;
                        };
                        var $2073 = $2081;
                        break;
                };
                var $2071 = $2073;
                break;
        };
        return $2071;
    }));

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $2148 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2150 = self.err;
                        var self = $2148;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2152 = self.value;
                                var $2153 = Parser$Reply$error$(Parser$Error$combine$($2152, $2150));
                                var $2151 = $2153;
                                break;
                            case 'Maybe.none':
                                var $2154 = Parser$Reply$error$($2150);
                                var $2151 = $2154;
                                break;
                        };
                        var $2149 = $2151;
                        break;
                    case 'Parser.Reply.value':
                        var $2155 = self.pst;
                        var self = $2155;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2157 = self.err;
                                var $2158 = self.nam;
                                var $2159 = self.ini;
                                var $2160 = self.idx;
                                var $2161 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2148, $2157), $2158, $2159, $2160, $2161);
                                var $2162 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $2156 = $2162;
                                break;
                        };
                        var $2149 = $2156;
                        break;
                };
                var $2147 = $2149;
                break;
        };
        return $2147;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Kind$Parser$items$(_ini$2, _parser$3, _end$4) {
        var $2163 = Parser$wrap(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $2165 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2167 = self.err;
                            var self = $2165;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2169 = self.value;
                                    var $2170 = Parser$Reply$error$(Parser$Error$combine$($2169, $2167));
                                    var $2168 = $2170;
                                    break;
                                case 'Maybe.none':
                                    var $2171 = Parser$Reply$error$($2167);
                                    var $2168 = $2171;
                                    break;
                            };
                            var $2166 = $2168;
                            break;
                        case 'Parser.Reply.value':
                            var $2172 = self.pst;
                            var self = $2172;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2174 = self.err;
                                    var $2175 = self.nam;
                                    var $2176 = self.ini;
                                    var $2177 = self.idx;
                                    var $2178 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2165, $2174), $2175, $2176, $2177, $2178);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2180 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2182 = self.err;
                                                    var self = $2180;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2184 = self.value;
                                                            var $2185 = Parser$Reply$error$(Parser$Error$combine$($2184, $2182));
                                                            var $2183 = $2185;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2186 = Parser$Reply$error$($2182);
                                                            var $2183 = $2186;
                                                            break;
                                                    };
                                                    var $2181 = $2183;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2187 = self.pst;
                                                    var $2188 = self.val;
                                                    var self = $2187;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2190 = self.err;
                                                            var $2191 = self.nam;
                                                            var $2192 = self.ini;
                                                            var $2193 = self.idx;
                                                            var $2194 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($2180, $2190), $2191, $2192, $2193, $2194);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2196 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2198 = self.err;
                                                                            var self = $2196;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2200 = self.value;
                                                                                    var $2201 = Parser$Reply$error$(Parser$Error$combine$($2200, $2198));
                                                                                    var $2199 = $2201;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2202 = Parser$Reply$error$($2198);
                                                                                    var $2199 = $2202;
                                                                                    break;
                                                                            };
                                                                            var $2197 = $2199;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2203 = self.pst;
                                                                            var self = $2203;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2205 = self.err;
                                                                                    var $2206 = self.nam;
                                                                                    var $2207 = self.ini;
                                                                                    var $2208 = self.idx;
                                                                                    var $2209 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($2196, $2205), $2206, $2207, $2208, $2209);
                                                                                    var $2210 = Parser$Reply$value$(_reply$pst$47, $2188);
                                                                                    var $2204 = $2210;
                                                                                    break;
                                                                            };
                                                                            var $2197 = $2204;
                                                                            break;
                                                                    };
                                                                    var $2195 = $2197;
                                                                    break;
                                                            };
                                                            var $2189 = $2195;
                                                            break;
                                                    };
                                                    var $2181 = $2189;
                                                    break;
                                            };
                                            var $2179 = $2181;
                                            break;
                                    };
                                    var $2173 = $2179;
                                    break;
                            };
                            var $2166 = $2173;
                            break;
                    };
                    var $2164 = $2166;
                    break;
            };
            return $2164;
        }))(Kind$Parser$text(_end$4));
        return $2163;
    };
    const Kind$Parser$items = x0 => x1 => x2 => Kind$Parser$items$(x0, x1, x2);

    function Kind$Parser$lambda$make$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $2212 = self.head;
                var $2213 = self.tail;
                var $2214 = Kind$Term$lam$($2212, (_x$5 => {
                    var $2215 = Kind$Parser$lambda$make$($2213, _body$2);
                    return $2215;
                }));
                var $2211 = $2214;
                break;
            case 'List.nil':
                var $2216 = _body$2;
                var $2211 = $2216;
                break;
        };
        return $2211;
    };
    const Kind$Parser$lambda$make = x0 => x1 => Kind$Parser$lambda$make$(x0, x1);

    function Kind$Parser$lambda$make$start$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.nil':
                var $2218 = Kind$Term$lam$("", (_x$3 => {
                    var $2219 = _body$2;
                    return $2219;
                }));
                var $2217 = $2218;
                break;
            case 'List.cons':
                var $2220 = Kind$Parser$lambda$make$(_names$1, _body$2);
                var $2217 = $2220;
                break;
        };
        return $2217;
    };
    const Kind$Parser$lambda$make$start = x0 => x1 => Kind$Parser$lambda$make$start$(x0, x1);
    const Kind$Parser$lambda = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2222 = self.err;
                var _reply$7 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2224 = self.err;
                        var self = $2222;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2226 = self.value;
                                var $2227 = Parser$Reply$error$(Parser$Error$combine$($2226, $2224));
                                var $2225 = $2227;
                                break;
                            case 'Maybe.none':
                                var $2228 = Parser$Reply$error$($2224);
                                var $2225 = $2228;
                                break;
                        };
                        var $2223 = $2225;
                        break;
                    case 'Parser.Reply.value':
                        var $2229 = self.pst;
                        var $2230 = self.val;
                        var self = $2229;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2232 = self.err;
                                var $2233 = self.nam;
                                var $2234 = self.ini;
                                var $2235 = self.idx;
                                var $2236 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2222, $2232), $2233, $2234, $2235, $2236);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2238 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2240 = self.err;
                                                var self = $2238;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2242 = self.value;
                                                        var $2243 = Parser$Reply$error$(Parser$Error$combine$($2242, $2240));
                                                        var $2241 = $2243;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2244 = Parser$Reply$error$($2240);
                                                        var $2241 = $2244;
                                                        break;
                                                };
                                                var $2239 = $2241;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2245 = self.pst;
                                                var $2246 = self.val;
                                                var self = $2245;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2248 = self.err;
                                                        var $2249 = self.nam;
                                                        var $2250 = self.ini;
                                                        var $2251 = self.idx;
                                                        var $2252 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2238, $2248), $2249, $2250, $2251, $2252);
                                                        var $2253 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2230, $2246));
                                                        var $2247 = $2253;
                                                        break;
                                                };
                                                var $2239 = $2247;
                                                break;
                                        };
                                        var $2237 = $2239;
                                        break;
                                };
                                var $2231 = $2237;
                                break;
                        };
                        var $2223 = $2231;
                        break;
                };
                var $2221 = $2223;
                break;
        };
        return $2221;
    }));
    const Kind$Parser$lambda$erased = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2255 = self.err;
                var _reply$7 = Kind$Parser$items$("<", Kind$Parser$name1, ">")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2257 = self.err;
                        var self = $2255;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2259 = self.value;
                                var $2260 = Parser$Reply$error$(Parser$Error$combine$($2259, $2257));
                                var $2258 = $2260;
                                break;
                            case 'Maybe.none':
                                var $2261 = Parser$Reply$error$($2257);
                                var $2258 = $2261;
                                break;
                        };
                        var $2256 = $2258;
                        break;
                    case 'Parser.Reply.value':
                        var $2262 = self.pst;
                        var $2263 = self.val;
                        var self = $2262;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2265 = self.err;
                                var $2266 = self.nam;
                                var $2267 = self.ini;
                                var $2268 = self.idx;
                                var $2269 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2255, $2265), $2266, $2267, $2268, $2269);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2271 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2273 = self.err;
                                                var self = $2271;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2275 = self.value;
                                                        var $2276 = Parser$Reply$error$(Parser$Error$combine$($2275, $2273));
                                                        var $2274 = $2276;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2277 = Parser$Reply$error$($2273);
                                                        var $2274 = $2277;
                                                        break;
                                                };
                                                var $2272 = $2274;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2278 = self.pst;
                                                var $2279 = self.val;
                                                var self = $2278;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2281 = self.err;
                                                        var $2282 = self.nam;
                                                        var $2283 = self.ini;
                                                        var $2284 = self.idx;
                                                        var $2285 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2271, $2281), $2282, $2283, $2284, $2285);
                                                        var $2286 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2263, $2279));
                                                        var $2280 = $2286;
                                                        break;
                                                };
                                                var $2272 = $2280;
                                                break;
                                        };
                                        var $2270 = $2272;
                                        break;
                                };
                                var $2264 = $2270;
                                break;
                        };
                        var $2256 = $2264;
                        break;
                };
                var $2254 = $2256;
                break;
        };
        return $2254;
    }));
    const Kind$Parser$parenthesis = Kind$Parser$block("parenthesis")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2288 = self.err;
                var _reply$7 = Kind$Parser$text$("(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2290 = self.err;
                        var self = $2288;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2292 = self.value;
                                var $2293 = Parser$Reply$error$(Parser$Error$combine$($2292, $2290));
                                var $2291 = $2293;
                                break;
                            case 'Maybe.none':
                                var $2294 = Parser$Reply$error$($2290);
                                var $2291 = $2294;
                                break;
                        };
                        var $2289 = $2291;
                        break;
                    case 'Parser.Reply.value':
                        var $2295 = self.pst;
                        var self = $2295;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2297 = self.err;
                                var $2298 = self.nam;
                                var $2299 = self.ini;
                                var $2300 = self.idx;
                                var $2301 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2288, $2297), $2298, $2299, $2300, $2301);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2303 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2305 = self.err;
                                                var self = $2303;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2307 = self.value;
                                                        var $2308 = Parser$Reply$error$(Parser$Error$combine$($2307, $2305));
                                                        var $2306 = $2308;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2309 = Parser$Reply$error$($2305);
                                                        var $2306 = $2309;
                                                        break;
                                                };
                                                var $2304 = $2306;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2310 = self.pst;
                                                var $2311 = self.val;
                                                var self = $2310;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2313 = self.err;
                                                        var $2314 = self.nam;
                                                        var $2315 = self.ini;
                                                        var $2316 = self.idx;
                                                        var $2317 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2303, $2313), $2314, $2315, $2316, $2317);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2319 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2321 = self.err;
                                                                        var self = $2319;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2323 = self.value;
                                                                                var $2324 = Parser$Reply$error$(Parser$Error$combine$($2323, $2321));
                                                                                var $2322 = $2324;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2325 = Parser$Reply$error$($2321);
                                                                                var $2322 = $2325;
                                                                                break;
                                                                        };
                                                                        var $2320 = $2322;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2326 = self.pst;
                                                                        var self = $2326;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2328 = self.err;
                                                                                var $2329 = self.nam;
                                                                                var $2330 = self.ini;
                                                                                var $2331 = self.idx;
                                                                                var $2332 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2319, $2328), $2329, $2330, $2331, $2332);
                                                                                var $2333 = Parser$Reply$value$(_reply$pst$43, $2311);
                                                                                var $2327 = $2333;
                                                                                break;
                                                                        };
                                                                        var $2320 = $2327;
                                                                        break;
                                                                };
                                                                var $2318 = $2320;
                                                                break;
                                                        };
                                                        var $2312 = $2318;
                                                        break;
                                                };
                                                var $2304 = $2312;
                                                break;
                                        };
                                        var $2302 = $2304;
                                        break;
                                };
                                var $2296 = $2302;
                                break;
                        };
                        var $2289 = $2296;
                        break;
                };
                var $2287 = $2289;
                break;
        };
        return $2287;
    }));

    function Kind$Parser$letforrange$(_typename$1, _body$2) {
        var $2334 = Kind$Parser$block("let-for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2336 = self.err;
                    var _reply$9 = Kind$Parser$text$("let ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2338 = self.err;
                            var self = $2336;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2340 = self.value;
                                    var $2341 = Parser$Reply$error$(Parser$Error$combine$($2340, $2338));
                                    var $2339 = $2341;
                                    break;
                                case 'Maybe.none':
                                    var $2342 = Parser$Reply$error$($2338);
                                    var $2339 = $2342;
                                    break;
                            };
                            var $2337 = $2339;
                            break;
                        case 'Parser.Reply.value':
                            var $2343 = self.pst;
                            var self = $2343;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2345 = self.err;
                                    var $2346 = self.nam;
                                    var $2347 = self.ini;
                                    var $2348 = self.idx;
                                    var $2349 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2336, $2345), $2346, $2347, $2348, $2349);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2351 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2353 = self.err;
                                                    var self = $2351;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2355 = self.value;
                                                            var $2356 = Parser$Reply$error$(Parser$Error$combine$($2355, $2353));
                                                            var $2354 = $2356;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2357 = Parser$Reply$error$($2353);
                                                            var $2354 = $2357;
                                                            break;
                                                    };
                                                    var $2352 = $2354;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2358 = self.pst;
                                                    var $2359 = self.val;
                                                    var self = $2358;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2361 = self.err;
                                                            var $2362 = self.nam;
                                                            var $2363 = self.ini;
                                                            var $2364 = self.idx;
                                                            var $2365 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2351, $2361), $2362, $2363, $2364, $2365);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2367 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$("=", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2369 = self.err;
                                                                            var self = $2367;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2371 = self.value;
                                                                                    var $2372 = Parser$Reply$error$(Parser$Error$combine$($2371, $2369));
                                                                                    var $2370 = $2372;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2373 = Parser$Reply$error$($2369);
                                                                                    var $2370 = $2373;
                                                                                    break;
                                                                            };
                                                                            var $2368 = $2370;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2374 = self.pst;
                                                                            var self = $2374;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2376 = self.err;
                                                                                    var $2377 = self.nam;
                                                                                    var $2378 = self.ini;
                                                                                    var $2379 = self.idx;
                                                                                    var $2380 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2367, $2376), $2377, $2378, $2379, $2380);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2382 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$("for ", _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2384 = self.err;
                                                                                                    var self = $2382;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2386 = self.value;
                                                                                                            var $2387 = Parser$Reply$error$(Parser$Error$combine$($2386, $2384));
                                                                                                            var $2385 = $2387;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2388 = Parser$Reply$error$($2384);
                                                                                                            var $2385 = $2388;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2383 = $2385;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2389 = self.pst;
                                                                                                    var self = $2389;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2391 = self.err;
                                                                                                            var $2392 = self.nam;
                                                                                                            var $2393 = self.ini;
                                                                                                            var $2394 = self.idx;
                                                                                                            var $2395 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2382, $2391), $2392, $2393, $2394, $2395);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2397 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$name1$(_reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2399 = self.err;
                                                                                                                            var self = $2397;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2401 = self.value;
                                                                                                                                    var $2402 = Parser$Reply$error$(Parser$Error$combine$($2401, $2399));
                                                                                                                                    var $2400 = $2402;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2403 = Parser$Reply$error$($2399);
                                                                                                                                    var $2400 = $2403;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2398 = $2400;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2404 = self.pst;
                                                                                                                            var $2405 = self.val;
                                                                                                                            var self = $2404;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2407 = self.err;
                                                                                                                                    var $2408 = self.nam;
                                                                                                                                    var $2409 = self.ini;
                                                                                                                                    var $2410 = self.idx;
                                                                                                                                    var $2411 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2397, $2407), $2408, $2409, $2410, $2411);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2413 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$text$(":", _reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2415 = self.err;
                                                                                                                                                    var self = $2413;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2417 = self.value;
                                                                                                                                                            var $2418 = Parser$Reply$error$(Parser$Error$combine$($2417, $2415));
                                                                                                                                                            var $2416 = $2418;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2419 = Parser$Reply$error$($2415);
                                                                                                                                                            var $2416 = $2419;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2414 = $2416;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2420 = self.pst;
                                                                                                                                                    var self = $2420;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2422 = self.err;
                                                                                                                                                            var $2423 = self.nam;
                                                                                                                                                            var $2424 = self.ini;
                                                                                                                                                            var $2425 = self.idx;
                                                                                                                                                            var $2426 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2413, $2422), $2423, $2424, $2425, $2426);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2428 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$(_typename$1, _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2430 = self.err;
                                                                                                                                                                            var self = $2428;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2432 = self.value;
                                                                                                                                                                                    var $2433 = Parser$Reply$error$(Parser$Error$combine$($2432, $2430));
                                                                                                                                                                                    var $2431 = $2433;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2434 = Parser$Reply$error$($2430);
                                                                                                                                                                                    var $2431 = $2434;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2429 = $2431;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2435 = self.pst;
                                                                                                                                                                            var self = $2435;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2437 = self.err;
                                                                                                                                                                                    var $2438 = self.nam;
                                                                                                                                                                                    var $2439 = self.ini;
                                                                                                                                                                                    var $2440 = self.idx;
                                                                                                                                                                                    var $2441 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2428, $2437), $2438, $2439, $2440, $2441);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2443 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$text$("from", _reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2445 = self.err;
                                                                                                                                                                                                    var self = $2443;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2447 = self.value;
                                                                                                                                                                                                            var $2448 = Parser$Reply$error$(Parser$Error$combine$($2447, $2445));
                                                                                                                                                                                                            var $2446 = $2448;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2449 = Parser$Reply$error$($2445);
                                                                                                                                                                                                            var $2446 = $2449;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2444 = $2446;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2450 = self.pst;
                                                                                                                                                                                                    var self = $2450;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2452 = self.err;
                                                                                                                                                                                                            var $2453 = self.nam;
                                                                                                                                                                                                            var $2454 = self.ini;
                                                                                                                                                                                                            var $2455 = self.idx;
                                                                                                                                                                                                            var $2456 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2443, $2452), $2453, $2454, $2455, $2456);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2458 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$term(_reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2460 = self.err;
                                                                                                                                                                                                                            var self = $2458;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2462 = self.value;
                                                                                                                                                                                                                                    var $2463 = Parser$Reply$error$(Parser$Error$combine$($2462, $2460));
                                                                                                                                                                                                                                    var $2461 = $2463;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2464 = Parser$Reply$error$($2460);
                                                                                                                                                                                                                                    var $2461 = $2464;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2459 = $2461;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2465 = self.pst;
                                                                                                                                                                                                                            var $2466 = self.val;
                                                                                                                                                                                                                            var self = $2465;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2468 = self.err;
                                                                                                                                                                                                                                    var $2469 = self.nam;
                                                                                                                                                                                                                                    var $2470 = self.ini;
                                                                                                                                                                                                                                    var $2471 = self.idx;
                                                                                                                                                                                                                                    var $2472 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2458, $2468), $2469, $2470, $2471, $2472);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2474 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$text$("to", _reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2476 = self.err;
                                                                                                                                                                                                                                                    var self = $2474;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2478 = self.value;
                                                                                                                                                                                                                                                            var $2479 = Parser$Reply$error$(Parser$Error$combine$($2478, $2476));
                                                                                                                                                                                                                                                            var $2477 = $2479;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2480 = Parser$Reply$error$($2476);
                                                                                                                                                                                                                                                            var $2477 = $2480;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2475 = $2477;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2481 = self.pst;
                                                                                                                                                                                                                                                    var self = $2481;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2483 = self.err;
                                                                                                                                                                                                                                                            var $2484 = self.nam;
                                                                                                                                                                                                                                                            var $2485 = self.ini;
                                                                                                                                                                                                                                                            var $2486 = self.idx;
                                                                                                                                                                                                                                                            var $2487 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2474, $2483), $2484, $2485, $2486, $2487);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2489 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$term(_reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2491 = self.err;
                                                                                                                                                                                                                                                                            var self = $2489;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2493 = self.value;
                                                                                                                                                                                                                                                                                    var $2494 = Parser$Reply$error$(Parser$Error$combine$($2493, $2491));
                                                                                                                                                                                                                                                                                    var $2492 = $2494;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2495 = Parser$Reply$error$($2491);
                                                                                                                                                                                                                                                                                    var $2492 = $2495;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2490 = $2492;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2496 = self.pst;
                                                                                                                                                                                                                                                                            var $2497 = self.val;
                                                                                                                                                                                                                                                                            var self = $2496;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2499 = self.err;
                                                                                                                                                                                                                                                                                    var $2500 = self.nam;
                                                                                                                                                                                                                                                                                    var $2501 = self.ini;
                                                                                                                                                                                                                                                                                    var $2502 = self.idx;
                                                                                                                                                                                                                                                                                    var $2503 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2489, $2499), $2500, $2501, $2502, $2503);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2505 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$text$(":", _reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2507 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2505;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2509 = self.value;
                                                                                                                                                                                                                                                                                                            var $2510 = Parser$Reply$error$(Parser$Error$combine$($2509, $2507));
                                                                                                                                                                                                                                                                                                            var $2508 = $2510;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2511 = Parser$Reply$error$($2507);
                                                                                                                                                                                                                                                                                                            var $2508 = $2511;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2506 = $2508;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2512 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2512;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2514 = self.err;
                                                                                                                                                                                                                                                                                                            var $2515 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2516 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2517 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2518 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2505, $2514), $2515, $2516, $2517, $2518);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2520 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Kind$Parser$term(_reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2522 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2520;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2524 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2525 = Parser$Reply$error$(Parser$Error$combine$($2524, $2522));
                                                                                                                                                                                                                                                                                                                                    var $2523 = $2525;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2526 = Parser$Reply$error$($2522);
                                                                                                                                                                                                                                                                                                                                    var $2523 = $2526;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2521 = $2523;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2527 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2528 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2527;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2530 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2531 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2532 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2533 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2534 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2520, $2530), $2531, $2532, $2533, $2534);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2536 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2538 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2536;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2540 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2541 = Parser$Reply$error$(Parser$Error$combine$($2540, $2538));
                                                                                                                                                                                                                                                                                                                                                            var $2539 = $2541;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2542 = Parser$Reply$error$($2538);
                                                                                                                                                                                                                                                                                                                                                            var $2539 = $2542;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2537 = $2539;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2543 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var self = $2543;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2545 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2546 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2547 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2548 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2549 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2536, $2545), $2546, $2547, $2548, $2549);
                                                                                                                                                                                                                                                                                                                                                            var self = _reply$pst$199;
                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                    var $2551 = self.err;
                                                                                                                                                                                                                                                                                                                                                                    var _reply$205 = _body$2(Unit$new)(_reply$pst$199);
                                                                                                                                                                                                                                                                                                                                                                    var self = _reply$205;
                                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                                            var $2553 = self.err;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2551;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                                                    var $2555 = self.value;
                                                                                                                                                                                                                                                                                                                                                                                    var $2556 = Parser$Reply$error$(Parser$Error$combine$($2555, $2553));
                                                                                                                                                                                                                                                                                                                                                                                    var $2554 = $2556;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                                                    var $2557 = Parser$Reply$error$($2553);
                                                                                                                                                                                                                                                                                                                                                                                    var $2554 = $2557;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2552 = $2554;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                                            var $2558 = self.pst;
                                                                                                                                                                                                                                                                                                                                                                            var $2559 = self.val;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2558;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                                    var $2561 = self.err;
                                                                                                                                                                                                                                                                                                                                                                                    var $2562 = self.nam;
                                                                                                                                                                                                                                                                                                                                                                                    var $2563 = self.ini;
                                                                                                                                                                                                                                                                                                                                                                                    var $2564 = self.idx;
                                                                                                                                                                                                                                                                                                                                                                                    var $2565 = self.str;
                                                                                                                                                                                                                                                                                                                                                                                    var _reply$pst$213 = Parser$State$new$(Parser$Error$maybe_combine$($2551, $2561), $2562, $2563, $2564, $2565);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$214 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$215 = Kind$Term$app$(_term$214, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$216 = Kind$Term$app$(_term$215, Kind$Term$ref$($2359));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$217 = Kind$Term$app$(_term$216, $2466);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$218 = Kind$Term$app$(_term$217, $2497);
                                                                                                                                                                                                                                                                                                                                                                                    var _lamb$219 = Kind$Term$lam$($2405, (_e$219 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2567 = Kind$Term$lam$($2359, (_s$220 => {
                                                                                                                                                                                                                                                                                                                                                                                            var $2568 = $2528;
                                                                                                                                                                                                                                                                                                                                                                                            return $2568;
                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                        return $2567;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$220 = Kind$Term$app$(_term$218, _lamb$219);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$221 = Kind$Term$let$($2359, _term$220, (_x$221 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2569 = $2559;
                                                                                                                                                                                                                                                                                                                                                                                        return $2569;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var $2566 = Parser$Reply$value$(_reply$pst$213, _term$221);
                                                                                                                                                                                                                                                                                                                                                                                    var $2560 = $2566;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2552 = $2560;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                                    var $2550 = $2552;
                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                            var $2544 = $2550;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2537 = $2544;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2535 = $2537;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2529 = $2535;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2521 = $2529;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2519 = $2521;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2513 = $2519;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2506 = $2513;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2504 = $2506;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2498 = $2504;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2490 = $2498;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2488 = $2490;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2482 = $2488;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2475 = $2482;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2473 = $2475;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2467 = $2473;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2459 = $2467;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2457 = $2459;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2451 = $2457;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2444 = $2451;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2442 = $2444;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2436 = $2442;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2429 = $2436;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2427 = $2429;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2421 = $2427;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2414 = $2421;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2412 = $2414;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2406 = $2412;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2398 = $2406;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2396 = $2398;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2390 = $2396;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2383 = $2390;
                                                                                                    break;
                                                                                            };
                                                                                            var $2381 = $2383;
                                                                                            break;
                                                                                    };
                                                                                    var $2375 = $2381;
                                                                                    break;
                                                                            };
                                                                            var $2368 = $2375;
                                                                            break;
                                                                    };
                                                                    var $2366 = $2368;
                                                                    break;
                                                            };
                                                            var $2360 = $2366;
                                                            break;
                                                    };
                                                    var $2352 = $2360;
                                                    break;
                                            };
                                            var $2350 = $2352;
                                            break;
                                    };
                                    var $2344 = $2350;
                                    break;
                            };
                            var $2337 = $2344;
                            break;
                    };
                    var $2335 = $2337;
                    break;
            };
            return $2335;
        }));
        return $2334;
    };
    const Kind$Parser$letforrange = x0 => x1 => Kind$Parser$letforrange$(x0, x1);

    function Kind$Parser$letforrange$u32$(_body$1) {
        var $2570 = Kind$Parser$letforrange$("U32", _body$1);
        return $2570;
    };
    const Kind$Parser$letforrange$u32 = x0 => Kind$Parser$letforrange$u32$(x0);

    function Kind$Parser$letforrange$with$(_typename$1, _body$2) {
        var $2571 = Kind$Parser$block("for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2573 = self.err;
                    var _reply$9 = Kind$Parser$text$("for ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2575 = self.err;
                            var self = $2573;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2577 = self.value;
                                    var $2578 = Parser$Reply$error$(Parser$Error$combine$($2577, $2575));
                                    var $2576 = $2578;
                                    break;
                                case 'Maybe.none':
                                    var $2579 = Parser$Reply$error$($2575);
                                    var $2576 = $2579;
                                    break;
                            };
                            var $2574 = $2576;
                            break;
                        case 'Parser.Reply.value':
                            var $2580 = self.pst;
                            var self = $2580;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2582 = self.err;
                                    var $2583 = self.nam;
                                    var $2584 = self.ini;
                                    var $2585 = self.idx;
                                    var $2586 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2573, $2582), $2583, $2584, $2585, $2586);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2588 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2590 = self.err;
                                                    var self = $2588;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2592 = self.value;
                                                            var $2593 = Parser$Reply$error$(Parser$Error$combine$($2592, $2590));
                                                            var $2591 = $2593;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2594 = Parser$Reply$error$($2590);
                                                            var $2591 = $2594;
                                                            break;
                                                    };
                                                    var $2589 = $2591;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2595 = self.pst;
                                                    var $2596 = self.val;
                                                    var self = $2595;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2598 = self.err;
                                                            var $2599 = self.nam;
                                                            var $2600 = self.ini;
                                                            var $2601 = self.idx;
                                                            var $2602 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2588, $2598), $2599, $2600, $2601, $2602);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2604 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$(":", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2606 = self.err;
                                                                            var self = $2604;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2608 = self.value;
                                                                                    var $2609 = Parser$Reply$error$(Parser$Error$combine$($2608, $2606));
                                                                                    var $2607 = $2609;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2610 = Parser$Reply$error$($2606);
                                                                                    var $2607 = $2610;
                                                                                    break;
                                                                            };
                                                                            var $2605 = $2607;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2611 = self.pst;
                                                                            var self = $2611;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2613 = self.err;
                                                                                    var $2614 = self.nam;
                                                                                    var $2615 = self.ini;
                                                                                    var $2616 = self.idx;
                                                                                    var $2617 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2604, $2613), $2614, $2615, $2616, $2617);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2619 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$(_typename$1, _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2621 = self.err;
                                                                                                    var self = $2619;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2623 = self.value;
                                                                                                            var $2624 = Parser$Reply$error$(Parser$Error$combine$($2623, $2621));
                                                                                                            var $2622 = $2624;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2625 = Parser$Reply$error$($2621);
                                                                                                            var $2622 = $2625;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2620 = $2622;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2626 = self.pst;
                                                                                                    var self = $2626;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2628 = self.err;
                                                                                                            var $2629 = self.nam;
                                                                                                            var $2630 = self.ini;
                                                                                                            var $2631 = self.idx;
                                                                                                            var $2632 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2619, $2628), $2629, $2630, $2631, $2632);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2634 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$text$("from", _reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2636 = self.err;
                                                                                                                            var self = $2634;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2638 = self.value;
                                                                                                                                    var $2639 = Parser$Reply$error$(Parser$Error$combine$($2638, $2636));
                                                                                                                                    var $2637 = $2639;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2640 = Parser$Reply$error$($2636);
                                                                                                                                    var $2637 = $2640;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2635 = $2637;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2641 = self.pst;
                                                                                                                            var self = $2641;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2643 = self.err;
                                                                                                                                    var $2644 = self.nam;
                                                                                                                                    var $2645 = self.ini;
                                                                                                                                    var $2646 = self.idx;
                                                                                                                                    var $2647 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2634, $2643), $2644, $2645, $2646, $2647);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2649 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$term(_reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2651 = self.err;
                                                                                                                                                    var self = $2649;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2653 = self.value;
                                                                                                                                                            var $2654 = Parser$Reply$error$(Parser$Error$combine$($2653, $2651));
                                                                                                                                                            var $2652 = $2654;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2655 = Parser$Reply$error$($2651);
                                                                                                                                                            var $2652 = $2655;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2650 = $2652;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2656 = self.pst;
                                                                                                                                                    var $2657 = self.val;
                                                                                                                                                    var self = $2656;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2659 = self.err;
                                                                                                                                                            var $2660 = self.nam;
                                                                                                                                                            var $2661 = self.ini;
                                                                                                                                                            var $2662 = self.idx;
                                                                                                                                                            var $2663 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2649, $2659), $2660, $2661, $2662, $2663);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2665 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$("to", _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2667 = self.err;
                                                                                                                                                                            var self = $2665;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2669 = self.value;
                                                                                                                                                                                    var $2670 = Parser$Reply$error$(Parser$Error$combine$($2669, $2667));
                                                                                                                                                                                    var $2668 = $2670;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2671 = Parser$Reply$error$($2667);
                                                                                                                                                                                    var $2668 = $2671;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2666 = $2668;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2672 = self.pst;
                                                                                                                                                                            var self = $2672;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2674 = self.err;
                                                                                                                                                                                    var $2675 = self.nam;
                                                                                                                                                                                    var $2676 = self.ini;
                                                                                                                                                                                    var $2677 = self.idx;
                                                                                                                                                                                    var $2678 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2665, $2674), $2675, $2676, $2677, $2678);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2680 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$term(_reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2682 = self.err;
                                                                                                                                                                                                    var self = $2680;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2684 = self.value;
                                                                                                                                                                                                            var $2685 = Parser$Reply$error$(Parser$Error$combine$($2684, $2682));
                                                                                                                                                                                                            var $2683 = $2685;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2686 = Parser$Reply$error$($2682);
                                                                                                                                                                                                            var $2683 = $2686;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2681 = $2683;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2687 = self.pst;
                                                                                                                                                                                                    var $2688 = self.val;
                                                                                                                                                                                                    var self = $2687;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2690 = self.err;
                                                                                                                                                                                                            var $2691 = self.nam;
                                                                                                                                                                                                            var $2692 = self.ini;
                                                                                                                                                                                                            var $2693 = self.idx;
                                                                                                                                                                                                            var $2694 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2680, $2690), $2691, $2692, $2693, $2694);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2696 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$text$("with ", _reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2698 = self.err;
                                                                                                                                                                                                                            var self = $2696;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2700 = self.value;
                                                                                                                                                                                                                                    var $2701 = Parser$Reply$error$(Parser$Error$combine$($2700, $2698));
                                                                                                                                                                                                                                    var $2699 = $2701;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2702 = Parser$Reply$error$($2698);
                                                                                                                                                                                                                                    var $2699 = $2702;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2697 = $2699;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2703 = self.pst;
                                                                                                                                                                                                                            var self = $2703;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2705 = self.err;
                                                                                                                                                                                                                                    var $2706 = self.nam;
                                                                                                                                                                                                                                    var $2707 = self.ini;
                                                                                                                                                                                                                                    var $2708 = self.idx;
                                                                                                                                                                                                                                    var $2709 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2696, $2705), $2706, $2707, $2708, $2709);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2711 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$name1$(_reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2713 = self.err;
                                                                                                                                                                                                                                                    var self = $2711;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2715 = self.value;
                                                                                                                                                                                                                                                            var $2716 = Parser$Reply$error$(Parser$Error$combine$($2715, $2713));
                                                                                                                                                                                                                                                            var $2714 = $2716;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2717 = Parser$Reply$error$($2713);
                                                                                                                                                                                                                                                            var $2714 = $2717;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2712 = $2714;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2718 = self.pst;
                                                                                                                                                                                                                                                    var $2719 = self.val;
                                                                                                                                                                                                                                                    var self = $2718;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2721 = self.err;
                                                                                                                                                                                                                                                            var $2722 = self.nam;
                                                                                                                                                                                                                                                            var $2723 = self.ini;
                                                                                                                                                                                                                                                            var $2724 = self.idx;
                                                                                                                                                                                                                                                            var $2725 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2711, $2721), $2722, $2723, $2724, $2725);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2727 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$text$(":", _reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2729 = self.err;
                                                                                                                                                                                                                                                                            var self = $2727;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2731 = self.value;
                                                                                                                                                                                                                                                                                    var $2732 = Parser$Reply$error$(Parser$Error$combine$($2731, $2729));
                                                                                                                                                                                                                                                                                    var $2730 = $2732;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2733 = Parser$Reply$error$($2729);
                                                                                                                                                                                                                                                                                    var $2730 = $2733;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2728 = $2730;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2734 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2734;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2736 = self.err;
                                                                                                                                                                                                                                                                                    var $2737 = self.nam;
                                                                                                                                                                                                                                                                                    var $2738 = self.ini;
                                                                                                                                                                                                                                                                                    var $2739 = self.idx;
                                                                                                                                                                                                                                                                                    var $2740 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2727, $2736), $2737, $2738, $2739, $2740);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2742 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$term(_reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2744 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2742;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2746 = self.value;
                                                                                                                                                                                                                                                                                                            var $2747 = Parser$Reply$error$(Parser$Error$combine$($2746, $2744));
                                                                                                                                                                                                                                                                                                            var $2745 = $2747;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2748 = Parser$Reply$error$($2744);
                                                                                                                                                                                                                                                                                                            var $2745 = $2748;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2743 = $2745;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2749 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2750 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2749;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2752 = self.err;
                                                                                                                                                                                                                                                                                                            var $2753 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2754 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2755 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2756 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2742, $2752), $2753, $2754, $2755, $2756);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2758 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2760 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2758;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2762 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2763 = Parser$Reply$error$(Parser$Error$combine$($2762, $2760));
                                                                                                                                                                                                                                                                                                                                    var $2761 = $2763;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2764 = Parser$Reply$error$($2760);
                                                                                                                                                                                                                                                                                                                                    var $2761 = $2764;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2759 = $2761;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2765 = self.pst;
                                                                                                                                                                                                                                                                                                                            var self = $2765;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2767 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2768 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2769 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2770 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2771 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2758, $2767), $2768, $2769, $2770, $2771);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2773 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = _body$2(Unit$new)(_reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2775 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2773;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2777 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2778 = Parser$Reply$error$(Parser$Error$combine$($2777, $2775));
                                                                                                                                                                                                                                                                                                                                                            var $2776 = $2778;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2779 = Parser$Reply$error$($2775);
                                                                                                                                                                                                                                                                                                                                                            var $2776 = $2779;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2774 = $2776;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2780 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var $2781 = self.val;
                                                                                                                                                                                                                                                                                                                                                    var self = $2780;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2783 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2784 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2785 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2786 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2787 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2773, $2783), $2784, $2785, $2786, $2787);
                                                                                                                                                                                                                                                                                                                                                            var _term$200 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                            var _term$201 = Kind$Term$app$(_term$200, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                            var _term$202 = Kind$Term$app$(_term$201, Kind$Term$ref$($2719));
                                                                                                                                                                                                                                                                                                                                                            var _term$203 = Kind$Term$app$(_term$202, $2657);
                                                                                                                                                                                                                                                                                                                                                            var _term$204 = Kind$Term$app$(_term$203, $2688);
                                                                                                                                                                                                                                                                                                                                                            var _lamb$205 = Kind$Term$lam$($2596, (_e$205 => {
                                                                                                                                                                                                                                                                                                                                                                var $2789 = Kind$Term$lam$($2719, (_s$206 => {
                                                                                                                                                                                                                                                                                                                                                                    var $2790 = $2750;
                                                                                                                                                                                                                                                                                                                                                                    return $2790;
                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                return $2789;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var _term$206 = Kind$Term$app$(_term$204, _lamb$205);
                                                                                                                                                                                                                                                                                                                                                            var _term$207 = Kind$Term$let$($2719, _term$206, (_x$207 => {
                                                                                                                                                                                                                                                                                                                                                                var $2791 = $2781;
                                                                                                                                                                                                                                                                                                                                                                return $2791;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var $2788 = Parser$Reply$value$(_reply$pst$199, _term$207);
                                                                                                                                                                                                                                                                                                                                                            var $2782 = $2788;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2774 = $2782;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2772 = $2774;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2766 = $2772;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2759 = $2766;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2757 = $2759;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2751 = $2757;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2743 = $2751;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2741 = $2743;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2735 = $2741;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2728 = $2735;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2726 = $2728;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2720 = $2726;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2712 = $2720;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2710 = $2712;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2704 = $2710;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2697 = $2704;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2695 = $2697;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2689 = $2695;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2681 = $2689;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2679 = $2681;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2673 = $2679;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2666 = $2673;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2664 = $2666;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2658 = $2664;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2650 = $2658;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2648 = $2650;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2642 = $2648;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2635 = $2642;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2633 = $2635;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2627 = $2633;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2620 = $2627;
                                                                                                    break;
                                                                                            };
                                                                                            var $2618 = $2620;
                                                                                            break;
                                                                                    };
                                                                                    var $2612 = $2618;
                                                                                    break;
                                                                            };
                                                                            var $2605 = $2612;
                                                                            break;
                                                                    };
                                                                    var $2603 = $2605;
                                                                    break;
                                                            };
                                                            var $2597 = $2603;
                                                            break;
                                                    };
                                                    var $2589 = $2597;
                                                    break;
                                            };
                                            var $2587 = $2589;
                                            break;
                                    };
                                    var $2581 = $2587;
                                    break;
                            };
                            var $2574 = $2581;
                            break;
                    };
                    var $2572 = $2574;
                    break;
            };
            return $2572;
        }));
        return $2571;
    };
    const Kind$Parser$letforrange$with = x0 => x1 => Kind$Parser$letforrange$with$(x0, x1);

    function Kind$Parser$letforrange$u32$with$(_body$1) {
        var $2792 = Kind$Parser$letforrange$with$("U32", _body$1);
        return $2792;
    };
    const Kind$Parser$letforrange$u32$with = x0 => Kind$Parser$letforrange$u32$with$(x0);

    function Kind$Parser$letforrange$i32$(_body$1) {
        var $2793 = Kind$Parser$letforrange$("I32", _body$1);
        return $2793;
    };
    const Kind$Parser$letforrange$i32 = x0 => Kind$Parser$letforrange$i32$(x0);

    function Kind$Parser$letforrange$i32$with$(_body$1) {
        var $2794 = Kind$Parser$letforrange$with$("I32", _body$1);
        return $2794;
    };
    const Kind$Parser$letforrange$i32$with = x0 => Kind$Parser$letforrange$i32$with$(x0);

    function Kind$Parser$letforrange$nat$(_body$1) {
        var $2795 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2797 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2799 = self.err;
                            var self = $2797;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2801 = self.value;
                                    var $2802 = Parser$Reply$error$(Parser$Error$combine$($2801, $2799));
                                    var $2800 = $2802;
                                    break;
                                case 'Maybe.none':
                                    var $2803 = Parser$Reply$error$($2799);
                                    var $2800 = $2803;
                                    break;
                            };
                            var $2798 = $2800;
                            break;
                        case 'Parser.Reply.value':
                            var $2804 = self.pst;
                            var self = $2804;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2806 = self.err;
                                    var $2807 = self.nam;
                                    var $2808 = self.ini;
                                    var $2809 = self.idx;
                                    var $2810 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2797, $2806), $2807, $2808, $2809, $2810);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2812 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2814 = self.err;
                                                    var self = $2812;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2816 = self.value;
                                                            var $2817 = Parser$Reply$error$(Parser$Error$combine$($2816, $2814));
                                                            var $2815 = $2817;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2818 = Parser$Reply$error$($2814);
                                                            var $2815 = $2818;
                                                            break;
                                                    };
                                                    var $2813 = $2815;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2819 = self.pst;
                                                    var $2820 = self.val;
                                                    var self = $2819;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2822 = self.err;
                                                            var $2823 = self.nam;
                                                            var $2824 = self.ini;
                                                            var $2825 = self.idx;
                                                            var $2826 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2812, $2822), $2823, $2824, $2825, $2826);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2828 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2830 = self.err;
                                                                            var self = $2828;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2832 = self.value;
                                                                                    var $2833 = Parser$Reply$error$(Parser$Error$combine$($2832, $2830));
                                                                                    var $2831 = $2833;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2834 = Parser$Reply$error$($2830);
                                                                                    var $2831 = $2834;
                                                                                    break;
                                                                            };
                                                                            var $2829 = $2831;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2835 = self.pst;
                                                                            var self = $2835;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2837 = self.err;
                                                                                    var $2838 = self.nam;
                                                                                    var $2839 = self.ini;
                                                                                    var $2840 = self.idx;
                                                                                    var $2841 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2828, $2837), $2838, $2839, $2840, $2841);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2843 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2845 = self.err;
                                                                                                    var self = $2843;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2847 = self.value;
                                                                                                            var $2848 = Parser$Reply$error$(Parser$Error$combine$($2847, $2845));
                                                                                                            var $2846 = $2848;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2849 = Parser$Reply$error$($2845);
                                                                                                            var $2846 = $2849;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2844 = $2846;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2850 = self.pst;
                                                                                                    var self = $2850;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2852 = self.err;
                                                                                                            var $2853 = self.nam;
                                                                                                            var $2854 = self.ini;
                                                                                                            var $2855 = self.idx;
                                                                                                            var $2856 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2843, $2852), $2853, $2854, $2855, $2856);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2858 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2860 = self.err;
                                                                                                                            var self = $2858;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2862 = self.value;
                                                                                                                                    var $2863 = Parser$Reply$error$(Parser$Error$combine$($2862, $2860));
                                                                                                                                    var $2861 = $2863;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2864 = Parser$Reply$error$($2860);
                                                                                                                                    var $2861 = $2864;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2859 = $2861;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2865 = self.pst;
                                                                                                                            var $2866 = self.val;
                                                                                                                            var self = $2865;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2868 = self.err;
                                                                                                                                    var $2869 = self.nam;
                                                                                                                                    var $2870 = self.ini;
                                                                                                                                    var $2871 = self.idx;
                                                                                                                                    var $2872 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2858, $2868), $2869, $2870, $2871, $2872);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2874 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("from", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2876 = self.err;
                                                                                                                                                    var self = $2874;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2878 = self.value;
                                                                                                                                                            var $2879 = Parser$Reply$error$(Parser$Error$combine$($2878, $2876));
                                                                                                                                                            var $2877 = $2879;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2880 = Parser$Reply$error$($2876);
                                                                                                                                                            var $2877 = $2880;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2875 = $2877;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2881 = self.pst;
                                                                                                                                                    var self = $2881;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2883 = self.err;
                                                                                                                                                            var $2884 = self.nam;
                                                                                                                                                            var $2885 = self.ini;
                                                                                                                                                            var $2886 = self.idx;
                                                                                                                                                            var $2887 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2874, $2883), $2884, $2885, $2886, $2887);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2889 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2891 = self.err;
                                                                                                                                                                            var self = $2889;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2893 = self.value;
                                                                                                                                                                                    var $2894 = Parser$Reply$error$(Parser$Error$combine$($2893, $2891));
                                                                                                                                                                                    var $2892 = $2894;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2895 = Parser$Reply$error$($2891);
                                                                                                                                                                                    var $2892 = $2895;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2890 = $2892;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2896 = self.pst;
                                                                                                                                                                            var $2897 = self.val;
                                                                                                                                                                            var self = $2896;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2899 = self.err;
                                                                                                                                                                                    var $2900 = self.nam;
                                                                                                                                                                                    var $2901 = self.ini;
                                                                                                                                                                                    var $2902 = self.idx;
                                                                                                                                                                                    var $2903 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2889, $2899), $2900, $2901, $2902, $2903);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2905 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("to", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2907 = self.err;
                                                                                                                                                                                                    var self = $2905;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2909 = self.value;
                                                                                                                                                                                                            var $2910 = Parser$Reply$error$(Parser$Error$combine$($2909, $2907));
                                                                                                                                                                                                            var $2908 = $2910;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2911 = Parser$Reply$error$($2907);
                                                                                                                                                                                                            var $2908 = $2911;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2906 = $2908;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2912 = self.pst;
                                                                                                                                                                                                    var self = $2912;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2914 = self.err;
                                                                                                                                                                                                            var $2915 = self.nam;
                                                                                                                                                                                                            var $2916 = self.ini;
                                                                                                                                                                                                            var $2917 = self.idx;
                                                                                                                                                                                                            var $2918 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2905, $2914), $2915, $2916, $2917, $2918);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2920 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2922 = self.err;
                                                                                                                                                                                                                            var self = $2920;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2924 = self.value;
                                                                                                                                                                                                                                    var $2925 = Parser$Reply$error$(Parser$Error$combine$($2924, $2922));
                                                                                                                                                                                                                                    var $2923 = $2925;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2926 = Parser$Reply$error$($2922);
                                                                                                                                                                                                                                    var $2923 = $2926;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2921 = $2923;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2927 = self.pst;
                                                                                                                                                                                                                            var $2928 = self.val;
                                                                                                                                                                                                                            var self = $2927;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2930 = self.err;
                                                                                                                                                                                                                                    var $2931 = self.nam;
                                                                                                                                                                                                                                    var $2932 = self.ini;
                                                                                                                                                                                                                                    var $2933 = self.idx;
                                                                                                                                                                                                                                    var $2934 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2920, $2930), $2931, $2932, $2933, $2934);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2936 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2938 = self.err;
                                                                                                                                                                                                                                                    var self = $2936;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2940 = self.value;
                                                                                                                                                                                                                                                            var $2941 = Parser$Reply$error$(Parser$Error$combine$($2940, $2938));
                                                                                                                                                                                                                                                            var $2939 = $2941;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2942 = Parser$Reply$error$($2938);
                                                                                                                                                                                                                                                            var $2939 = $2942;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2937 = $2939;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2943 = self.pst;
                                                                                                                                                                                                                                                    var self = $2943;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2945 = self.err;
                                                                                                                                                                                                                                                            var $2946 = self.nam;
                                                                                                                                                                                                                                                            var $2947 = self.ini;
                                                                                                                                                                                                                                                            var $2948 = self.idx;
                                                                                                                                                                                                                                                            var $2949 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2936, $2945), $2946, $2947, $2948, $2949);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2951 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2953 = self.err;
                                                                                                                                                                                                                                                                            var self = $2951;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2955 = self.value;
                                                                                                                                                                                                                                                                                    var $2956 = Parser$Reply$error$(Parser$Error$combine$($2955, $2953));
                                                                                                                                                                                                                                                                                    var $2954 = $2956;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2957 = Parser$Reply$error$($2953);
                                                                                                                                                                                                                                                                                    var $2954 = $2957;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2952 = $2954;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2958 = self.pst;
                                                                                                                                                                                                                                                                            var $2959 = self.val;
                                                                                                                                                                                                                                                                            var self = $2958;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2961 = self.err;
                                                                                                                                                                                                                                                                                    var $2962 = self.nam;
                                                                                                                                                                                                                                                                                    var $2963 = self.ini;
                                                                                                                                                                                                                                                                                    var $2964 = self.idx;
                                                                                                                                                                                                                                                                                    var $2965 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2951, $2961), $2962, $2963, $2964, $2965);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2967 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2969 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2967;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2971 = self.value;
                                                                                                                                                                                                                                                                                                            var $2972 = Parser$Reply$error$(Parser$Error$combine$($2971, $2969));
                                                                                                                                                                                                                                                                                                            var $2970 = $2972;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2973 = Parser$Reply$error$($2969);
                                                                                                                                                                                                                                                                                                            var $2970 = $2973;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2968 = $2970;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2974 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2974;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2976 = self.err;
                                                                                                                                                                                                                                                                                                            var $2977 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2978 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2979 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2980 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2967, $2976), $2977, $2978, $2979, $2980);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2982 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2984 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2982;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2986 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2987 = Parser$Reply$error$(Parser$Error$combine$($2986, $2984));
                                                                                                                                                                                                                                                                                                                                    var $2985 = $2987;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2988 = Parser$Reply$error$($2984);
                                                                                                                                                                                                                                                                                                                                    var $2985 = $2988;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2983 = $2985;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2989 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2990 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2989;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2992 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2993 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2994 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2995 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2996 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2982, $2992), $2993, $2994, $2995, $2996);
                                                                                                                                                                                                                                                                                                                                    var _term$185 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$app$(_term$185, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$ref$($2820));
                                                                                                                                                                                                                                                                                                                                    var _term$188 = Kind$Term$app$(_term$187, $2897);
                                                                                                                                                                                                                                                                                                                                    var _term$189 = Kind$Term$app$(_term$188, $2928);
                                                                                                                                                                                                                                                                                                                                    var _lamb$190 = Kind$Term$lam$($2866, (_e$190 => {
                                                                                                                                                                                                                                                                                                                                        var $2998 = Kind$Term$lam$($2820, (_s$191 => {
                                                                                                                                                                                                                                                                                                                                            var $2999 = $2959;
                                                                                                                                                                                                                                                                                                                                            return $2999;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $2998;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$191 = Kind$Term$app$(_term$189, _lamb$190);
                                                                                                                                                                                                                                                                                                                                    var _term$192 = Kind$Term$let$($2820, _term$191, (_x$192 => {
                                                                                                                                                                                                                                                                                                                                        var $3000 = $2990;
                                                                                                                                                                                                                                                                                                                                        return $3000;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var $2997 = Parser$Reply$value$(_reply$pst$184, _term$192);
                                                                                                                                                                                                                                                                                                                                    var $2991 = $2997;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2983 = $2991;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2981 = $2983;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2975 = $2981;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2968 = $2975;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2966 = $2968;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2960 = $2966;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2952 = $2960;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2950 = $2952;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2944 = $2950;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2937 = $2944;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2935 = $2937;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2929 = $2935;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2921 = $2929;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2919 = $2921;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2913 = $2919;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2906 = $2913;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2904 = $2906;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2898 = $2904;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2890 = $2898;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2888 = $2890;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2882 = $2888;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2875 = $2882;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2873 = $2875;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2867 = $2873;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2859 = $2867;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2857 = $2859;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2851 = $2857;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2844 = $2851;
                                                                                                    break;
                                                                                            };
                                                                                            var $2842 = $2844;
                                                                                            break;
                                                                                    };
                                                                                    var $2836 = $2842;
                                                                                    break;
                                                                            };
                                                                            var $2829 = $2836;
                                                                            break;
                                                                    };
                                                                    var $2827 = $2829;
                                                                    break;
                                                            };
                                                            var $2821 = $2827;
                                                            break;
                                                    };
                                                    var $2813 = $2821;
                                                    break;
                                            };
                                            var $2811 = $2813;
                                            break;
                                    };
                                    var $2805 = $2811;
                                    break;
                            };
                            var $2798 = $2805;
                            break;
                    };
                    var $2796 = $2798;
                    break;
            };
            return $2796;
        }));
        return $2795;
    };
    const Kind$Parser$letforrange$nat = x0 => Kind$Parser$letforrange$nat$(x0);

    function Kind$Parser$letforrange$nat$with$(_body$1) {
        var $3001 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3003 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3005 = self.err;
                            var self = $3003;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3007 = self.value;
                                    var $3008 = Parser$Reply$error$(Parser$Error$combine$($3007, $3005));
                                    var $3006 = $3008;
                                    break;
                                case 'Maybe.none':
                                    var $3009 = Parser$Reply$error$($3005);
                                    var $3006 = $3009;
                                    break;
                            };
                            var $3004 = $3006;
                            break;
                        case 'Parser.Reply.value':
                            var $3010 = self.pst;
                            var self = $3010;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3012 = self.err;
                                    var $3013 = self.nam;
                                    var $3014 = self.ini;
                                    var $3015 = self.idx;
                                    var $3016 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3003, $3012), $3013, $3014, $3015, $3016);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3018 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3020 = self.err;
                                                    var self = $3018;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3022 = self.value;
                                                            var $3023 = Parser$Reply$error$(Parser$Error$combine$($3022, $3020));
                                                            var $3021 = $3023;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3024 = Parser$Reply$error$($3020);
                                                            var $3021 = $3024;
                                                            break;
                                                    };
                                                    var $3019 = $3021;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3025 = self.pst;
                                                    var $3026 = self.val;
                                                    var self = $3025;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3028 = self.err;
                                                            var $3029 = self.nam;
                                                            var $3030 = self.ini;
                                                            var $3031 = self.idx;
                                                            var $3032 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3018, $3028), $3029, $3030, $3031, $3032);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3034 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3036 = self.err;
                                                                            var self = $3034;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3038 = self.value;
                                                                                    var $3039 = Parser$Reply$error$(Parser$Error$combine$($3038, $3036));
                                                                                    var $3037 = $3039;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3040 = Parser$Reply$error$($3036);
                                                                                    var $3037 = $3040;
                                                                                    break;
                                                                            };
                                                                            var $3035 = $3037;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3041 = self.pst;
                                                                            var self = $3041;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3043 = self.err;
                                                                                    var $3044 = self.nam;
                                                                                    var $3045 = self.ini;
                                                                                    var $3046 = self.idx;
                                                                                    var $3047 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3034, $3043), $3044, $3045, $3046, $3047);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3049 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3051 = self.err;
                                                                                                    var self = $3049;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3053 = self.value;
                                                                                                            var $3054 = Parser$Reply$error$(Parser$Error$combine$($3053, $3051));
                                                                                                            var $3052 = $3054;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3055 = Parser$Reply$error$($3051);
                                                                                                            var $3052 = $3055;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3050 = $3052;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3056 = self.pst;
                                                                                                    var $3057 = self.val;
                                                                                                    var self = $3056;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3059 = self.err;
                                                                                                            var $3060 = self.nam;
                                                                                                            var $3061 = self.ini;
                                                                                                            var $3062 = self.idx;
                                                                                                            var $3063 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3049, $3059), $3060, $3061, $3062, $3063);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3065 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3067 = self.err;
                                                                                                                            var self = $3065;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3069 = self.value;
                                                                                                                                    var $3070 = Parser$Reply$error$(Parser$Error$combine$($3069, $3067));
                                                                                                                                    var $3068 = $3070;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3071 = Parser$Reply$error$($3067);
                                                                                                                                    var $3068 = $3071;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3066 = $3068;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3072 = self.pst;
                                                                                                                            var self = $3072;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3074 = self.err;
                                                                                                                                    var $3075 = self.nam;
                                                                                                                                    var $3076 = self.ini;
                                                                                                                                    var $3077 = self.idx;
                                                                                                                                    var $3078 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3065, $3074), $3075, $3076, $3077, $3078);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3080 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3082 = self.err;
                                                                                                                                                    var self = $3080;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3084 = self.value;
                                                                                                                                                            var $3085 = Parser$Reply$error$(Parser$Error$combine$($3084, $3082));
                                                                                                                                                            var $3083 = $3085;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3086 = Parser$Reply$error$($3082);
                                                                                                                                                            var $3083 = $3086;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3081 = $3083;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3087 = self.pst;
                                                                                                                                                    var $3088 = self.val;
                                                                                                                                                    var self = $3087;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3090 = self.err;
                                                                                                                                                            var $3091 = self.nam;
                                                                                                                                                            var $3092 = self.ini;
                                                                                                                                                            var $3093 = self.idx;
                                                                                                                                                            var $3094 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3080, $3090), $3091, $3092, $3093, $3094);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3096 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("with ", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3098 = self.err;
                                                                                                                                                                            var self = $3096;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3100 = self.value;
                                                                                                                                                                                    var $3101 = Parser$Reply$error$(Parser$Error$combine$($3100, $3098));
                                                                                                                                                                                    var $3099 = $3101;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3102 = Parser$Reply$error$($3098);
                                                                                                                                                                                    var $3099 = $3102;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3097 = $3099;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3103 = self.pst;
                                                                                                                                                                            var self = $3103;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3105 = self.err;
                                                                                                                                                                                    var $3106 = self.nam;
                                                                                                                                                                                    var $3107 = self.ini;
                                                                                                                                                                                    var $3108 = self.idx;
                                                                                                                                                                                    var $3109 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3096, $3105), $3106, $3107, $3108, $3109);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3111 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$name1$(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3113 = self.err;
                                                                                                                                                                                                    var self = $3111;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3115 = self.value;
                                                                                                                                                                                                            var $3116 = Parser$Reply$error$(Parser$Error$combine$($3115, $3113));
                                                                                                                                                                                                            var $3114 = $3116;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3117 = Parser$Reply$error$($3113);
                                                                                                                                                                                                            var $3114 = $3117;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3112 = $3114;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3118 = self.pst;
                                                                                                                                                                                                    var $3119 = self.val;
                                                                                                                                                                                                    var self = $3118;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3121 = self.err;
                                                                                                                                                                                                            var $3122 = self.nam;
                                                                                                                                                                                                            var $3123 = self.ini;
                                                                                                                                                                                                            var $3124 = self.idx;
                                                                                                                                                                                                            var $3125 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3111, $3121), $3122, $3123, $3124, $3125);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3127 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3129 = self.err;
                                                                                                                                                                                                                            var self = $3127;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3131 = self.value;
                                                                                                                                                                                                                                    var $3132 = Parser$Reply$error$(Parser$Error$combine$($3131, $3129));
                                                                                                                                                                                                                                    var $3130 = $3132;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3133 = Parser$Reply$error$($3129);
                                                                                                                                                                                                                                    var $3130 = $3133;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3128 = $3130;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3134 = self.pst;
                                                                                                                                                                                                                            var self = $3134;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3136 = self.err;
                                                                                                                                                                                                                                    var $3137 = self.nam;
                                                                                                                                                                                                                                    var $3138 = self.ini;
                                                                                                                                                                                                                                    var $3139 = self.idx;
                                                                                                                                                                                                                                    var $3140 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3127, $3136), $3137, $3138, $3139, $3140);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3142 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3144 = self.err;
                                                                                                                                                                                                                                                    var self = $3142;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3146 = self.value;
                                                                                                                                                                                                                                                            var $3147 = Parser$Reply$error$(Parser$Error$combine$($3146, $3144));
                                                                                                                                                                                                                                                            var $3145 = $3147;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3148 = Parser$Reply$error$($3144);
                                                                                                                                                                                                                                                            var $3145 = $3148;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3143 = $3145;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3149 = self.pst;
                                                                                                                                                                                                                                                    var $3150 = self.val;
                                                                                                                                                                                                                                                    var self = $3149;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3152 = self.err;
                                                                                                                                                                                                                                                            var $3153 = self.nam;
                                                                                                                                                                                                                                                            var $3154 = self.ini;
                                                                                                                                                                                                                                                            var $3155 = self.idx;
                                                                                                                                                                                                                                                            var $3156 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3142, $3152), $3153, $3154, $3155, $3156);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3158 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3160 = self.err;
                                                                                                                                                                                                                                                                            var self = $3158;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3162 = self.value;
                                                                                                                                                                                                                                                                                    var $3163 = Parser$Reply$error$(Parser$Error$combine$($3162, $3160));
                                                                                                                                                                                                                                                                                    var $3161 = $3163;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3164 = Parser$Reply$error$($3160);
                                                                                                                                                                                                                                                                                    var $3161 = $3164;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3159 = $3161;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3165 = self.pst;
                                                                                                                                                                                                                                                                            var self = $3165;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3167 = self.err;
                                                                                                                                                                                                                                                                                    var $3168 = self.nam;
                                                                                                                                                                                                                                                                                    var $3169 = self.ini;
                                                                                                                                                                                                                                                                                    var $3170 = self.idx;
                                                                                                                                                                                                                                                                                    var $3171 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3158, $3167), $3168, $3169, $3170, $3171);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $3173 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $3175 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $3173;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $3177 = self.value;
                                                                                                                                                                                                                                                                                                            var $3178 = Parser$Reply$error$(Parser$Error$combine$($3177, $3175));
                                                                                                                                                                                                                                                                                                            var $3176 = $3178;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $3179 = Parser$Reply$error$($3175);
                                                                                                                                                                                                                                                                                                            var $3176 = $3179;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3174 = $3176;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $3180 = self.pst;
                                                                                                                                                                                                                                                                                                    var $3181 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $3180;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $3183 = self.err;
                                                                                                                                                                                                                                                                                                            var $3184 = self.nam;
                                                                                                                                                                                                                                                                                                            var $3185 = self.ini;
                                                                                                                                                                                                                                                                                                            var $3186 = self.idx;
                                                                                                                                                                                                                                                                                                            var $3187 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($3173, $3183), $3184, $3185, $3186, $3187);
                                                                                                                                                                                                                                                                                                            var _term$171 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                            var _term$172 = Kind$Term$app$(_term$171, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                            var _term$173 = Kind$Term$app$(_term$172, Kind$Term$ref$($3119));
                                                                                                                                                                                                                                                                                                            var _term$174 = Kind$Term$app$(_term$173, $3057);
                                                                                                                                                                                                                                                                                                            var _term$175 = Kind$Term$app$(_term$174, $3088);
                                                                                                                                                                                                                                                                                                            var _lamb$176 = Kind$Term$lam$($3026, (_e$176 => {
                                                                                                                                                                                                                                                                                                                var $3189 = Kind$Term$lam$($3119, (_s$177 => {
                                                                                                                                                                                                                                                                                                                    var $3190 = $3150;
                                                                                                                                                                                                                                                                                                                    return $3190;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $3189;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var _term$177 = Kind$Term$app$(_term$175, _lamb$176);
                                                                                                                                                                                                                                                                                                            var _term$178 = Kind$Term$let$($3119, _term$177, (_x$178 => {
                                                                                                                                                                                                                                                                                                                var $3191 = $3181;
                                                                                                                                                                                                                                                                                                                return $3191;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var $3188 = Parser$Reply$value$(_reply$pst$170, _term$178);
                                                                                                                                                                                                                                                                                                            var $3182 = $3188;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3174 = $3182;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $3172 = $3174;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $3166 = $3172;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3159 = $3166;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3157 = $3159;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3151 = $3157;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3143 = $3151;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3141 = $3143;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3135 = $3141;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3128 = $3135;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3126 = $3128;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3120 = $3126;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3112 = $3120;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3110 = $3112;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3104 = $3110;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3097 = $3104;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3095 = $3097;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3089 = $3095;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3081 = $3089;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3079 = $3081;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3073 = $3079;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3066 = $3073;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3064 = $3066;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3058 = $3064;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3050 = $3058;
                                                                                                    break;
                                                                                            };
                                                                                            var $3048 = $3050;
                                                                                            break;
                                                                                    };
                                                                                    var $3042 = $3048;
                                                                                    break;
                                                                            };
                                                                            var $3035 = $3042;
                                                                            break;
                                                                    };
                                                                    var $3033 = $3035;
                                                                    break;
                                                            };
                                                            var $3027 = $3033;
                                                            break;
                                                    };
                                                    var $3019 = $3027;
                                                    break;
                                            };
                                            var $3017 = $3019;
                                            break;
                                    };
                                    var $3011 = $3017;
                                    break;
                            };
                            var $3004 = $3011;
                            break;
                    };
                    var $3002 = $3004;
                    break;
            };
            return $3002;
        }));
        return $3001;
    };
    const Kind$Parser$letforrange$nat$with = x0 => Kind$Parser$letforrange$nat$with$(x0);

    function Kind$Parser$letforin$(_body$1) {
        var $3192 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3194 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3196 = self.err;
                            var self = $3194;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3198 = self.value;
                                    var $3199 = Parser$Reply$error$(Parser$Error$combine$($3198, $3196));
                                    var $3197 = $3199;
                                    break;
                                case 'Maybe.none':
                                    var $3200 = Parser$Reply$error$($3196);
                                    var $3197 = $3200;
                                    break;
                            };
                            var $3195 = $3197;
                            break;
                        case 'Parser.Reply.value':
                            var $3201 = self.pst;
                            var self = $3201;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3203 = self.err;
                                    var $3204 = self.nam;
                                    var $3205 = self.ini;
                                    var $3206 = self.idx;
                                    var $3207 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3194, $3203), $3204, $3205, $3206, $3207);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3209 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3211 = self.err;
                                                    var self = $3209;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3213 = self.value;
                                                            var $3214 = Parser$Reply$error$(Parser$Error$combine$($3213, $3211));
                                                            var $3212 = $3214;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3215 = Parser$Reply$error$($3211);
                                                            var $3212 = $3215;
                                                            break;
                                                    };
                                                    var $3210 = $3212;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3216 = self.pst;
                                                    var $3217 = self.val;
                                                    var self = $3216;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3219 = self.err;
                                                            var $3220 = self.nam;
                                                            var $3221 = self.ini;
                                                            var $3222 = self.idx;
                                                            var $3223 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3209, $3219), $3220, $3221, $3222, $3223);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3225 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3227 = self.err;
                                                                            var self = $3225;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3229 = self.value;
                                                                                    var $3230 = Parser$Reply$error$(Parser$Error$combine$($3229, $3227));
                                                                                    var $3228 = $3230;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3231 = Parser$Reply$error$($3227);
                                                                                    var $3228 = $3231;
                                                                                    break;
                                                                            };
                                                                            var $3226 = $3228;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3232 = self.pst;
                                                                            var self = $3232;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3234 = self.err;
                                                                                    var $3235 = self.nam;
                                                                                    var $3236 = self.ini;
                                                                                    var $3237 = self.idx;
                                                                                    var $3238 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3225, $3234), $3235, $3236, $3237, $3238);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3240 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3242 = self.err;
                                                                                                    var self = $3240;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3244 = self.value;
                                                                                                            var $3245 = Parser$Reply$error$(Parser$Error$combine$($3244, $3242));
                                                                                                            var $3243 = $3245;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3246 = Parser$Reply$error$($3242);
                                                                                                            var $3243 = $3246;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3241 = $3243;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3247 = self.pst;
                                                                                                    var self = $3247;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3249 = self.err;
                                                                                                            var $3250 = self.nam;
                                                                                                            var $3251 = self.ini;
                                                                                                            var $3252 = self.idx;
                                                                                                            var $3253 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3240, $3249), $3250, $3251, $3252, $3253);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3255 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3257 = self.err;
                                                                                                                            var self = $3255;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3259 = self.value;
                                                                                                                                    var $3260 = Parser$Reply$error$(Parser$Error$combine$($3259, $3257));
                                                                                                                                    var $3258 = $3260;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3261 = Parser$Reply$error$($3257);
                                                                                                                                    var $3258 = $3261;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3256 = $3258;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3262 = self.pst;
                                                                                                                            var $3263 = self.val;
                                                                                                                            var self = $3262;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3265 = self.err;
                                                                                                                                    var $3266 = self.nam;
                                                                                                                                    var $3267 = self.ini;
                                                                                                                                    var $3268 = self.idx;
                                                                                                                                    var $3269 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3255, $3265), $3266, $3267, $3268, $3269);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3271 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("in", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3273 = self.err;
                                                                                                                                                    var self = $3271;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3275 = self.value;
                                                                                                                                                            var $3276 = Parser$Reply$error$(Parser$Error$combine$($3275, $3273));
                                                                                                                                                            var $3274 = $3276;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3277 = Parser$Reply$error$($3273);
                                                                                                                                                            var $3274 = $3277;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3272 = $3274;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3278 = self.pst;
                                                                                                                                                    var self = $3278;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3280 = self.err;
                                                                                                                                                            var $3281 = self.nam;
                                                                                                                                                            var $3282 = self.ini;
                                                                                                                                                            var $3283 = self.idx;
                                                                                                                                                            var $3284 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3271, $3280), $3281, $3282, $3283, $3284);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3286 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3288 = self.err;
                                                                                                                                                                            var self = $3286;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3290 = self.value;
                                                                                                                                                                                    var $3291 = Parser$Reply$error$(Parser$Error$combine$($3290, $3288));
                                                                                                                                                                                    var $3289 = $3291;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3292 = Parser$Reply$error$($3288);
                                                                                                                                                                                    var $3289 = $3292;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3287 = $3289;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3293 = self.pst;
                                                                                                                                                                            var $3294 = self.val;
                                                                                                                                                                            var self = $3293;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3296 = self.err;
                                                                                                                                                                                    var $3297 = self.nam;
                                                                                                                                                                                    var $3298 = self.ini;
                                                                                                                                                                                    var $3299 = self.idx;
                                                                                                                                                                                    var $3300 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3286, $3296), $3297, $3298, $3299, $3300);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3302 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$(":", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3304 = self.err;
                                                                                                                                                                                                    var self = $3302;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3306 = self.value;
                                                                                                                                                                                                            var $3307 = Parser$Reply$error$(Parser$Error$combine$($3306, $3304));
                                                                                                                                                                                                            var $3305 = $3307;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3308 = Parser$Reply$error$($3304);
                                                                                                                                                                                                            var $3305 = $3308;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3303 = $3305;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3309 = self.pst;
                                                                                                                                                                                                    var self = $3309;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3311 = self.err;
                                                                                                                                                                                                            var $3312 = self.nam;
                                                                                                                                                                                                            var $3313 = self.ini;
                                                                                                                                                                                                            var $3314 = self.idx;
                                                                                                                                                                                                            var $3315 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3302, $3311), $3312, $3313, $3314, $3315);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3317 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3319 = self.err;
                                                                                                                                                                                                                            var self = $3317;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3321 = self.value;
                                                                                                                                                                                                                                    var $3322 = Parser$Reply$error$(Parser$Error$combine$($3321, $3319));
                                                                                                                                                                                                                                    var $3320 = $3322;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3323 = Parser$Reply$error$($3319);
                                                                                                                                                                                                                                    var $3320 = $3323;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3318 = $3320;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3324 = self.pst;
                                                                                                                                                                                                                            var $3325 = self.val;
                                                                                                                                                                                                                            var self = $3324;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3327 = self.err;
                                                                                                                                                                                                                                    var $3328 = self.nam;
                                                                                                                                                                                                                                    var $3329 = self.ini;
                                                                                                                                                                                                                                    var $3330 = self.idx;
                                                                                                                                                                                                                                    var $3331 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3317, $3327), $3328, $3329, $3330, $3331);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3333 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3335 = self.err;
                                                                                                                                                                                                                                                    var self = $3333;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3337 = self.value;
                                                                                                                                                                                                                                                            var $3338 = Parser$Reply$error$(Parser$Error$combine$($3337, $3335));
                                                                                                                                                                                                                                                            var $3336 = $3338;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3339 = Parser$Reply$error$($3335);
                                                                                                                                                                                                                                                            var $3336 = $3339;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3334 = $3336;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3340 = self.pst;
                                                                                                                                                                                                                                                    var self = $3340;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3342 = self.err;
                                                                                                                                                                                                                                                            var $3343 = self.nam;
                                                                                                                                                                                                                                                            var $3344 = self.ini;
                                                                                                                                                                                                                                                            var $3345 = self.idx;
                                                                                                                                                                                                                                                            var $3346 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3333, $3342), $3343, $3344, $3345, $3346);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3348 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = _body$1(Unit$new)(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3350 = self.err;
                                                                                                                                                                                                                                                                            var self = $3348;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3352 = self.value;
                                                                                                                                                                                                                                                                                    var $3353 = Parser$Reply$error$(Parser$Error$combine$($3352, $3350));
                                                                                                                                                                                                                                                                                    var $3351 = $3353;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3354 = Parser$Reply$error$($3350);
                                                                                                                                                                                                                                                                                    var $3351 = $3354;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3349 = $3351;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3355 = self.pst;
                                                                                                                                                                                                                                                                            var $3356 = self.val;
                                                                                                                                                                                                                                                                            var self = $3355;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3358 = self.err;
                                                                                                                                                                                                                                                                                    var $3359 = self.nam;
                                                                                                                                                                                                                                                                                    var $3360 = self.ini;
                                                                                                                                                                                                                                                                                    var $3361 = self.idx;
                                                                                                                                                                                                                                                                                    var $3362 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3348, $3358), $3359, $3360, $3361, $3362);
                                                                                                                                                                                                                                                                                    var _term$157 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                                                    var _term$158 = Kind$Term$app$(_term$157, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$159 = Kind$Term$app$(_term$158, $3294);
                                                                                                                                                                                                                                                                                    var _term$160 = Kind$Term$app$(_term$159, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$161 = Kind$Term$app$(_term$160, Kind$Term$ref$($3217));
                                                                                                                                                                                                                                                                                    var _lamb$162 = Kind$Term$lam$($3263, (_i$162 => {
                                                                                                                                                                                                                                                                                        var $3364 = Kind$Term$lam$($3217, (_x$163 => {
                                                                                                                                                                                                                                                                                            var $3365 = $3325;
                                                                                                                                                                                                                                                                                            return $3365;
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                        return $3364;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var _term$163 = Kind$Term$app$(_term$161, _lamb$162);
                                                                                                                                                                                                                                                                                    var _term$164 = Kind$Term$let$($3217, _term$163, (_x$164 => {
                                                                                                                                                                                                                                                                                        var $3366 = $3356;
                                                                                                                                                                                                                                                                                        return $3366;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var $3363 = Parser$Reply$value$(_reply$pst$156, _term$164);
                                                                                                                                                                                                                                                                                    var $3357 = $3363;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3349 = $3357;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3347 = $3349;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3341 = $3347;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3334 = $3341;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3332 = $3334;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3326 = $3332;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3318 = $3326;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3316 = $3318;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3310 = $3316;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3303 = $3310;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3301 = $3303;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3295 = $3301;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3287 = $3295;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3285 = $3287;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3279 = $3285;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3272 = $3279;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3270 = $3272;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3264 = $3270;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3256 = $3264;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3254 = $3256;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3248 = $3254;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3241 = $3248;
                                                                                                    break;
                                                                                            };
                                                                                            var $3239 = $3241;
                                                                                            break;
                                                                                    };
                                                                                    var $3233 = $3239;
                                                                                    break;
                                                                            };
                                                                            var $3226 = $3233;
                                                                            break;
                                                                    };
                                                                    var $3224 = $3226;
                                                                    break;
                                                            };
                                                            var $3218 = $3224;
                                                            break;
                                                    };
                                                    var $3210 = $3218;
                                                    break;
                                            };
                                            var $3208 = $3210;
                                            break;
                                    };
                                    var $3202 = $3208;
                                    break;
                            };
                            var $3195 = $3202;
                            break;
                    };
                    var $3193 = $3195;
                    break;
            };
            return $3193;
        }));
        return $3192;
    };
    const Kind$Parser$letforin = x0 => Kind$Parser$letforin$(x0);

    function Kind$Parser$letforin$with$(_body$1) {
        var $3367 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3369 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3371 = self.err;
                            var self = $3369;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3373 = self.value;
                                    var $3374 = Parser$Reply$error$(Parser$Error$combine$($3373, $3371));
                                    var $3372 = $3374;
                                    break;
                                case 'Maybe.none':
                                    var $3375 = Parser$Reply$error$($3371);
                                    var $3372 = $3375;
                                    break;
                            };
                            var $3370 = $3372;
                            break;
                        case 'Parser.Reply.value':
                            var $3376 = self.pst;
                            var self = $3376;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3378 = self.err;
                                    var $3379 = self.nam;
                                    var $3380 = self.ini;
                                    var $3381 = self.idx;
                                    var $3382 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3369, $3378), $3379, $3380, $3381, $3382);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3384 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3386 = self.err;
                                                    var self = $3384;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3388 = self.value;
                                                            var $3389 = Parser$Reply$error$(Parser$Error$combine$($3388, $3386));
                                                            var $3387 = $3389;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3390 = Parser$Reply$error$($3386);
                                                            var $3387 = $3390;
                                                            break;
                                                    };
                                                    var $3385 = $3387;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3391 = self.pst;
                                                    var $3392 = self.val;
                                                    var self = $3391;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3394 = self.err;
                                                            var $3395 = self.nam;
                                                            var $3396 = self.ini;
                                                            var $3397 = self.idx;
                                                            var $3398 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3384, $3394), $3395, $3396, $3397, $3398);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3400 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("in", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3402 = self.err;
                                                                            var self = $3400;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3404 = self.value;
                                                                                    var $3405 = Parser$Reply$error$(Parser$Error$combine$($3404, $3402));
                                                                                    var $3403 = $3405;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3406 = Parser$Reply$error$($3402);
                                                                                    var $3403 = $3406;
                                                                                    break;
                                                                            };
                                                                            var $3401 = $3403;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3407 = self.pst;
                                                                            var self = $3407;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3409 = self.err;
                                                                                    var $3410 = self.nam;
                                                                                    var $3411 = self.ini;
                                                                                    var $3412 = self.idx;
                                                                                    var $3413 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3400, $3409), $3410, $3411, $3412, $3413);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3415 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3417 = self.err;
                                                                                                    var self = $3415;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3419 = self.value;
                                                                                                            var $3420 = Parser$Reply$error$(Parser$Error$combine$($3419, $3417));
                                                                                                            var $3418 = $3420;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3421 = Parser$Reply$error$($3417);
                                                                                                            var $3418 = $3421;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3416 = $3418;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3422 = self.pst;
                                                                                                    var $3423 = self.val;
                                                                                                    var self = $3422;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3425 = self.err;
                                                                                                            var $3426 = self.nam;
                                                                                                            var $3427 = self.ini;
                                                                                                            var $3428 = self.idx;
                                                                                                            var $3429 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3415, $3425), $3426, $3427, $3428, $3429);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3431 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("with", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3433 = self.err;
                                                                                                                            var self = $3431;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3435 = self.value;
                                                                                                                                    var $3436 = Parser$Reply$error$(Parser$Error$combine$($3435, $3433));
                                                                                                                                    var $3434 = $3436;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3437 = Parser$Reply$error$($3433);
                                                                                                                                    var $3434 = $3437;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3432 = $3434;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3438 = self.pst;
                                                                                                                            var self = $3438;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3440 = self.err;
                                                                                                                                    var $3441 = self.nam;
                                                                                                                                    var $3442 = self.ini;
                                                                                                                                    var $3443 = self.idx;
                                                                                                                                    var $3444 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3431, $3440), $3441, $3442, $3443, $3444);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3446 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$name1$(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3448 = self.err;
                                                                                                                                                    var self = $3446;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3450 = self.value;
                                                                                                                                                            var $3451 = Parser$Reply$error$(Parser$Error$combine$($3450, $3448));
                                                                                                                                                            var $3449 = $3451;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3452 = Parser$Reply$error$($3448);
                                                                                                                                                            var $3449 = $3452;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3447 = $3449;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3453 = self.pst;
                                                                                                                                                    var $3454 = self.val;
                                                                                                                                                    var self = $3453;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3456 = self.err;
                                                                                                                                                            var $3457 = self.nam;
                                                                                                                                                            var $3458 = self.ini;
                                                                                                                                                            var $3459 = self.idx;
                                                                                                                                                            var $3460 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3446, $3456), $3457, $3458, $3459, $3460);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3462 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3464 = self.err;
                                                                                                                                                                            var self = $3462;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3466 = self.value;
                                                                                                                                                                                    var $3467 = Parser$Reply$error$(Parser$Error$combine$($3466, $3464));
                                                                                                                                                                                    var $3465 = $3467;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3468 = Parser$Reply$error$($3464);
                                                                                                                                                                                    var $3465 = $3468;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3463 = $3465;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3469 = self.pst;
                                                                                                                                                                            var self = $3469;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3471 = self.err;
                                                                                                                                                                                    var $3472 = self.nam;
                                                                                                                                                                                    var $3473 = self.ini;
                                                                                                                                                                                    var $3474 = self.idx;
                                                                                                                                                                                    var $3475 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3462, $3471), $3472, $3473, $3474, $3475);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3477 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3479 = self.err;
                                                                                                                                                                                                    var self = $3477;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3481 = self.value;
                                                                                                                                                                                                            var $3482 = Parser$Reply$error$(Parser$Error$combine$($3481, $3479));
                                                                                                                                                                                                            var $3480 = $3482;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3483 = Parser$Reply$error$($3479);
                                                                                                                                                                                                            var $3480 = $3483;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3478 = $3480;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3484 = self.pst;
                                                                                                                                                                                                    var $3485 = self.val;
                                                                                                                                                                                                    var self = $3484;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3487 = self.err;
                                                                                                                                                                                                            var $3488 = self.nam;
                                                                                                                                                                                                            var $3489 = self.ini;
                                                                                                                                                                                                            var $3490 = self.idx;
                                                                                                                                                                                                            var $3491 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3477, $3487), $3488, $3489, $3490, $3491);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3493 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3495 = self.err;
                                                                                                                                                                                                                            var self = $3493;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3497 = self.value;
                                                                                                                                                                                                                                    var $3498 = Parser$Reply$error$(Parser$Error$combine$($3497, $3495));
                                                                                                                                                                                                                                    var $3496 = $3498;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3499 = Parser$Reply$error$($3495);
                                                                                                                                                                                                                                    var $3496 = $3499;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3494 = $3496;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3500 = self.pst;
                                                                                                                                                                                                                            var self = $3500;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3502 = self.err;
                                                                                                                                                                                                                                    var $3503 = self.nam;
                                                                                                                                                                                                                                    var $3504 = self.ini;
                                                                                                                                                                                                                                    var $3505 = self.idx;
                                                                                                                                                                                                                                    var $3506 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3493, $3502), $3503, $3504, $3505, $3506);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3508 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3510 = self.err;
                                                                                                                                                                                                                                                    var self = $3508;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3512 = self.value;
                                                                                                                                                                                                                                                            var $3513 = Parser$Reply$error$(Parser$Error$combine$($3512, $3510));
                                                                                                                                                                                                                                                            var $3511 = $3513;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3514 = Parser$Reply$error$($3510);
                                                                                                                                                                                                                                                            var $3511 = $3514;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3509 = $3511;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3515 = self.pst;
                                                                                                                                                                                                                                                    var $3516 = self.val;
                                                                                                                                                                                                                                                    var self = $3515;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3518 = self.err;
                                                                                                                                                                                                                                                            var $3519 = self.nam;
                                                                                                                                                                                                                                                            var $3520 = self.ini;
                                                                                                                                                                                                                                                            var $3521 = self.idx;
                                                                                                                                                                                                                                                            var $3522 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3508, $3518), $3519, $3520, $3521, $3522);
                                                                                                                                                                                                                                                            var _term$143 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, $3423);
                                                                                                                                                                                                                                                            var _term$146 = Kind$Term$app$(_term$145, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$147 = Kind$Term$app$(_term$146, Kind$Term$ref$($3454));
                                                                                                                                                                                                                                                            var _lamb$148 = Kind$Term$lam$($3392, (_i$148 => {
                                                                                                                                                                                                                                                                var $3524 = Kind$Term$lam$($3454, (_x$149 => {
                                                                                                                                                                                                                                                                    var $3525 = $3485;
                                                                                                                                                                                                                                                                    return $3525;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $3524;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var _term$149 = Kind$Term$app$(_term$147, _lamb$148);
                                                                                                                                                                                                                                                            var _term$150 = Kind$Term$let$($3454, _term$149, (_x$150 => {
                                                                                                                                                                                                                                                                var $3526 = $3516;
                                                                                                                                                                                                                                                                return $3526;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var $3523 = Parser$Reply$value$(_reply$pst$142, _term$150);
                                                                                                                                                                                                                                                            var $3517 = $3523;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3509 = $3517;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3507 = $3509;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3501 = $3507;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3494 = $3501;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3492 = $3494;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3486 = $3492;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3478 = $3486;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3476 = $3478;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3470 = $3476;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3463 = $3470;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3461 = $3463;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3455 = $3461;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3447 = $3455;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3445 = $3447;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3439 = $3445;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3432 = $3439;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3430 = $3432;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3424 = $3430;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3416 = $3424;
                                                                                                    break;
                                                                                            };
                                                                                            var $3414 = $3416;
                                                                                            break;
                                                                                    };
                                                                                    var $3408 = $3414;
                                                                                    break;
                                                                            };
                                                                            var $3401 = $3408;
                                                                            break;
                                                                    };
                                                                    var $3399 = $3401;
                                                                    break;
                                                            };
                                                            var $3393 = $3399;
                                                            break;
                                                    };
                                                    var $3385 = $3393;
                                                    break;
                                            };
                                            var $3383 = $3385;
                                            break;
                                    };
                                    var $3377 = $3383;
                                    break;
                            };
                            var $3370 = $3377;
                            break;
                    };
                    var $3368 = $3370;
                    break;
            };
            return $3368;
        }));
        return $3367;
    };
    const Kind$Parser$letforin$with = x0 => Kind$Parser$letforin$with$(x0);

    function Kind$Parser$letwhile$(_body$1) {
        var $3527 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3529 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3531 = self.err;
                            var self = $3529;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3533 = self.value;
                                    var $3534 = Parser$Reply$error$(Parser$Error$combine$($3533, $3531));
                                    var $3532 = $3534;
                                    break;
                                case 'Maybe.none':
                                    var $3535 = Parser$Reply$error$($3531);
                                    var $3532 = $3535;
                                    break;
                            };
                            var $3530 = $3532;
                            break;
                        case 'Parser.Reply.value':
                            var $3536 = self.pst;
                            var self = $3536;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3538 = self.err;
                                    var $3539 = self.nam;
                                    var $3540 = self.ini;
                                    var $3541 = self.idx;
                                    var $3542 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3529, $3538), $3539, $3540, $3541, $3542);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3544 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3546 = self.err;
                                                    var self = $3544;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3548 = self.value;
                                                            var $3549 = Parser$Reply$error$(Parser$Error$combine$($3548, $3546));
                                                            var $3547 = $3549;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3550 = Parser$Reply$error$($3546);
                                                            var $3547 = $3550;
                                                            break;
                                                    };
                                                    var $3545 = $3547;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3551 = self.pst;
                                                    var $3552 = self.val;
                                                    var self = $3551;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3554 = self.err;
                                                            var $3555 = self.nam;
                                                            var $3556 = self.ini;
                                                            var $3557 = self.idx;
                                                            var $3558 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3544, $3554), $3555, $3556, $3557, $3558);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3560 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3562 = self.err;
                                                                            var self = $3560;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3564 = self.value;
                                                                                    var $3565 = Parser$Reply$error$(Parser$Error$combine$($3564, $3562));
                                                                                    var $3563 = $3565;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3566 = Parser$Reply$error$($3562);
                                                                                    var $3563 = $3566;
                                                                                    break;
                                                                            };
                                                                            var $3561 = $3563;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3567 = self.pst;
                                                                            var self = $3567;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3569 = self.err;
                                                                                    var $3570 = self.nam;
                                                                                    var $3571 = self.ini;
                                                                                    var $3572 = self.idx;
                                                                                    var $3573 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3560, $3569), $3570, $3571, $3572, $3573);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3575 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("while ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3577 = self.err;
                                                                                                    var self = $3575;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3579 = self.value;
                                                                                                            var $3580 = Parser$Reply$error$(Parser$Error$combine$($3579, $3577));
                                                                                                            var $3578 = $3580;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3581 = Parser$Reply$error$($3577);
                                                                                                            var $3578 = $3581;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3576 = $3578;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3582 = self.pst;
                                                                                                    var self = $3582;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3584 = self.err;
                                                                                                            var $3585 = self.nam;
                                                                                                            var $3586 = self.ini;
                                                                                                            var $3587 = self.idx;
                                                                                                            var $3588 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3575, $3584), $3585, $3586, $3587, $3588);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3590 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3592 = self.err;
                                                                                                                            var self = $3590;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3594 = self.value;
                                                                                                                                    var $3595 = Parser$Reply$error$(Parser$Error$combine$($3594, $3592));
                                                                                                                                    var $3593 = $3595;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3596 = Parser$Reply$error$($3592);
                                                                                                                                    var $3593 = $3596;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3591 = $3593;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3597 = self.pst;
                                                                                                                            var $3598 = self.val;
                                                                                                                            var self = $3597;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3600 = self.err;
                                                                                                                                    var $3601 = self.nam;
                                                                                                                                    var $3602 = self.ini;
                                                                                                                                    var $3603 = self.idx;
                                                                                                                                    var $3604 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3590, $3600), $3601, $3602, $3603, $3604);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3606 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3608 = self.err;
                                                                                                                                                    var self = $3606;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3610 = self.value;
                                                                                                                                                            var $3611 = Parser$Reply$error$(Parser$Error$combine$($3610, $3608));
                                                                                                                                                            var $3609 = $3611;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3612 = Parser$Reply$error$($3608);
                                                                                                                                                            var $3609 = $3612;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3607 = $3609;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3613 = self.pst;
                                                                                                                                                    var self = $3613;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3615 = self.err;
                                                                                                                                                            var $3616 = self.nam;
                                                                                                                                                            var $3617 = self.ini;
                                                                                                                                                            var $3618 = self.idx;
                                                                                                                                                            var $3619 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3606, $3615), $3616, $3617, $3618, $3619);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3621 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3623 = self.err;
                                                                                                                                                                            var self = $3621;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3625 = self.value;
                                                                                                                                                                                    var $3626 = Parser$Reply$error$(Parser$Error$combine$($3625, $3623));
                                                                                                                                                                                    var $3624 = $3626;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3627 = Parser$Reply$error$($3623);
                                                                                                                                                                                    var $3624 = $3627;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3622 = $3624;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3628 = self.pst;
                                                                                                                                                                            var $3629 = self.val;
                                                                                                                                                                            var self = $3628;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3631 = self.err;
                                                                                                                                                                                    var $3632 = self.nam;
                                                                                                                                                                                    var $3633 = self.ini;
                                                                                                                                                                                    var $3634 = self.idx;
                                                                                                                                                                                    var $3635 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3621, $3631), $3632, $3633, $3634, $3635);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3637 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3639 = self.err;
                                                                                                                                                                                                    var self = $3637;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3641 = self.value;
                                                                                                                                                                                                            var $3642 = Parser$Reply$error$(Parser$Error$combine$($3641, $3639));
                                                                                                                                                                                                            var $3640 = $3642;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3643 = Parser$Reply$error$($3639);
                                                                                                                                                                                                            var $3640 = $3643;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3638 = $3640;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3644 = self.pst;
                                                                                                                                                                                                    var self = $3644;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3646 = self.err;
                                                                                                                                                                                                            var $3647 = self.nam;
                                                                                                                                                                                                            var $3648 = self.ini;
                                                                                                                                                                                                            var $3649 = self.idx;
                                                                                                                                                                                                            var $3650 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3637, $3646), $3647, $3648, $3649, $3650);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3652 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3654 = self.err;
                                                                                                                                                                                                                            var self = $3652;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3656 = self.value;
                                                                                                                                                                                                                                    var $3657 = Parser$Reply$error$(Parser$Error$combine$($3656, $3654));
                                                                                                                                                                                                                                    var $3655 = $3657;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3658 = Parser$Reply$error$($3654);
                                                                                                                                                                                                                                    var $3655 = $3658;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3653 = $3655;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3659 = self.pst;
                                                                                                                                                                                                                            var $3660 = self.val;
                                                                                                                                                                                                                            var self = $3659;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3662 = self.err;
                                                                                                                                                                                                                                    var $3663 = self.nam;
                                                                                                                                                                                                                                    var $3664 = self.ini;
                                                                                                                                                                                                                                    var $3665 = self.idx;
                                                                                                                                                                                                                                    var $3666 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3652, $3662), $3663, $3664, $3665, $3666);
                                                                                                                                                                                                                                    var _term$129 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$ref$($3552));
                                                                                                                                                                                                                                    var _term$132 = Kind$Term$app$(_term$131, Kind$Term$lam$($3552, (_s$132 => {
                                                                                                                                                                                                                                        var $3668 = $3598;
                                                                                                                                                                                                                                        return $3668;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$133 = Kind$Term$app$(_term$132, Kind$Term$lam$($3552, (_s$133 => {
                                                                                                                                                                                                                                        var $3669 = $3629;
                                                                                                                                                                                                                                        return $3669;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$134 = Kind$Term$let$($3552, _term$133, (_x$134 => {
                                                                                                                                                                                                                                        var $3670 = $3660;
                                                                                                                                                                                                                                        return $3670;
                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                    var $3667 = Parser$Reply$value$(_reply$pst$128, _term$134);
                                                                                                                                                                                                                                    var $3661 = $3667;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3653 = $3661;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3651 = $3653;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3645 = $3651;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3638 = $3645;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3636 = $3638;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3630 = $3636;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3622 = $3630;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3620 = $3622;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3614 = $3620;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3607 = $3614;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3605 = $3607;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3599 = $3605;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3591 = $3599;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3589 = $3591;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3583 = $3589;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3576 = $3583;
                                                                                                    break;
                                                                                            };
                                                                                            var $3574 = $3576;
                                                                                            break;
                                                                                    };
                                                                                    var $3568 = $3574;
                                                                                    break;
                                                                            };
                                                                            var $3561 = $3568;
                                                                            break;
                                                                    };
                                                                    var $3559 = $3561;
                                                                    break;
                                                            };
                                                            var $3553 = $3559;
                                                            break;
                                                    };
                                                    var $3545 = $3553;
                                                    break;
                                            };
                                            var $3543 = $3545;
                                            break;
                                    };
                                    var $3537 = $3543;
                                    break;
                            };
                            var $3530 = $3537;
                            break;
                    };
                    var $3528 = $3530;
                    break;
            };
            return $3528;
        }));
        return $3527;
    };
    const Kind$Parser$letwhile = x0 => Kind$Parser$letwhile$(x0);

    function Kind$Parser$letwhile$with$(_body$1) {
        var $3671 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3673 = self.err;
                    var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3675 = self.err;
                            var self = $3673;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3677 = self.value;
                                    var $3678 = Parser$Reply$error$(Parser$Error$combine$($3677, $3675));
                                    var $3676 = $3678;
                                    break;
                                case 'Maybe.none':
                                    var $3679 = Parser$Reply$error$($3675);
                                    var $3676 = $3679;
                                    break;
                            };
                            var $3674 = $3676;
                            break;
                        case 'Parser.Reply.value':
                            var $3680 = self.pst;
                            var self = $3680;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3682 = self.err;
                                    var $3683 = self.nam;
                                    var $3684 = self.ini;
                                    var $3685 = self.idx;
                                    var $3686 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3673, $3682), $3683, $3684, $3685, $3686);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3688 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3690 = self.err;
                                                    var self = $3688;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3692 = self.value;
                                                            var $3693 = Parser$Reply$error$(Parser$Error$combine$($3692, $3690));
                                                            var $3691 = $3693;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3694 = Parser$Reply$error$($3690);
                                                            var $3691 = $3694;
                                                            break;
                                                    };
                                                    var $3689 = $3691;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3695 = self.pst;
                                                    var $3696 = self.val;
                                                    var self = $3695;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3698 = self.err;
                                                            var $3699 = self.nam;
                                                            var $3700 = self.ini;
                                                            var $3701 = self.idx;
                                                            var $3702 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3688, $3698), $3699, $3700, $3701, $3702);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3704 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3706 = self.err;
                                                                            var self = $3704;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3708 = self.value;
                                                                                    var $3709 = Parser$Reply$error$(Parser$Error$combine$($3708, $3706));
                                                                                    var $3707 = $3709;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3710 = Parser$Reply$error$($3706);
                                                                                    var $3707 = $3710;
                                                                                    break;
                                                                            };
                                                                            var $3705 = $3707;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3711 = self.pst;
                                                                            var self = $3711;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3713 = self.err;
                                                                                    var $3714 = self.nam;
                                                                                    var $3715 = self.ini;
                                                                                    var $3716 = self.idx;
                                                                                    var $3717 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3704, $3713), $3714, $3715, $3716, $3717);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3719 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3721 = self.err;
                                                                                                    var self = $3719;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3723 = self.value;
                                                                                                            var $3724 = Parser$Reply$error$(Parser$Error$combine$($3723, $3721));
                                                                                                            var $3722 = $3724;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3725 = Parser$Reply$error$($3721);
                                                                                                            var $3722 = $3725;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3720 = $3722;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3726 = self.pst;
                                                                                                    var $3727 = self.val;
                                                                                                    var self = $3726;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3729 = self.err;
                                                                                                            var $3730 = self.nam;
                                                                                                            var $3731 = self.ini;
                                                                                                            var $3732 = self.idx;
                                                                                                            var $3733 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3719, $3729), $3730, $3731, $3732, $3733);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3735 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3737 = self.err;
                                                                                                                            var self = $3735;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3739 = self.value;
                                                                                                                                    var $3740 = Parser$Reply$error$(Parser$Error$combine$($3739, $3737));
                                                                                                                                    var $3738 = $3740;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3741 = Parser$Reply$error$($3737);
                                                                                                                                    var $3738 = $3741;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3736 = $3738;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3742 = self.pst;
                                                                                                                            var self = $3742;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3744 = self.err;
                                                                                                                                    var $3745 = self.nam;
                                                                                                                                    var $3746 = self.ini;
                                                                                                                                    var $3747 = self.idx;
                                                                                                                                    var $3748 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3735, $3744), $3745, $3746, $3747, $3748);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3750 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3752 = self.err;
                                                                                                                                                    var self = $3750;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3754 = self.value;
                                                                                                                                                            var $3755 = Parser$Reply$error$(Parser$Error$combine$($3754, $3752));
                                                                                                                                                            var $3753 = $3755;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3756 = Parser$Reply$error$($3752);
                                                                                                                                                            var $3753 = $3756;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3751 = $3753;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3757 = self.pst;
                                                                                                                                                    var $3758 = self.val;
                                                                                                                                                    var self = $3757;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3760 = self.err;
                                                                                                                                                            var $3761 = self.nam;
                                                                                                                                                            var $3762 = self.ini;
                                                                                                                                                            var $3763 = self.idx;
                                                                                                                                                            var $3764 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3750, $3760), $3761, $3762, $3763, $3764);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3766 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3768 = self.err;
                                                                                                                                                                            var self = $3766;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3770 = self.value;
                                                                                                                                                                                    var $3771 = Parser$Reply$error$(Parser$Error$combine$($3770, $3768));
                                                                                                                                                                                    var $3769 = $3771;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3772 = Parser$Reply$error$($3768);
                                                                                                                                                                                    var $3769 = $3772;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3767 = $3769;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3773 = self.pst;
                                                                                                                                                                            var self = $3773;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3775 = self.err;
                                                                                                                                                                                    var $3776 = self.nam;
                                                                                                                                                                                    var $3777 = self.ini;
                                                                                                                                                                                    var $3778 = self.idx;
                                                                                                                                                                                    var $3779 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3766, $3775), $3776, $3777, $3778, $3779);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3781 = self.err;
                                                                                                                                                                                            var _reply$106 = _body$1(Unit$new)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3783 = self.err;
                                                                                                                                                                                                    var self = $3781;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3785 = self.value;
                                                                                                                                                                                                            var $3786 = Parser$Reply$error$(Parser$Error$combine$($3785, $3783));
                                                                                                                                                                                                            var $3784 = $3786;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3787 = Parser$Reply$error$($3783);
                                                                                                                                                                                                            var $3784 = $3787;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3782 = $3784;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3788 = self.pst;
                                                                                                                                                                                                    var $3789 = self.val;
                                                                                                                                                                                                    var self = $3788;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3791 = self.err;
                                                                                                                                                                                                            var $3792 = self.nam;
                                                                                                                                                                                                            var $3793 = self.ini;
                                                                                                                                                                                                            var $3794 = self.idx;
                                                                                                                                                                                                            var $3795 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3781, $3791), $3792, $3793, $3794, $3795);
                                                                                                                                                                                                            var _term$115 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                            var _term$116 = Kind$Term$app$(_term$115, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                            var _term$117 = Kind$Term$app$(_term$116, Kind$Term$ref$($3727));
                                                                                                                                                                                                            var _term$118 = Kind$Term$app$(_term$117, Kind$Term$lam$($3727, (_s$118 => {
                                                                                                                                                                                                                var $3797 = $3696;
                                                                                                                                                                                                                return $3797;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$119 = Kind$Term$app$(_term$118, Kind$Term$lam$($3727, (_s$119 => {
                                                                                                                                                                                                                var $3798 = $3758;
                                                                                                                                                                                                                return $3798;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$120 = Kind$Term$let$($3727, _term$119, (_x$120 => {
                                                                                                                                                                                                                var $3799 = $3789;
                                                                                                                                                                                                                return $3799;
                                                                                                                                                                                                            }));
                                                                                                                                                                                                            var $3796 = Parser$Reply$value$(_reply$pst$114, _term$120);
                                                                                                                                                                                                            var $3790 = $3796;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3782 = $3790;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3780 = $3782;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3774 = $3780;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3767 = $3774;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3765 = $3767;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3759 = $3765;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3751 = $3759;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3749 = $3751;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3743 = $3749;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3736 = $3743;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3734 = $3736;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3728 = $3734;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3720 = $3728;
                                                                                                    break;
                                                                                            };
                                                                                            var $3718 = $3720;
                                                                                            break;
                                                                                    };
                                                                                    var $3712 = $3718;
                                                                                    break;
                                                                            };
                                                                            var $3705 = $3712;
                                                                            break;
                                                                    };
                                                                    var $3703 = $3705;
                                                                    break;
                                                            };
                                                            var $3697 = $3703;
                                                            break;
                                                    };
                                                    var $3689 = $3697;
                                                    break;
                                            };
                                            var $3687 = $3689;
                                            break;
                                    };
                                    var $3681 = $3687;
                                    break;
                            };
                            var $3674 = $3681;
                            break;
                    };
                    var $3672 = $3674;
                    break;
            };
            return $3672;
        }));
        return $3671;
    };
    const Kind$Parser$letwhile$with = x0 => Kind$Parser$letwhile$with$(x0);

    function Kind$Parser$let$(_body$1) {
        var $3800 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3802 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3804 = self.err;
                            var self = $3802;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3806 = self.value;
                                    var $3807 = Parser$Reply$error$(Parser$Error$combine$($3806, $3804));
                                    var $3805 = $3807;
                                    break;
                                case 'Maybe.none':
                                    var $3808 = Parser$Reply$error$($3804);
                                    var $3805 = $3808;
                                    break;
                            };
                            var $3803 = $3805;
                            break;
                        case 'Parser.Reply.value':
                            var $3809 = self.pst;
                            var self = $3809;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3811 = self.err;
                                    var $3812 = self.nam;
                                    var $3813 = self.ini;
                                    var $3814 = self.idx;
                                    var $3815 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3802, $3811), $3812, $3813, $3814, $3815);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3817 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3819 = self.err;
                                                    var self = $3817;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3821 = self.value;
                                                            var $3822 = Parser$Reply$error$(Parser$Error$combine$($3821, $3819));
                                                            var $3820 = $3822;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3823 = Parser$Reply$error$($3819);
                                                            var $3820 = $3823;
                                                            break;
                                                    };
                                                    var $3818 = $3820;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3824 = self.pst;
                                                    var $3825 = self.val;
                                                    var self = $3824;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3827 = self.err;
                                                            var $3828 = self.nam;
                                                            var $3829 = self.ini;
                                                            var $3830 = self.idx;
                                                            var $3831 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3817, $3827), $3828, $3829, $3830, $3831);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3833 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3835 = self.err;
                                                                            var self = $3833;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3837 = self.value;
                                                                                    var $3838 = Parser$Reply$error$(Parser$Error$combine$($3837, $3835));
                                                                                    var $3836 = $3838;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3839 = Parser$Reply$error$($3835);
                                                                                    var $3836 = $3839;
                                                                                    break;
                                                                            };
                                                                            var $3834 = $3836;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3840 = self.pst;
                                                                            var self = $3840;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3842 = self.err;
                                                                                    var $3843 = self.nam;
                                                                                    var $3844 = self.ini;
                                                                                    var $3845 = self.idx;
                                                                                    var $3846 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3833, $3842), $3843, $3844, $3845, $3846);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3848 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3850 = self.err;
                                                                                                    var self = $3848;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3852 = self.value;
                                                                                                            var $3853 = Parser$Reply$error$(Parser$Error$combine$($3852, $3850));
                                                                                                            var $3851 = $3853;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3854 = Parser$Reply$error$($3850);
                                                                                                            var $3851 = $3854;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3849 = $3851;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3855 = self.pst;
                                                                                                    var $3856 = self.val;
                                                                                                    var self = $3855;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3858 = self.err;
                                                                                                            var $3859 = self.nam;
                                                                                                            var $3860 = self.ini;
                                                                                                            var $3861 = self.idx;
                                                                                                            var $3862 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3848, $3858), $3859, $3860, $3861, $3862);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3864 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3866 = self.err;
                                                                                                                            var self = $3864;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3868 = self.value;
                                                                                                                                    var $3869 = Parser$Reply$error$(Parser$Error$combine$($3868, $3866));
                                                                                                                                    var $3867 = $3869;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3870 = Parser$Reply$error$($3866);
                                                                                                                                    var $3867 = $3870;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3865 = $3867;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3871 = self.pst;
                                                                                                                            var self = $3871;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3873 = self.err;
                                                                                                                                    var $3874 = self.nam;
                                                                                                                                    var $3875 = self.ini;
                                                                                                                                    var $3876 = self.idx;
                                                                                                                                    var $3877 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3864, $3873), $3874, $3875, $3876, $3877);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3879 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3881 = self.err;
                                                                                                                                                    var self = $3879;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3883 = self.value;
                                                                                                                                                            var $3884 = Parser$Reply$error$(Parser$Error$combine$($3883, $3881));
                                                                                                                                                            var $3882 = $3884;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3885 = Parser$Reply$error$($3881);
                                                                                                                                                            var $3882 = $3885;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3880 = $3882;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3886 = self.pst;
                                                                                                                                                    var $3887 = self.val;
                                                                                                                                                    var self = $3886;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3889 = self.err;
                                                                                                                                                            var $3890 = self.nam;
                                                                                                                                                            var $3891 = self.ini;
                                                                                                                                                            var $3892 = self.idx;
                                                                                                                                                            var $3893 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3879, $3889), $3890, $3891, $3892, $3893);
                                                                                                                                                            var $3894 = Parser$Reply$value$(_reply$pst$86, Kind$Term$let$($3825, $3856, (_x$87 => {
                                                                                                                                                                var $3895 = $3887;
                                                                                                                                                                return $3895;
                                                                                                                                                            })));
                                                                                                                                                            var $3888 = $3894;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3880 = $3888;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3878 = $3880;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3872 = $3878;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3865 = $3872;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3863 = $3865;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3857 = $3863;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3849 = $3857;
                                                                                                    break;
                                                                                            };
                                                                                            var $3847 = $3849;
                                                                                            break;
                                                                                    };
                                                                                    var $3841 = $3847;
                                                                                    break;
                                                                            };
                                                                            var $3834 = $3841;
                                                                            break;
                                                                    };
                                                                    var $3832 = $3834;
                                                                    break;
                                                            };
                                                            var $3826 = $3832;
                                                            break;
                                                    };
                                                    var $3818 = $3826;
                                                    break;
                                            };
                                            var $3816 = $3818;
                                            break;
                                    };
                                    var $3810 = $3816;
                                    break;
                            };
                            var $3803 = $3810;
                            break;
                    };
                    var $3801 = $3803;
                    break;
            };
            return $3801;
        }));
        return $3800;
    };
    const Kind$Parser$let = x0 => Kind$Parser$let$(x0);

    function Kind$Parser$let$omit$(_body$1) {
        var $3896 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3898 = self.err;
                    var _reply$8 = Kind$Parser$name1$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3900 = self.err;
                            var self = $3898;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3902 = self.value;
                                    var $3903 = Parser$Reply$error$(Parser$Error$combine$($3902, $3900));
                                    var $3901 = $3903;
                                    break;
                                case 'Maybe.none':
                                    var $3904 = Parser$Reply$error$($3900);
                                    var $3901 = $3904;
                                    break;
                            };
                            var $3899 = $3901;
                            break;
                        case 'Parser.Reply.value':
                            var $3905 = self.pst;
                            var $3906 = self.val;
                            var self = $3905;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3908 = self.err;
                                    var $3909 = self.nam;
                                    var $3910 = self.ini;
                                    var $3911 = self.idx;
                                    var $3912 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3898, $3908), $3909, $3910, $3911, $3912);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3914 = self.err;
                                            var _reply$22 = Kind$Parser$text$("= ", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3916 = self.err;
                                                    var self = $3914;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3918 = self.value;
                                                            var $3919 = Parser$Reply$error$(Parser$Error$combine$($3918, $3916));
                                                            var $3917 = $3919;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3920 = Parser$Reply$error$($3916);
                                                            var $3917 = $3920;
                                                            break;
                                                    };
                                                    var $3915 = $3917;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3921 = self.pst;
                                                    var self = $3921;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3923 = self.err;
                                                            var $3924 = self.nam;
                                                            var $3925 = self.ini;
                                                            var $3926 = self.idx;
                                                            var $3927 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3914, $3923), $3924, $3925, $3926, $3927);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3929 = self.err;
                                                                    var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3931 = self.err;
                                                                            var self = $3929;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3933 = self.value;
                                                                                    var $3934 = Parser$Reply$error$(Parser$Error$combine$($3933, $3931));
                                                                                    var $3932 = $3934;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3935 = Parser$Reply$error$($3931);
                                                                                    var $3932 = $3935;
                                                                                    break;
                                                                            };
                                                                            var $3930 = $3932;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3936 = self.pst;
                                                                            var $3937 = self.val;
                                                                            var self = $3936;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3939 = self.err;
                                                                                    var $3940 = self.nam;
                                                                                    var $3941 = self.ini;
                                                                                    var $3942 = self.idx;
                                                                                    var $3943 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3929, $3939), $3940, $3941, $3942, $3943);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3945 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3947 = self.err;
                                                                                                    var self = $3945;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3949 = self.value;
                                                                                                            var $3950 = Parser$Reply$error$(Parser$Error$combine$($3949, $3947));
                                                                                                            var $3948 = $3950;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3951 = Parser$Reply$error$($3947);
                                                                                                            var $3948 = $3951;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3946 = $3948;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3952 = self.pst;
                                                                                                    var self = $3952;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3954 = self.err;
                                                                                                            var $3955 = self.nam;
                                                                                                            var $3956 = self.ini;
                                                                                                            var $3957 = self.idx;
                                                                                                            var $3958 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3945, $3954), $3955, $3956, $3957, $3958);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3960 = self.err;
                                                                                                                    var _reply$64 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3962 = self.err;
                                                                                                                            var self = $3960;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3964 = self.value;
                                                                                                                                    var $3965 = Parser$Reply$error$(Parser$Error$combine$($3964, $3962));
                                                                                                                                    var $3963 = $3965;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3966 = Parser$Reply$error$($3962);
                                                                                                                                    var $3963 = $3966;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3961 = $3963;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3967 = self.pst;
                                                                                                                            var $3968 = self.val;
                                                                                                                            var self = $3967;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3970 = self.err;
                                                                                                                                    var $3971 = self.nam;
                                                                                                                                    var $3972 = self.ini;
                                                                                                                                    var $3973 = self.idx;
                                                                                                                                    var $3974 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3960, $3970), $3971, $3972, $3973, $3974);
                                                                                                                                    var $3975 = Parser$Reply$value$(_reply$pst$72, Kind$Term$let$($3906, $3937, (_x$73 => {
                                                                                                                                        var $3976 = $3968;
                                                                                                                                        return $3976;
                                                                                                                                    })));
                                                                                                                                    var $3969 = $3975;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3961 = $3969;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3959 = $3961;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3953 = $3959;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3946 = $3953;
                                                                                                    break;
                                                                                            };
                                                                                            var $3944 = $3946;
                                                                                            break;
                                                                                    };
                                                                                    var $3938 = $3944;
                                                                                    break;
                                                                            };
                                                                            var $3930 = $3938;
                                                                            break;
                                                                    };
                                                                    var $3928 = $3930;
                                                                    break;
                                                            };
                                                            var $3922 = $3928;
                                                            break;
                                                    };
                                                    var $3915 = $3922;
                                                    break;
                                            };
                                            var $3913 = $3915;
                                            break;
                                    };
                                    var $3907 = $3913;
                                    break;
                            };
                            var $3899 = $3907;
                            break;
                    };
                    var $3897 = $3899;
                    break;
            };
            return $3897;
        }));
        return $3896;
    };
    const Kind$Parser$let$omit = x0 => Kind$Parser$let$omit$(x0);

    function Kind$Parser$getwhile$(_body$1) {
        var $3977 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3979 = self.err;
                    var _reply$8 = Parser$maybe$(Kind$Parser$text("let "), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3981 = self.err;
                            var self = $3979;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3983 = self.value;
                                    var $3984 = Parser$Reply$error$(Parser$Error$combine$($3983, $3981));
                                    var $3982 = $3984;
                                    break;
                                case 'Maybe.none':
                                    var $3985 = Parser$Reply$error$($3981);
                                    var $3982 = $3985;
                                    break;
                            };
                            var $3980 = $3982;
                            break;
                        case 'Parser.Reply.value':
                            var $3986 = self.pst;
                            var self = $3986;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3988 = self.err;
                                    var $3989 = self.nam;
                                    var $3990 = self.ini;
                                    var $3991 = self.idx;
                                    var $3992 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3979, $3988), $3989, $3990, $3991, $3992);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3994 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3996 = self.err;
                                                    var self = $3994;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3998 = self.value;
                                                            var $3999 = Parser$Reply$error$(Parser$Error$combine$($3998, $3996));
                                                            var $3997 = $3999;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4000 = Parser$Reply$error$($3996);
                                                            var $3997 = $4000;
                                                            break;
                                                    };
                                                    var $3995 = $3997;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4001 = self.pst;
                                                    var self = $4001;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4003 = self.err;
                                                            var $4004 = self.nam;
                                                            var $4005 = self.ini;
                                                            var $4006 = self.idx;
                                                            var $4007 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3994, $4003), $4004, $4005, $4006, $4007);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4009 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4011 = self.err;
                                                                            var self = $4009;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4013 = self.value;
                                                                                    var $4014 = Parser$Reply$error$(Parser$Error$combine$($4013, $4011));
                                                                                    var $4012 = $4014;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4015 = Parser$Reply$error$($4011);
                                                                                    var $4012 = $4015;
                                                                                    break;
                                                                            };
                                                                            var $4010 = $4012;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4016 = self.pst;
                                                                            var $4017 = self.val;
                                                                            var self = $4016;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4019 = self.err;
                                                                                    var $4020 = self.nam;
                                                                                    var $4021 = self.ini;
                                                                                    var $4022 = self.idx;
                                                                                    var $4023 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4009, $4019), $4020, $4021, $4022, $4023);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4025 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4027 = self.err;
                                                                                                    var self = $4025;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4029 = self.value;
                                                                                                            var $4030 = Parser$Reply$error$(Parser$Error$combine$($4029, $4027));
                                                                                                            var $4028 = $4030;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4031 = Parser$Reply$error$($4027);
                                                                                                            var $4028 = $4031;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4026 = $4028;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4032 = self.pst;
                                                                                                    var self = $4032;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4034 = self.err;
                                                                                                            var $4035 = self.nam;
                                                                                                            var $4036 = self.ini;
                                                                                                            var $4037 = self.idx;
                                                                                                            var $4038 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4025, $4034), $4035, $4036, $4037, $4038);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4040 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4042 = self.err;
                                                                                                                            var self = $4040;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4044 = self.value;
                                                                                                                                    var $4045 = Parser$Reply$error$(Parser$Error$combine$($4044, $4042));
                                                                                                                                    var $4043 = $4045;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4046 = Parser$Reply$error$($4042);
                                                                                                                                    var $4043 = $4046;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4041 = $4043;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4047 = self.pst;
                                                                                                                            var $4048 = self.val;
                                                                                                                            var self = $4047;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4050 = self.err;
                                                                                                                                    var $4051 = self.nam;
                                                                                                                                    var $4052 = self.ini;
                                                                                                                                    var $4053 = self.idx;
                                                                                                                                    var $4054 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4040, $4050), $4051, $4052, $4053, $4054);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4056 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4058 = self.err;
                                                                                                                                                    var self = $4056;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4060 = self.value;
                                                                                                                                                            var $4061 = Parser$Reply$error$(Parser$Error$combine$($4060, $4058));
                                                                                                                                                            var $4059 = $4061;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4062 = Parser$Reply$error$($4058);
                                                                                                                                                            var $4059 = $4062;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4057 = $4059;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4063 = self.pst;
                                                                                                                                                    var self = $4063;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4065 = self.err;
                                                                                                                                                            var $4066 = self.nam;
                                                                                                                                                            var $4067 = self.ini;
                                                                                                                                                            var $4068 = self.idx;
                                                                                                                                                            var $4069 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4056, $4065), $4066, $4067, $4068, $4069);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4071 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4073 = self.err;
                                                                                                                                                                            var self = $4071;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4075 = self.value;
                                                                                                                                                                                    var $4076 = Parser$Reply$error$(Parser$Error$combine$($4075, $4073));
                                                                                                                                                                                    var $4074 = $4076;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4077 = Parser$Reply$error$($4073);
                                                                                                                                                                                    var $4074 = $4077;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4072 = $4074;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4078 = self.pst;
                                                                                                                                                                            var self = $4078;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4080 = self.err;
                                                                                                                                                                                    var $4081 = self.nam;
                                                                                                                                                                                    var $4082 = self.ini;
                                                                                                                                                                                    var $4083 = self.idx;
                                                                                                                                                                                    var $4084 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4071, $4080), $4081, $4082, $4083, $4084);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4086 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("while ", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4088 = self.err;
                                                                                                                                                                                                    var self = $4086;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4090 = self.value;
                                                                                                                                                                                                            var $4091 = Parser$Reply$error$(Parser$Error$combine$($4090, $4088));
                                                                                                                                                                                                            var $4089 = $4091;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4092 = Parser$Reply$error$($4088);
                                                                                                                                                                                                            var $4089 = $4092;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4087 = $4089;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4093 = self.pst;
                                                                                                                                                                                                    var self = $4093;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4095 = self.err;
                                                                                                                                                                                                            var $4096 = self.nam;
                                                                                                                                                                                                            var $4097 = self.ini;
                                                                                                                                                                                                            var $4098 = self.idx;
                                                                                                                                                                                                            var $4099 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4086, $4095), $4096, $4097, $4098, $4099);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4101 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4103 = self.err;
                                                                                                                                                                                                                            var self = $4101;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4105 = self.value;
                                                                                                                                                                                                                                    var $4106 = Parser$Reply$error$(Parser$Error$combine$($4105, $4103));
                                                                                                                                                                                                                                    var $4104 = $4106;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4107 = Parser$Reply$error$($4103);
                                                                                                                                                                                                                                    var $4104 = $4107;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4102 = $4104;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4108 = self.pst;
                                                                                                                                                                                                                            var $4109 = self.val;
                                                                                                                                                                                                                            var self = $4108;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4111 = self.err;
                                                                                                                                                                                                                                    var $4112 = self.nam;
                                                                                                                                                                                                                                    var $4113 = self.ini;
                                                                                                                                                                                                                                    var $4114 = self.idx;
                                                                                                                                                                                                                                    var $4115 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4101, $4111), $4112, $4113, $4114, $4115);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4117 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4119 = self.err;
                                                                                                                                                                                                                                                    var self = $4117;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4121 = self.value;
                                                                                                                                                                                                                                                            var $4122 = Parser$Reply$error$(Parser$Error$combine$($4121, $4119));
                                                                                                                                                                                                                                                            var $4120 = $4122;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4123 = Parser$Reply$error$($4119);
                                                                                                                                                                                                                                                            var $4120 = $4123;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4118 = $4120;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4124 = self.pst;
                                                                                                                                                                                                                                                    var self = $4124;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4126 = self.err;
                                                                                                                                                                                                                                                            var $4127 = self.nam;
                                                                                                                                                                                                                                                            var $4128 = self.ini;
                                                                                                                                                                                                                                                            var $4129 = self.idx;
                                                                                                                                                                                                                                                            var $4130 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4117, $4126), $4127, $4128, $4129, $4130);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $4132 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $4134 = self.err;
                                                                                                                                                                                                                                                                            var self = $4132;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $4136 = self.value;
                                                                                                                                                                                                                                                                                    var $4137 = Parser$Reply$error$(Parser$Error$combine$($4136, $4134));
                                                                                                                                                                                                                                                                                    var $4135 = $4137;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $4138 = Parser$Reply$error$($4134);
                                                                                                                                                                                                                                                                                    var $4135 = $4138;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4133 = $4135;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $4139 = self.pst;
                                                                                                                                                                                                                                                                            var $4140 = self.val;
                                                                                                                                                                                                                                                                            var self = $4139;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $4142 = self.err;
                                                                                                                                                                                                                                                                                    var $4143 = self.nam;
                                                                                                                                                                                                                                                                                    var $4144 = self.ini;
                                                                                                                                                                                                                                                                                    var $4145 = self.idx;
                                                                                                                                                                                                                                                                                    var $4146 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4132, $4142), $4143, $4144, $4145, $4146);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $4148 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $4150 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $4148;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $4152 = self.value;
                                                                                                                                                                                                                                                                                                            var $4153 = Parser$Reply$error$(Parser$Error$combine$($4152, $4150));
                                                                                                                                                                                                                                                                                                            var $4151 = $4153;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $4154 = Parser$Reply$error$($4150);
                                                                                                                                                                                                                                                                                                            var $4151 = $4154;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4149 = $4151;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $4155 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $4155;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $4157 = self.err;
                                                                                                                                                                                                                                                                                                            var $4158 = self.nam;
                                                                                                                                                                                                                                                                                                            var $4159 = self.ini;
                                                                                                                                                                                                                                                                                                            var $4160 = self.idx;
                                                                                                                                                                                                                                                                                                            var $4161 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4148, $4157), $4158, $4159, $4160, $4161);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $4163 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $4165 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $4163;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $4167 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $4168 = Parser$Reply$error$(Parser$Error$combine$($4167, $4165));
                                                                                                                                                                                                                                                                                                                                    var $4166 = $4168;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $4169 = Parser$Reply$error$($4165);
                                                                                                                                                                                                                                                                                                                                    var $4166 = $4169;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4164 = $4166;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $4170 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $4171 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $4170;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $4173 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $4174 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $4175 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $4176 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $4177 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($4163, $4173), $4174, $4175, $4176, $4177);
                                                                                                                                                                                                                                                                                                                                    var _moti$185 = Kind$Term$lam$("", (_x$185 => {
                                                                                                                                                                                                                                                                                                                                        var $4179 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                                                        return $4179;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$188 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                                                    var _init$189 = Kind$Term$app$(_init$188, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$190 = Kind$Term$app$(_init$189, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$191 = Kind$Term$app$(_init$190, Kind$Term$ref$($4017));
                                                                                                                                                                                                                                                                                                                                    var _init$192 = Kind$Term$app$(_init$191, Kind$Term$ref$($4048));
                                                                                                                                                                                                                                                                                                                                    var _term$193 = Kind$Term$app$(_term$187, _init$192);
                                                                                                                                                                                                                                                                                                                                    var _term$194 = Kind$Term$app$(_term$193, Kind$Term$lam$("s", (_s$194 => {
                                                                                                                                                                                                                                                                                                                                        var $4180 = Kind$Term$app$(Kind$Term$app$(_s$194, _moti$185), Kind$Term$lam$($4017, (_x$195 => {
                                                                                                                                                                                                                                                                                                                                            var $4181 = Kind$Term$lam$($4048, (_y$196 => {
                                                                                                                                                                                                                                                                                                                                                var $4182 = $4109;
                                                                                                                                                                                                                                                                                                                                                return $4182;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4181;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4180;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$195 = Kind$Term$app$(_term$194, Kind$Term$lam$("s", (_s$195 => {
                                                                                                                                                                                                                                                                                                                                        var $4183 = Kind$Term$app$(Kind$Term$app$(_s$195, _moti$185), Kind$Term$lam$($4017, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                            var $4184 = Kind$Term$lam$($4048, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                                var $4185 = $4140;
                                                                                                                                                                                                                                                                                                                                                return $4185;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4184;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4183;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$196 = Kind$Term$app$(Kind$Term$app$(_term$195, _moti$185), Kind$Term$lam$($4017, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                        var $4186 = Kind$Term$lam$($4048, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                            var $4187 = $4171;
                                                                                                                                                                                                                                                                                                                                            return $4187;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $4186;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var $4178 = Parser$Reply$value$(_reply$pst$184, _term$196);
                                                                                                                                                                                                                                                                                                                                    var $4172 = $4178;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4164 = $4172;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $4162 = $4164;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $4156 = $4162;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4149 = $4156;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $4147 = $4149;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $4141 = $4147;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4133 = $4141;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $4131 = $4133;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $4125 = $4131;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4118 = $4125;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4116 = $4118;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4110 = $4116;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4102 = $4110;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4100 = $4102;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4094 = $4100;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4087 = $4094;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4085 = $4087;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4079 = $4085;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4072 = $4079;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4070 = $4072;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4064 = $4070;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4057 = $4064;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4055 = $4057;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4049 = $4055;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4041 = $4049;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4039 = $4041;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4033 = $4039;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4026 = $4033;
                                                                                                    break;
                                                                                            };
                                                                                            var $4024 = $4026;
                                                                                            break;
                                                                                    };
                                                                                    var $4018 = $4024;
                                                                                    break;
                                                                            };
                                                                            var $4010 = $4018;
                                                                            break;
                                                                    };
                                                                    var $4008 = $4010;
                                                                    break;
                                                            };
                                                            var $4002 = $4008;
                                                            break;
                                                    };
                                                    var $3995 = $4002;
                                                    break;
                                            };
                                            var $3993 = $3995;
                                            break;
                                    };
                                    var $3987 = $3993;
                                    break;
                            };
                            var $3980 = $3987;
                            break;
                    };
                    var $3978 = $3980;
                    break;
            };
            return $3978;
        }));
        return $3977;
    };
    const Kind$Parser$getwhile = x0 => Kind$Parser$getwhile$(x0);

    function Kind$Parser$getwhile$with$(_body$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $4189 = self.err;
                var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4191 = self.err;
                        var self = $4189;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4193 = self.value;
                                var $4194 = Parser$Reply$error$(Parser$Error$combine$($4193, $4191));
                                var $4192 = $4194;
                                break;
                            case 'Maybe.none':
                                var $4195 = Parser$Reply$error$($4191);
                                var $4192 = $4195;
                                break;
                        };
                        var $4190 = $4192;
                        break;
                    case 'Parser.Reply.value':
                        var $4196 = self.pst;
                        var self = $4196;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4198 = self.err;
                                var $4199 = self.nam;
                                var $4200 = self.ini;
                                var $4201 = self.idx;
                                var $4202 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4189, $4198), $4199, $4200, $4201, $4202);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4204 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4206 = self.err;
                                                var self = $4204;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4208 = self.value;
                                                        var $4209 = Parser$Reply$error$(Parser$Error$combine$($4208, $4206));
                                                        var $4207 = $4209;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4210 = Parser$Reply$error$($4206);
                                                        var $4207 = $4210;
                                                        break;
                                                };
                                                var $4205 = $4207;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4211 = self.pst;
                                                var $4212 = self.val;
                                                var self = $4211;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4214 = self.err;
                                                        var $4215 = self.nam;
                                                        var $4216 = self.ini;
                                                        var $4217 = self.idx;
                                                        var $4218 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4204, $4214), $4215, $4216, $4217, $4218);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4220 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4222 = self.err;
                                                                        var self = $4220;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4224 = self.value;
                                                                                var $4225 = Parser$Reply$error$(Parser$Error$combine$($4224, $4222));
                                                                                var $4223 = $4225;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4226 = Parser$Reply$error$($4222);
                                                                                var $4223 = $4226;
                                                                                break;
                                                                        };
                                                                        var $4221 = $4223;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4227 = self.pst;
                                                                        var self = $4227;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4229 = self.err;
                                                                                var $4230 = self.nam;
                                                                                var $4231 = self.ini;
                                                                                var $4232 = self.idx;
                                                                                var $4233 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4220, $4229), $4230, $4231, $4232, $4233);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4235 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4237 = self.err;
                                                                                                var self = $4235;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4239 = self.value;
                                                                                                        var $4240 = Parser$Reply$error$(Parser$Error$combine$($4239, $4237));
                                                                                                        var $4238 = $4240;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4241 = Parser$Reply$error$($4237);
                                                                                                        var $4238 = $4241;
                                                                                                        break;
                                                                                                };
                                                                                                var $4236 = $4238;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4242 = self.pst;
                                                                                                var self = $4242;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4244 = self.err;
                                                                                                        var $4245 = self.nam;
                                                                                                        var $4246 = self.ini;
                                                                                                        var $4247 = self.idx;
                                                                                                        var $4248 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4235, $4244), $4245, $4246, $4247, $4248);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4250 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4252 = self.err;
                                                                                                                        var self = $4250;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4254 = self.value;
                                                                                                                                var $4255 = Parser$Reply$error$(Parser$Error$combine$($4254, $4252));
                                                                                                                                var $4253 = $4255;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4256 = Parser$Reply$error$($4252);
                                                                                                                                var $4253 = $4256;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4251 = $4253;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4257 = self.pst;
                                                                                                                        var $4258 = self.val;
                                                                                                                        var self = $4257;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4260 = self.err;
                                                                                                                                var $4261 = self.nam;
                                                                                                                                var $4262 = self.ini;
                                                                                                                                var $4263 = self.idx;
                                                                                                                                var $4264 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4250, $4260), $4261, $4262, $4263, $4264);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4266 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$(",", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4268 = self.err;
                                                                                                                                                var self = $4266;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4270 = self.value;
                                                                                                                                                        var $4271 = Parser$Reply$error$(Parser$Error$combine$($4270, $4268));
                                                                                                                                                        var $4269 = $4271;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4272 = Parser$Reply$error$($4268);
                                                                                                                                                        var $4269 = $4272;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4267 = $4269;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4273 = self.pst;
                                                                                                                                                var self = $4273;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4275 = self.err;
                                                                                                                                                        var $4276 = self.nam;
                                                                                                                                                        var $4277 = self.ini;
                                                                                                                                                        var $4278 = self.idx;
                                                                                                                                                        var $4279 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4266, $4275), $4276, $4277, $4278, $4279);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4281 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$name1$(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4283 = self.err;
                                                                                                                                                                        var self = $4281;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4285 = self.value;
                                                                                                                                                                                var $4286 = Parser$Reply$error$(Parser$Error$combine$($4285, $4283));
                                                                                                                                                                                var $4284 = $4286;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4287 = Parser$Reply$error$($4283);
                                                                                                                                                                                var $4284 = $4287;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4282 = $4284;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4288 = self.pst;
                                                                                                                                                                        var $4289 = self.val;
                                                                                                                                                                        var self = $4288;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4291 = self.err;
                                                                                                                                                                                var $4292 = self.nam;
                                                                                                                                                                                var $4293 = self.ini;
                                                                                                                                                                                var $4294 = self.idx;
                                                                                                                                                                                var $4295 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4281, $4291), $4292, $4293, $4294, $4295);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $4297 = self.err;
                                                                                                                                                                                        var _reply$106 = Kind$Parser$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $4299 = self.err;
                                                                                                                                                                                                var self = $4297;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $4301 = self.value;
                                                                                                                                                                                                        var $4302 = Parser$Reply$error$(Parser$Error$combine$($4301, $4299));
                                                                                                                                                                                                        var $4300 = $4302;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $4303 = Parser$Reply$error$($4299);
                                                                                                                                                                                                        var $4300 = $4303;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4298 = $4300;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $4304 = self.pst;
                                                                                                                                                                                                var self = $4304;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $4306 = self.err;
                                                                                                                                                                                                        var $4307 = self.nam;
                                                                                                                                                                                                        var $4308 = self.ini;
                                                                                                                                                                                                        var $4309 = self.idx;
                                                                                                                                                                                                        var $4310 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4297, $4306), $4307, $4308, $4309, $4310);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $4312 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $4314 = self.err;
                                                                                                                                                                                                                        var self = $4312;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $4316 = self.value;
                                                                                                                                                                                                                                var $4317 = Parser$Reply$error$(Parser$Error$combine$($4316, $4314));
                                                                                                                                                                                                                                var $4315 = $4317;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $4318 = Parser$Reply$error$($4314);
                                                                                                                                                                                                                                var $4315 = $4318;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4313 = $4315;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $4319 = self.pst;
                                                                                                                                                                                                                        var self = $4319;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $4321 = self.err;
                                                                                                                                                                                                                                var $4322 = self.nam;
                                                                                                                                                                                                                                var $4323 = self.ini;
                                                                                                                                                                                                                                var $4324 = self.idx;
                                                                                                                                                                                                                                var $4325 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4312, $4321), $4322, $4323, $4324, $4325);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $4327 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $4329 = self.err;
                                                                                                                                                                                                                                                var self = $4327;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $4331 = self.value;
                                                                                                                                                                                                                                                        var $4332 = Parser$Reply$error$(Parser$Error$combine$($4331, $4329));
                                                                                                                                                                                                                                                        var $4330 = $4332;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $4333 = Parser$Reply$error$($4329);
                                                                                                                                                                                                                                                        var $4330 = $4333;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4328 = $4330;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $4334 = self.pst;
                                                                                                                                                                                                                                                var $4335 = self.val;
                                                                                                                                                                                                                                                var self = $4334;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $4337 = self.err;
                                                                                                                                                                                                                                                        var $4338 = self.nam;
                                                                                                                                                                                                                                                        var $4339 = self.ini;
                                                                                                                                                                                                                                                        var $4340 = self.idx;
                                                                                                                                                                                                                                                        var $4341 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4327, $4337), $4338, $4339, $4340, $4341);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $4343 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $4345 = self.err;
                                                                                                                                                                                                                                                                        var self = $4343;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $4347 = self.value;
                                                                                                                                                                                                                                                                                var $4348 = Parser$Reply$error$(Parser$Error$combine$($4347, $4345));
                                                                                                                                                                                                                                                                                var $4346 = $4348;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $4349 = Parser$Reply$error$($4345);
                                                                                                                                                                                                                                                                                var $4346 = $4349;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4344 = $4346;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $4350 = self.pst;
                                                                                                                                                                                                                                                                        var self = $4350;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $4352 = self.err;
                                                                                                                                                                                                                                                                                var $4353 = self.nam;
                                                                                                                                                                                                                                                                                var $4354 = self.ini;
                                                                                                                                                                                                                                                                                var $4355 = self.idx;
                                                                                                                                                                                                                                                                                var $4356 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4343, $4352), $4353, $4354, $4355, $4356);
                                                                                                                                                                                                                                                                                var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                        var $4358 = self.err;
                                                                                                                                                                                                                                                                                        var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                        var self = _reply$162;
                                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                var $4360 = self.err;
                                                                                                                                                                                                                                                                                                var self = $4358;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                                                                        var $4362 = self.value;
                                                                                                                                                                                                                                                                                                        var $4363 = Parser$Reply$error$(Parser$Error$combine$($4362, $4360));
                                                                                                                                                                                                                                                                                                        var $4361 = $4363;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                                                                        var $4364 = Parser$Reply$error$($4360);
                                                                                                                                                                                                                                                                                                        var $4361 = $4364;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4359 = $4361;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                var $4365 = self.pst;
                                                                                                                                                                                                                                                                                                var $4366 = self.val;
                                                                                                                                                                                                                                                                                                var self = $4365;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                        var $4368 = self.err;
                                                                                                                                                                                                                                                                                                        var $4369 = self.nam;
                                                                                                                                                                                                                                                                                                        var $4370 = self.ini;
                                                                                                                                                                                                                                                                                                        var $4371 = self.idx;
                                                                                                                                                                                                                                                                                                        var $4372 = self.str;
                                                                                                                                                                                                                                                                                                        var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4358, $4368), $4369, $4370, $4371, $4372);
                                                                                                                                                                                                                                                                                                        var _moti$171 = Kind$Term$lam$("", (_x$171 => {
                                                                                                                                                                                                                                                                                                            var $4374 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                            return $4374;
                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                        var _term$172 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                        var _term$173 = Kind$Term$app$(_term$172, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$174 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                        var _init$175 = Kind$Term$app$(_init$174, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$176 = Kind$Term$app$(_init$175, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$177 = Kind$Term$app$(_init$176, Kind$Term$ref$($4258));
                                                                                                                                                                                                                                                                                                        var _init$178 = Kind$Term$app$(_init$177, Kind$Term$ref$($4289));
                                                                                                                                                                                                                                                                                                        var _term$179 = Kind$Term$app$(_term$173, _init$178);
                                                                                                                                                                                                                                                                                                        var _term$180 = Kind$Term$app$(_term$179, Kind$Term$lam$("s", (_s$180 => {
                                                                                                                                                                                                                                                                                                            var $4375 = Kind$Term$app$(Kind$Term$app$(_s$180, _moti$171), Kind$Term$lam$($4258, (_x$181 => {
                                                                                                                                                                                                                                                                                                                var $4376 = Kind$Term$lam$($4289, (_y$182 => {
                                                                                                                                                                                                                                                                                                                    var $4377 = $4212;
                                                                                                                                                                                                                                                                                                                    return $4377;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4376;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4375;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$181 = Kind$Term$app$(_term$180, Kind$Term$lam$("s", (_s$181 => {
                                                                                                                                                                                                                                                                                                            var $4378 = Kind$Term$app$(Kind$Term$app$(_s$181, _moti$171), Kind$Term$lam$($4258, (_x$182 => {
                                                                                                                                                                                                                                                                                                                var $4379 = Kind$Term$lam$($4289, (_y$183 => {
                                                                                                                                                                                                                                                                                                                    var $4380 = $4335;
                                                                                                                                                                                                                                                                                                                    return $4380;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4379;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4378;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$182 = Kind$Term$app$(Kind$Term$app$(_term$181, _moti$171), Kind$Term$lam$($4258, (_x$182 => {
                                                                                                                                                                                                                                                                                                            var $4381 = Kind$Term$lam$($4289, (_y$183 => {
                                                                                                                                                                                                                                                                                                                var $4382 = $4366;
                                                                                                                                                                                                                                                                                                                return $4382;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            return $4381;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var $4373 = Parser$Reply$value$(_reply$pst$170, _term$182);
                                                                                                                                                                                                                                                                                                        var $4367 = $4373;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4359 = $4367;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                        var $4357 = $4359;
                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                var $4351 = $4357;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4344 = $4351;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $4342 = $4344;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $4336 = $4342;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4328 = $4336;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $4326 = $4328;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $4320 = $4326;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4313 = $4320;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $4311 = $4313;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $4305 = $4311;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4298 = $4305;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $4296 = $4298;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $4290 = $4296;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4282 = $4290;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4280 = $4282;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4274 = $4280;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4267 = $4274;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4265 = $4267;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4259 = $4265;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4251 = $4259;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4249 = $4251;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4243 = $4249;
                                                                                                        break;
                                                                                                };
                                                                                                var $4236 = $4243;
                                                                                                break;
                                                                                        };
                                                                                        var $4234 = $4236;
                                                                                        break;
                                                                                };
                                                                                var $4228 = $4234;
                                                                                break;
                                                                        };
                                                                        var $4221 = $4228;
                                                                        break;
                                                                };
                                                                var $4219 = $4221;
                                                                break;
                                                        };
                                                        var $4213 = $4219;
                                                        break;
                                                };
                                                var $4205 = $4213;
                                                break;
                                        };
                                        var $4203 = $4205;
                                        break;
                                };
                                var $4197 = $4203;
                                break;
                        };
                        var $4190 = $4197;
                        break;
                };
                var $4188 = $4190;
                break;
        };
        return $4188;
    };
    const Kind$Parser$getwhile$with = x0 => x1 => Kind$Parser$getwhile$with$(x0, x1);

    function Kind$Parser$get$(_body$1) {
        var $4383 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4385 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4387 = self.err;
                            var self = $4385;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4389 = self.value;
                                    var $4390 = Parser$Reply$error$(Parser$Error$combine$($4389, $4387));
                                    var $4388 = $4390;
                                    break;
                                case 'Maybe.none':
                                    var $4391 = Parser$Reply$error$($4387);
                                    var $4388 = $4391;
                                    break;
                            };
                            var $4386 = $4388;
                            break;
                        case 'Parser.Reply.value':
                            var $4392 = self.pst;
                            var self = $4392;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4394 = self.err;
                                    var $4395 = self.nam;
                                    var $4396 = self.ini;
                                    var $4397 = self.idx;
                                    var $4398 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4385, $4394), $4395, $4396, $4397, $4398);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4400 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4402 = self.err;
                                                    var self = $4400;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4404 = self.value;
                                                            var $4405 = Parser$Reply$error$(Parser$Error$combine$($4404, $4402));
                                                            var $4403 = $4405;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4406 = Parser$Reply$error$($4402);
                                                            var $4403 = $4406;
                                                            break;
                                                    };
                                                    var $4401 = $4403;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4407 = self.pst;
                                                    var self = $4407;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4409 = self.err;
                                                            var $4410 = self.nam;
                                                            var $4411 = self.ini;
                                                            var $4412 = self.idx;
                                                            var $4413 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4400, $4409), $4410, $4411, $4412, $4413);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4415 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4417 = self.err;
                                                                            var self = $4415;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4419 = self.value;
                                                                                    var $4420 = Parser$Reply$error$(Parser$Error$combine$($4419, $4417));
                                                                                    var $4418 = $4420;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4421 = Parser$Reply$error$($4417);
                                                                                    var $4418 = $4421;
                                                                                    break;
                                                                            };
                                                                            var $4416 = $4418;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4422 = self.pst;
                                                                            var $4423 = self.val;
                                                                            var self = $4422;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4425 = self.err;
                                                                                    var $4426 = self.nam;
                                                                                    var $4427 = self.ini;
                                                                                    var $4428 = self.idx;
                                                                                    var $4429 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4415, $4425), $4426, $4427, $4428, $4429);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4431 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4433 = self.err;
                                                                                                    var self = $4431;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4435 = self.value;
                                                                                                            var $4436 = Parser$Reply$error$(Parser$Error$combine$($4435, $4433));
                                                                                                            var $4434 = $4436;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4437 = Parser$Reply$error$($4433);
                                                                                                            var $4434 = $4437;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4432 = $4434;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4438 = self.pst;
                                                                                                    var self = $4438;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4440 = self.err;
                                                                                                            var $4441 = self.nam;
                                                                                                            var $4442 = self.ini;
                                                                                                            var $4443 = self.idx;
                                                                                                            var $4444 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4431, $4440), $4441, $4442, $4443, $4444);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4446 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4448 = self.err;
                                                                                                                            var self = $4446;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4450 = self.value;
                                                                                                                                    var $4451 = Parser$Reply$error$(Parser$Error$combine$($4450, $4448));
                                                                                                                                    var $4449 = $4451;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4452 = Parser$Reply$error$($4448);
                                                                                                                                    var $4449 = $4452;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4447 = $4449;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4453 = self.pst;
                                                                                                                            var $4454 = self.val;
                                                                                                                            var self = $4453;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4456 = self.err;
                                                                                                                                    var $4457 = self.nam;
                                                                                                                                    var $4458 = self.ini;
                                                                                                                                    var $4459 = self.idx;
                                                                                                                                    var $4460 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4446, $4456), $4457, $4458, $4459, $4460);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4462 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4464 = self.err;
                                                                                                                                                    var self = $4462;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4466 = self.value;
                                                                                                                                                            var $4467 = Parser$Reply$error$(Parser$Error$combine$($4466, $4464));
                                                                                                                                                            var $4465 = $4467;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4468 = Parser$Reply$error$($4464);
                                                                                                                                                            var $4465 = $4468;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4463 = $4465;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4469 = self.pst;
                                                                                                                                                    var self = $4469;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4471 = self.err;
                                                                                                                                                            var $4472 = self.nam;
                                                                                                                                                            var $4473 = self.ini;
                                                                                                                                                            var $4474 = self.idx;
                                                                                                                                                            var $4475 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4462, $4471), $4472, $4473, $4474, $4475);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4477 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4479 = self.err;
                                                                                                                                                                            var self = $4477;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4481 = self.value;
                                                                                                                                                                                    var $4482 = Parser$Reply$error$(Parser$Error$combine$($4481, $4479));
                                                                                                                                                                                    var $4480 = $4482;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4483 = Parser$Reply$error$($4479);
                                                                                                                                                                                    var $4480 = $4483;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4478 = $4480;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4484 = self.pst;
                                                                                                                                                                            var self = $4484;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4486 = self.err;
                                                                                                                                                                                    var $4487 = self.nam;
                                                                                                                                                                                    var $4488 = self.ini;
                                                                                                                                                                                    var $4489 = self.idx;
                                                                                                                                                                                    var $4490 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4477, $4486), $4487, $4488, $4489, $4490);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4492 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4494 = self.err;
                                                                                                                                                                                                    var self = $4492;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4496 = self.value;
                                                                                                                                                                                                            var $4497 = Parser$Reply$error$(Parser$Error$combine$($4496, $4494));
                                                                                                                                                                                                            var $4495 = $4497;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4498 = Parser$Reply$error$($4494);
                                                                                                                                                                                                            var $4495 = $4498;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4493 = $4495;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4499 = self.pst;
                                                                                                                                                                                                    var $4500 = self.val;
                                                                                                                                                                                                    var self = $4499;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4502 = self.err;
                                                                                                                                                                                                            var $4503 = self.nam;
                                                                                                                                                                                                            var $4504 = self.ini;
                                                                                                                                                                                                            var $4505 = self.idx;
                                                                                                                                                                                                            var $4506 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4492, $4502), $4503, $4504, $4505, $4506);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4508 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4510 = self.err;
                                                                                                                                                                                                                            var self = $4508;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4512 = self.value;
                                                                                                                                                                                                                                    var $4513 = Parser$Reply$error$(Parser$Error$combine$($4512, $4510));
                                                                                                                                                                                                                                    var $4511 = $4513;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4514 = Parser$Reply$error$($4510);
                                                                                                                                                                                                                                    var $4511 = $4514;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4509 = $4511;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4515 = self.pst;
                                                                                                                                                                                                                            var self = $4515;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4517 = self.err;
                                                                                                                                                                                                                                    var $4518 = self.nam;
                                                                                                                                                                                                                                    var $4519 = self.ini;
                                                                                                                                                                                                                                    var $4520 = self.idx;
                                                                                                                                                                                                                                    var $4521 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4508, $4517), $4518, $4519, $4520, $4521);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4523 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4525 = self.err;
                                                                                                                                                                                                                                                    var self = $4523;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4527 = self.value;
                                                                                                                                                                                                                                                            var $4528 = Parser$Reply$error$(Parser$Error$combine$($4527, $4525));
                                                                                                                                                                                                                                                            var $4526 = $4528;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4529 = Parser$Reply$error$($4525);
                                                                                                                                                                                                                                                            var $4526 = $4529;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4524 = $4526;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4530 = self.pst;
                                                                                                                                                                                                                                                    var $4531 = self.val;
                                                                                                                                                                                                                                                    var self = $4530;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4533 = self.err;
                                                                                                                                                                                                                                                            var $4534 = self.nam;
                                                                                                                                                                                                                                                            var $4535 = self.ini;
                                                                                                                                                                                                                                                            var $4536 = self.idx;
                                                                                                                                                                                                                                                            var $4537 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4523, $4533), $4534, $4535, $4536, $4537);
                                                                                                                                                                                                                                                            var _term$143 = $4500;
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$lam$("", (_x$144 => {
                                                                                                                                                                                                                                                                var $4539 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                return $4539;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, Kind$Term$lam$($4423, (_x$145 => {
                                                                                                                                                                                                                                                                var $4540 = Kind$Term$lam$($4454, (_y$146 => {
                                                                                                                                                                                                                                                                    var $4541 = $4531;
                                                                                                                                                                                                                                                                    return $4541;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $4540;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var $4538 = Parser$Reply$value$(_reply$pst$142, _term$145);
                                                                                                                                                                                                                                                            var $4532 = $4538;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4524 = $4532;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4522 = $4524;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4516 = $4522;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4509 = $4516;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4507 = $4509;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4501 = $4507;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4493 = $4501;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4491 = $4493;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4485 = $4491;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4478 = $4485;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4476 = $4478;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4470 = $4476;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4463 = $4470;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4461 = $4463;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4455 = $4461;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4447 = $4455;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4445 = $4447;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4439 = $4445;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4432 = $4439;
                                                                                                    break;
                                                                                            };
                                                                                            var $4430 = $4432;
                                                                                            break;
                                                                                    };
                                                                                    var $4424 = $4430;
                                                                                    break;
                                                                            };
                                                                            var $4416 = $4424;
                                                                            break;
                                                                    };
                                                                    var $4414 = $4416;
                                                                    break;
                                                            };
                                                            var $4408 = $4414;
                                                            break;
                                                    };
                                                    var $4401 = $4408;
                                                    break;
                                            };
                                            var $4399 = $4401;
                                            break;
                                    };
                                    var $4393 = $4399;
                                    break;
                            };
                            var $4386 = $4393;
                            break;
                    };
                    var $4384 = $4386;
                    break;
            };
            return $4384;
        }));
        return $4383;
    };
    const Kind$Parser$get = x0 => Kind$Parser$get$(x0);

    function Kind$Parser$get$omit$(_body$1) {
        var $4542 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4544 = self.err;
                    var _reply$8 = Kind$Parser$text$("{", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4546 = self.err;
                            var self = $4544;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4548 = self.value;
                                    var $4549 = Parser$Reply$error$(Parser$Error$combine$($4548, $4546));
                                    var $4547 = $4549;
                                    break;
                                case 'Maybe.none':
                                    var $4550 = Parser$Reply$error$($4546);
                                    var $4547 = $4550;
                                    break;
                            };
                            var $4545 = $4547;
                            break;
                        case 'Parser.Reply.value':
                            var $4551 = self.pst;
                            var self = $4551;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4553 = self.err;
                                    var $4554 = self.nam;
                                    var $4555 = self.ini;
                                    var $4556 = self.idx;
                                    var $4557 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4544, $4553), $4554, $4555, $4556, $4557);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4559 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4561 = self.err;
                                                    var self = $4559;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4563 = self.value;
                                                            var $4564 = Parser$Reply$error$(Parser$Error$combine$($4563, $4561));
                                                            var $4562 = $4564;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4565 = Parser$Reply$error$($4561);
                                                            var $4562 = $4565;
                                                            break;
                                                    };
                                                    var $4560 = $4562;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4566 = self.pst;
                                                    var $4567 = self.val;
                                                    var self = $4566;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4569 = self.err;
                                                            var $4570 = self.nam;
                                                            var $4571 = self.ini;
                                                            var $4572 = self.idx;
                                                            var $4573 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4559, $4569), $4570, $4571, $4572, $4573);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4575 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(",", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4577 = self.err;
                                                                            var self = $4575;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4579 = self.value;
                                                                                    var $4580 = Parser$Reply$error$(Parser$Error$combine$($4579, $4577));
                                                                                    var $4578 = $4580;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4581 = Parser$Reply$error$($4577);
                                                                                    var $4578 = $4581;
                                                                                    break;
                                                                            };
                                                                            var $4576 = $4578;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4582 = self.pst;
                                                                            var self = $4582;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4584 = self.err;
                                                                                    var $4585 = self.nam;
                                                                                    var $4586 = self.ini;
                                                                                    var $4587 = self.idx;
                                                                                    var $4588 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4575, $4584), $4585, $4586, $4587, $4588);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4590 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4592 = self.err;
                                                                                                    var self = $4590;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4594 = self.value;
                                                                                                            var $4595 = Parser$Reply$error$(Parser$Error$combine$($4594, $4592));
                                                                                                            var $4593 = $4595;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4596 = Parser$Reply$error$($4592);
                                                                                                            var $4593 = $4596;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4591 = $4593;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4597 = self.pst;
                                                                                                    var $4598 = self.val;
                                                                                                    var self = $4597;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4600 = self.err;
                                                                                                            var $4601 = self.nam;
                                                                                                            var $4602 = self.ini;
                                                                                                            var $4603 = self.idx;
                                                                                                            var $4604 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4590, $4600), $4601, $4602, $4603, $4604);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4606 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4608 = self.err;
                                                                                                                            var self = $4606;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4610 = self.value;
                                                                                                                                    var $4611 = Parser$Reply$error$(Parser$Error$combine$($4610, $4608));
                                                                                                                                    var $4609 = $4611;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4612 = Parser$Reply$error$($4608);
                                                                                                                                    var $4609 = $4612;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4607 = $4609;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4613 = self.pst;
                                                                                                                            var self = $4613;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4615 = self.err;
                                                                                                                                    var $4616 = self.nam;
                                                                                                                                    var $4617 = self.ini;
                                                                                                                                    var $4618 = self.idx;
                                                                                                                                    var $4619 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4606, $4615), $4616, $4617, $4618, $4619);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4621 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("= ", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4623 = self.err;
                                                                                                                                                    var self = $4621;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4625 = self.value;
                                                                                                                                                            var $4626 = Parser$Reply$error$(Parser$Error$combine$($4625, $4623));
                                                                                                                                                            var $4624 = $4626;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4627 = Parser$Reply$error$($4623);
                                                                                                                                                            var $4624 = $4627;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4622 = $4624;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4628 = self.pst;
                                                                                                                                                    var self = $4628;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4630 = self.err;
                                                                                                                                                            var $4631 = self.nam;
                                                                                                                                                            var $4632 = self.ini;
                                                                                                                                                            var $4633 = self.idx;
                                                                                                                                                            var $4634 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4621, $4630), $4631, $4632, $4633, $4634);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4636 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4638 = self.err;
                                                                                                                                                                            var self = $4636;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4640 = self.value;
                                                                                                                                                                                    var $4641 = Parser$Reply$error$(Parser$Error$combine$($4640, $4638));
                                                                                                                                                                                    var $4639 = $4641;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4642 = Parser$Reply$error$($4638);
                                                                                                                                                                                    var $4639 = $4642;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4637 = $4639;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4643 = self.pst;
                                                                                                                                                                            var $4644 = self.val;
                                                                                                                                                                            var self = $4643;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4646 = self.err;
                                                                                                                                                                                    var $4647 = self.nam;
                                                                                                                                                                                    var $4648 = self.ini;
                                                                                                                                                                                    var $4649 = self.idx;
                                                                                                                                                                                    var $4650 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4636, $4646), $4647, $4648, $4649, $4650);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4652 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4654 = self.err;
                                                                                                                                                                                                    var self = $4652;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4656 = self.value;
                                                                                                                                                                                                            var $4657 = Parser$Reply$error$(Parser$Error$combine$($4656, $4654));
                                                                                                                                                                                                            var $4655 = $4657;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4658 = Parser$Reply$error$($4654);
                                                                                                                                                                                                            var $4655 = $4658;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4653 = $4655;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4659 = self.pst;
                                                                                                                                                                                                    var self = $4659;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4661 = self.err;
                                                                                                                                                                                                            var $4662 = self.nam;
                                                                                                                                                                                                            var $4663 = self.ini;
                                                                                                                                                                                                            var $4664 = self.idx;
                                                                                                                                                                                                            var $4665 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4652, $4661), $4662, $4663, $4664, $4665);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4667 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4669 = self.err;
                                                                                                                                                                                                                            var self = $4667;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4671 = self.value;
                                                                                                                                                                                                                                    var $4672 = Parser$Reply$error$(Parser$Error$combine$($4671, $4669));
                                                                                                                                                                                                                                    var $4670 = $4672;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4673 = Parser$Reply$error$($4669);
                                                                                                                                                                                                                                    var $4670 = $4673;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4668 = $4670;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4674 = self.pst;
                                                                                                                                                                                                                            var $4675 = self.val;
                                                                                                                                                                                                                            var self = $4674;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4677 = self.err;
                                                                                                                                                                                                                                    var $4678 = self.nam;
                                                                                                                                                                                                                                    var $4679 = self.ini;
                                                                                                                                                                                                                                    var $4680 = self.idx;
                                                                                                                                                                                                                                    var $4681 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4667, $4677), $4678, $4679, $4680, $4681);
                                                                                                                                                                                                                                    var _term$129 = $4644;
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$lam$("", (_x$130 => {
                                                                                                                                                                                                                                        var $4683 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                        return $4683;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$lam$($4567, (_x$131 => {
                                                                                                                                                                                                                                        var $4684 = Kind$Term$lam$($4598, (_y$132 => {
                                                                                                                                                                                                                                            var $4685 = $4675;
                                                                                                                                                                                                                                            return $4685;
                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                        return $4684;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var $4682 = Parser$Reply$value$(_reply$pst$128, _term$131);
                                                                                                                                                                                                                                    var $4676 = $4682;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4668 = $4676;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4666 = $4668;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4660 = $4666;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4653 = $4660;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4651 = $4653;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4645 = $4651;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4637 = $4645;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4635 = $4637;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4629 = $4635;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4622 = $4629;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4620 = $4622;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4614 = $4620;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4607 = $4614;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4605 = $4607;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4599 = $4605;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4591 = $4599;
                                                                                                    break;
                                                                                            };
                                                                                            var $4589 = $4591;
                                                                                            break;
                                                                                    };
                                                                                    var $4583 = $4589;
                                                                                    break;
                                                                            };
                                                                            var $4576 = $4583;
                                                                            break;
                                                                    };
                                                                    var $4574 = $4576;
                                                                    break;
                                                            };
                                                            var $4568 = $4574;
                                                            break;
                                                    };
                                                    var $4560 = $4568;
                                                    break;
                                            };
                                            var $4558 = $4560;
                                            break;
                                    };
                                    var $4552 = $4558;
                                    break;
                            };
                            var $4545 = $4552;
                            break;
                    };
                    var $4543 = $4545;
                    break;
            };
            return $4543;
        }));
        return $4542;
    };
    const Kind$Parser$get$omit = x0 => Kind$Parser$get$omit$(x0);

    function Kind$Parser$def$(_body$1) {
        var $4686 = Kind$Parser$block("def")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4688 = self.err;
                    var _reply$8 = Kind$Parser$text$("def ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4690 = self.err;
                            var self = $4688;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4692 = self.value;
                                    var $4693 = Parser$Reply$error$(Parser$Error$combine$($4692, $4690));
                                    var $4691 = $4693;
                                    break;
                                case 'Maybe.none':
                                    var $4694 = Parser$Reply$error$($4690);
                                    var $4691 = $4694;
                                    break;
                            };
                            var $4689 = $4691;
                            break;
                        case 'Parser.Reply.value':
                            var $4695 = self.pst;
                            var self = $4695;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4697 = self.err;
                                    var $4698 = self.nam;
                                    var $4699 = self.ini;
                                    var $4700 = self.idx;
                                    var $4701 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4688, $4697), $4698, $4699, $4700, $4701);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4703 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4705 = self.err;
                                                    var self = $4703;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4707 = self.value;
                                                            var $4708 = Parser$Reply$error$(Parser$Error$combine$($4707, $4705));
                                                            var $4706 = $4708;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4709 = Parser$Reply$error$($4705);
                                                            var $4706 = $4709;
                                                            break;
                                                    };
                                                    var $4704 = $4706;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4710 = self.pst;
                                                    var $4711 = self.val;
                                                    var self = $4710;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4713 = self.err;
                                                            var $4714 = self.nam;
                                                            var $4715 = self.ini;
                                                            var $4716 = self.idx;
                                                            var $4717 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4703, $4713), $4714, $4715, $4716, $4717);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4719 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4721 = self.err;
                                                                            var self = $4719;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4723 = self.value;
                                                                                    var $4724 = Parser$Reply$error$(Parser$Error$combine$($4723, $4721));
                                                                                    var $4722 = $4724;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4725 = Parser$Reply$error$($4721);
                                                                                    var $4722 = $4725;
                                                                                    break;
                                                                            };
                                                                            var $4720 = $4722;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4726 = self.pst;
                                                                            var self = $4726;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4728 = self.err;
                                                                                    var $4729 = self.nam;
                                                                                    var $4730 = self.ini;
                                                                                    var $4731 = self.idx;
                                                                                    var $4732 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4719, $4728), $4729, $4730, $4731, $4732);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4734 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4736 = self.err;
                                                                                                    var self = $4734;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4738 = self.value;
                                                                                                            var $4739 = Parser$Reply$error$(Parser$Error$combine$($4738, $4736));
                                                                                                            var $4737 = $4739;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4740 = Parser$Reply$error$($4736);
                                                                                                            var $4737 = $4740;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4735 = $4737;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4741 = self.pst;
                                                                                                    var $4742 = self.val;
                                                                                                    var self = $4741;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4744 = self.err;
                                                                                                            var $4745 = self.nam;
                                                                                                            var $4746 = self.ini;
                                                                                                            var $4747 = self.idx;
                                                                                                            var $4748 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4734, $4744), $4745, $4746, $4747, $4748);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4750 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4752 = self.err;
                                                                                                                            var self = $4750;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4754 = self.value;
                                                                                                                                    var $4755 = Parser$Reply$error$(Parser$Error$combine$($4754, $4752));
                                                                                                                                    var $4753 = $4755;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4756 = Parser$Reply$error$($4752);
                                                                                                                                    var $4753 = $4756;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4751 = $4753;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4757 = self.pst;
                                                                                                                            var self = $4757;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4759 = self.err;
                                                                                                                                    var $4760 = self.nam;
                                                                                                                                    var $4761 = self.ini;
                                                                                                                                    var $4762 = self.idx;
                                                                                                                                    var $4763 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4750, $4759), $4760, $4761, $4762, $4763);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4765 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4767 = self.err;
                                                                                                                                                    var self = $4765;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4769 = self.value;
                                                                                                                                                            var $4770 = Parser$Reply$error$(Parser$Error$combine$($4769, $4767));
                                                                                                                                                            var $4768 = $4770;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4771 = Parser$Reply$error$($4767);
                                                                                                                                                            var $4768 = $4771;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4766 = $4768;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4772 = self.pst;
                                                                                                                                                    var $4773 = self.val;
                                                                                                                                                    var self = $4772;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4775 = self.err;
                                                                                                                                                            var $4776 = self.nam;
                                                                                                                                                            var $4777 = self.ini;
                                                                                                                                                            var $4778 = self.idx;
                                                                                                                                                            var $4779 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4765, $4775), $4776, $4777, $4778, $4779);
                                                                                                                                                            var $4780 = Parser$Reply$value$(_reply$pst$86, Kind$Term$def$($4711, $4742, (_x$87 => {
                                                                                                                                                                var $4781 = $4773;
                                                                                                                                                                return $4781;
                                                                                                                                                            })));
                                                                                                                                                            var $4774 = $4780;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4766 = $4774;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4764 = $4766;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4758 = $4764;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4751 = $4758;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4749 = $4751;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4743 = $4749;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4735 = $4743;
                                                                                                    break;
                                                                                            };
                                                                                            var $4733 = $4735;
                                                                                            break;
                                                                                    };
                                                                                    var $4727 = $4733;
                                                                                    break;
                                                                            };
                                                                            var $4720 = $4727;
                                                                            break;
                                                                    };
                                                                    var $4718 = $4720;
                                                                    break;
                                                            };
                                                            var $4712 = $4718;
                                                            break;
                                                    };
                                                    var $4704 = $4712;
                                                    break;
                                            };
                                            var $4702 = $4704;
                                            break;
                                    };
                                    var $4696 = $4702;
                                    break;
                            };
                            var $4689 = $4696;
                            break;
                    };
                    var $4687 = $4689;
                    break;
            };
            return $4687;
        }));
        return $4686;
    };
    const Kind$Parser$def = x0 => Kind$Parser$def$(x0);
    const Kind$Parser$goal_rewrite = Kind$Parser$block("goal-rewrite")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4783 = self.err;
                var _reply$7 = Kind$Parser$text$("rewrite ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4785 = self.err;
                        var self = $4783;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4787 = self.value;
                                var $4788 = Parser$Reply$error$(Parser$Error$combine$($4787, $4785));
                                var $4786 = $4788;
                                break;
                            case 'Maybe.none':
                                var $4789 = Parser$Reply$error$($4785);
                                var $4786 = $4789;
                                break;
                        };
                        var $4784 = $4786;
                        break;
                    case 'Parser.Reply.value':
                        var $4790 = self.pst;
                        var self = $4790;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4792 = self.err;
                                var $4793 = self.nam;
                                var $4794 = self.ini;
                                var $4795 = self.idx;
                                var $4796 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4783, $4792), $4793, $4794, $4795, $4796);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4798 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4800 = self.err;
                                                var self = $4798;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4802 = self.value;
                                                        var $4803 = Parser$Reply$error$(Parser$Error$combine$($4802, $4800));
                                                        var $4801 = $4803;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4804 = Parser$Reply$error$($4800);
                                                        var $4801 = $4804;
                                                        break;
                                                };
                                                var $4799 = $4801;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4805 = self.pst;
                                                var $4806 = self.val;
                                                var self = $4805;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4808 = self.err;
                                                        var $4809 = self.nam;
                                                        var $4810 = self.ini;
                                                        var $4811 = self.idx;
                                                        var $4812 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4798, $4808), $4809, $4810, $4811, $4812);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4814 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4816 = self.err;
                                                                        var self = $4814;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4818 = self.value;
                                                                                var $4819 = Parser$Reply$error$(Parser$Error$combine$($4818, $4816));
                                                                                var $4817 = $4819;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4820 = Parser$Reply$error$($4816);
                                                                                var $4817 = $4820;
                                                                                break;
                                                                        };
                                                                        var $4815 = $4817;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4821 = self.pst;
                                                                        var self = $4821;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4823 = self.err;
                                                                                var $4824 = self.nam;
                                                                                var $4825 = self.ini;
                                                                                var $4826 = self.idx;
                                                                                var $4827 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4814, $4823), $4824, $4825, $4826, $4827);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4829 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4831 = self.err;
                                                                                                var self = $4829;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4833 = self.value;
                                                                                                        var $4834 = Parser$Reply$error$(Parser$Error$combine$($4833, $4831));
                                                                                                        var $4832 = $4834;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4835 = Parser$Reply$error$($4831);
                                                                                                        var $4832 = $4835;
                                                                                                        break;
                                                                                                };
                                                                                                var $4830 = $4832;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4836 = self.pst;
                                                                                                var $4837 = self.val;
                                                                                                var self = $4836;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4839 = self.err;
                                                                                                        var $4840 = self.nam;
                                                                                                        var $4841 = self.ini;
                                                                                                        var $4842 = self.idx;
                                                                                                        var $4843 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4829, $4839), $4840, $4841, $4842, $4843);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4845 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("with", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4847 = self.err;
                                                                                                                        var self = $4845;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4849 = self.value;
                                                                                                                                var $4850 = Parser$Reply$error$(Parser$Error$combine$($4849, $4847));
                                                                                                                                var $4848 = $4850;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4851 = Parser$Reply$error$($4847);
                                                                                                                                var $4848 = $4851;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4846 = $4848;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4852 = self.pst;
                                                                                                                        var self = $4852;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4854 = self.err;
                                                                                                                                var $4855 = self.nam;
                                                                                                                                var $4856 = self.ini;
                                                                                                                                var $4857 = self.idx;
                                                                                                                                var $4858 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4845, $4854), $4855, $4856, $4857, $4858);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4860 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4862 = self.err;
                                                                                                                                                var self = $4860;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4864 = self.value;
                                                                                                                                                        var $4865 = Parser$Reply$error$(Parser$Error$combine$($4864, $4862));
                                                                                                                                                        var $4863 = $4865;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4866 = Parser$Reply$error$($4862);
                                                                                                                                                        var $4863 = $4866;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4861 = $4863;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4867 = self.pst;
                                                                                                                                                var $4868 = self.val;
                                                                                                                                                var self = $4867;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4870 = self.err;
                                                                                                                                                        var $4871 = self.nam;
                                                                                                                                                        var $4872 = self.ini;
                                                                                                                                                        var $4873 = self.idx;
                                                                                                                                                        var $4874 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4860, $4870), $4871, $4872, $4873, $4874);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4876 = self.err;
                                                                                                                                                                var _reply$91 = Kind$Parser$term(_reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4878 = self.err;
                                                                                                                                                                        var self = $4876;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4880 = self.value;
                                                                                                                                                                                var $4881 = Parser$Reply$error$(Parser$Error$combine$($4880, $4878));
                                                                                                                                                                                var $4879 = $4881;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4882 = Parser$Reply$error$($4878);
                                                                                                                                                                                var $4879 = $4882;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4877 = $4879;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4883 = self.pst;
                                                                                                                                                                        var $4884 = self.val;
                                                                                                                                                                        var self = $4883;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4886 = self.err;
                                                                                                                                                                                var $4887 = self.nam;
                                                                                                                                                                                var $4888 = self.ini;
                                                                                                                                                                                var $4889 = self.idx;
                                                                                                                                                                                var $4890 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($4876, $4886), $4887, $4888, $4889, $4890);
                                                                                                                                                                                var _moti$100 = Kind$Term$lam$($4806, (_s$100 => {
                                                                                                                                                                                    var $4892 = Kind$Term$lam$("", (_x$101 => {
                                                                                                                                                                                        var $4893 = $4837;
                                                                                                                                                                                        return $4893;
                                                                                                                                                                                    }));
                                                                                                                                                                                    return $4892;
                                                                                                                                                                                }));
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.mirror");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $4868);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, _moti$100);
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, $4884);
                                                                                                                                                                                var $4891 = Parser$Reply$value$(_reply$pst$99, _term$107);
                                                                                                                                                                                var $4885 = $4891;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4877 = $4885;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4875 = $4877;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4869 = $4875;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4861 = $4869;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4859 = $4861;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4853 = $4859;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4846 = $4853;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4844 = $4846;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4838 = $4844;
                                                                                                        break;
                                                                                                };
                                                                                                var $4830 = $4838;
                                                                                                break;
                                                                                        };
                                                                                        var $4828 = $4830;
                                                                                        break;
                                                                                };
                                                                                var $4822 = $4828;
                                                                                break;
                                                                        };
                                                                        var $4815 = $4822;
                                                                        break;
                                                                };
                                                                var $4813 = $4815;
                                                                break;
                                                        };
                                                        var $4807 = $4813;
                                                        break;
                                                };
                                                var $4799 = $4807;
                                                break;
                                        };
                                        var $4797 = $4799;
                                        break;
                                };
                                var $4791 = $4797;
                                break;
                        };
                        var $4784 = $4791;
                        break;
                };
                var $4782 = $4784;
                break;
        };
        return $4782;
    }));
    const Kind$Parser$if = Kind$Parser$block("if")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4895 = self.err;
                var _reply$7 = Kind$Parser$text$("if ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4897 = self.err;
                        var self = $4895;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4899 = self.value;
                                var $4900 = Parser$Reply$error$(Parser$Error$combine$($4899, $4897));
                                var $4898 = $4900;
                                break;
                            case 'Maybe.none':
                                var $4901 = Parser$Reply$error$($4897);
                                var $4898 = $4901;
                                break;
                        };
                        var $4896 = $4898;
                        break;
                    case 'Parser.Reply.value':
                        var $4902 = self.pst;
                        var self = $4902;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4904 = self.err;
                                var $4905 = self.nam;
                                var $4906 = self.ini;
                                var $4907 = self.idx;
                                var $4908 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4895, $4904), $4905, $4906, $4907, $4908);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4910 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4912 = self.err;
                                                var self = $4910;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4914 = self.value;
                                                        var $4915 = Parser$Reply$error$(Parser$Error$combine$($4914, $4912));
                                                        var $4913 = $4915;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4916 = Parser$Reply$error$($4912);
                                                        var $4913 = $4916;
                                                        break;
                                                };
                                                var $4911 = $4913;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4917 = self.pst;
                                                var $4918 = self.val;
                                                var self = $4917;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4920 = self.err;
                                                        var $4921 = self.nam;
                                                        var $4922 = self.ini;
                                                        var $4923 = self.idx;
                                                        var $4924 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4910, $4920), $4921, $4922, $4923, $4924);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4926 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("then", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4928 = self.err;
                                                                        var self = $4926;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4930 = self.value;
                                                                                var $4931 = Parser$Reply$error$(Parser$Error$combine$($4930, $4928));
                                                                                var $4929 = $4931;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4932 = Parser$Reply$error$($4928);
                                                                                var $4929 = $4932;
                                                                                break;
                                                                        };
                                                                        var $4927 = $4929;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4933 = self.pst;
                                                                        var self = $4933;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4935 = self.err;
                                                                                var $4936 = self.nam;
                                                                                var $4937 = self.ini;
                                                                                var $4938 = self.idx;
                                                                                var $4939 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4926, $4935), $4936, $4937, $4938, $4939);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4941 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4943 = self.err;
                                                                                                var self = $4941;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4945 = self.value;
                                                                                                        var $4946 = Parser$Reply$error$(Parser$Error$combine$($4945, $4943));
                                                                                                        var $4944 = $4946;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4947 = Parser$Reply$error$($4943);
                                                                                                        var $4944 = $4947;
                                                                                                        break;
                                                                                                };
                                                                                                var $4942 = $4944;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4948 = self.pst;
                                                                                                var $4949 = self.val;
                                                                                                var self = $4948;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4951 = self.err;
                                                                                                        var $4952 = self.nam;
                                                                                                        var $4953 = self.ini;
                                                                                                        var $4954 = self.idx;
                                                                                                        var $4955 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4941, $4951), $4952, $4953, $4954, $4955);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4957 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("else", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4959 = self.err;
                                                                                                                        var self = $4957;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4961 = self.value;
                                                                                                                                var $4962 = Parser$Reply$error$(Parser$Error$combine$($4961, $4959));
                                                                                                                                var $4960 = $4962;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4963 = Parser$Reply$error$($4959);
                                                                                                                                var $4960 = $4963;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4958 = $4960;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4964 = self.pst;
                                                                                                                        var self = $4964;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4966 = self.err;
                                                                                                                                var $4967 = self.nam;
                                                                                                                                var $4968 = self.ini;
                                                                                                                                var $4969 = self.idx;
                                                                                                                                var $4970 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4957, $4966), $4967, $4968, $4969, $4970);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4972 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4974 = self.err;
                                                                                                                                                var self = $4972;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4976 = self.value;
                                                                                                                                                        var $4977 = Parser$Reply$error$(Parser$Error$combine$($4976, $4974));
                                                                                                                                                        var $4975 = $4977;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4978 = Parser$Reply$error$($4974);
                                                                                                                                                        var $4975 = $4978;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4973 = $4975;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4979 = self.pst;
                                                                                                                                                var $4980 = self.val;
                                                                                                                                                var self = $4979;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4982 = self.err;
                                                                                                                                                        var $4983 = self.nam;
                                                                                                                                                        var $4984 = self.ini;
                                                                                                                                                        var $4985 = self.idx;
                                                                                                                                                        var $4986 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4972, $4982), $4983, $4984, $4985, $4986);
                                                                                                                                                        var _term$86 = $4918;
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, Kind$Term$lam$("", (_x$87 => {
                                                                                                                                                            var $4988 = Kind$Term$hol$(Bits$e);
                                                                                                                                                            return $4988;
                                                                                                                                                        })));
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, $4949);
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, $4980);
                                                                                                                                                        var $4987 = Parser$Reply$value$(_reply$pst$85, _term$89);
                                                                                                                                                        var $4981 = $4987;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4973 = $4981;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4971 = $4973;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4965 = $4971;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4958 = $4965;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4956 = $4958;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4950 = $4956;
                                                                                                        break;
                                                                                                };
                                                                                                var $4942 = $4950;
                                                                                                break;
                                                                                        };
                                                                                        var $4940 = $4942;
                                                                                        break;
                                                                                };
                                                                                var $4934 = $4940;
                                                                                break;
                                                                        };
                                                                        var $4927 = $4934;
                                                                        break;
                                                                };
                                                                var $4925 = $4927;
                                                                break;
                                                        };
                                                        var $4919 = $4925;
                                                        break;
                                                };
                                                var $4911 = $4919;
                                                break;
                                        };
                                        var $4909 = $4911;
                                        break;
                                };
                                var $4903 = $4909;
                                break;
                        };
                        var $4896 = $4903;
                        break;
                };
                var $4894 = $4896;
                break;
        };
        return $4894;
    }));
    const Kind$Code$backslash = 92;
    const Kind$Code$escapes = List$cons$(Pair$new$("\\b", 8), List$cons$(Pair$new$("\\f", 12), List$cons$(Pair$new$("\\n", 10), List$cons$(Pair$new$("\\r", 13), List$cons$(Pair$new$("\\t", 9), List$cons$(Pair$new$("\\v", 11), List$cons$(Pair$new$(String$cons$(Kind$Code$backslash, String$cons$(Kind$Code$backslash, String$nil)), Kind$Code$backslash), List$cons$(Pair$new$("\\\"", 34), List$cons$(Pair$new$("\\0", 0), List$cons$(Pair$new$("\\\'", 39), List$nil))))))))));
    const Kind$Parser$char$single = Parser$choice(List$cons$(Parser$choice(List$mapped$(Kind$Code$escapes, (_esc$1 => {
        var self = _esc$1;
        switch (self._) {
            case 'Pair.new':
                var $4990 = self.fst;
                var $4991 = self.snd;
                var $4992 = (_pst$4 => {
                    var self = _pst$4;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $4994 = self.err;
                            var _reply$10 = Parser$text$($4990, _pst$4);
                            var self = _reply$10;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $4996 = self.err;
                                    var self = $4994;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $4998 = self.value;
                                            var $4999 = Parser$Reply$error$(Parser$Error$combine$($4998, $4996));
                                            var $4997 = $4999;
                                            break;
                                        case 'Maybe.none':
                                            var $5000 = Parser$Reply$error$($4996);
                                            var $4997 = $5000;
                                            break;
                                    };
                                    var $4995 = $4997;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5001 = self.pst;
                                    var self = $5001;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5003 = self.err;
                                            var $5004 = self.nam;
                                            var $5005 = self.ini;
                                            var $5006 = self.idx;
                                            var $5007 = self.str;
                                            var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($4994, $5003), $5004, $5005, $5006, $5007);
                                            var $5008 = Parser$Reply$value$(_reply$pst$18, $4991);
                                            var $5002 = $5008;
                                            break;
                                    };
                                    var $4995 = $5002;
                                    break;
                            };
                            var $4993 = $4995;
                            break;
                    };
                    return $4993;
                });
                var $4989 = $4992;
                break;
        };
        return $4989;
    }))), List$cons$(Parser$one, List$nil)));
    const Kind$Parser$char = Kind$Parser$block("char")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5010 = self.err;
                var _reply$7 = Kind$Parser$text$("\'", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5012 = self.err;
                        var self = $5010;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5014 = self.value;
                                var $5015 = Parser$Reply$error$(Parser$Error$combine$($5014, $5012));
                                var $5013 = $5015;
                                break;
                            case 'Maybe.none':
                                var $5016 = Parser$Reply$error$($5012);
                                var $5013 = $5016;
                                break;
                        };
                        var $5011 = $5013;
                        break;
                    case 'Parser.Reply.value':
                        var $5017 = self.pst;
                        var self = $5017;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5019 = self.err;
                                var $5020 = self.nam;
                                var $5021 = self.ini;
                                var $5022 = self.idx;
                                var $5023 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5010, $5019), $5020, $5021, $5022, $5023);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5025 = self.err;
                                        var _reply$21 = Kind$Parser$char$single(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5027 = self.err;
                                                var self = $5025;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5029 = self.value;
                                                        var $5030 = Parser$Reply$error$(Parser$Error$combine$($5029, $5027));
                                                        var $5028 = $5030;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5031 = Parser$Reply$error$($5027);
                                                        var $5028 = $5031;
                                                        break;
                                                };
                                                var $5026 = $5028;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5032 = self.pst;
                                                var $5033 = self.val;
                                                var self = $5032;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5035 = self.err;
                                                        var $5036 = self.nam;
                                                        var $5037 = self.ini;
                                                        var $5038 = self.idx;
                                                        var $5039 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5025, $5035), $5036, $5037, $5038, $5039);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5041 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("\'", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5043 = self.err;
                                                                        var self = $5041;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5045 = self.value;
                                                                                var $5046 = Parser$Reply$error$(Parser$Error$combine$($5045, $5043));
                                                                                var $5044 = $5046;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5047 = Parser$Reply$error$($5043);
                                                                                var $5044 = $5047;
                                                                                break;
                                                                        };
                                                                        var $5042 = $5044;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5048 = self.pst;
                                                                        var self = $5048;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5050 = self.err;
                                                                                var $5051 = self.nam;
                                                                                var $5052 = self.ini;
                                                                                var $5053 = self.idx;
                                                                                var $5054 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5041, $5050), $5051, $5052, $5053, $5054);
                                                                                var $5055 = Parser$Reply$value$(_reply$pst$43, Kind$Term$chr$($5033));
                                                                                var $5049 = $5055;
                                                                                break;
                                                                        };
                                                                        var $5042 = $5049;
                                                                        break;
                                                                };
                                                                var $5040 = $5042;
                                                                break;
                                                        };
                                                        var $5034 = $5040;
                                                        break;
                                                };
                                                var $5026 = $5034;
                                                break;
                                        };
                                        var $5024 = $5026;
                                        break;
                                };
                                var $5018 = $5024;
                                break;
                        };
                        var $5011 = $5018;
                        break;
                };
                var $5009 = $5011;
                break;
        };
        return $5009;
    }));

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $5056 = _res$2;
                    return $5056;
                } else {
                    var $5057 = self.charCodeAt(0);
                    var $5058 = self.slice(1);
                    var $5059 = String$reverse$go$($5058, String$cons$($5057, _res$2));
                    return $5059;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $5060 = String$reverse$go$(_xs$1, String$nil);
        return $5060;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function Kind$Parser$string$go$(_delim$1, _str$2, _pst$3) {
        var Kind$Parser$string$go$ = (_delim$1, _str$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_delim$1, _str$2, _pst$3]
        });
        var Kind$Parser$string$go = _delim$1 => _str$2 => _pst$3 => Kind$Parser$string$go$(_delim$1, _str$2, _pst$3);
        var arg = [_delim$1, _str$2, _pst$3];
        while (true) {
            let [_delim$1, _str$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $5061 = self.err;
                        var $5062 = self.nam;
                        var $5063 = self.ini;
                        var $5064 = self.idx;
                        var $5065 = self.str;
                        var self = $5065;
                        if (self.length === 0) {
                            var $5067 = Parser$Reply$fail$($5062, $5063, $5064, "Non-terminating string.");
                            var $5066 = $5067;
                        } else {
                            var $5068 = self.charCodeAt(0);
                            var $5069 = self.slice(1);
                            var self = ($5068 === _delim$1);
                            if (self) {
                                var _pst$11 = Parser$State$new$($5061, $5062, $5063, Nat$succ$($5064), $5069);
                                var $5071 = Parser$Reply$value$(_pst$11, String$reverse$(_str$2));
                                var $5070 = $5071;
                            } else {
                                var self = Kind$Parser$char$single(_pst$3);
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $5073 = self.err;
                                        var $5074 = Parser$Reply$error$($5073);
                                        var $5072 = $5074;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $5075 = self.pst;
                                        var $5076 = self.val;
                                        var $5077 = Kind$Parser$string$go$(_delim$1, String$cons$($5076, _str$2), $5075);
                                        var $5072 = $5077;
                                        break;
                                };
                                var $5070 = $5072;
                            };
                            var $5066 = $5070;
                        };
                        return $5066;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$string$go = x0 => x1 => x2 => Kind$Parser$string$go$(x0, x1, x2);

    function Kind$Parser$string$(_delim$1) {
        var $5078 = Kind$Parser$block("string")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5080 = self.err;
                    var _reply$8 = Kind$Parser$text$(String$cons$(_delim$1, String$nil), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5082 = self.err;
                            var self = $5080;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5084 = self.value;
                                    var $5085 = Parser$Reply$error$(Parser$Error$combine$($5084, $5082));
                                    var $5083 = $5085;
                                    break;
                                case 'Maybe.none':
                                    var $5086 = Parser$Reply$error$($5082);
                                    var $5083 = $5086;
                                    break;
                            };
                            var $5081 = $5083;
                            break;
                        case 'Parser.Reply.value':
                            var $5087 = self.pst;
                            var self = $5087;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5089 = self.err;
                                    var $5090 = self.nam;
                                    var $5091 = self.ini;
                                    var $5092 = self.idx;
                                    var $5093 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5080, $5089), $5090, $5091, $5092, $5093);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5095 = self.err;
                                            var _reply$22 = Kind$Parser$string$go$(_delim$1, "", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5097 = self.err;
                                                    var self = $5095;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5099 = self.value;
                                                            var $5100 = Parser$Reply$error$(Parser$Error$combine$($5099, $5097));
                                                            var $5098 = $5100;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5101 = Parser$Reply$error$($5097);
                                                            var $5098 = $5101;
                                                            break;
                                                    };
                                                    var $5096 = $5098;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5102 = self.pst;
                                                    var $5103 = self.val;
                                                    var self = $5102;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5105 = self.err;
                                                            var $5106 = self.nam;
                                                            var $5107 = self.ini;
                                                            var $5108 = self.idx;
                                                            var $5109 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5095, $5105), $5106, $5107, $5108, $5109);
                                                            var $5110 = Parser$Reply$value$(_reply$pst$30, Kind$Term$str$($5103));
                                                            var $5104 = $5110;
                                                            break;
                                                    };
                                                    var $5096 = $5104;
                                                    break;
                                            };
                                            var $5094 = $5096;
                                            break;
                                    };
                                    var $5088 = $5094;
                                    break;
                            };
                            var $5081 = $5088;
                            break;
                    };
                    var $5079 = $5081;
                    break;
            };
            return $5079;
        }));
        return $5078;
    };
    const Kind$Parser$string = x0 => Kind$Parser$string$(x0);

    function Kind$Term$new$(_args$1) {
        var $5111 = ({
            _: 'Kind.Term.new',
            'args': _args$1
        });
        return $5111;
    };
    const Kind$Term$new = x0 => Kind$Term$new$(x0);
    const Kind$Parser$new = Kind$Parser$block("new-struct")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5113 = self.err;
                var _reply$7 = Kind$Parser$items1$("{", Kind$Parser$term, "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5115 = self.err;
                        var self = $5113;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5117 = self.value;
                                var $5118 = Parser$Reply$error$(Parser$Error$combine$($5117, $5115));
                                var $5116 = $5118;
                                break;
                            case 'Maybe.none':
                                var $5119 = Parser$Reply$error$($5115);
                                var $5116 = $5119;
                                break;
                        };
                        var $5114 = $5116;
                        break;
                    case 'Parser.Reply.value':
                        var $5120 = self.pst;
                        var $5121 = self.val;
                        var self = $5120;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5123 = self.err;
                                var $5124 = self.nam;
                                var $5125 = self.ini;
                                var $5126 = self.idx;
                                var $5127 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5113, $5123), $5124, $5125, $5126, $5127);
                                var $5128 = Parser$Reply$value$(_reply$pst$15, Kind$Term$new$($5121));
                                var $5122 = $5128;
                                break;
                        };
                        var $5114 = $5122;
                        break;
                };
                var $5112 = $5114;
                break;
        };
        return $5112;
    }));
    const Kind$Parser$sigma$type = Kind$Parser$block("sigma")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5130 = self.err;
                var _reply$7 = Kind$Parser$text$("[", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5132 = self.err;
                        var self = $5130;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5134 = self.value;
                                var $5135 = Parser$Reply$error$(Parser$Error$combine$($5134, $5132));
                                var $5133 = $5135;
                                break;
                            case 'Maybe.none':
                                var $5136 = Parser$Reply$error$($5132);
                                var $5133 = $5136;
                                break;
                        };
                        var $5131 = $5133;
                        break;
                    case 'Parser.Reply.value':
                        var $5137 = self.pst;
                        var self = $5137;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5139 = self.err;
                                var $5140 = self.nam;
                                var $5141 = self.ini;
                                var $5142 = self.idx;
                                var $5143 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5130, $5139), $5140, $5141, $5142, $5143);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5145 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5147 = self.err;
                                                var self = $5145;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5149 = self.value;
                                                        var $5150 = Parser$Reply$error$(Parser$Error$combine$($5149, $5147));
                                                        var $5148 = $5150;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5151 = Parser$Reply$error$($5147);
                                                        var $5148 = $5151;
                                                        break;
                                                };
                                                var $5146 = $5148;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5152 = self.pst;
                                                var $5153 = self.val;
                                                var self = $5152;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5155 = self.err;
                                                        var $5156 = self.nam;
                                                        var $5157 = self.ini;
                                                        var $5158 = self.idx;
                                                        var $5159 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5145, $5155), $5156, $5157, $5158, $5159);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5161 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5163 = self.err;
                                                                        var self = $5161;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5165 = self.value;
                                                                                var $5166 = Parser$Reply$error$(Parser$Error$combine$($5165, $5163));
                                                                                var $5164 = $5166;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5167 = Parser$Reply$error$($5163);
                                                                                var $5164 = $5167;
                                                                                break;
                                                                        };
                                                                        var $5162 = $5164;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5168 = self.pst;
                                                                        var self = $5168;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5170 = self.err;
                                                                                var $5171 = self.nam;
                                                                                var $5172 = self.ini;
                                                                                var $5173 = self.idx;
                                                                                var $5174 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5161, $5170), $5171, $5172, $5173, $5174);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5176 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5178 = self.err;
                                                                                                var self = $5176;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5180 = self.value;
                                                                                                        var $5181 = Parser$Reply$error$(Parser$Error$combine$($5180, $5178));
                                                                                                        var $5179 = $5181;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5182 = Parser$Reply$error$($5178);
                                                                                                        var $5179 = $5182;
                                                                                                        break;
                                                                                                };
                                                                                                var $5177 = $5179;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5183 = self.pst;
                                                                                                var $5184 = self.val;
                                                                                                var self = $5183;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5186 = self.err;
                                                                                                        var $5187 = self.nam;
                                                                                                        var $5188 = self.ini;
                                                                                                        var $5189 = self.idx;
                                                                                                        var $5190 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5176, $5186), $5187, $5188, $5189, $5190);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5192 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("]", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5194 = self.err;
                                                                                                                        var self = $5192;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5196 = self.value;
                                                                                                                                var $5197 = Parser$Reply$error$(Parser$Error$combine$($5196, $5194));
                                                                                                                                var $5195 = $5197;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5198 = Parser$Reply$error$($5194);
                                                                                                                                var $5195 = $5198;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5193 = $5195;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5199 = self.pst;
                                                                                                                        var self = $5199;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5201 = self.err;
                                                                                                                                var $5202 = self.nam;
                                                                                                                                var $5203 = self.ini;
                                                                                                                                var $5204 = self.idx;
                                                                                                                                var $5205 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5192, $5201), $5202, $5203, $5204, $5205);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $5207 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $5209 = self.err;
                                                                                                                                                var self = $5207;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $5211 = self.value;
                                                                                                                                                        var $5212 = Parser$Reply$error$(Parser$Error$combine$($5211, $5209));
                                                                                                                                                        var $5210 = $5212;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $5213 = Parser$Reply$error$($5209);
                                                                                                                                                        var $5210 = $5213;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5208 = $5210;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $5214 = self.pst;
                                                                                                                                                var $5215 = self.val;
                                                                                                                                                var self = $5214;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $5217 = self.err;
                                                                                                                                                        var $5218 = self.nam;
                                                                                                                                                        var $5219 = self.ini;
                                                                                                                                                        var $5220 = self.idx;
                                                                                                                                                        var $5221 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($5207, $5217), $5218, $5219, $5220, $5221);
                                                                                                                                                        var _term$86 = Kind$Term$ref$("Sigma");
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, $5184);
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, Kind$Term$lam$($5153, (_x$88 => {
                                                                                                                                                            var $5223 = $5215;
                                                                                                                                                            return $5223;
                                                                                                                                                        })));
                                                                                                                                                        var $5222 = Parser$Reply$value$(_reply$pst$85, _term$88);
                                                                                                                                                        var $5216 = $5222;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5208 = $5216;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $5206 = $5208;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $5200 = $5206;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5193 = $5200;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5191 = $5193;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5185 = $5191;
                                                                                                        break;
                                                                                                };
                                                                                                var $5177 = $5185;
                                                                                                break;
                                                                                        };
                                                                                        var $5175 = $5177;
                                                                                        break;
                                                                                };
                                                                                var $5169 = $5175;
                                                                                break;
                                                                        };
                                                                        var $5162 = $5169;
                                                                        break;
                                                                };
                                                                var $5160 = $5162;
                                                                break;
                                                        };
                                                        var $5154 = $5160;
                                                        break;
                                                };
                                                var $5146 = $5154;
                                                break;
                                        };
                                        var $5144 = $5146;
                                        break;
                                };
                                var $5138 = $5144;
                                break;
                        };
                        var $5131 = $5138;
                        break;
                };
                var $5129 = $5131;
                break;
        };
        return $5129;
    }));
    const Kind$Parser$some = Kind$Parser$block("some")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5225 = self.err;
                var _reply$7 = Kind$Parser$text$("some(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5227 = self.err;
                        var self = $5225;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5229 = self.value;
                                var $5230 = Parser$Reply$error$(Parser$Error$combine$($5229, $5227));
                                var $5228 = $5230;
                                break;
                            case 'Maybe.none':
                                var $5231 = Parser$Reply$error$($5227);
                                var $5228 = $5231;
                                break;
                        };
                        var $5226 = $5228;
                        break;
                    case 'Parser.Reply.value':
                        var $5232 = self.pst;
                        var self = $5232;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5234 = self.err;
                                var $5235 = self.nam;
                                var $5236 = self.ini;
                                var $5237 = self.idx;
                                var $5238 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5225, $5234), $5235, $5236, $5237, $5238);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5240 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5242 = self.err;
                                                var self = $5240;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5244 = self.value;
                                                        var $5245 = Parser$Reply$error$(Parser$Error$combine$($5244, $5242));
                                                        var $5243 = $5245;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5246 = Parser$Reply$error$($5242);
                                                        var $5243 = $5246;
                                                        break;
                                                };
                                                var $5241 = $5243;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5247 = self.pst;
                                                var $5248 = self.val;
                                                var self = $5247;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5250 = self.err;
                                                        var $5251 = self.nam;
                                                        var $5252 = self.ini;
                                                        var $5253 = self.idx;
                                                        var $5254 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5240, $5250), $5251, $5252, $5253, $5254);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5256 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5258 = self.err;
                                                                        var self = $5256;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5260 = self.value;
                                                                                var $5261 = Parser$Reply$error$(Parser$Error$combine$($5260, $5258));
                                                                                var $5259 = $5261;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5262 = Parser$Reply$error$($5258);
                                                                                var $5259 = $5262;
                                                                                break;
                                                                        };
                                                                        var $5257 = $5259;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5263 = self.pst;
                                                                        var self = $5263;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5265 = self.err;
                                                                                var $5266 = self.nam;
                                                                                var $5267 = self.ini;
                                                                                var $5268 = self.idx;
                                                                                var $5269 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5256, $5265), $5266, $5267, $5268, $5269);
                                                                                var _term$44 = Kind$Term$ref$("Maybe.some");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, $5248);
                                                                                var $5270 = Parser$Reply$value$(_reply$pst$43, _term$46);
                                                                                var $5264 = $5270;
                                                                                break;
                                                                        };
                                                                        var $5257 = $5264;
                                                                        break;
                                                                };
                                                                var $5255 = $5257;
                                                                break;
                                                        };
                                                        var $5249 = $5255;
                                                        break;
                                                };
                                                var $5241 = $5249;
                                                break;
                                        };
                                        var $5239 = $5241;
                                        break;
                                };
                                var $5233 = $5239;
                                break;
                        };
                        var $5226 = $5233;
                        break;
                };
                var $5224 = $5226;
                break;
        };
        return $5224;
    }));
    const Kind$Parser$not = Kind$Parser$block("not")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5272 = self.err;
                var _reply$7 = Kind$Parser$text$("not(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5274 = self.err;
                        var self = $5272;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5276 = self.value;
                                var $5277 = Parser$Reply$error$(Parser$Error$combine$($5276, $5274));
                                var $5275 = $5277;
                                break;
                            case 'Maybe.none':
                                var $5278 = Parser$Reply$error$($5274);
                                var $5275 = $5278;
                                break;
                        };
                        var $5273 = $5275;
                        break;
                    case 'Parser.Reply.value':
                        var $5279 = self.pst;
                        var self = $5279;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5281 = self.err;
                                var $5282 = self.nam;
                                var $5283 = self.ini;
                                var $5284 = self.idx;
                                var $5285 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5272, $5281), $5282, $5283, $5284, $5285);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5287 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5289 = self.err;
                                                var self = $5287;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5291 = self.value;
                                                        var $5292 = Parser$Reply$error$(Parser$Error$combine$($5291, $5289));
                                                        var $5290 = $5292;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5293 = Parser$Reply$error$($5289);
                                                        var $5290 = $5293;
                                                        break;
                                                };
                                                var $5288 = $5290;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5294 = self.pst;
                                                var $5295 = self.val;
                                                var self = $5294;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5297 = self.err;
                                                        var $5298 = self.nam;
                                                        var $5299 = self.ini;
                                                        var $5300 = self.idx;
                                                        var $5301 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5287, $5297), $5298, $5299, $5300, $5301);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5303 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5305 = self.err;
                                                                        var self = $5303;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5307 = self.value;
                                                                                var $5308 = Parser$Reply$error$(Parser$Error$combine$($5307, $5305));
                                                                                var $5306 = $5308;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5309 = Parser$Reply$error$($5305);
                                                                                var $5306 = $5309;
                                                                                break;
                                                                        };
                                                                        var $5304 = $5306;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5310 = self.pst;
                                                                        var self = $5310;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5312 = self.err;
                                                                                var $5313 = self.nam;
                                                                                var $5314 = self.ini;
                                                                                var $5315 = self.idx;
                                                                                var $5316 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5303, $5312), $5313, $5314, $5315, $5316);
                                                                                var _term$44 = Kind$Term$ref$("Bool.not");
                                                                                var _term$45 = Kind$Term$app$(_term$44, $5295);
                                                                                var $5317 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $5311 = $5317;
                                                                                break;
                                                                        };
                                                                        var $5304 = $5311;
                                                                        break;
                                                                };
                                                                var $5302 = $5304;
                                                                break;
                                                        };
                                                        var $5296 = $5302;
                                                        break;
                                                };
                                                var $5288 = $5296;
                                                break;
                                        };
                                        var $5286 = $5288;
                                        break;
                                };
                                var $5280 = $5286;
                                break;
                        };
                        var $5273 = $5280;
                        break;
                };
                var $5271 = $5273;
                break;
        };
        return $5271;
    }));
    const Kind$Parser$left = Kind$Parser$block("left")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5319 = self.err;
                var _reply$7 = Kind$Parser$text$("left(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5321 = self.err;
                        var self = $5319;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5323 = self.value;
                                var $5324 = Parser$Reply$error$(Parser$Error$combine$($5323, $5321));
                                var $5322 = $5324;
                                break;
                            case 'Maybe.none':
                                var $5325 = Parser$Reply$error$($5321);
                                var $5322 = $5325;
                                break;
                        };
                        var $5320 = $5322;
                        break;
                    case 'Parser.Reply.value':
                        var $5326 = self.pst;
                        var self = $5326;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5328 = self.err;
                                var $5329 = self.nam;
                                var $5330 = self.ini;
                                var $5331 = self.idx;
                                var $5332 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5319, $5328), $5329, $5330, $5331, $5332);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5334 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5336 = self.err;
                                                var self = $5334;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5338 = self.value;
                                                        var $5339 = Parser$Reply$error$(Parser$Error$combine$($5338, $5336));
                                                        var $5337 = $5339;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5340 = Parser$Reply$error$($5336);
                                                        var $5337 = $5340;
                                                        break;
                                                };
                                                var $5335 = $5337;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5341 = self.pst;
                                                var $5342 = self.val;
                                                var self = $5341;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5344 = self.err;
                                                        var $5345 = self.nam;
                                                        var $5346 = self.ini;
                                                        var $5347 = self.idx;
                                                        var $5348 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5334, $5344), $5345, $5346, $5347, $5348);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5350 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5352 = self.err;
                                                                        var self = $5350;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5354 = self.value;
                                                                                var $5355 = Parser$Reply$error$(Parser$Error$combine$($5354, $5352));
                                                                                var $5353 = $5355;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5356 = Parser$Reply$error$($5352);
                                                                                var $5353 = $5356;
                                                                                break;
                                                                        };
                                                                        var $5351 = $5353;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5357 = self.pst;
                                                                        var self = $5357;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5359 = self.err;
                                                                                var $5360 = self.nam;
                                                                                var $5361 = self.ini;
                                                                                var $5362 = self.idx;
                                                                                var $5363 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5350, $5359), $5360, $5361, $5362, $5363);
                                                                                var _term$44 = Kind$Term$ref$("Either.left");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5342);
                                                                                var $5364 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5358 = $5364;
                                                                                break;
                                                                        };
                                                                        var $5351 = $5358;
                                                                        break;
                                                                };
                                                                var $5349 = $5351;
                                                                break;
                                                        };
                                                        var $5343 = $5349;
                                                        break;
                                                };
                                                var $5335 = $5343;
                                                break;
                                        };
                                        var $5333 = $5335;
                                        break;
                                };
                                var $5327 = $5333;
                                break;
                        };
                        var $5320 = $5327;
                        break;
                };
                var $5318 = $5320;
                break;
        };
        return $5318;
    }));
    const Kind$Parser$right = Kind$Parser$block("right")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5366 = self.err;
                var _reply$7 = Kind$Parser$text$("right(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5368 = self.err;
                        var self = $5366;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5370 = self.value;
                                var $5371 = Parser$Reply$error$(Parser$Error$combine$($5370, $5368));
                                var $5369 = $5371;
                                break;
                            case 'Maybe.none':
                                var $5372 = Parser$Reply$error$($5368);
                                var $5369 = $5372;
                                break;
                        };
                        var $5367 = $5369;
                        break;
                    case 'Parser.Reply.value':
                        var $5373 = self.pst;
                        var self = $5373;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5375 = self.err;
                                var $5376 = self.nam;
                                var $5377 = self.ini;
                                var $5378 = self.idx;
                                var $5379 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5366, $5375), $5376, $5377, $5378, $5379);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5381 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5383 = self.err;
                                                var self = $5381;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5385 = self.value;
                                                        var $5386 = Parser$Reply$error$(Parser$Error$combine$($5385, $5383));
                                                        var $5384 = $5386;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5387 = Parser$Reply$error$($5383);
                                                        var $5384 = $5387;
                                                        break;
                                                };
                                                var $5382 = $5384;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5388 = self.pst;
                                                var $5389 = self.val;
                                                var self = $5388;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5391 = self.err;
                                                        var $5392 = self.nam;
                                                        var $5393 = self.ini;
                                                        var $5394 = self.idx;
                                                        var $5395 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5381, $5391), $5392, $5393, $5394, $5395);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5397 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5399 = self.err;
                                                                        var self = $5397;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5401 = self.value;
                                                                                var $5402 = Parser$Reply$error$(Parser$Error$combine$($5401, $5399));
                                                                                var $5400 = $5402;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5403 = Parser$Reply$error$($5399);
                                                                                var $5400 = $5403;
                                                                                break;
                                                                        };
                                                                        var $5398 = $5400;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5404 = self.pst;
                                                                        var self = $5404;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5406 = self.err;
                                                                                var $5407 = self.nam;
                                                                                var $5408 = self.ini;
                                                                                var $5409 = self.idx;
                                                                                var $5410 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5397, $5406), $5407, $5408, $5409, $5410);
                                                                                var _term$44 = Kind$Term$ref$("Either.right");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5389);
                                                                                var $5411 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5405 = $5411;
                                                                                break;
                                                                        };
                                                                        var $5398 = $5405;
                                                                        break;
                                                                };
                                                                var $5396 = $5398;
                                                                break;
                                                        };
                                                        var $5390 = $5396;
                                                        break;
                                                };
                                                var $5382 = $5390;
                                                break;
                                        };
                                        var $5380 = $5382;
                                        break;
                                };
                                var $5374 = $5380;
                                break;
                        };
                        var $5367 = $5374;
                        break;
                };
                var $5365 = $5367;
                break;
        };
        return $5365;
    }));
    const Kind$Parser$apply = Kind$Parser$block("apply")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5413 = self.err;
                var _reply$7 = Kind$Parser$text$("apply(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5415 = self.err;
                        var self = $5413;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5417 = self.value;
                                var $5418 = Parser$Reply$error$(Parser$Error$combine$($5417, $5415));
                                var $5416 = $5418;
                                break;
                            case 'Maybe.none':
                                var $5419 = Parser$Reply$error$($5415);
                                var $5416 = $5419;
                                break;
                        };
                        var $5414 = $5416;
                        break;
                    case 'Parser.Reply.value':
                        var $5420 = self.pst;
                        var self = $5420;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5422 = self.err;
                                var $5423 = self.nam;
                                var $5424 = self.ini;
                                var $5425 = self.idx;
                                var $5426 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5413, $5422), $5423, $5424, $5425, $5426);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5428 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5430 = self.err;
                                                var self = $5428;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5432 = self.value;
                                                        var $5433 = Parser$Reply$error$(Parser$Error$combine$($5432, $5430));
                                                        var $5431 = $5433;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5434 = Parser$Reply$error$($5430);
                                                        var $5431 = $5434;
                                                        break;
                                                };
                                                var $5429 = $5431;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5435 = self.pst;
                                                var $5436 = self.val;
                                                var self = $5435;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5438 = self.err;
                                                        var $5439 = self.nam;
                                                        var $5440 = self.ini;
                                                        var $5441 = self.idx;
                                                        var $5442 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5428, $5438), $5439, $5440, $5441, $5442);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5444 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5446 = self.err;
                                                                        var self = $5444;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5448 = self.value;
                                                                                var $5449 = Parser$Reply$error$(Parser$Error$combine$($5448, $5446));
                                                                                var $5447 = $5449;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5450 = Parser$Reply$error$($5446);
                                                                                var $5447 = $5450;
                                                                                break;
                                                                        };
                                                                        var $5445 = $5447;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5451 = self.pst;
                                                                        var self = $5451;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5453 = self.err;
                                                                                var $5454 = self.nam;
                                                                                var $5455 = self.ini;
                                                                                var $5456 = self.idx;
                                                                                var $5457 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5444, $5453), $5454, $5455, $5456, $5457);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5459 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5461 = self.err;
                                                                                                var self = $5459;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5463 = self.value;
                                                                                                        var $5464 = Parser$Reply$error$(Parser$Error$combine$($5463, $5461));
                                                                                                        var $5462 = $5464;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5465 = Parser$Reply$error$($5461);
                                                                                                        var $5462 = $5465;
                                                                                                        break;
                                                                                                };
                                                                                                var $5460 = $5462;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5466 = self.pst;
                                                                                                var $5467 = self.val;
                                                                                                var self = $5466;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5469 = self.err;
                                                                                                        var $5470 = self.nam;
                                                                                                        var $5471 = self.ini;
                                                                                                        var $5472 = self.idx;
                                                                                                        var $5473 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5459, $5469), $5470, $5471, $5472, $5473);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5475 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5477 = self.err;
                                                                                                                        var self = $5475;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5479 = self.value;
                                                                                                                                var $5480 = Parser$Reply$error$(Parser$Error$combine$($5479, $5477));
                                                                                                                                var $5478 = $5480;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5481 = Parser$Reply$error$($5477);
                                                                                                                                var $5478 = $5481;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5476 = $5478;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5482 = self.pst;
                                                                                                                        var self = $5482;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5484 = self.err;
                                                                                                                                var $5485 = self.nam;
                                                                                                                                var $5486 = self.ini;
                                                                                                                                var $5487 = self.idx;
                                                                                                                                var $5488 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5475, $5484), $5485, $5486, $5487, $5488);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.apply");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5436);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5467);
                                                                                                                                var $5489 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5483 = $5489;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5476 = $5483;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5474 = $5476;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5468 = $5474;
                                                                                                        break;
                                                                                                };
                                                                                                var $5460 = $5468;
                                                                                                break;
                                                                                        };
                                                                                        var $5458 = $5460;
                                                                                        break;
                                                                                };
                                                                                var $5452 = $5458;
                                                                                break;
                                                                        };
                                                                        var $5445 = $5452;
                                                                        break;
                                                                };
                                                                var $5443 = $5445;
                                                                break;
                                                        };
                                                        var $5437 = $5443;
                                                        break;
                                                };
                                                var $5429 = $5437;
                                                break;
                                        };
                                        var $5427 = $5429;
                                        break;
                                };
                                var $5421 = $5427;
                                break;
                        };
                        var $5414 = $5421;
                        break;
                };
                var $5412 = $5414;
                break;
        };
        return $5412;
    }));
    const Kind$Parser$chain = Kind$Parser$block("chain")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5491 = self.err;
                var _reply$7 = Kind$Parser$text$("chain(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5493 = self.err;
                        var self = $5491;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5495 = self.value;
                                var $5496 = Parser$Reply$error$(Parser$Error$combine$($5495, $5493));
                                var $5494 = $5496;
                                break;
                            case 'Maybe.none':
                                var $5497 = Parser$Reply$error$($5493);
                                var $5494 = $5497;
                                break;
                        };
                        var $5492 = $5494;
                        break;
                    case 'Parser.Reply.value':
                        var $5498 = self.pst;
                        var self = $5498;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5500 = self.err;
                                var $5501 = self.nam;
                                var $5502 = self.ini;
                                var $5503 = self.idx;
                                var $5504 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5491, $5500), $5501, $5502, $5503, $5504);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5506 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5508 = self.err;
                                                var self = $5506;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5510 = self.value;
                                                        var $5511 = Parser$Reply$error$(Parser$Error$combine$($5510, $5508));
                                                        var $5509 = $5511;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5512 = Parser$Reply$error$($5508);
                                                        var $5509 = $5512;
                                                        break;
                                                };
                                                var $5507 = $5509;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5513 = self.pst;
                                                var $5514 = self.val;
                                                var self = $5513;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5516 = self.err;
                                                        var $5517 = self.nam;
                                                        var $5518 = self.ini;
                                                        var $5519 = self.idx;
                                                        var $5520 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5506, $5516), $5517, $5518, $5519, $5520);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5522 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5524 = self.err;
                                                                        var self = $5522;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5526 = self.value;
                                                                                var $5527 = Parser$Reply$error$(Parser$Error$combine$($5526, $5524));
                                                                                var $5525 = $5527;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5528 = Parser$Reply$error$($5524);
                                                                                var $5525 = $5528;
                                                                                break;
                                                                        };
                                                                        var $5523 = $5525;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5529 = self.pst;
                                                                        var self = $5529;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5531 = self.err;
                                                                                var $5532 = self.nam;
                                                                                var $5533 = self.ini;
                                                                                var $5534 = self.idx;
                                                                                var $5535 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5522, $5531), $5532, $5533, $5534, $5535);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5537 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5539 = self.err;
                                                                                                var self = $5537;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5541 = self.value;
                                                                                                        var $5542 = Parser$Reply$error$(Parser$Error$combine$($5541, $5539));
                                                                                                        var $5540 = $5542;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5543 = Parser$Reply$error$($5539);
                                                                                                        var $5540 = $5543;
                                                                                                        break;
                                                                                                };
                                                                                                var $5538 = $5540;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5544 = self.pst;
                                                                                                var $5545 = self.val;
                                                                                                var self = $5544;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5547 = self.err;
                                                                                                        var $5548 = self.nam;
                                                                                                        var $5549 = self.ini;
                                                                                                        var $5550 = self.idx;
                                                                                                        var $5551 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5537, $5547), $5548, $5549, $5550, $5551);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5553 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5555 = self.err;
                                                                                                                        var self = $5553;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5557 = self.value;
                                                                                                                                var $5558 = Parser$Reply$error$(Parser$Error$combine$($5557, $5555));
                                                                                                                                var $5556 = $5558;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5559 = Parser$Reply$error$($5555);
                                                                                                                                var $5556 = $5559;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5554 = $5556;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5560 = self.pst;
                                                                                                                        var self = $5560;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5562 = self.err;
                                                                                                                                var $5563 = self.nam;
                                                                                                                                var $5564 = self.ini;
                                                                                                                                var $5565 = self.idx;
                                                                                                                                var $5566 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5553, $5562), $5563, $5564, $5565, $5566);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.chain");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5514);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5545);
                                                                                                                                var $5567 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5561 = $5567;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5554 = $5561;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5552 = $5554;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5546 = $5552;
                                                                                                        break;
                                                                                                };
                                                                                                var $5538 = $5546;
                                                                                                break;
                                                                                        };
                                                                                        var $5536 = $5538;
                                                                                        break;
                                                                                };
                                                                                var $5530 = $5536;
                                                                                break;
                                                                        };
                                                                        var $5523 = $5530;
                                                                        break;
                                                                };
                                                                var $5521 = $5523;
                                                                break;
                                                        };
                                                        var $5515 = $5521;
                                                        break;
                                                };
                                                var $5507 = $5515;
                                                break;
                                        };
                                        var $5505 = $5507;
                                        break;
                                };
                                var $5499 = $5505;
                                break;
                        };
                        var $5492 = $5499;
                        break;
                };
                var $5490 = $5492;
                break;
        };
        return $5490;
    }));
    const Kind$Parser$mirror = Kind$Parser$block("mirror")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5569 = self.err;
                var _reply$7 = Kind$Parser$text$("mirror(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5571 = self.err;
                        var self = $5569;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5573 = self.value;
                                var $5574 = Parser$Reply$error$(Parser$Error$combine$($5573, $5571));
                                var $5572 = $5574;
                                break;
                            case 'Maybe.none':
                                var $5575 = Parser$Reply$error$($5571);
                                var $5572 = $5575;
                                break;
                        };
                        var $5570 = $5572;
                        break;
                    case 'Parser.Reply.value':
                        var $5576 = self.pst;
                        var self = $5576;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5578 = self.err;
                                var $5579 = self.nam;
                                var $5580 = self.ini;
                                var $5581 = self.idx;
                                var $5582 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5569, $5578), $5579, $5580, $5581, $5582);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5584 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5586 = self.err;
                                                var self = $5584;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5588 = self.value;
                                                        var $5589 = Parser$Reply$error$(Parser$Error$combine$($5588, $5586));
                                                        var $5587 = $5589;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5590 = Parser$Reply$error$($5586);
                                                        var $5587 = $5590;
                                                        break;
                                                };
                                                var $5585 = $5587;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5591 = self.pst;
                                                var $5592 = self.val;
                                                var self = $5591;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5594 = self.err;
                                                        var $5595 = self.nam;
                                                        var $5596 = self.ini;
                                                        var $5597 = self.idx;
                                                        var $5598 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5584, $5594), $5595, $5596, $5597, $5598);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5600 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5602 = self.err;
                                                                        var self = $5600;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5604 = self.value;
                                                                                var $5605 = Parser$Reply$error$(Parser$Error$combine$($5604, $5602));
                                                                                var $5603 = $5605;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5606 = Parser$Reply$error$($5602);
                                                                                var $5603 = $5606;
                                                                                break;
                                                                        };
                                                                        var $5601 = $5603;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5607 = self.pst;
                                                                        var self = $5607;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5609 = self.err;
                                                                                var $5610 = self.nam;
                                                                                var $5611 = self.ini;
                                                                                var $5612 = self.idx;
                                                                                var $5613 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5600, $5609), $5610, $5611, $5612, $5613);
                                                                                var _term$44 = Kind$Term$ref$("Equal.mirror");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                var _term$48 = Kind$Term$app$(_term$47, $5592);
                                                                                var $5614 = Parser$Reply$value$(_reply$pst$43, _term$48);
                                                                                var $5608 = $5614;
                                                                                break;
                                                                        };
                                                                        var $5601 = $5608;
                                                                        break;
                                                                };
                                                                var $5599 = $5601;
                                                                break;
                                                        };
                                                        var $5593 = $5599;
                                                        break;
                                                };
                                                var $5585 = $5593;
                                                break;
                                        };
                                        var $5583 = $5585;
                                        break;
                                };
                                var $5577 = $5583;
                                break;
                        };
                        var $5570 = $5577;
                        break;
                };
                var $5568 = $5570;
                break;
        };
        return $5568;
    }));

    function Kind$Name$read$(_str$1) {
        var $5615 = _str$1;
        return $5615;
    };
    const Kind$Name$read = x0 => Kind$Name$read$(x0);
    const Kind$Parser$list = Kind$Parser$block("list")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5617 = self.err;
                var _reply$7 = Kind$Parser$items$("[", Kind$Parser$term, "]")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5619 = self.err;
                        var self = $5617;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5621 = self.value;
                                var $5622 = Parser$Reply$error$(Parser$Error$combine$($5621, $5619));
                                var $5620 = $5622;
                                break;
                            case 'Maybe.none':
                                var $5623 = Parser$Reply$error$($5619);
                                var $5620 = $5623;
                                break;
                        };
                        var $5618 = $5620;
                        break;
                    case 'Parser.Reply.value':
                        var $5624 = self.pst;
                        var $5625 = self.val;
                        var self = $5624;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5627 = self.err;
                                var $5628 = self.nam;
                                var $5629 = self.ini;
                                var $5630 = self.idx;
                                var $5631 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5617, $5627), $5628, $5629, $5630, $5631);
                                var $5632 = Parser$Reply$value$(_reply$pst$15, List$fold$($5625, Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("List.nil")), Kind$Term$hol$(Bits$e)), (_x$16 => _xs$17 => {
                                    var _term$18 = Kind$Term$ref$(Kind$Name$read$("List.cons"));
                                    var _term$19 = Kind$Term$app$(_term$18, Kind$Term$hol$(Bits$e));
                                    var _term$20 = Kind$Term$app$(_term$19, _x$16);
                                    var _term$21 = Kind$Term$app$(_term$20, _xs$17);
                                    var $5633 = _term$21;
                                    return $5633;
                                })));
                                var $5626 = $5632;
                                break;
                        };
                        var $5618 = $5626;
                        break;
                };
                var $5616 = $5618;
                break;
        };
        return $5616;
    }));
    const Kind$Parser$map = Kind$Parser$block("map")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5635 = self.err;
                var _reply$7 = Kind$Parser$items$("{", (_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $5638 = self.err;
                            var _reply$13 = Kind$Parser$term(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $5640 = self.err;
                                    var self = $5638;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $5642 = self.value;
                                            var $5643 = Parser$Reply$error$(Parser$Error$combine$($5642, $5640));
                                            var $5641 = $5643;
                                            break;
                                        case 'Maybe.none':
                                            var $5644 = Parser$Reply$error$($5640);
                                            var $5641 = $5644;
                                            break;
                                    };
                                    var $5639 = $5641;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5645 = self.pst;
                                    var $5646 = self.val;
                                    var self = $5645;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5648 = self.err;
                                            var $5649 = self.nam;
                                            var $5650 = self.ini;
                                            var $5651 = self.idx;
                                            var $5652 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($5638, $5648), $5649, $5650, $5651, $5652);
                                            var self = _reply$pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $5654 = self.err;
                                                    var _reply$27 = Kind$Parser$text$(":", _reply$pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $5656 = self.err;
                                                            var self = $5654;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $5658 = self.value;
                                                                    var $5659 = Parser$Reply$error$(Parser$Error$combine$($5658, $5656));
                                                                    var $5657 = $5659;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $5660 = Parser$Reply$error$($5656);
                                                                    var $5657 = $5660;
                                                                    break;
                                                            };
                                                            var $5655 = $5657;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $5661 = self.pst;
                                                            var self = $5661;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5663 = self.err;
                                                                    var $5664 = self.nam;
                                                                    var $5665 = self.ini;
                                                                    var $5666 = self.idx;
                                                                    var $5667 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($5654, $5663), $5664, $5665, $5666, $5667);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $5669 = self.err;
                                                                            var _reply$41 = Kind$Parser$term(_reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $5671 = self.err;
                                                                                    var self = $5669;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $5673 = self.value;
                                                                                            var $5674 = Parser$Reply$error$(Parser$Error$combine$($5673, $5671));
                                                                                            var $5672 = $5674;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $5675 = Parser$Reply$error$($5671);
                                                                                            var $5672 = $5675;
                                                                                            break;
                                                                                    };
                                                                                    var $5670 = $5672;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $5676 = self.pst;
                                                                                    var $5677 = self.val;
                                                                                    var self = $5676;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5679 = self.err;
                                                                                            var $5680 = self.nam;
                                                                                            var $5681 = self.ini;
                                                                                            var $5682 = self.idx;
                                                                                            var $5683 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($5669, $5679), $5680, $5681, $5682, $5683);
                                                                                            var $5684 = Parser$Reply$value$(_reply$pst$49, Pair$new$($5646, $5677));
                                                                                            var $5678 = $5684;
                                                                                            break;
                                                                                    };
                                                                                    var $5670 = $5678;
                                                                                    break;
                                                                            };
                                                                            var $5668 = $5670;
                                                                            break;
                                                                    };
                                                                    var $5662 = $5668;
                                                                    break;
                                                            };
                                                            var $5655 = $5662;
                                                            break;
                                                    };
                                                    var $5653 = $5655;
                                                    break;
                                            };
                                            var $5647 = $5653;
                                            break;
                                    };
                                    var $5639 = $5647;
                                    break;
                            };
                            var $5637 = $5639;
                            break;
                    };
                    return $5637;
                }), "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5685 = self.err;
                        var self = $5635;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5687 = self.value;
                                var $5688 = Parser$Reply$error$(Parser$Error$combine$($5687, $5685));
                                var $5686 = $5688;
                                break;
                            case 'Maybe.none':
                                var $5689 = Parser$Reply$error$($5685);
                                var $5686 = $5689;
                                break;
                        };
                        var $5636 = $5686;
                        break;
                    case 'Parser.Reply.value':
                        var $5690 = self.pst;
                        var $5691 = self.val;
                        var self = $5690;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5693 = self.err;
                                var $5694 = self.nam;
                                var $5695 = self.ini;
                                var $5696 = self.idx;
                                var $5697 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5635, $5693), $5694, $5695, $5696, $5697);
                                var _list$16 = List$fold$($5691, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)), (_kv$16 => _xs$17 => {
                                    var self = _kv$16;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $5700 = self.fst;
                                            var $5701 = self.snd;
                                            var _pair$20 = Kind$Term$ref$("Pair.new");
                                            var _pair$21 = Kind$Term$app$(_pair$20, Kind$Term$hol$(Bits$e));
                                            var _pair$22 = Kind$Term$app$(_pair$21, Kind$Term$hol$(Bits$e));
                                            var _pair$23 = Kind$Term$app$(_pair$22, $5700);
                                            var _pair$24 = Kind$Term$app$(_pair$23, $5701);
                                            var _term$25 = Kind$Term$ref$("List.cons");
                                            var _term$26 = Kind$Term$app$(_term$25, Kind$Term$hol$(Bits$e));
                                            var _term$27 = Kind$Term$app$(_term$26, _pair$24);
                                            var _term$28 = Kind$Term$app$(_term$27, _xs$17);
                                            var $5702 = _term$28;
                                            var $5699 = $5702;
                                            break;
                                    };
                                    return $5699;
                                }));
                                var _term$17 = Kind$Term$ref$("Map.from_list");
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                var _term$19 = Kind$Term$app$(_term$18, _list$16);
                                var $5698 = Parser$Reply$value$(_reply$pst$15, _term$19);
                                var $5692 = $5698;
                                break;
                        };
                        var $5636 = $5692;
                        break;
                };
                var $5634 = $5636;
                break;
        };
        return $5634;
    }));

    function Kind$Parser$log$(_body$1) {
        var $5703 = Kind$Parser$block("log")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5705 = self.err;
                    var _reply$8 = Kind$Parser$text$("log(", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5707 = self.err;
                            var self = $5705;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5709 = self.value;
                                    var $5710 = Parser$Reply$error$(Parser$Error$combine$($5709, $5707));
                                    var $5708 = $5710;
                                    break;
                                case 'Maybe.none':
                                    var $5711 = Parser$Reply$error$($5707);
                                    var $5708 = $5711;
                                    break;
                            };
                            var $5706 = $5708;
                            break;
                        case 'Parser.Reply.value':
                            var $5712 = self.pst;
                            var self = $5712;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5714 = self.err;
                                    var $5715 = self.nam;
                                    var $5716 = self.ini;
                                    var $5717 = self.idx;
                                    var $5718 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5705, $5714), $5715, $5716, $5717, $5718);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5720 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5722 = self.err;
                                                    var self = $5720;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5724 = self.value;
                                                            var $5725 = Parser$Reply$error$(Parser$Error$combine$($5724, $5722));
                                                            var $5723 = $5725;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5726 = Parser$Reply$error$($5722);
                                                            var $5723 = $5726;
                                                            break;
                                                    };
                                                    var $5721 = $5723;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5727 = self.pst;
                                                    var $5728 = self.val;
                                                    var self = $5727;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5730 = self.err;
                                                            var $5731 = self.nam;
                                                            var $5732 = self.ini;
                                                            var $5733 = self.idx;
                                                            var $5734 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5720, $5730), $5731, $5732, $5733, $5734);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5736 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(")", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5738 = self.err;
                                                                            var self = $5736;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5740 = self.value;
                                                                                    var $5741 = Parser$Reply$error$(Parser$Error$combine$($5740, $5738));
                                                                                    var $5739 = $5741;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5742 = Parser$Reply$error$($5738);
                                                                                    var $5739 = $5742;
                                                                                    break;
                                                                            };
                                                                            var $5737 = $5739;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5743 = self.pst;
                                                                            var self = $5743;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5745 = self.err;
                                                                                    var $5746 = self.nam;
                                                                                    var $5747 = self.ini;
                                                                                    var $5748 = self.idx;
                                                                                    var $5749 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5736, $5745), $5746, $5747, $5748, $5749);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5751 = self.err;
                                                                                            var _reply$50 = _body$1(Unit$new)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5753 = self.err;
                                                                                                    var self = $5751;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5755 = self.value;
                                                                                                            var $5756 = Parser$Reply$error$(Parser$Error$combine$($5755, $5753));
                                                                                                            var $5754 = $5756;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5757 = Parser$Reply$error$($5753);
                                                                                                            var $5754 = $5757;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5752 = $5754;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5758 = self.pst;
                                                                                                    var $5759 = self.val;
                                                                                                    var self = $5758;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5761 = self.err;
                                                                                                            var $5762 = self.nam;
                                                                                                            var $5763 = self.ini;
                                                                                                            var $5764 = self.idx;
                                                                                                            var $5765 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5751, $5761), $5762, $5763, $5764, $5765);
                                                                                                            var _term$59 = Kind$Term$ref$("Debug.log");
                                                                                                            var _term$60 = Kind$Term$app$(_term$59, Kind$Term$hol$(Bits$e));
                                                                                                            var _term$61 = Kind$Term$app$(_term$60, $5728);
                                                                                                            var _term$62 = Kind$Term$app$(_term$61, Kind$Term$lam$("", (_x$62 => {
                                                                                                                var $5767 = $5759;
                                                                                                                return $5767;
                                                                                                            })));
                                                                                                            var $5766 = Parser$Reply$value$(_reply$pst$58, _term$62);
                                                                                                            var $5760 = $5766;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5752 = $5760;
                                                                                                    break;
                                                                                            };
                                                                                            var $5750 = $5752;
                                                                                            break;
                                                                                    };
                                                                                    var $5744 = $5750;
                                                                                    break;
                                                                            };
                                                                            var $5737 = $5744;
                                                                            break;
                                                                    };
                                                                    var $5735 = $5737;
                                                                    break;
                                                            };
                                                            var $5729 = $5735;
                                                            break;
                                                    };
                                                    var $5721 = $5729;
                                                    break;
                                            };
                                            var $5719 = $5721;
                                            break;
                                    };
                                    var $5713 = $5719;
                                    break;
                            };
                            var $5706 = $5713;
                            break;
                    };
                    var $5704 = $5706;
                    break;
            };
            return $5704;
        }));
        return $5703;
    };
    const Kind$Parser$log = x0 => Kind$Parser$log$(x0);

    function String$map$(_f$1, _as$2) {
        var self = _as$2;
        if (self.length === 0) {
            var $5769 = String$nil;
            var $5768 = $5769;
        } else {
            var $5770 = self.charCodeAt(0);
            var $5771 = self.slice(1);
            var $5772 = String$cons$(_f$1($5770), String$map$(_f$1, $5771));
            var $5768 = $5772;
        };
        return $5768;
    };
    const String$map = x0 => x1 => String$map$(x0, x1);

    function Char$to_upper$(_char$1) {
        var self = ((_char$1 >= 97) && (_char$1 <= 122));
        if (self) {
            var $5774 = ((_char$1 - 32) & 0xFFFF);
            var $5773 = $5774;
        } else {
            var $5775 = _char$1;
            var $5773 = $5775;
        };
        return $5773;
    };
    const Char$to_upper = x0 => Char$to_upper$(x0);

    function String$to_upper$(_str$1) {
        var $5776 = String$map$(Char$to_upper, _str$1);
        return $5776;
    };
    const String$to_upper = x0 => String$to_upper$(x0);

    function String$is_upper$(_str$1) {
        var $5777 = (String$to_upper$(_str$1) === _str$1);
        return $5777;
    };
    const String$is_upper = x0 => String$is_upper$(x0);

    function String$take$(_n$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $5779 = String$nil;
            var $5778 = $5779;
        } else {
            var $5780 = self.charCodeAt(0);
            var $5781 = self.slice(1);
            var self = _n$1;
            if (self === 0n) {
                var $5783 = String$nil;
                var $5782 = $5783;
            } else {
                var $5784 = (self - 1n);
                var $5785 = String$cons$($5780, String$take$($5784, $5781));
                var $5782 = $5785;
            };
            var $5778 = $5782;
        };
        return $5778;
    };
    const String$take = x0 => x1 => String$take$(x0, x1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function String$slice$(_i$1, _j$2, _xs$3) {
        var $5786 = String$take$((_j$2 - _i$1 <= 0n ? 0n : _j$2 - _i$1), String$drop$(_i$1, _xs$3));
        return $5786;
    };
    const String$slice = x0 => x1 => x2 => String$slice$(x0, x1, x2);

    function Kind$Term$unroll_nat$(_natx$1) {
        var self = _natx$1;
        if (self === 0n) {
            var $5788 = Kind$Term$ref$(Kind$Name$read$("Nat.zero"));
            var $5787 = $5788;
        } else {
            var $5789 = (self - 1n);
            var _func$3 = Kind$Term$ref$(Kind$Name$read$("Nat.succ"));
            var _argm$4 = Kind$Term$nat$($5789);
            var $5790 = Kind$Term$app$(_func$3, _argm$4);
            var $5787 = $5790;
        };
        return $5787;
    };
    const Kind$Term$unroll_nat = x0 => Kind$Term$unroll_nat$(x0);

    function Word$to_bits$(_a$2) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $5792 = self.pred;
                var $5793 = (Word$to_bits$($5792) + '0');
                var $5791 = $5793;
                break;
            case 'Word.i':
                var $5794 = self.pred;
                var $5795 = (Word$to_bits$($5794) + '1');
                var $5791 = $5795;
                break;
            case 'Word.e':
                var $5796 = Bits$e;
                var $5791 = $5796;
                break;
        };
        return $5791;
    };
    const Word$to_bits = x0 => Word$to_bits$(x0);
    const U16$to_bits = a0 => (u16_to_bits(a0));

    function Kind$Term$unroll_chr$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $5798 = self.slice(0, -1);
                var $5799 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.o")), Kind$Term$unroll_chr$bits$($5798));
                var $5797 = $5799;
                break;
            case 'i':
                var $5800 = self.slice(0, -1);
                var $5801 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.i")), Kind$Term$unroll_chr$bits$($5800));
                var $5797 = $5801;
                break;
            case 'e':
                var $5802 = Kind$Term$ref$(Kind$Name$read$("Bits.e"));
                var $5797 = $5802;
                break;
        };
        return $5797;
    };
    const Kind$Term$unroll_chr$bits = x0 => Kind$Term$unroll_chr$bits$(x0);

    function Kind$Term$unroll_chr$(_chrx$1) {
        var _bits$2 = (u16_to_bits(_chrx$1));
        var _term$3 = Kind$Term$ref$(Kind$Name$read$("Word.from_bits"));
        var _term$4 = Kind$Term$app$(_term$3, Kind$Term$nat$(16n));
        var _term$5 = Kind$Term$app$(_term$4, Kind$Term$unroll_chr$bits$(_bits$2));
        var _term$6 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("U16.new")), _term$5);
        var $5803 = _term$6;
        return $5803;
    };
    const Kind$Term$unroll_chr = x0 => Kind$Term$unroll_chr$(x0);

    function Kind$Term$unroll_str$(_strx$1) {
        var self = _strx$1;
        if (self.length === 0) {
            var $5805 = Kind$Term$ref$(Kind$Name$read$("String.nil"));
            var $5804 = $5805;
        } else {
            var $5806 = self.charCodeAt(0);
            var $5807 = self.slice(1);
            var _char$4 = Kind$Term$chr$($5806);
            var _term$5 = Kind$Term$ref$(Kind$Name$read$("String.cons"));
            var _term$6 = Kind$Term$app$(_term$5, _char$4);
            var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$($5807));
            var $5808 = _term$7;
            var $5804 = $5808;
        };
        return $5804;
    };
    const Kind$Term$unroll_str = x0 => Kind$Term$unroll_str$(x0);

    function Kind$Term$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $5810 = self.name;
                var self = Kind$Map$get$($5810, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $5812 = self.value;
                        var self = $5812;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $5814 = self.term;
                                var $5815 = Kind$Term$reduce$($5814, _defs$2);
                                var $5813 = $5815;
                                break;
                        };
                        var $5811 = $5813;
                        break;
                    case 'Maybe.none':
                        var $5816 = Kind$Term$ref$($5810);
                        var $5811 = $5816;
                        break;
                };
                var $5809 = $5811;
                break;
            case 'Kind.Term.app':
                var $5817 = self.func;
                var $5818 = self.argm;
                var _func$5 = Kind$Term$reduce$($5817, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $5820 = self.body;
                        var $5821 = Kind$Term$reduce$($5820($5818), _defs$2);
                        var $5819 = $5821;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $5822 = _term$1;
                        var $5819 = $5822;
                        break;
                };
                var $5809 = $5819;
                break;
            case 'Kind.Term.let':
                var $5823 = self.expr;
                var $5824 = self.body;
                var $5825 = Kind$Term$reduce$($5824($5823), _defs$2);
                var $5809 = $5825;
                break;
            case 'Kind.Term.def':
                var $5826 = self.expr;
                var $5827 = self.body;
                var $5828 = Kind$Term$reduce$($5827($5826), _defs$2);
                var $5809 = $5828;
                break;
            case 'Kind.Term.ann':
                var $5829 = self.term;
                var $5830 = Kind$Term$reduce$($5829, _defs$2);
                var $5809 = $5830;
                break;
            case 'Kind.Term.nat':
                var $5831 = self.natx;
                var $5832 = Kind$Term$reduce$(Kind$Term$unroll_nat$($5831), _defs$2);
                var $5809 = $5832;
                break;
            case 'Kind.Term.chr':
                var $5833 = self.chrx;
                var $5834 = Kind$Term$reduce$(Kind$Term$unroll_chr$($5833), _defs$2);
                var $5809 = $5834;
                break;
            case 'Kind.Term.str':
                var $5835 = self.strx;
                var $5836 = Kind$Term$reduce$(Kind$Term$unroll_str$($5835), _defs$2);
                var $5809 = $5836;
                break;
            case 'Kind.Term.ori':
                var $5837 = self.expr;
                var $5838 = Kind$Term$reduce$($5837, _defs$2);
                var $5809 = $5838;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $5839 = _term$1;
                var $5809 = $5839;
                break;
        };
        return $5809;
    };
    const Kind$Term$reduce = x0 => x1 => Kind$Term$reduce$(x0, x1);

    function Kind$Term$cse$(_path$1, _expr$2, _name$3, _with$4, _cses$5, _moti$6) {
        var $5840 = ({
            _: 'Kind.Term.cse',
            'path': _path$1,
            'expr': _expr$2,
            'name': _name$3,
            'with': _with$4,
            'cses': _cses$5,
            'moti': _moti$6
        });
        return $5840;
    };
    const Kind$Term$cse = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$cse$(x0, x1, x2, x3, x4, x5);

    function Kind$Parser$open$(_body$1) {
        var $5841 = Kind$Parser$block("open")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5843 = self.err;
                    var _reply$8 = Kind$Parser$text$("open ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5845 = self.err;
                            var self = $5843;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5847 = self.value;
                                    var $5848 = Parser$Reply$error$(Parser$Error$combine$($5847, $5845));
                                    var $5846 = $5848;
                                    break;
                                case 'Maybe.none':
                                    var $5849 = Parser$Reply$error$($5845);
                                    var $5846 = $5849;
                                    break;
                            };
                            var $5844 = $5846;
                            break;
                        case 'Parser.Reply.value':
                            var $5850 = self.pst;
                            var self = $5850;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5852 = self.err;
                                    var $5853 = self.nam;
                                    var $5854 = self.ini;
                                    var $5855 = self.idx;
                                    var $5856 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5843, $5852), $5853, $5854, $5855, $5856);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5858 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5860 = self.err;
                                                    var self = $5858;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5862 = self.value;
                                                            var $5863 = Parser$Reply$error$(Parser$Error$combine$($5862, $5860));
                                                            var $5861 = $5863;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5864 = Parser$Reply$error$($5860);
                                                            var $5861 = $5864;
                                                            break;
                                                    };
                                                    var $5859 = $5861;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5865 = self.pst;
                                                    var $5866 = self.val;
                                                    var self = $5865;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5868 = self.err;
                                                            var $5869 = self.nam;
                                                            var $5870 = self.ini;
                                                            var $5871 = self.idx;
                                                            var $5872 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5858, $5868), $5869, $5870, $5871, $5872);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5874 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5877 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$("as", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $5879 = self.err;
                                                                                        var self = $5877;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $5881 = self.value;
                                                                                                var $5882 = Parser$Reply$error$(Parser$Error$combine$($5881, $5879));
                                                                                                var $5880 = $5882;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $5883 = Parser$Reply$error$($5879);
                                                                                                var $5880 = $5883;
                                                                                                break;
                                                                                        };
                                                                                        var $5878 = $5880;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $5884 = self.pst;
                                                                                        var self = $5884;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $5886 = self.err;
                                                                                                var $5887 = self.nam;
                                                                                                var $5888 = self.ini;
                                                                                                var $5889 = self.idx;
                                                                                                var $5890 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($5877, $5886), $5887, $5888, $5889, $5890);
                                                                                                var $5891 = Kind$Parser$name1$(_reply$pst$50);
                                                                                                var $5885 = $5891;
                                                                                                break;
                                                                                        };
                                                                                        var $5878 = $5885;
                                                                                        break;
                                                                                };
                                                                                var $5876 = $5878;
                                                                                break;
                                                                        };
                                                                        return $5876;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5892 = self.err;
                                                                            var self = $5874;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5894 = self.value;
                                                                                    var $5895 = Parser$Reply$error$(Parser$Error$combine$($5894, $5892));
                                                                                    var $5893 = $5895;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5896 = Parser$Reply$error$($5892);
                                                                                    var $5893 = $5896;
                                                                                    break;
                                                                            };
                                                                            var $5875 = $5893;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5897 = self.pst;
                                                                            var $5898 = self.val;
                                                                            var self = $5897;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5900 = self.err;
                                                                                    var $5901 = self.nam;
                                                                                    var $5902 = self.ini;
                                                                                    var $5903 = self.idx;
                                                                                    var $5904 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5874, $5900), $5901, $5902, $5903, $5904);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5906 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5908 = self.err;
                                                                                                    var self = $5906;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5910 = self.value;
                                                                                                            var $5911 = Parser$Reply$error$(Parser$Error$combine$($5910, $5908));
                                                                                                            var $5909 = $5911;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5912 = Parser$Reply$error$($5908);
                                                                                                            var $5909 = $5912;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5907 = $5909;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5913 = self.pst;
                                                                                                    var self = $5913;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5915 = self.err;
                                                                                                            var $5916 = self.nam;
                                                                                                            var $5917 = self.ini;
                                                                                                            var $5918 = self.idx;
                                                                                                            var $5919 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5906, $5915), $5916, $5917, $5918, $5919);
                                                                                                            var self = $5898;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $5921 = self.value;
                                                                                                                    var $5922 = $5921;
                                                                                                                    var _name$59 = $5922;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var self = Kind$Term$reduce$($5866, Kind$Map$new);
                                                                                                                    switch (self._) {
                                                                                                                        case 'Kind.Term.var':
                                                                                                                            var $5924 = self.name;
                                                                                                                            var $5925 = $5924;
                                                                                                                            var $5923 = $5925;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.ref':
                                                                                                                            var $5926 = self.name;
                                                                                                                            var $5927 = $5926;
                                                                                                                            var $5923 = $5927;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.typ':
                                                                                                                        case 'Kind.Term.all':
                                                                                                                        case 'Kind.Term.lam':
                                                                                                                        case 'Kind.Term.app':
                                                                                                                        case 'Kind.Term.let':
                                                                                                                        case 'Kind.Term.def':
                                                                                                                        case 'Kind.Term.ann':
                                                                                                                        case 'Kind.Term.gol':
                                                                                                                        case 'Kind.Term.hol':
                                                                                                                        case 'Kind.Term.nat':
                                                                                                                        case 'Kind.Term.chr':
                                                                                                                        case 'Kind.Term.str':
                                                                                                                        case 'Kind.Term.num':
                                                                                                                        case 'Kind.Term.cse':
                                                                                                                        case 'Kind.Term.new':
                                                                                                                        case 'Kind.Term.get':
                                                                                                                        case 'Kind.Term.set':
                                                                                                                        case 'Kind.Term.ope':
                                                                                                                        case 'Kind.Term.ori':
                                                                                                                            var $5928 = Kind$Name$read$("self");
                                                                                                                            var $5923 = $5928;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var _name$59 = $5923;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var _wyth$60 = List$nil;
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5929 = self.err;
                                                                                                                    var _reply$66 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5931 = self.err;
                                                                                                                            var self = $5929;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5933 = self.value;
                                                                                                                                    var $5934 = Parser$Reply$error$(Parser$Error$combine$($5933, $5931));
                                                                                                                                    var $5932 = $5934;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5935 = Parser$Reply$error$($5931);
                                                                                                                                    var $5932 = $5935;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5930 = $5932;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5936 = self.pst;
                                                                                                                            var $5937 = self.val;
                                                                                                                            var self = $5936;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5939 = self.err;
                                                                                                                                    var $5940 = self.nam;
                                                                                                                                    var $5941 = self.ini;
                                                                                                                                    var $5942 = self.idx;
                                                                                                                                    var $5943 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($5929, $5939), $5940, $5941, $5942, $5943);
                                                                                                                                    var _cses$75 = Kind$Map$set$("_", $5937, Kind$Map$new);
                                                                                                                                    var _moti$76 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                    var $5944 = Parser$Reply$value$(_reply$pst$74, Kind$Term$cse$(Bits$e, $5866, _name$59, _wyth$60, _cses$75, _moti$76));
                                                                                                                                    var $5938 = $5944;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5930 = $5938;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5920 = $5930;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5914 = $5920;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5907 = $5914;
                                                                                                    break;
                                                                                            };
                                                                                            var $5905 = $5907;
                                                                                            break;
                                                                                    };
                                                                                    var $5899 = $5905;
                                                                                    break;
                                                                            };
                                                                            var $5875 = $5899;
                                                                            break;
                                                                    };
                                                                    var $5873 = $5875;
                                                                    break;
                                                            };
                                                            var $5867 = $5873;
                                                            break;
                                                    };
                                                    var $5859 = $5867;
                                                    break;
                                            };
                                            var $5857 = $5859;
                                            break;
                                    };
                                    var $5851 = $5857;
                                    break;
                            };
                            var $5844 = $5851;
                            break;
                    };
                    var $5842 = $5844;
                    break;
            };
            return $5842;
        }));
        return $5841;
    };
    const Kind$Parser$open = x0 => Kind$Parser$open$(x0);

    function Kind$Parser$do$statements$(_monad_name$1) {
        var $5945 = Parser$choice(List$cons$(Kind$Parser$block("do-get")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5947 = self.err;
                    var _reply$8 = Parser$choice$(List$cons$(Kind$Parser$text("var "), List$cons$(Kind$Parser$text("get "), List$nil)), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5949 = self.err;
                            var self = $5947;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5951 = self.value;
                                    var $5952 = Parser$Reply$error$(Parser$Error$combine$($5951, $5949));
                                    var $5950 = $5952;
                                    break;
                                case 'Maybe.none':
                                    var $5953 = Parser$Reply$error$($5949);
                                    var $5950 = $5953;
                                    break;
                            };
                            var $5948 = $5950;
                            break;
                        case 'Parser.Reply.value':
                            var $5954 = self.pst;
                            var self = $5954;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5956 = self.err;
                                    var $5957 = self.nam;
                                    var $5958 = self.ini;
                                    var $5959 = self.idx;
                                    var $5960 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5947, $5956), $5957, $5958, $5959, $5960);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5962 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5964 = self.err;
                                                    var self = $5962;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5966 = self.value;
                                                            var $5967 = Parser$Reply$error$(Parser$Error$combine$($5966, $5964));
                                                            var $5965 = $5967;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5968 = Parser$Reply$error$($5964);
                                                            var $5965 = $5968;
                                                            break;
                                                    };
                                                    var $5963 = $5965;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5969 = self.pst;
                                                    var $5970 = self.val;
                                                    var self = $5969;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5972 = self.err;
                                                            var $5973 = self.nam;
                                                            var $5974 = self.ini;
                                                            var $5975 = self.idx;
                                                            var $5976 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5962, $5972), $5973, $5974, $5975, $5976);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5978 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5980 = self.err;
                                                                            var self = $5978;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5982 = self.value;
                                                                                    var $5983 = Parser$Reply$error$(Parser$Error$combine$($5982, $5980));
                                                                                    var $5981 = $5983;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5984 = Parser$Reply$error$($5980);
                                                                                    var $5981 = $5984;
                                                                                    break;
                                                                            };
                                                                            var $5979 = $5981;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5985 = self.pst;
                                                                            var self = $5985;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5987 = self.err;
                                                                                    var $5988 = self.nam;
                                                                                    var $5989 = self.ini;
                                                                                    var $5990 = self.idx;
                                                                                    var $5991 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5978, $5987), $5988, $5989, $5990, $5991);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5993 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5995 = self.err;
                                                                                                    var self = $5993;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5997 = self.value;
                                                                                                            var $5998 = Parser$Reply$error$(Parser$Error$combine$($5997, $5995));
                                                                                                            var $5996 = $5998;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5999 = Parser$Reply$error$($5995);
                                                                                                            var $5996 = $5999;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5994 = $5996;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $6000 = self.pst;
                                                                                                    var $6001 = self.val;
                                                                                                    var self = $6000;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $6003 = self.err;
                                                                                                            var $6004 = self.nam;
                                                                                                            var $6005 = self.ini;
                                                                                                            var $6006 = self.idx;
                                                                                                            var $6007 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5993, $6003), $6004, $6005, $6006, $6007);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6009 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $6011 = self.err;
                                                                                                                            var self = $6009;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $6013 = self.value;
                                                                                                                                    var $6014 = Parser$Reply$error$(Parser$Error$combine$($6013, $6011));
                                                                                                                                    var $6012 = $6014;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $6015 = Parser$Reply$error$($6011);
                                                                                                                                    var $6012 = $6015;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6010 = $6012;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $6016 = self.pst;
                                                                                                                            var self = $6016;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $6018 = self.err;
                                                                                                                                    var $6019 = self.nam;
                                                                                                                                    var $6020 = self.ini;
                                                                                                                                    var $6021 = self.idx;
                                                                                                                                    var $6022 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6009, $6018), $6019, $6020, $6021, $6022);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $6024 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $6026 = self.err;
                                                                                                                                                    var self = $6024;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $6028 = self.value;
                                                                                                                                                            var $6029 = Parser$Reply$error$(Parser$Error$combine$($6028, $6026));
                                                                                                                                                            var $6027 = $6029;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $6030 = Parser$Reply$error$($6026);
                                                                                                                                                            var $6027 = $6030;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6025 = $6027;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $6031 = self.pst;
                                                                                                                                                    var $6032 = self.val;
                                                                                                                                                    var self = $6031;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $6034 = self.err;
                                                                                                                                                            var $6035 = self.nam;
                                                                                                                                                            var $6036 = self.ini;
                                                                                                                                                            var $6037 = self.idx;
                                                                                                                                                            var $6038 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($6024, $6034), $6035, $6036, $6037, $6038);
                                                                                                                                                            var _term$87 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                            var _term$88 = Kind$Term$app$(_term$87, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                            var _term$89 = Kind$Term$app$(_term$88, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$91 = Kind$Term$app$(_term$90, $6001);
                                                                                                                                                            var _term$92 = Kind$Term$app$(_term$91, Kind$Term$lam$($5970, (_x$92 => {
                                                                                                                                                                var $6040 = $6032;
                                                                                                                                                                return $6040;
                                                                                                                                                            })));
                                                                                                                                                            var $6039 = Parser$Reply$value$(_reply$pst$86, _term$92);
                                                                                                                                                            var $6033 = $6039;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6025 = $6033;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $6023 = $6025;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $6017 = $6023;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6010 = $6017;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $6008 = $6010;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6002 = $6008;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5994 = $6002;
                                                                                                    break;
                                                                                            };
                                                                                            var $5992 = $5994;
                                                                                            break;
                                                                                    };
                                                                                    var $5986 = $5992;
                                                                                    break;
                                                                            };
                                                                            var $5979 = $5986;
                                                                            break;
                                                                    };
                                                                    var $5977 = $5979;
                                                                    break;
                                                            };
                                                            var $5971 = $5977;
                                                            break;
                                                    };
                                                    var $5963 = $5971;
                                                    break;
                                            };
                                            var $5961 = $5963;
                                            break;
                                    };
                                    var $5955 = $5961;
                                    break;
                            };
                            var $5948 = $5955;
                            break;
                    };
                    var $5946 = $5948;
                    break;
            };
            return $5946;
        })), List$cons$(Kind$Parser$block("do-return")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6042 = self.err;
                    var _reply$8 = Kind$Parser$text$("return ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6044 = self.err;
                            var self = $6042;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6046 = self.value;
                                    var $6047 = Parser$Reply$error$(Parser$Error$combine$($6046, $6044));
                                    var $6045 = $6047;
                                    break;
                                case 'Maybe.none':
                                    var $6048 = Parser$Reply$error$($6044);
                                    var $6045 = $6048;
                                    break;
                            };
                            var $6043 = $6045;
                            break;
                        case 'Parser.Reply.value':
                            var $6049 = self.pst;
                            var self = $6049;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6051 = self.err;
                                    var $6052 = self.nam;
                                    var $6053 = self.ini;
                                    var $6054 = self.idx;
                                    var $6055 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6042, $6051), $6052, $6053, $6054, $6055);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6057 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6059 = self.err;
                                                    var self = $6057;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6061 = self.value;
                                                            var $6062 = Parser$Reply$error$(Parser$Error$combine$($6061, $6059));
                                                            var $6060 = $6062;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6063 = Parser$Reply$error$($6059);
                                                            var $6060 = $6063;
                                                            break;
                                                    };
                                                    var $6058 = $6060;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6064 = self.pst;
                                                    var $6065 = self.val;
                                                    var self = $6064;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6067 = self.err;
                                                            var $6068 = self.nam;
                                                            var $6069 = self.ini;
                                                            var $6070 = self.idx;
                                                            var $6071 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6057, $6067), $6068, $6069, $6070, $6071);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6073 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6075 = self.err;
                                                                            var self = $6073;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6077 = self.value;
                                                                                    var $6078 = Parser$Reply$error$(Parser$Error$combine$($6077, $6075));
                                                                                    var $6076 = $6078;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6079 = Parser$Reply$error$($6075);
                                                                                    var $6076 = $6079;
                                                                                    break;
                                                                            };
                                                                            var $6074 = $6076;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6080 = self.pst;
                                                                            var self = $6080;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6082 = self.err;
                                                                                    var $6083 = self.nam;
                                                                                    var $6084 = self.ini;
                                                                                    var $6085 = self.idx;
                                                                                    var $6086 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6073, $6082), $6083, $6084, $6085, $6086);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.pure"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, $6065);
                                                                                    var $6087 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                    var $6081 = $6087;
                                                                                    break;
                                                                            };
                                                                            var $6074 = $6081;
                                                                            break;
                                                                    };
                                                                    var $6072 = $6074;
                                                                    break;
                                                            };
                                                            var $6066 = $6072;
                                                            break;
                                                    };
                                                    var $6058 = $6066;
                                                    break;
                                            };
                                            var $6056 = $6058;
                                            break;
                                    };
                                    var $6050 = $6056;
                                    break;
                            };
                            var $6043 = $6050;
                            break;
                    };
                    var $6041 = $6043;
                    break;
            };
            return $6041;
        })), List$cons$(Kind$Parser$block("do-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6089 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6091 = self.err;
                            var self = $6089;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6093 = self.value;
                                    var $6094 = Parser$Reply$error$(Parser$Error$combine$($6093, $6091));
                                    var $6092 = $6094;
                                    break;
                                case 'Maybe.none':
                                    var $6095 = Parser$Reply$error$($6091);
                                    var $6092 = $6095;
                                    break;
                            };
                            var $6090 = $6092;
                            break;
                        case 'Parser.Reply.value':
                            var $6096 = self.pst;
                            var self = $6096;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6098 = self.err;
                                    var $6099 = self.nam;
                                    var $6100 = self.ini;
                                    var $6101 = self.idx;
                                    var $6102 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6089, $6098), $6099, $6100, $6101, $6102);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6104 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6106 = self.err;
                                                    var self = $6104;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6108 = self.value;
                                                            var $6109 = Parser$Reply$error$(Parser$Error$combine$($6108, $6106));
                                                            var $6107 = $6109;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6110 = Parser$Reply$error$($6106);
                                                            var $6107 = $6110;
                                                            break;
                                                    };
                                                    var $6105 = $6107;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6111 = self.pst;
                                                    var $6112 = self.val;
                                                    var self = $6111;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6114 = self.err;
                                                            var $6115 = self.nam;
                                                            var $6116 = self.ini;
                                                            var $6117 = self.idx;
                                                            var $6118 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6104, $6114), $6115, $6116, $6117, $6118);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6120 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6122 = self.err;
                                                                            var self = $6120;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6124 = self.value;
                                                                                    var $6125 = Parser$Reply$error$(Parser$Error$combine$($6124, $6122));
                                                                                    var $6123 = $6125;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6126 = Parser$Reply$error$($6122);
                                                                                    var $6123 = $6126;
                                                                                    break;
                                                                            };
                                                                            var $6121 = $6123;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6127 = self.pst;
                                                                            var self = $6127;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6129 = self.err;
                                                                                    var $6130 = self.nam;
                                                                                    var $6131 = self.ini;
                                                                                    var $6132 = self.idx;
                                                                                    var $6133 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6120, $6129), $6130, $6131, $6132, $6133);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6135 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $6137 = self.err;
                                                                                                    var self = $6135;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $6139 = self.value;
                                                                                                            var $6140 = Parser$Reply$error$(Parser$Error$combine$($6139, $6137));
                                                                                                            var $6138 = $6140;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $6141 = Parser$Reply$error$($6137);
                                                                                                            var $6138 = $6141;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6136 = $6138;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $6142 = self.pst;
                                                                                                    var $6143 = self.val;
                                                                                                    var self = $6142;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $6145 = self.err;
                                                                                                            var $6146 = self.nam;
                                                                                                            var $6147 = self.ini;
                                                                                                            var $6148 = self.idx;
                                                                                                            var $6149 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6135, $6145), $6146, $6147, $6148, $6149);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6151 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $6153 = self.err;
                                                                                                                            var self = $6151;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $6155 = self.value;
                                                                                                                                    var $6156 = Parser$Reply$error$(Parser$Error$combine$($6155, $6153));
                                                                                                                                    var $6154 = $6156;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $6157 = Parser$Reply$error$($6153);
                                                                                                                                    var $6154 = $6157;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6152 = $6154;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $6158 = self.pst;
                                                                                                                            var self = $6158;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $6160 = self.err;
                                                                                                                                    var $6161 = self.nam;
                                                                                                                                    var $6162 = self.ini;
                                                                                                                                    var $6163 = self.idx;
                                                                                                                                    var $6164 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6151, $6160), $6161, $6162, $6163, $6164);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $6166 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $6168 = self.err;
                                                                                                                                                    var self = $6166;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $6170 = self.value;
                                                                                                                                                            var $6171 = Parser$Reply$error$(Parser$Error$combine$($6170, $6168));
                                                                                                                                                            var $6169 = $6171;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $6172 = Parser$Reply$error$($6168);
                                                                                                                                                            var $6169 = $6172;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6167 = $6169;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $6173 = self.pst;
                                                                                                                                                    var $6174 = self.val;
                                                                                                                                                    var self = $6173;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $6176 = self.err;
                                                                                                                                                            var $6177 = self.nam;
                                                                                                                                                            var $6178 = self.ini;
                                                                                                                                                            var $6179 = self.idx;
                                                                                                                                                            var $6180 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($6166, $6176), $6177, $6178, $6179, $6180);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6182 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $6184 = self.err;
                                                                                                                                                                            var self = $6182;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $6186 = self.value;
                                                                                                                                                                                    var $6187 = Parser$Reply$error$(Parser$Error$combine$($6186, $6184));
                                                                                                                                                                                    var $6185 = $6187;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $6188 = Parser$Reply$error$($6184);
                                                                                                                                                                                    var $6185 = $6188;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6183 = $6185;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $6189 = self.pst;
                                                                                                                                                                            var self = $6189;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $6191 = self.err;
                                                                                                                                                                                    var $6192 = self.nam;
                                                                                                                                                                                    var $6193 = self.ini;
                                                                                                                                                                                    var $6194 = self.idx;
                                                                                                                                                                                    var $6195 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($6182, $6191), $6192, $6193, $6194, $6195);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6197 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $6199 = self.err;
                                                                                                                                                                                                    var self = $6197;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $6201 = self.value;
                                                                                                                                                                                                            var $6202 = Parser$Reply$error$(Parser$Error$combine$($6201, $6199));
                                                                                                                                                                                                            var $6200 = $6202;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $6203 = Parser$Reply$error$($6199);
                                                                                                                                                                                                            var $6200 = $6203;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6198 = $6200;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $6204 = self.pst;
                                                                                                                                                                                                    var $6205 = self.val;
                                                                                                                                                                                                    var self = $6204;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $6207 = self.err;
                                                                                                                                                                                                            var $6208 = self.nam;
                                                                                                                                                                                                            var $6209 = self.ini;
                                                                                                                                                                                                            var $6210 = self.idx;
                                                                                                                                                                                                            var $6211 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($6197, $6207), $6208, $6209, $6210, $6211);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $6213 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$do$statements$(_monad_name$1), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $6215 = self.err;
                                                                                                                                                                                                                            var self = $6213;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $6217 = self.value;
                                                                                                                                                                                                                                    var $6218 = Parser$Reply$error$(Parser$Error$combine$($6217, $6215));
                                                                                                                                                                                                                                    var $6216 = $6218;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $6219 = Parser$Reply$error$($6215);
                                                                                                                                                                                                                                    var $6216 = $6219;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6214 = $6216;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $6220 = self.pst;
                                                                                                                                                                                                                            var $6221 = self.val;
                                                                                                                                                                                                                            var self = $6220;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $6223 = self.err;
                                                                                                                                                                                                                                    var $6224 = self.nam;
                                                                                                                                                                                                                                    var $6225 = self.ini;
                                                                                                                                                                                                                                    var $6226 = self.idx;
                                                                                                                                                                                                                                    var $6227 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($6213, $6223), $6224, $6225, $6226, $6227);
                                                                                                                                                                                                                                    var _expr$129 = Kind$Term$ref$("Nat.for.io");
                                                                                                                                                                                                                                    var _expr$130 = Kind$Term$app$(_expr$129, $6143);
                                                                                                                                                                                                                                    var _expr$131 = Kind$Term$app$(_expr$130, $6174);
                                                                                                                                                                                                                                    var _expr$132 = Kind$Term$app$(_expr$131, Kind$Term$lam$($6112, (_x$132 => {
                                                                                                                                                                                                                                        var $6229 = $6205;
                                                                                                                                                                                                                                        return $6229;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var self = $6221;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                            var $6230 = self.value;
                                                                                                                                                                                                                                            var _term$134 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                                                                                                            var _term$135 = Kind$Term$app$(_term$134, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                                                                                                            var _term$136 = Kind$Term$app$(_term$135, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$137 = Kind$Term$app$(_term$136, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$138 = Kind$Term$app$(_term$137, _expr$132);
                                                                                                                                                                                                                                            var _term$139 = Kind$Term$app$(_term$138, Kind$Term$lam$("", (_x$139 => {
                                                                                                                                                                                                                                                var $6232 = $6230;
                                                                                                                                                                                                                                                return $6232;
                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                            var $6231 = (_pst$140 => {
                                                                                                                                                                                                                                                var $6233 = Parser$Reply$value$(_pst$140, _term$139);
                                                                                                                                                                                                                                                return $6233;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6228 = $6231;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                            var $6234 = (_pst$133 => {
                                                                                                                                                                                                                                                var $6235 = Parser$Reply$value$(_pst$133, _expr$132);
                                                                                                                                                                                                                                                return $6235;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6228 = $6234;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $6228 = $6228(_reply$pst$128);
                                                                                                                                                                                                                                    var $6222 = $6228;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6214 = $6222;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $6212 = $6214;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $6206 = $6212;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6198 = $6206;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $6196 = $6198;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6190 = $6196;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6183 = $6190;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6181 = $6183;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6175 = $6181;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6167 = $6175;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $6165 = $6167;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $6159 = $6165;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6152 = $6159;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $6150 = $6152;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6144 = $6150;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6136 = $6144;
                                                                                                    break;
                                                                                            };
                                                                                            var $6134 = $6136;
                                                                                            break;
                                                                                    };
                                                                                    var $6128 = $6134;
                                                                                    break;
                                                                            };
                                                                            var $6121 = $6128;
                                                                            break;
                                                                    };
                                                                    var $6119 = $6121;
                                                                    break;
                                                            };
                                                            var $6113 = $6119;
                                                            break;
                                                    };
                                                    var $6105 = $6113;
                                                    break;
                                            };
                                            var $6103 = $6105;
                                            break;
                                    };
                                    var $6097 = $6103;
                                    break;
                            };
                            var $6090 = $6097;
                            break;
                    };
                    var $6088 = $6090;
                    break;
            };
            return $6088;
        })), List$cons$(Kind$Parser$letforrange$u32$((_x$2 => {
            var $6236 = Kind$Parser$do$statements$(_monad_name$1);
            return $6236;
        })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$2 => {
            var $6237 = Kind$Parser$do$statements$(_monad_name$1);
            return $6237;
        })), List$cons$(Kind$Parser$letforrange$nat$((_x$2 => {
            var $6238 = Kind$Parser$do$statements$(_monad_name$1);
            return $6238;
        })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$2 => {
            var $6239 = Kind$Parser$do$statements$(_monad_name$1);
            return $6239;
        })), List$cons$(Kind$Parser$letforin$((_x$2 => {
            var $6240 = Kind$Parser$do$statements$(_monad_name$1);
            return $6240;
        })), List$cons$(Kind$Parser$letforin$with$((_x$2 => {
            var $6241 = Kind$Parser$do$statements$(_monad_name$1);
            return $6241;
        })), List$cons$(Kind$Parser$letwhile$((_x$2 => {
            var $6242 = Kind$Parser$do$statements$(_monad_name$1);
            return $6242;
        })), List$cons$(Kind$Parser$letwhile$with$((_x$2 => {
            var $6243 = Kind$Parser$do$statements$(_monad_name$1);
            return $6243;
        })), List$cons$(Kind$Parser$let$((_x$2 => {
            var $6244 = Kind$Parser$do$statements$(_monad_name$1);
            return $6244;
        })), List$cons$(Kind$Parser$getwhile$((_x$2 => {
            var $6245 = Kind$Parser$do$statements$(_monad_name$1);
            return $6245;
        })), List$cons$(Kind$Parser$getwhile$with((_x$2 => {
            var $6246 = Kind$Parser$do$statements$(_monad_name$1);
            return $6246;
        })), List$cons$(Kind$Parser$get$((_x$2 => {
            var $6247 = Kind$Parser$do$statements$(_monad_name$1);
            return $6247;
        })), List$cons$(Kind$Parser$def$((_x$2 => {
            var $6248 = Kind$Parser$do$statements$(_monad_name$1);
            return $6248;
        })), List$cons$(Kind$Parser$log$((_x$2 => {
            var $6249 = Kind$Parser$do$statements$(_monad_name$1);
            return $6249;
        })), List$cons$(Kind$Parser$open$((_x$2 => {
            var $6250 = Kind$Parser$do$statements$(_monad_name$1);
            return $6250;
        })), List$cons$(Kind$Parser$block("do-statement")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6252 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6254 = self.err;
                            var self = $6252;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6256 = self.value;
                                    var $6257 = Parser$Reply$error$(Parser$Error$combine$($6256, $6254));
                                    var $6255 = $6257;
                                    break;
                                case 'Maybe.none':
                                    var $6258 = Parser$Reply$error$($6254);
                                    var $6255 = $6258;
                                    break;
                            };
                            var $6253 = $6255;
                            break;
                        case 'Parser.Reply.value':
                            var $6259 = self.pst;
                            var $6260 = self.val;
                            var self = $6259;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6262 = self.err;
                                    var $6263 = self.nam;
                                    var $6264 = self.ini;
                                    var $6265 = self.idx;
                                    var $6266 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6252, $6262), $6263, $6264, $6265, $6266);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6268 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6270 = self.err;
                                                    var self = $6268;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6272 = self.value;
                                                            var $6273 = Parser$Reply$error$(Parser$Error$combine$($6272, $6270));
                                                            var $6271 = $6273;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6274 = Parser$Reply$error$($6270);
                                                            var $6271 = $6274;
                                                            break;
                                                    };
                                                    var $6269 = $6271;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6275 = self.pst;
                                                    var self = $6275;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6277 = self.err;
                                                            var $6278 = self.nam;
                                                            var $6279 = self.ini;
                                                            var $6280 = self.idx;
                                                            var $6281 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6268, $6277), $6278, $6279, $6280, $6281);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6283 = self.err;
                                                                    var _reply$36 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6285 = self.err;
                                                                            var self = $6283;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6287 = self.value;
                                                                                    var $6288 = Parser$Reply$error$(Parser$Error$combine$($6287, $6285));
                                                                                    var $6286 = $6288;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6289 = Parser$Reply$error$($6285);
                                                                                    var $6286 = $6289;
                                                                                    break;
                                                                            };
                                                                            var $6284 = $6286;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6290 = self.pst;
                                                                            var $6291 = self.val;
                                                                            var self = $6290;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6293 = self.err;
                                                                                    var $6294 = self.nam;
                                                                                    var $6295 = self.ini;
                                                                                    var $6296 = self.idx;
                                                                                    var $6297 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6283, $6293), $6294, $6295, $6296, $6297);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, Kind$Term$hol$(Bits$e));
                                                                                    var _term$49 = Kind$Term$app$(_term$48, $6260);
                                                                                    var _term$50 = Kind$Term$app$(_term$49, Kind$Term$lam$("", (_x$50 => {
                                                                                        var $6299 = $6291;
                                                                                        return $6299;
                                                                                    })));
                                                                                    var $6298 = Parser$Reply$value$(_reply$pst$44, _term$50);
                                                                                    var $6292 = $6298;
                                                                                    break;
                                                                            };
                                                                            var $6284 = $6292;
                                                                            break;
                                                                    };
                                                                    var $6282 = $6284;
                                                                    break;
                                                            };
                                                            var $6276 = $6282;
                                                            break;
                                                    };
                                                    var $6269 = $6276;
                                                    break;
                                            };
                                            var $6267 = $6269;
                                            break;
                                    };
                                    var $6261 = $6267;
                                    break;
                            };
                            var $6253 = $6261;
                            break;
                    };
                    var $6251 = $6253;
                    break;
            };
            return $6251;
        })), List$cons$(Kind$Parser$block("do-end")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6301 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6303 = self.err;
                            var self = $6301;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6305 = self.value;
                                    var $6306 = Parser$Reply$error$(Parser$Error$combine$($6305, $6303));
                                    var $6304 = $6306;
                                    break;
                                case 'Maybe.none':
                                    var $6307 = Parser$Reply$error$($6303);
                                    var $6304 = $6307;
                                    break;
                            };
                            var $6302 = $6304;
                            break;
                        case 'Parser.Reply.value':
                            var $6308 = self.pst;
                            var $6309 = self.val;
                            var self = $6308;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6311 = self.err;
                                    var $6312 = self.nam;
                                    var $6313 = self.ini;
                                    var $6314 = self.idx;
                                    var $6315 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6301, $6311), $6312, $6313, $6314, $6315);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6317 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6319 = self.err;
                                                    var self = $6317;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6321 = self.value;
                                                            var $6322 = Parser$Reply$error$(Parser$Error$combine$($6321, $6319));
                                                            var $6320 = $6322;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6323 = Parser$Reply$error$($6319);
                                                            var $6320 = $6323;
                                                            break;
                                                    };
                                                    var $6318 = $6320;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6324 = self.pst;
                                                    var self = $6324;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6326 = self.err;
                                                            var $6327 = self.nam;
                                                            var $6328 = self.ini;
                                                            var $6329 = self.idx;
                                                            var $6330 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6317, $6326), $6327, $6328, $6329, $6330);
                                                            var $6331 = Parser$Reply$value$(_reply$pst$30, $6309);
                                                            var $6325 = $6331;
                                                            break;
                                                    };
                                                    var $6318 = $6325;
                                                    break;
                                            };
                                            var $6316 = $6318;
                                            break;
                                    };
                                    var $6310 = $6316;
                                    break;
                            };
                            var $6302 = $6310;
                            break;
                    };
                    var $6300 = $6302;
                    break;
            };
            return $6300;
        })), List$nil)))))))))))))))))))));
        return $5945;
    };
    const Kind$Parser$do$statements = x0 => Kind$Parser$do$statements$(x0);
    const Kind$Parser$do = Kind$Parser$block("do")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6333 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$text("do "), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6335 = self.err;
                        var self = $6333;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6337 = self.value;
                                var $6338 = Parser$Reply$error$(Parser$Error$combine$($6337, $6335));
                                var $6336 = $6338;
                                break;
                            case 'Maybe.none':
                                var $6339 = Parser$Reply$error$($6335);
                                var $6336 = $6339;
                                break;
                        };
                        var $6334 = $6336;
                        break;
                    case 'Parser.Reply.value':
                        var $6340 = self.pst;
                        var self = $6340;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6342 = self.err;
                                var $6343 = self.nam;
                                var $6344 = self.ini;
                                var $6345 = self.idx;
                                var $6346 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6333, $6342), $6343, $6344, $6345, $6346);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6348 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6350 = self.err;
                                                var self = $6348;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6352 = self.value;
                                                        var $6353 = Parser$Reply$error$(Parser$Error$combine$($6352, $6350));
                                                        var $6351 = $6353;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6354 = Parser$Reply$error$($6350);
                                                        var $6351 = $6354;
                                                        break;
                                                };
                                                var $6349 = $6351;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6355 = self.pst;
                                                var $6356 = self.val;
                                                var self = $6355;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6358 = self.err;
                                                        var $6359 = self.nam;
                                                        var $6360 = self.ini;
                                                        var $6361 = self.idx;
                                                        var $6362 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6348, $6358), $6359, $6360, $6361, $6362);
                                                        var self = String$is_upper$(String$slice$(0n, 1n, $6356));
                                                        if (self) {
                                                            var $6364 = (_pst$30 => {
                                                                var self = _pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6366 = self.err;
                                                                        var _reply$36 = Parser$text$(" {", _pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6368 = self.err;
                                                                                var self = $6366;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6370 = self.value;
                                                                                        var $6371 = Parser$Reply$error$(Parser$Error$combine$($6370, $6368));
                                                                                        var $6369 = $6371;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6372 = Parser$Reply$error$($6368);
                                                                                        var $6369 = $6372;
                                                                                        break;
                                                                                };
                                                                                var $6367 = $6369;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6373 = self.pst;
                                                                                var self = $6373;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6375 = self.err;
                                                                                        var $6376 = self.nam;
                                                                                        var $6377 = self.ini;
                                                                                        var $6378 = self.idx;
                                                                                        var $6379 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6366, $6375), $6376, $6377, $6378, $6379);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6381 = self.err;
                                                                                                var _reply$50 = Kind$Parser$do$statements$($6356)(_reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6383 = self.err;
                                                                                                        var self = $6381;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6385 = self.value;
                                                                                                                var $6386 = Parser$Reply$error$(Parser$Error$combine$($6385, $6383));
                                                                                                                var $6384 = $6386;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6387 = Parser$Reply$error$($6383);
                                                                                                                var $6384 = $6387;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6382 = $6384;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6388 = self.pst;
                                                                                                        var $6389 = self.val;
                                                                                                        var self = $6388;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6391 = self.err;
                                                                                                                var $6392 = self.nam;
                                                                                                                var $6393 = self.ini;
                                                                                                                var $6394 = self.idx;
                                                                                                                var $6395 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6381, $6391), $6392, $6393, $6394, $6395);
                                                                                                                var self = _reply$pst$58;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6397 = self.err;
                                                                                                                        var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                        var self = _reply$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                var $6399 = self.err;
                                                                                                                                var self = $6397;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Maybe.some':
                                                                                                                                        var $6401 = self.value;
                                                                                                                                        var $6402 = Parser$Reply$error$(Parser$Error$combine$($6401, $6399));
                                                                                                                                        var $6400 = $6402;
                                                                                                                                        break;
                                                                                                                                    case 'Maybe.none':
                                                                                                                                        var $6403 = Parser$Reply$error$($6399);
                                                                                                                                        var $6400 = $6403;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6398 = $6400;
                                                                                                                                break;
                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                var $6404 = self.pst;
                                                                                                                                var self = $6404;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6406 = self.err;
                                                                                                                                        var $6407 = self.nam;
                                                                                                                                        var $6408 = self.ini;
                                                                                                                                        var $6409 = self.idx;
                                                                                                                                        var $6410 = self.str;
                                                                                                                                        var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6397, $6406), $6407, $6408, $6409, $6410);
                                                                                                                                        var $6411 = Parser$Reply$value$(_reply$pst$72, $6389);
                                                                                                                                        var $6405 = $6411;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6398 = $6405;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6396 = $6398;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6390 = $6396;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6382 = $6390;
                                                                                                        break;
                                                                                                };
                                                                                                var $6380 = $6382;
                                                                                                break;
                                                                                        };
                                                                                        var $6374 = $6380;
                                                                                        break;
                                                                                };
                                                                                var $6367 = $6374;
                                                                                break;
                                                                        };
                                                                        var $6365 = $6367;
                                                                        break;
                                                                };
                                                                return $6365;
                                                            });
                                                            var $6363 = $6364;
                                                        } else {
                                                            var $6412 = Parser$fail("Not a do-block.");
                                                            var $6363 = $6412;
                                                        };
                                                        var $6363 = $6363(_reply$pst$29);
                                                        var $6357 = $6363;
                                                        break;
                                                };
                                                var $6349 = $6357;
                                                break;
                                        };
                                        var $6347 = $6349;
                                        break;
                                };
                                var $6341 = $6347;
                                break;
                        };
                        var $6334 = $6341;
                        break;
                };
                var $6332 = $6334;
                break;
        };
        return $6332;
    }));

    function Parser$try$(_parse$2, _pst$3) {
        var self = _parse$2(_pst$3);
        switch (self._) {
            case 'Parser.Reply.error':
                var $6414 = Parser$Reply$value$(_pst$3, Bool$false);
                var $6413 = $6414;
                break;
            case 'Parser.Reply.value':
                var $6415 = Parser$Reply$value$(_pst$3, Bool$true);
                var $6413 = $6415;
                break;
        };
        return $6413;
    };
    const Parser$try = x0 => x1 => Parser$try$(x0, x1);

    function Parser$avoiding$(_test$2, _parse$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $6417 = self.err;
                var _reply$10 = Parser$try$(_test$2, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6419 = self.err;
                        var self = $6417;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6421 = self.value;
                                var $6422 = Parser$Reply$error$(Parser$Error$combine$($6421, $6419));
                                var $6420 = $6422;
                                break;
                            case 'Maybe.none':
                                var $6423 = Parser$Reply$error$($6419);
                                var $6420 = $6423;
                                break;
                        };
                        var $6418 = $6420;
                        break;
                    case 'Parser.Reply.value':
                        var $6424 = self.pst;
                        var $6425 = self.val;
                        var self = $6424;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6427 = self.err;
                                var $6428 = self.nam;
                                var $6429 = self.ini;
                                var $6430 = self.idx;
                                var $6431 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($6417, $6427), $6428, $6429, $6430, $6431);
                                var self = $6425;
                                if (self) {
                                    var $6433 = Parser$fail("Avoided.");
                                    var $6432 = $6433;
                                } else {
                                    var $6434 = _parse$3;
                                    var $6432 = $6434;
                                };
                                var $6432 = $6432(_reply$pst$18);
                                var $6426 = $6432;
                                break;
                        };
                        var $6418 = $6426;
                        break;
                };
                var $6416 = $6418;
                break;
        };
        return $6416;
    };
    const Parser$avoiding = x0 => x1 => x2 => Parser$avoiding$(x0, x1, x2);

    function Kind$Term$extract_name$(_term$1) {
        var _term$2 = Kind$Term$reduce$(_term$1, Kind$Map$new);
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
                var $6436 = self.name;
                var $6437 = $6436;
                var $6435 = $6437;
                break;
            case 'Kind.Term.ref':
                var $6438 = self.name;
                var $6439 = $6438;
                var $6435 = $6439;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $6440 = "self";
                var $6435 = $6440;
                break;
        };
        return $6435;
    };
    const Kind$Term$extract_name = x0 => Kind$Term$extract_name$(x0);

    function Kind$Ann$new$(_name$1, _term$2, _type$3) {
        var $6441 = ({
            _: 'Kind.Ann.new',
            'name': _name$1,
            'term': _term$2,
            'type': _type$3
        });
        return $6441;
    };
    const Kind$Ann$new = x0 => x1 => x2 => Kind$Ann$new$(x0, x1, x2);
    const Kind$Parser$case$with = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6443 = self.err;
                var _reply$7 = Kind$Parser$text$("with ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6445 = self.err;
                        var self = $6443;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6447 = self.value;
                                var $6448 = Parser$Reply$error$(Parser$Error$combine$($6447, $6445));
                                var $6446 = $6448;
                                break;
                            case 'Maybe.none':
                                var $6449 = Parser$Reply$error$($6445);
                                var $6446 = $6449;
                                break;
                        };
                        var $6444 = $6446;
                        break;
                    case 'Parser.Reply.value':
                        var $6450 = self.pst;
                        var self = $6450;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6452 = self.err;
                                var $6453 = self.nam;
                                var $6454 = self.ini;
                                var $6455 = self.idx;
                                var $6456 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6443, $6452), $6453, $6454, $6455, $6456);
                                var $6457 = Parser$many$((_pst$16 => {
                                    var self = _pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6459 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6461 = self.err;
                                                    var self = $6459;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6463 = self.value;
                                                            var $6464 = Parser$Reply$error$(Parser$Error$combine$($6463, $6461));
                                                            var $6462 = $6464;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6465 = Parser$Reply$error$($6461);
                                                            var $6462 = $6465;
                                                            break;
                                                    };
                                                    var $6460 = $6462;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6466 = self.pst;
                                                    var $6467 = self.val;
                                                    var self = $6466;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6469 = self.err;
                                                            var $6470 = self.nam;
                                                            var $6471 = self.ini;
                                                            var $6472 = self.idx;
                                                            var $6473 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6459, $6469), $6470, $6471, $6472, $6473);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6475 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6478 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$(":", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $6480 = self.err;
                                                                                        var self = $6478;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $6482 = self.value;
                                                                                                var $6483 = Parser$Reply$error$(Parser$Error$combine$($6482, $6480));
                                                                                                var $6481 = $6483;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $6484 = Parser$Reply$error$($6480);
                                                                                                var $6481 = $6484;
                                                                                                break;
                                                                                        };
                                                                                        var $6479 = $6481;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $6485 = self.pst;
                                                                                        var self = $6485;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6487 = self.err;
                                                                                                var $6488 = self.nam;
                                                                                                var $6489 = self.ini;
                                                                                                var $6490 = self.idx;
                                                                                                var $6491 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($6478, $6487), $6488, $6489, $6490, $6491);
                                                                                                var self = _reply$pst$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6493 = self.err;
                                                                                                        var _reply$56 = Kind$Parser$term(_reply$pst$50);
                                                                                                        var self = _reply$56;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.Reply.error':
                                                                                                                var $6495 = self.err;
                                                                                                                var self = $6493;
                                                                                                                switch (self._) {
                                                                                                                    case 'Maybe.some':
                                                                                                                        var $6497 = self.value;
                                                                                                                        var $6498 = Parser$Reply$error$(Parser$Error$combine$($6497, $6495));
                                                                                                                        var $6496 = $6498;
                                                                                                                        break;
                                                                                                                    case 'Maybe.none':
                                                                                                                        var $6499 = Parser$Reply$error$($6495);
                                                                                                                        var $6496 = $6499;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6494 = $6496;
                                                                                                                break;
                                                                                                            case 'Parser.Reply.value':
                                                                                                                var $6500 = self.pst;
                                                                                                                var $6501 = self.val;
                                                                                                                var self = $6500;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6503 = self.err;
                                                                                                                        var $6504 = self.nam;
                                                                                                                        var $6505 = self.ini;
                                                                                                                        var $6506 = self.idx;
                                                                                                                        var $6507 = self.str;
                                                                                                                        var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($6493, $6503), $6504, $6505, $6506, $6507);
                                                                                                                        var self = _reply$pst$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6509 = self.err;
                                                                                                                                var _reply$70 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$64);
                                                                                                                                var self = _reply$70;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                        var $6511 = self.err;
                                                                                                                                        var self = $6509;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Maybe.some':
                                                                                                                                                var $6513 = self.value;
                                                                                                                                                var $6514 = Parser$Reply$error$(Parser$Error$combine$($6513, $6511));
                                                                                                                                                var $6512 = $6514;
                                                                                                                                                break;
                                                                                                                                            case 'Maybe.none':
                                                                                                                                                var $6515 = Parser$Reply$error$($6511);
                                                                                                                                                var $6512 = $6515;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6510 = $6512;
                                                                                                                                        break;
                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                        var $6516 = self.pst;
                                                                                                                                        var self = $6516;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                var $6518 = self.err;
                                                                                                                                                var $6519 = self.nam;
                                                                                                                                                var $6520 = self.ini;
                                                                                                                                                var $6521 = self.idx;
                                                                                                                                                var $6522 = self.str;
                                                                                                                                                var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($6509, $6518), $6519, $6520, $6521, $6522);
                                                                                                                                                var $6523 = Parser$Reply$value$(_reply$pst$78, $6501);
                                                                                                                                                var $6517 = $6523;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6510 = $6517;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6508 = $6510;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6502 = $6508;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6494 = $6502;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6492 = $6494;
                                                                                                        break;
                                                                                                };
                                                                                                var $6486 = $6492;
                                                                                                break;
                                                                                        };
                                                                                        var $6479 = $6486;
                                                                                        break;
                                                                                };
                                                                                var $6477 = $6479;
                                                                                break;
                                                                        };
                                                                        return $6477;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6524 = self.err;
                                                                            var self = $6475;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6526 = self.value;
                                                                                    var $6527 = Parser$Reply$error$(Parser$Error$combine$($6526, $6524));
                                                                                    var $6525 = $6527;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6528 = Parser$Reply$error$($6524);
                                                                                    var $6525 = $6528;
                                                                                    break;
                                                                            };
                                                                            var $6476 = $6525;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6529 = self.pst;
                                                                            var $6530 = self.val;
                                                                            var self = $6529;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6532 = self.err;
                                                                                    var $6533 = self.nam;
                                                                                    var $6534 = self.ini;
                                                                                    var $6535 = self.idx;
                                                                                    var $6536 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6475, $6532), $6533, $6534, $6535, $6536);
                                                                                    var $6537 = Parser$Reply$value$(_reply$pst$44, Kind$Ann$new$($6467, Kind$Term$ref$($6467), $6530));
                                                                                    var $6531 = $6537;
                                                                                    break;
                                                                            };
                                                                            var $6476 = $6531;
                                                                            break;
                                                                    };
                                                                    var $6474 = $6476;
                                                                    break;
                                                            };
                                                            var $6468 = $6474;
                                                            break;
                                                    };
                                                    var $6460 = $6468;
                                                    break;
                                            };
                                            var $6458 = $6460;
                                            break;
                                    };
                                    return $6458;
                                }))(_reply$pst$15);
                                var $6451 = $6457;
                                break;
                        };
                        var $6444 = $6451;
                        break;
                };
                var $6442 = $6444;
                break;
        };
        return $6442;
    }), List$cons$((_pst$1 => {
        var $6538 = Parser$Reply$value$(_pst$1, List$nil);
        return $6538;
    }), List$nil)));

    function Kind$Parser$case$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6540 = self.err;
                var _reply$7 = Parser$try$(Kind$Parser$text(":"), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6542 = self.err;
                        var self = $6540;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6544 = self.value;
                                var $6545 = Parser$Reply$error$(Parser$Error$combine$($6544, $6542));
                                var $6543 = $6545;
                                break;
                            case 'Maybe.none':
                                var $6546 = Parser$Reply$error$($6542);
                                var $6543 = $6546;
                                break;
                        };
                        var $6541 = $6543;
                        break;
                    case 'Parser.Reply.value':
                        var $6547 = self.pst;
                        var $6548 = self.val;
                        var self = $6547;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6550 = self.err;
                                var $6551 = self.nam;
                                var $6552 = self.ini;
                                var $6553 = self.idx;
                                var $6554 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6540, $6550), $6551, $6552, $6553, $6554);
                                var self = $6548;
                                if (self) {
                                    var $6556 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6558 = self.err;
                                                var _reply$22 = Kind$Parser$spaces(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6560 = self.err;
                                                        var self = $6558;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6562 = self.value;
                                                                var $6563 = Parser$Reply$error$(Parser$Error$combine$($6562, $6560));
                                                                var $6561 = $6563;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6564 = Parser$Reply$error$($6560);
                                                                var $6561 = $6564;
                                                                break;
                                                        };
                                                        var $6559 = $6561;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6565 = self.pst;
                                                        var self = $6565;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6567 = self.err;
                                                                var $6568 = self.nam;
                                                                var $6569 = self.ini;
                                                                var $6570 = self.idx;
                                                                var $6571 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6558, $6567), $6568, $6569, $6570, $6571);
                                                                var $6572 = Parser$fail$("Expected constructor names.", _reply$pst$30);
                                                                var $6566 = $6572;
                                                                break;
                                                        };
                                                        var $6559 = $6566;
                                                        break;
                                                };
                                                var $6557 = $6559;
                                                break;
                                        };
                                        return $6557;
                                    });
                                    var $6555 = $6556;
                                } else {
                                    var $6573 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6575 = self.err;
                                                var _reply$22 = Parser$until$(Kind$Parser$text(":"), Kind$Parser$name1)(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6577 = self.err;
                                                        var self = $6575;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6579 = self.value;
                                                                var $6580 = Parser$Reply$error$(Parser$Error$combine$($6579, $6577));
                                                                var $6578 = $6580;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6581 = Parser$Reply$error$($6577);
                                                                var $6578 = $6581;
                                                                break;
                                                        };
                                                        var $6576 = $6578;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6582 = self.pst;
                                                        var $6583 = self.val;
                                                        var self = $6582;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6585 = self.err;
                                                                var $6586 = self.nam;
                                                                var $6587 = self.ini;
                                                                var $6588 = self.idx;
                                                                var $6589 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6575, $6585), $6586, $6587, $6588, $6589);
                                                                var self = _reply$pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6591 = self.err;
                                                                        var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6593 = self.err;
                                                                                var self = $6591;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6595 = self.value;
                                                                                        var $6596 = Parser$Reply$error$(Parser$Error$combine$($6595, $6593));
                                                                                        var $6594 = $6596;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6597 = Parser$Reply$error$($6593);
                                                                                        var $6594 = $6597;
                                                                                        break;
                                                                                };
                                                                                var $6592 = $6594;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6598 = self.pst;
                                                                                var $6599 = self.val;
                                                                                var self = $6598;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6601 = self.err;
                                                                                        var $6602 = self.nam;
                                                                                        var $6603 = self.ini;
                                                                                        var $6604 = self.idx;
                                                                                        var $6605 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6591, $6601), $6602, $6603, $6604, $6605);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6607 = self.err;
                                                                                                var _reply$50 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6609 = self.err;
                                                                                                        var self = $6607;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6611 = self.value;
                                                                                                                var $6612 = Parser$Reply$error$(Parser$Error$combine$($6611, $6609));
                                                                                                                var $6610 = $6612;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6613 = Parser$Reply$error$($6609);
                                                                                                                var $6610 = $6613;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6608 = $6610;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6614 = self.pst;
                                                                                                        var self = $6614;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6616 = self.err;
                                                                                                                var $6617 = self.nam;
                                                                                                                var $6618 = self.ini;
                                                                                                                var $6619 = self.idx;
                                                                                                                var $6620 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6607, $6616), $6617, $6618, $6619, $6620);
                                                                                                                var $6621 = Parser$Reply$value$(_reply$pst$58, Pair$new$($6583, $6599));
                                                                                                                var $6615 = $6621;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6608 = $6615;
                                                                                                        break;
                                                                                                };
                                                                                                var $6606 = $6608;
                                                                                                break;
                                                                                        };
                                                                                        var $6600 = $6606;
                                                                                        break;
                                                                                };
                                                                                var $6592 = $6600;
                                                                                break;
                                                                        };
                                                                        var $6590 = $6592;
                                                                        break;
                                                                };
                                                                var $6584 = $6590;
                                                                break;
                                                        };
                                                        var $6576 = $6584;
                                                        break;
                                                };
                                                var $6574 = $6576;
                                                break;
                                        };
                                        return $6574;
                                    });
                                    var $6555 = $6573;
                                };
                                var $6555 = $6555(_reply$pst$15);
                                var $6549 = $6555;
                                break;
                        };
                        var $6541 = $6549;
                        break;
                };
                var $6539 = $6541;
                break;
        };
        return $6539;
    };
    const Kind$Parser$case$case = x0 => Kind$Parser$case$case$(x0);

    function Parser$append_error$(_parse$2, _msg$3, _pst$4) {
        var _reply$5 = _parse$2(_pst$4);
        var self = _reply$5;
        switch (self._) {
            case 'Parser.Reply.error':
                var $6623 = self.err;
                var self = $6623;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $6625 = self.nam;
                        var $6626 = self.ini;
                        var $6627 = self.idx;
                        var $6628 = self.msg;
                        var $6629 = Parser$Reply$fail$($6625, $6626, $6627, ($6628 + _msg$3));
                        var $6624 = $6629;
                        break;
                };
                var $6622 = $6624;
                break;
            case 'Parser.Reply.value':
                var $6630 = _reply$5;
                var $6622 = $6630;
                break;
        };
        return $6622;
    };
    const Parser$append_error = x0 => x1 => x2 => Parser$append_error$(x0, x1, x2);

    function Kind$Parser$case$group$(_dflt$1, _cses$2) {
        var self = _cses$2;
        switch (self._) {
            case 'List.cons':
                var $6632 = self.head;
                var $6633 = self.tail;
                var _map$5 = Kind$Parser$case$group$(_dflt$1, $6633);
                var self = $6632;
                switch (self._) {
                    case 'Pair.new':
                        var $6635 = self.fst;
                        var $6636 = self.snd;
                        var self = $6635;
                        switch (self._) {
                            case 'List.cons':
                                var $6638 = self.head;
                                var $6639 = self.tail;
                                var _rest$10 = Maybe$default$(Kind$Map$get$($6638, _map$5), List$nil);
                                var $6640 = Kind$Map$set$($6638, List$cons$(Pair$new$($6639, $6636), _rest$10), _map$5);
                                var $6637 = $6640;
                                break;
                            case 'List.nil':
                                var $6641 = _map$5;
                                var $6637 = $6641;
                                break;
                        };
                        var $6634 = $6637;
                        break;
                };
                var $6631 = $6634;
                break;
            case 'List.nil':
                var self = _dflt$1;
                switch (self._) {
                    case 'Maybe.some':
                        var $6643 = self.value;
                        var $6644 = Kind$Map$set$("_", List$cons$(Pair$new$(List$nil, $6643), List$nil), Kind$Map$new);
                        var $6642 = $6644;
                        break;
                    case 'Maybe.none':
                        var $6645 = Kind$Map$new;
                        var $6642 = $6645;
                        break;
                };
                var $6631 = $6642;
                break;
        };
        return $6631;
    };
    const Kind$Parser$case$group = x0 => x1 => Kind$Parser$case$group$(x0, x1);

    function BitsMap$map$(_fn$3, _map$4) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $6647 = self.val;
                var $6648 = self.lft;
                var $6649 = self.rgt;
                var self = $6647;
                switch (self._) {
                    case 'Maybe.some':
                        var $6651 = self.value;
                        var $6652 = Maybe$some$(_fn$3($6651));
                        var _val$8 = $6652;
                        break;
                    case 'Maybe.none':
                        var $6653 = Maybe$none;
                        var _val$8 = $6653;
                        break;
                };
                var _lft$9 = BitsMap$map$(_fn$3, $6648);
                var _rgt$10 = BitsMap$map$(_fn$3, $6649);
                var $6650 = BitsMap$tie$(_val$8, _lft$9, _rgt$10);
                var $6646 = $6650;
                break;
            case 'BitsMap.new':
                var $6654 = BitsMap$new;
                var $6646 = $6654;
                break;
        };
        return $6646;
    };
    const BitsMap$map = x0 => x1 => BitsMap$map$(x0, x1);

    function Kind$Map$map$(_fn$3, _map$4) {
        var $6655 = BitsMap$map$(_fn$3, _map$4);
        return $6655;
    };
    const Kind$Map$map = x0 => x1 => Kind$Map$map$(x0, x1);

    function Kind$Parser$case$build$(_vals$1, _wyth$2, _cses$3, _dflt$4, _moti$5) {
        var self = _vals$1;
        switch (self._) {
            case 'List.cons':
                var $6657 = self.head;
                var $6658 = self.tail;
                var _group$8 = Kind$Parser$case$group$(_dflt$4, _cses$3);
                var _name$9 = Pair$fst$($6657);
                var _expr$10 = Pair$snd$($6657);
                var _cses$11 = Kind$Map$map$((_cses$11 => {
                    var $6660 = Kind$Parser$case$build$($6658, _wyth$2, _cses$11, _dflt$4, _moti$5);
                    return $6660;
                }), _group$8);
                var $6659 = Kind$Term$cse$(Bits$e, _expr$10, _name$9, _wyth$2, _cses$11, _moti$5);
                var $6656 = $6659;
                break;
            case 'List.nil':
                var self = _cses$3;
                switch (self._) {
                    case 'List.cons':
                        var $6662 = self.head;
                        var $6663 = Pair$snd$($6662);
                        var $6661 = $6663;
                        break;
                    case 'List.nil':
                        var $6664 = Kind$Term$ref$("missing_case");
                        var $6661 = $6664;
                        break;
                };
                var $6656 = $6661;
                break;
        };
        return $6656;
    };
    const Kind$Parser$case$build = x0 => x1 => x2 => x3 => x4 => Kind$Parser$case$build$(x0, x1, x2, x3, x4);
    const Kind$Parser$case = Kind$Parser$block("case")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6666 = self.err;
                var _reply$7 = Kind$Parser$text$("case ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6668 = self.err;
                        var self = $6666;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6670 = self.value;
                                var $6671 = Parser$Reply$error$(Parser$Error$combine$($6670, $6668));
                                var $6669 = $6671;
                                break;
                            case 'Maybe.none':
                                var $6672 = Parser$Reply$error$($6668);
                                var $6669 = $6672;
                                break;
                        };
                        var $6667 = $6669;
                        break;
                    case 'Parser.Reply.value':
                        var $6673 = self.pst;
                        var self = $6673;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6675 = self.err;
                                var $6676 = self.nam;
                                var $6677 = self.ini;
                                var $6678 = self.idx;
                                var $6679 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6666, $6675), $6676, $6677, $6678, $6679);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6681 = self.err;
                                        var _reply$21 = Parser$many1$((_pst$21 => {
                                            var self = _pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $6684 = self.err;
                                                    var _reply$27 = Parser$avoiding$(Kind$Parser$text("{"), Kind$Parser$term, _pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $6686 = self.err;
                                                            var self = $6684;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $6688 = self.value;
                                                                    var $6689 = Parser$Reply$error$(Parser$Error$combine$($6688, $6686));
                                                                    var $6687 = $6689;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $6690 = Parser$Reply$error$($6686);
                                                                    var $6687 = $6690;
                                                                    break;
                                                            };
                                                            var $6685 = $6687;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $6691 = self.pst;
                                                            var $6692 = self.val;
                                                            var self = $6691;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6694 = self.err;
                                                                    var $6695 = self.nam;
                                                                    var $6696 = self.ini;
                                                                    var $6697 = self.idx;
                                                                    var $6698 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($6684, $6694), $6695, $6696, $6697, $6698);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6700 = self.err;
                                                                            var _reply$41 = Parser$maybe$((_pst$41 => {
                                                                                var self = _pst$41;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6703 = self.err;
                                                                                        var _reply$47 = Kind$Parser$text$("as", _pst$41);
                                                                                        var self = _reply$47;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6705 = self.err;
                                                                                                var self = $6703;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6707 = self.value;
                                                                                                        var $6708 = Parser$Reply$error$(Parser$Error$combine$($6707, $6705));
                                                                                                        var $6706 = $6708;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6709 = Parser$Reply$error$($6705);
                                                                                                        var $6706 = $6709;
                                                                                                        break;
                                                                                                };
                                                                                                var $6704 = $6706;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6710 = self.pst;
                                                                                                var self = $6710;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6712 = self.err;
                                                                                                        var $6713 = self.nam;
                                                                                                        var $6714 = self.ini;
                                                                                                        var $6715 = self.idx;
                                                                                                        var $6716 = self.str;
                                                                                                        var _reply$pst$55 = Parser$State$new$(Parser$Error$maybe_combine$($6703, $6712), $6713, $6714, $6715, $6716);
                                                                                                        var self = _reply$pst$55;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6718 = self.err;
                                                                                                                var _reply$61 = Kind$Parser$name1$(_reply$pst$55);
                                                                                                                var self = _reply$61;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6720 = self.err;
                                                                                                                        var self = $6718;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6722 = self.value;
                                                                                                                                var $6723 = Parser$Reply$error$(Parser$Error$combine$($6722, $6720));
                                                                                                                                var $6721 = $6723;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6724 = Parser$Reply$error$($6720);
                                                                                                                                var $6721 = $6724;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6719 = $6721;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6725 = self.pst;
                                                                                                                        var $6726 = self.val;
                                                                                                                        var self = $6725;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6728 = self.err;
                                                                                                                                var $6729 = self.nam;
                                                                                                                                var $6730 = self.ini;
                                                                                                                                var $6731 = self.idx;
                                                                                                                                var $6732 = self.str;
                                                                                                                                var _reply$pst$69 = Parser$State$new$(Parser$Error$maybe_combine$($6718, $6728), $6729, $6730, $6731, $6732);
                                                                                                                                var self = _reply$pst$69;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6734 = self.err;
                                                                                                                                        var _reply$75 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$69);
                                                                                                                                        var self = _reply$75;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6736 = self.err;
                                                                                                                                                var self = $6734;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6738 = self.value;
                                                                                                                                                        var $6739 = Parser$Reply$error$(Parser$Error$combine$($6738, $6736));
                                                                                                                                                        var $6737 = $6739;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6740 = Parser$Reply$error$($6736);
                                                                                                                                                        var $6737 = $6740;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6735 = $6737;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6741 = self.pst;
                                                                                                                                                var self = $6741;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6743 = self.err;
                                                                                                                                                        var $6744 = self.nam;
                                                                                                                                                        var $6745 = self.ini;
                                                                                                                                                        var $6746 = self.idx;
                                                                                                                                                        var $6747 = self.str;
                                                                                                                                                        var _reply$pst$83 = Parser$State$new$(Parser$Error$maybe_combine$($6734, $6743), $6744, $6745, $6746, $6747);
                                                                                                                                                        var $6748 = Parser$Reply$value$(_reply$pst$83, $6726);
                                                                                                                                                        var $6742 = $6748;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6735 = $6742;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6733 = $6735;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6727 = $6733;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6719 = $6727;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6717 = $6719;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6711 = $6717;
                                                                                                        break;
                                                                                                };
                                                                                                var $6704 = $6711;
                                                                                                break;
                                                                                        };
                                                                                        var $6702 = $6704;
                                                                                        break;
                                                                                };
                                                                                return $6702;
                                                                            }), _reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6749 = self.err;
                                                                                    var self = $6700;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6751 = self.value;
                                                                                            var $6752 = Parser$Reply$error$(Parser$Error$combine$($6751, $6749));
                                                                                            var $6750 = $6752;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6753 = Parser$Reply$error$($6749);
                                                                                            var $6750 = $6753;
                                                                                            break;
                                                                                    };
                                                                                    var $6701 = $6750;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6754 = self.pst;
                                                                                    var $6755 = self.val;
                                                                                    var self = $6754;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6757 = self.err;
                                                                                            var $6758 = self.nam;
                                                                                            var $6759 = self.ini;
                                                                                            var $6760 = self.idx;
                                                                                            var $6761 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6700, $6757), $6758, $6759, $6760, $6761);
                                                                                            var _name$50 = Maybe$default$($6755, Kind$Term$extract_name$($6692));
                                                                                            var $6762 = Parser$Reply$value$(_reply$pst$49, Pair$new$(_name$50, $6692));
                                                                                            var $6756 = $6762;
                                                                                            break;
                                                                                    };
                                                                                    var $6701 = $6756;
                                                                                    break;
                                                                            };
                                                                            var $6699 = $6701;
                                                                            break;
                                                                    };
                                                                    var $6693 = $6699;
                                                                    break;
                                                            };
                                                            var $6685 = $6693;
                                                            break;
                                                    };
                                                    var $6683 = $6685;
                                                    break;
                                            };
                                            return $6683;
                                        }), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6763 = self.err;
                                                var self = $6681;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6765 = self.value;
                                                        var $6766 = Parser$Reply$error$(Parser$Error$combine$($6765, $6763));
                                                        var $6764 = $6766;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6767 = Parser$Reply$error$($6763);
                                                        var $6764 = $6767;
                                                        break;
                                                };
                                                var $6682 = $6764;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6768 = self.pst;
                                                var $6769 = self.val;
                                                var self = $6768;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6771 = self.err;
                                                        var $6772 = self.nam;
                                                        var $6773 = self.ini;
                                                        var $6774 = self.idx;
                                                        var $6775 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6681, $6771), $6772, $6773, $6774, $6775);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6777 = self.err;
                                                                var _reply$35 = Kind$Parser$case$with(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6779 = self.err;
                                                                        var self = $6777;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6781 = self.value;
                                                                                var $6782 = Parser$Reply$error$(Parser$Error$combine$($6781, $6779));
                                                                                var $6780 = $6782;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6783 = Parser$Reply$error$($6779);
                                                                                var $6780 = $6783;
                                                                                break;
                                                                        };
                                                                        var $6778 = $6780;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6784 = self.pst;
                                                                        var $6785 = self.val;
                                                                        var self = $6784;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6787 = self.err;
                                                                                var $6788 = self.nam;
                                                                                var $6789 = self.ini;
                                                                                var $6790 = self.idx;
                                                                                var $6791 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6777, $6787), $6788, $6789, $6790, $6791);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6793 = self.err;
                                                                                        var _reply$49 = Kind$Parser$items$("{", Kind$Parser$case$case, "}")(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6795 = self.err;
                                                                                                var self = $6793;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6797 = self.value;
                                                                                                        var $6798 = Parser$Reply$error$(Parser$Error$combine$($6797, $6795));
                                                                                                        var $6796 = $6798;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6799 = Parser$Reply$error$($6795);
                                                                                                        var $6796 = $6799;
                                                                                                        break;
                                                                                                };
                                                                                                var $6794 = $6796;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6800 = self.pst;
                                                                                                var $6801 = self.val;
                                                                                                var self = $6800;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6803 = self.err;
                                                                                                        var $6804 = self.nam;
                                                                                                        var $6805 = self.ini;
                                                                                                        var $6806 = self.idx;
                                                                                                        var $6807 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6793, $6803), $6804, $6805, $6806, $6807);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6809 = self.err;
                                                                                                                var _reply$63 = Parser$maybe$(Kind$Parser$text("!"), _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6811 = self.err;
                                                                                                                        var self = $6809;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6813 = self.value;
                                                                                                                                var $6814 = Parser$Reply$error$(Parser$Error$combine$($6813, $6811));
                                                                                                                                var $6812 = $6814;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6815 = Parser$Reply$error$($6811);
                                                                                                                                var $6812 = $6815;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6810 = $6812;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6816 = self.pst;
                                                                                                                        var $6817 = self.val;
                                                                                                                        var self = $6816;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6819 = self.err;
                                                                                                                                var $6820 = self.nam;
                                                                                                                                var $6821 = self.ini;
                                                                                                                                var $6822 = self.idx;
                                                                                                                                var $6823 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6809, $6819), $6820, $6821, $6822, $6823);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6825 = self.err;
                                                                                                                                        var _reply$77 = Parser$maybe$((_pst$77 => {
                                                                                                                                            var self = _pst$77;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $6828 = self.err;
                                                                                                                                                    var _reply$83 = Kind$Parser$text$("default", _pst$77);
                                                                                                                                                    var self = _reply$83;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $6830 = self.err;
                                                                                                                                                            var self = $6828;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $6832 = self.value;
                                                                                                                                                                    var $6833 = Parser$Reply$error$(Parser$Error$combine$($6832, $6830));
                                                                                                                                                                    var $6831 = $6833;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $6834 = Parser$Reply$error$($6830);
                                                                                                                                                                    var $6831 = $6834;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6829 = $6831;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $6835 = self.pst;
                                                                                                                                                            var self = $6835;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6837 = self.err;
                                                                                                                                                                    var $6838 = self.nam;
                                                                                                                                                                    var $6839 = self.ini;
                                                                                                                                                                    var $6840 = self.idx;
                                                                                                                                                                    var $6841 = self.str;
                                                                                                                                                                    var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($6828, $6837), $6838, $6839, $6840, $6841);
                                                                                                                                                                    var self = _reply$pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6843 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$term(_reply$pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6845 = self.err;
                                                                                                                                                                                    var self = $6843;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6847 = self.value;
                                                                                                                                                                                            var $6848 = Parser$Reply$error$(Parser$Error$combine$($6847, $6845));
                                                                                                                                                                                            var $6846 = $6848;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6849 = Parser$Reply$error$($6845);
                                                                                                                                                                                            var $6846 = $6849;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6844 = $6846;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6850 = self.pst;
                                                                                                                                                                                    var $6851 = self.val;
                                                                                                                                                                                    var self = $6850;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6853 = self.err;
                                                                                                                                                                                            var $6854 = self.nam;
                                                                                                                                                                                            var $6855 = self.ini;
                                                                                                                                                                                            var $6856 = self.idx;
                                                                                                                                                                                            var $6857 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6843, $6853), $6854, $6855, $6856, $6857);
                                                                                                                                                                                            var $6858 = Parser$Reply$value$(_reply$pst$105, $6851);
                                                                                                                                                                                            var $6852 = $6858;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6844 = $6852;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6842 = $6844;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6836 = $6842;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6829 = $6836;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6827 = $6829;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $6827;
                                                                                                                                        }), _reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6859 = self.err;
                                                                                                                                                var self = $6825;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6861 = self.value;
                                                                                                                                                        var $6862 = Parser$Reply$error$(Parser$Error$combine$($6861, $6859));
                                                                                                                                                        var $6860 = $6862;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6863 = Parser$Reply$error$($6859);
                                                                                                                                                        var $6860 = $6863;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6826 = $6860;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6864 = self.pst;
                                                                                                                                                var $6865 = self.val;
                                                                                                                                                var self = $6864;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6867 = self.err;
                                                                                                                                                        var $6868 = self.nam;
                                                                                                                                                        var $6869 = self.ini;
                                                                                                                                                        var $6870 = self.idx;
                                                                                                                                                        var $6871 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($6825, $6867), $6868, $6869, $6870, $6871);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $6873 = self.err;
                                                                                                                                                                var _reply$91 = Parser$maybe$((_pst$91 => {
                                                                                                                                                                    var self = _pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6876 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$text$(":", _pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6878 = self.err;
                                                                                                                                                                                    var self = $6876;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6880 = self.value;
                                                                                                                                                                                            var $6881 = Parser$Reply$error$(Parser$Error$combine$($6880, $6878));
                                                                                                                                                                                            var $6879 = $6881;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6882 = Parser$Reply$error$($6878);
                                                                                                                                                                                            var $6879 = $6882;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6877 = $6879;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6883 = self.pst;
                                                                                                                                                                                    var self = $6883;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6885 = self.err;
                                                                                                                                                                                            var $6886 = self.nam;
                                                                                                                                                                                            var $6887 = self.ini;
                                                                                                                                                                                            var $6888 = self.idx;
                                                                                                                                                                                            var $6889 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6876, $6885), $6886, $6887, $6888, $6889);
                                                                                                                                                                                            var $6890 = Parser$append_error$(Kind$Parser$term, "\u{a}Inside motive.", _reply$pst$105);
                                                                                                                                                                                            var $6884 = $6890;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6877 = $6884;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6875 = $6877;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    return $6875;
                                                                                                                                                                }), _reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $6891 = self.err;
                                                                                                                                                                        var self = $6873;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $6893 = self.value;
                                                                                                                                                                                var $6894 = Parser$Reply$error$(Parser$Error$combine$($6893, $6891));
                                                                                                                                                                                var $6892 = $6894;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $6895 = Parser$Reply$error$($6891);
                                                                                                                                                                                var $6892 = $6895;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6874 = $6892;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $6896 = self.pst;
                                                                                                                                                                        var $6897 = self.val;
                                                                                                                                                                        var self = $6896;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $6899 = self.err;
                                                                                                                                                                                var $6900 = self.nam;
                                                                                                                                                                                var $6901 = self.ini;
                                                                                                                                                                                var $6902 = self.idx;
                                                                                                                                                                                var $6903 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($6873, $6899), $6900, $6901, $6902, $6903);
                                                                                                                                                                                var self = $6897;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                        var $6905 = self.value;
                                                                                                                                                                                        var $6906 = Maybe$some$($6905);
                                                                                                                                                                                        var _moti$100 = $6906;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                        var self = $6817;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $6908 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                var $6907 = $6908;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $6909 = Maybe$none;
                                                                                                                                                                                                var $6907 = $6909;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var _moti$100 = $6907;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $6904 = Parser$Reply$value$(_reply$pst$99, Kind$Parser$case$build$($6769, $6785, $6801, $6865, _moti$100));
                                                                                                                                                                                var $6898 = $6904;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6874 = $6898;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $6872 = $6874;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $6866 = $6872;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6826 = $6866;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6824 = $6826;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6818 = $6824;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6810 = $6818;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6808 = $6810;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6802 = $6808;
                                                                                                        break;
                                                                                                };
                                                                                                var $6794 = $6802;
                                                                                                break;
                                                                                        };
                                                                                        var $6792 = $6794;
                                                                                        break;
                                                                                };
                                                                                var $6786 = $6792;
                                                                                break;
                                                                        };
                                                                        var $6778 = $6786;
                                                                        break;
                                                                };
                                                                var $6776 = $6778;
                                                                break;
                                                        };
                                                        var $6770 = $6776;
                                                        break;
                                                };
                                                var $6682 = $6770;
                                                break;
                                        };
                                        var $6680 = $6682;
                                        break;
                                };
                                var $6674 = $6680;
                                break;
                        };
                        var $6667 = $6674;
                        break;
                };
                var $6665 = $6667;
                break;
        };
        return $6665;
    }));
    const Kind$Parser$without = Kind$Parser$block("without")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6911 = self.err;
                var _reply$7 = Kind$Parser$text$("without ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6913 = self.err;
                        var self = $6911;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6915 = self.value;
                                var $6916 = Parser$Reply$error$(Parser$Error$combine$($6915, $6913));
                                var $6914 = $6916;
                                break;
                            case 'Maybe.none':
                                var $6917 = Parser$Reply$error$($6913);
                                var $6914 = $6917;
                                break;
                        };
                        var $6912 = $6914;
                        break;
                    case 'Parser.Reply.value':
                        var $6918 = self.pst;
                        var self = $6918;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6920 = self.err;
                                var $6921 = self.nam;
                                var $6922 = self.ini;
                                var $6923 = self.idx;
                                var $6924 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6911, $6920), $6921, $6922, $6923, $6924);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6926 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6928 = self.err;
                                                var self = $6926;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6930 = self.value;
                                                        var $6931 = Parser$Reply$error$(Parser$Error$combine$($6930, $6928));
                                                        var $6929 = $6931;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6932 = Parser$Reply$error$($6928);
                                                        var $6929 = $6932;
                                                        break;
                                                };
                                                var $6927 = $6929;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6933 = self.pst;
                                                var $6934 = self.val;
                                                var self = $6933;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6936 = self.err;
                                                        var $6937 = self.nam;
                                                        var $6938 = self.ini;
                                                        var $6939 = self.idx;
                                                        var $6940 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6926, $6936), $6937, $6938, $6939, $6940);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6942 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6944 = self.err;
                                                                        var self = $6942;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6946 = self.value;
                                                                                var $6947 = Parser$Reply$error$(Parser$Error$combine$($6946, $6944));
                                                                                var $6945 = $6947;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6948 = Parser$Reply$error$($6944);
                                                                                var $6945 = $6948;
                                                                                break;
                                                                        };
                                                                        var $6943 = $6945;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6949 = self.pst;
                                                                        var self = $6949;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6951 = self.err;
                                                                                var $6952 = self.nam;
                                                                                var $6953 = self.ini;
                                                                                var $6954 = self.idx;
                                                                                var $6955 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6942, $6951), $6952, $6953, $6954, $6955);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6957 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6959 = self.err;
                                                                                                var self = $6957;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6961 = self.value;
                                                                                                        var $6962 = Parser$Reply$error$(Parser$Error$combine$($6961, $6959));
                                                                                                        var $6960 = $6962;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6963 = Parser$Reply$error$($6959);
                                                                                                        var $6960 = $6963;
                                                                                                        break;
                                                                                                };
                                                                                                var $6958 = $6960;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6964 = self.pst;
                                                                                                var $6965 = self.val;
                                                                                                var self = $6964;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6967 = self.err;
                                                                                                        var $6968 = self.nam;
                                                                                                        var $6969 = self.ini;
                                                                                                        var $6970 = self.idx;
                                                                                                        var $6971 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6957, $6967), $6968, $6969, $6970, $6971);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6973 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6975 = self.err;
                                                                                                                        var self = $6973;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6977 = self.value;
                                                                                                                                var $6978 = Parser$Reply$error$(Parser$Error$combine$($6977, $6975));
                                                                                                                                var $6976 = $6978;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6979 = Parser$Reply$error$($6975);
                                                                                                                                var $6976 = $6979;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6974 = $6976;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6980 = self.pst;
                                                                                                                        var $6981 = self.val;
                                                                                                                        var self = $6980;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6983 = self.err;
                                                                                                                                var $6984 = self.nam;
                                                                                                                                var $6985 = self.ini;
                                                                                                                                var $6986 = self.idx;
                                                                                                                                var $6987 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6973, $6983), $6984, $6985, $6986, $6987);
                                                                                                                                var _term$72 = Kind$Term$ref$($6934);
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$lam$("", (_x$73 => {
                                                                                                                                    var $6989 = Kind$Term$hol$(Bits$e);
                                                                                                                                    return $6989;
                                                                                                                                })));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, $6965);
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$lam$($6934, (_x$75 => {
                                                                                                                                    var $6990 = $6981;
                                                                                                                                    return $6990;
                                                                                                                                })));
                                                                                                                                var $6988 = Parser$Reply$value$(_reply$pst$71, _term$75);
                                                                                                                                var $6982 = $6988;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6974 = $6982;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6972 = $6974;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6966 = $6972;
                                                                                                        break;
                                                                                                };
                                                                                                var $6958 = $6966;
                                                                                                break;
                                                                                        };
                                                                                        var $6956 = $6958;
                                                                                        break;
                                                                                };
                                                                                var $6950 = $6956;
                                                                                break;
                                                                        };
                                                                        var $6943 = $6950;
                                                                        break;
                                                                };
                                                                var $6941 = $6943;
                                                                break;
                                                        };
                                                        var $6935 = $6941;
                                                        break;
                                                };
                                                var $6927 = $6935;
                                                break;
                                        };
                                        var $6925 = $6927;
                                        break;
                                };
                                var $6919 = $6925;
                                break;
                        };
                        var $6912 = $6919;
                        break;
                };
                var $6910 = $6912;
                break;
        };
        return $6910;
    }));

    function Kind$Parser$switch$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6992 = self.err;
                var _reply$7 = Kind$Parser$term(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6994 = self.err;
                        var self = $6992;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6996 = self.value;
                                var $6997 = Parser$Reply$error$(Parser$Error$combine$($6996, $6994));
                                var $6995 = $6997;
                                break;
                            case 'Maybe.none':
                                var $6998 = Parser$Reply$error$($6994);
                                var $6995 = $6998;
                                break;
                        };
                        var $6993 = $6995;
                        break;
                    case 'Parser.Reply.value':
                        var $6999 = self.pst;
                        var $7000 = self.val;
                        var self = $6999;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7002 = self.err;
                                var $7003 = self.nam;
                                var $7004 = self.ini;
                                var $7005 = self.idx;
                                var $7006 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6992, $7002), $7003, $7004, $7005, $7006);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7008 = self.err;
                                        var _reply$21 = Kind$Parser$text$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7010 = self.err;
                                                var self = $7008;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7012 = self.value;
                                                        var $7013 = Parser$Reply$error$(Parser$Error$combine$($7012, $7010));
                                                        var $7011 = $7013;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7014 = Parser$Reply$error$($7010);
                                                        var $7011 = $7014;
                                                        break;
                                                };
                                                var $7009 = $7011;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7015 = self.pst;
                                                var self = $7015;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7017 = self.err;
                                                        var $7018 = self.nam;
                                                        var $7019 = self.ini;
                                                        var $7020 = self.idx;
                                                        var $7021 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7008, $7017), $7018, $7019, $7020, $7021);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7023 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7025 = self.err;
                                                                        var self = $7023;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7027 = self.value;
                                                                                var $7028 = Parser$Reply$error$(Parser$Error$combine$($7027, $7025));
                                                                                var $7026 = $7028;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7029 = Parser$Reply$error$($7025);
                                                                                var $7026 = $7029;
                                                                                break;
                                                                        };
                                                                        var $7024 = $7026;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7030 = self.pst;
                                                                        var $7031 = self.val;
                                                                        var self = $7030;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7033 = self.err;
                                                                                var $7034 = self.nam;
                                                                                var $7035 = self.ini;
                                                                                var $7036 = self.idx;
                                                                                var $7037 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7023, $7033), $7034, $7035, $7036, $7037);
                                                                                var $7038 = Parser$Reply$value$(_reply$pst$43, Pair$new$($7000, $7031));
                                                                                var $7032 = $7038;
                                                                                break;
                                                                        };
                                                                        var $7024 = $7032;
                                                                        break;
                                                                };
                                                                var $7022 = $7024;
                                                                break;
                                                        };
                                                        var $7016 = $7022;
                                                        break;
                                                };
                                                var $7009 = $7016;
                                                break;
                                        };
                                        var $7007 = $7009;
                                        break;
                                };
                                var $7001 = $7007;
                                break;
                        };
                        var $6993 = $7001;
                        break;
                };
                var $6991 = $6993;
                break;
        };
        return $6991;
    };
    const Kind$Parser$switch$case = x0 => Kind$Parser$switch$case$(x0);
    const Kind$Parser$switch = Kind$Parser$block("switch")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7040 = self.err;
                var _reply$7 = Kind$Parser$text$("switch", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7042 = self.err;
                        var self = $7040;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7044 = self.value;
                                var $7045 = Parser$Reply$error$(Parser$Error$combine$($7044, $7042));
                                var $7043 = $7045;
                                break;
                            case 'Maybe.none':
                                var $7046 = Parser$Reply$error$($7042);
                                var $7043 = $7046;
                                break;
                        };
                        var $7041 = $7043;
                        break;
                    case 'Parser.Reply.value':
                        var $7047 = self.pst;
                        var self = $7047;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7049 = self.err;
                                var $7050 = self.nam;
                                var $7051 = self.ini;
                                var $7052 = self.idx;
                                var $7053 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7040, $7049), $7050, $7051, $7052, $7053);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7055 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7057 = self.err;
                                                var self = $7055;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7059 = self.value;
                                                        var $7060 = Parser$Reply$error$(Parser$Error$combine$($7059, $7057));
                                                        var $7058 = $7060;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7061 = Parser$Reply$error$($7057);
                                                        var $7058 = $7061;
                                                        break;
                                                };
                                                var $7056 = $7058;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7062 = self.pst;
                                                var $7063 = self.val;
                                                var self = $7062;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7065 = self.err;
                                                        var $7066 = self.nam;
                                                        var $7067 = self.ini;
                                                        var $7068 = self.idx;
                                                        var $7069 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7055, $7065), $7066, $7067, $7068, $7069);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7071 = self.err;
                                                                var _reply$35 = Kind$Parser$items$("{", Kind$Parser$switch$case, "}")(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7073 = self.err;
                                                                        var self = $7071;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7075 = self.value;
                                                                                var $7076 = Parser$Reply$error$(Parser$Error$combine$($7075, $7073));
                                                                                var $7074 = $7076;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7077 = Parser$Reply$error$($7073);
                                                                                var $7074 = $7077;
                                                                                break;
                                                                        };
                                                                        var $7072 = $7074;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7078 = self.pst;
                                                                        var $7079 = self.val;
                                                                        var self = $7078;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7081 = self.err;
                                                                                var $7082 = self.nam;
                                                                                var $7083 = self.ini;
                                                                                var $7084 = self.idx;
                                                                                var $7085 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7071, $7081), $7082, $7083, $7084, $7085);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7087 = self.err;
                                                                                        var _reply$49 = Kind$Parser$text$("default", _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7089 = self.err;
                                                                                                var self = $7087;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7091 = self.value;
                                                                                                        var $7092 = Parser$Reply$error$(Parser$Error$combine$($7091, $7089));
                                                                                                        var $7090 = $7092;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7093 = Parser$Reply$error$($7089);
                                                                                                        var $7090 = $7093;
                                                                                                        break;
                                                                                                };
                                                                                                var $7088 = $7090;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7094 = self.pst;
                                                                                                var self = $7094;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7096 = self.err;
                                                                                                        var $7097 = self.nam;
                                                                                                        var $7098 = self.ini;
                                                                                                        var $7099 = self.idx;
                                                                                                        var $7100 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7087, $7096), $7097, $7098, $7099, $7100);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7102 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7104 = self.err;
                                                                                                                        var self = $7102;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7106 = self.value;
                                                                                                                                var $7107 = Parser$Reply$error$(Parser$Error$combine$($7106, $7104));
                                                                                                                                var $7105 = $7107;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7108 = Parser$Reply$error$($7104);
                                                                                                                                var $7105 = $7108;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7103 = $7105;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7109 = self.pst;
                                                                                                                        var $7110 = self.val;
                                                                                                                        var self = $7109;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7112 = self.err;
                                                                                                                                var $7113 = self.nam;
                                                                                                                                var $7114 = self.ini;
                                                                                                                                var $7115 = self.idx;
                                                                                                                                var $7116 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($7102, $7112), $7113, $7114, $7115, $7116);
                                                                                                                                var _term$72 = List$fold$($7079, $7110, (_cse$72 => _rest$73 => {
                                                                                                                                    var self = _cse$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Pair.new':
                                                                                                                                            var $7119 = self.fst;
                                                                                                                                            var $7120 = self.snd;
                                                                                                                                            var _term$76 = Kind$Term$app$($7063, $7119);
                                                                                                                                            var _term$77 = Kind$Term$app$(_term$76, Kind$Term$lam$("", (_x$77 => {
                                                                                                                                                var $7122 = Kind$Term$hol$(Bits$e);
                                                                                                                                                return $7122;
                                                                                                                                            })));
                                                                                                                                            var _term$78 = Kind$Term$app$(_term$77, $7120);
                                                                                                                                            var _term$79 = Kind$Term$app$(_term$78, _rest$73);
                                                                                                                                            var $7121 = _term$79;
                                                                                                                                            var $7118 = $7121;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    return $7118;
                                                                                                                                }));
                                                                                                                                var $7117 = Parser$Reply$value$(_reply$pst$71, _term$72);
                                                                                                                                var $7111 = $7117;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7103 = $7111;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7101 = $7103;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7095 = $7101;
                                                                                                        break;
                                                                                                };
                                                                                                var $7088 = $7095;
                                                                                                break;
                                                                                        };
                                                                                        var $7086 = $7088;
                                                                                        break;
                                                                                };
                                                                                var $7080 = $7086;
                                                                                break;
                                                                        };
                                                                        var $7072 = $7080;
                                                                        break;
                                                                };
                                                                var $7070 = $7072;
                                                                break;
                                                        };
                                                        var $7064 = $7070;
                                                        break;
                                                };
                                                var $7056 = $7064;
                                                break;
                                        };
                                        var $7054 = $7056;
                                        break;
                                };
                                var $7048 = $7054;
                                break;
                        };
                        var $7041 = $7048;
                        break;
                };
                var $7039 = $7041;
                break;
        };
        return $7039;
    }));

    function Bits$tail$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $7124 = self.slice(0, -1);
                var $7125 = $7124;
                var $7123 = $7125;
                break;
            case 'i':
                var $7126 = self.slice(0, -1);
                var $7127 = $7126;
                var $7123 = $7127;
                break;
            case 'e':
                var $7128 = Bits$e;
                var $7123 = $7128;
                break;
        };
        return $7123;
    };
    const Bits$tail = x0 => Bits$tail$(x0);

    function Bits$inc$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $7130 = self.slice(0, -1);
                var $7131 = ($7130 + '1');
                var $7129 = $7131;
                break;
            case 'i':
                var $7132 = self.slice(0, -1);
                var $7133 = (Bits$inc$($7132) + '0');
                var $7129 = $7133;
                break;
            case 'e':
                var $7134 = (Bits$e + '1');
                var $7129 = $7134;
                break;
        };
        return $7129;
    };
    const Bits$inc = x0 => Bits$inc$(x0);
    const Nat$to_bits = a0 => (nat_to_bits(a0));

    function Maybe$is_some$(_m$2) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.none':
                var $7136 = Bool$false;
                var $7135 = $7136;
                break;
            case 'Maybe.some':
                var $7137 = Bool$true;
                var $7135 = $7137;
                break;
        };
        return $7135;
    };
    const Maybe$is_some = x0 => Maybe$is_some$(x0);

    function Kind$Term$gol$(_name$1, _dref$2, _verb$3) {
        var $7138 = ({
            _: 'Kind.Term.gol',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3
        });
        return $7138;
    };
    const Kind$Term$gol = x0 => x1 => x2 => Kind$Term$gol$(x0, x1, x2);
    const Kind$Parser$goal = Kind$Parser$block("goal")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7140 = self.err;
                var _reply$7 = Kind$Parser$text$("?", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7142 = self.err;
                        var self = $7140;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7144 = self.value;
                                var $7145 = Parser$Reply$error$(Parser$Error$combine$($7144, $7142));
                                var $7143 = $7145;
                                break;
                            case 'Maybe.none':
                                var $7146 = Parser$Reply$error$($7142);
                                var $7143 = $7146;
                                break;
                        };
                        var $7141 = $7143;
                        break;
                    case 'Parser.Reply.value':
                        var $7147 = self.pst;
                        var self = $7147;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7149 = self.err;
                                var $7150 = self.nam;
                                var $7151 = self.ini;
                                var $7152 = self.idx;
                                var $7153 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7140, $7149), $7150, $7151, $7152, $7153);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7155 = self.err;
                                        var _reply$21 = Kind$Parser$name$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7157 = self.err;
                                                var self = $7155;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7159 = self.value;
                                                        var $7160 = Parser$Reply$error$(Parser$Error$combine$($7159, $7157));
                                                        var $7158 = $7160;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7161 = Parser$Reply$error$($7157);
                                                        var $7158 = $7161;
                                                        break;
                                                };
                                                var $7156 = $7158;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7162 = self.pst;
                                                var $7163 = self.val;
                                                var self = $7162;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7165 = self.err;
                                                        var $7166 = self.nam;
                                                        var $7167 = self.ini;
                                                        var $7168 = self.idx;
                                                        var $7169 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7155, $7165), $7166, $7167, $7168, $7169);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7171 = self.err;
                                                                var _reply$35 = Parser$many$((_pst$35 => {
                                                                    var self = _pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $7174 = self.err;
                                                                            var _reply$41 = Kind$Parser$text$("-", _pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $7176 = self.err;
                                                                                    var self = $7174;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $7178 = self.value;
                                                                                            var $7179 = Parser$Reply$error$(Parser$Error$combine$($7178, $7176));
                                                                                            var $7177 = $7179;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $7180 = Parser$Reply$error$($7176);
                                                                                            var $7177 = $7180;
                                                                                            break;
                                                                                    };
                                                                                    var $7175 = $7177;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $7181 = self.pst;
                                                                                    var self = $7181;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $7183 = self.err;
                                                                                            var $7184 = self.nam;
                                                                                            var $7185 = self.ini;
                                                                                            var $7186 = self.idx;
                                                                                            var $7187 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($7174, $7183), $7184, $7185, $7186, $7187);
                                                                                            var self = _reply$pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $7189 = self.err;
                                                                                                    var _reply$55 = Parser$nat$(_reply$pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $7191 = self.err;
                                                                                                            var self = $7189;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $7193 = self.value;
                                                                                                                    var $7194 = Parser$Reply$error$(Parser$Error$combine$($7193, $7191));
                                                                                                                    var $7192 = $7194;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $7195 = Parser$Reply$error$($7191);
                                                                                                                    var $7192 = $7195;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7190 = $7192;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $7196 = self.pst;
                                                                                                            var $7197 = self.val;
                                                                                                            var self = $7196;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $7199 = self.err;
                                                                                                                    var $7200 = self.nam;
                                                                                                                    var $7201 = self.ini;
                                                                                                                    var $7202 = self.idx;
                                                                                                                    var $7203 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($7189, $7199), $7200, $7201, $7202, $7203);
                                                                                                                    var _bits$64 = Bits$reverse$(Bits$tail$(Bits$reverse$((nat_to_bits($7197)))));
                                                                                                                    var $7204 = Parser$Reply$value$(_reply$pst$63, _bits$64);
                                                                                                                    var $7198 = $7204;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7190 = $7198;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $7188 = $7190;
                                                                                                    break;
                                                                                            };
                                                                                            var $7182 = $7188;
                                                                                            break;
                                                                                    };
                                                                                    var $7175 = $7182;
                                                                                    break;
                                                                            };
                                                                            var $7173 = $7175;
                                                                            break;
                                                                    };
                                                                    return $7173;
                                                                }))(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7205 = self.err;
                                                                        var self = $7171;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7207 = self.value;
                                                                                var $7208 = Parser$Reply$error$(Parser$Error$combine$($7207, $7205));
                                                                                var $7206 = $7208;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7209 = Parser$Reply$error$($7205);
                                                                                var $7206 = $7209;
                                                                                break;
                                                                        };
                                                                        var $7172 = $7206;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7210 = self.pst;
                                                                        var $7211 = self.val;
                                                                        var self = $7210;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7213 = self.err;
                                                                                var $7214 = self.nam;
                                                                                var $7215 = self.ini;
                                                                                var $7216 = self.idx;
                                                                                var $7217 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7171, $7213), $7214, $7215, $7216, $7217);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7219 = self.err;
                                                                                        var self = _reply$pst$43;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7221 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$text("-"), _reply$pst$43);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7223 = self.err;
                                                                                                        var self = $7221;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7225 = self.value;
                                                                                                                var $7226 = Parser$Reply$error$(Parser$Error$combine$($7225, $7223));
                                                                                                                var $7224 = $7226;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7227 = Parser$Reply$error$($7223);
                                                                                                                var $7224 = $7227;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7222 = $7224;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7228 = self.pst;
                                                                                                        var $7229 = self.val;
                                                                                                        var self = $7228;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7231 = self.err;
                                                                                                                var $7232 = self.nam;
                                                                                                                var $7233 = self.ini;
                                                                                                                var $7234 = self.idx;
                                                                                                                var $7235 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7221, $7231), $7232, $7233, $7234, $7235);
                                                                                                                var $7236 = Parser$Reply$value$(_reply$pst$62, Maybe$is_some$($7229));
                                                                                                                var $7230 = $7236;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7222 = $7230;
                                                                                                        break;
                                                                                                };
                                                                                                var _reply$49 = $7222;
                                                                                                break;
                                                                                        };
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7237 = self.err;
                                                                                                var self = $7219;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7239 = self.value;
                                                                                                        var $7240 = Parser$Reply$error$(Parser$Error$combine$($7239, $7237));
                                                                                                        var $7238 = $7240;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7241 = Parser$Reply$error$($7237);
                                                                                                        var $7238 = $7241;
                                                                                                        break;
                                                                                                };
                                                                                                var $7220 = $7238;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7242 = self.pst;
                                                                                                var $7243 = self.val;
                                                                                                var self = $7242;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7245 = self.err;
                                                                                                        var $7246 = self.nam;
                                                                                                        var $7247 = self.ini;
                                                                                                        var $7248 = self.idx;
                                                                                                        var $7249 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7219, $7245), $7246, $7247, $7248, $7249);
                                                                                                        var $7250 = Parser$Reply$value$(_reply$pst$57, Kind$Term$gol$($7163, $7211, $7243));
                                                                                                        var $7244 = $7250;
                                                                                                        break;
                                                                                                };
                                                                                                var $7220 = $7244;
                                                                                                break;
                                                                                        };
                                                                                        var $7218 = $7220;
                                                                                        break;
                                                                                };
                                                                                var $7212 = $7218;
                                                                                break;
                                                                        };
                                                                        var $7172 = $7212;
                                                                        break;
                                                                };
                                                                var $7170 = $7172;
                                                                break;
                                                        };
                                                        var $7164 = $7170;
                                                        break;
                                                };
                                                var $7156 = $7164;
                                                break;
                                        };
                                        var $7154 = $7156;
                                        break;
                                };
                                var $7148 = $7154;
                                break;
                        };
                        var $7141 = $7148;
                        break;
                };
                var $7139 = $7141;
                break;
        };
        return $7139;
    }));
    const Kind$Parser$hole = Kind$Parser$block("hole")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7252 = self.err;
                var _reply$7 = Kind$Parser$text$("_", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7254 = self.err;
                        var self = $7252;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7256 = self.value;
                                var $7257 = Parser$Reply$error$(Parser$Error$combine$($7256, $7254));
                                var $7255 = $7257;
                                break;
                            case 'Maybe.none':
                                var $7258 = Parser$Reply$error$($7254);
                                var $7255 = $7258;
                                break;
                        };
                        var $7253 = $7255;
                        break;
                    case 'Parser.Reply.value':
                        var $7259 = self.pst;
                        var self = $7259;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7261 = self.err;
                                var $7262 = self.nam;
                                var $7263 = self.ini;
                                var $7264 = self.idx;
                                var $7265 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7252, $7261), $7262, $7263, $7264, $7265);
                                var $7266 = Parser$Reply$value$(_reply$pst$15, Kind$Term$hol$(Bits$e));
                                var $7260 = $7266;
                                break;
                        };
                        var $7253 = $7260;
                        break;
                };
                var $7251 = $7253;
                break;
        };
        return $7251;
    }));

    function Kind$Parser$float$sign$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7268 = self.nam;
                var $7269 = self.ini;
                var $7270 = self.idx;
                var $7271 = self.str;
                var self = $7271;
                if (self.length === 0) {
                    var $7273 = Parser$Reply$fail$($7268, $7269, $7270, "Expected \'+\' or \'-\'.");
                    var $7272 = $7273;
                } else {
                    var $7274 = self.charCodeAt(0);
                    var $7275 = self.slice(1);
                    var self = (($7274 === 43) || ($7274 === 45));
                    if (self) {
                        var $7277 = Parser$Reply$value$(_pst$1, $7274);
                        var $7276 = $7277;
                    } else {
                        var $7278 = Parser$Reply$fail$($7268, $7269, $7270, "Expected \'+\' ou \'-\'.");
                        var $7276 = $7278;
                    };
                    var $7272 = $7276;
                };
                var $7267 = $7272;
                break;
        };
        return $7267;
    };
    const Kind$Parser$float$sign = x0 => Kind$Parser$float$sign$(x0);

    function List$any$(_cond$2, _list$3) {
        var List$any$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$any = _cond$2 => _list$3 => List$any$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7279 = self.head;
                        var $7280 = self.tail;
                        var self = _cond$2($7279);
                        if (self) {
                            var $7282 = Bool$true;
                            var $7281 = $7282;
                        } else {
                            var $7283 = List$any$(_cond$2, $7280);
                            var $7281 = $7283;
                        };
                        return $7281;
                    case 'List.nil':
                        var $7284 = Bool$false;
                        return $7284;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$any = x0 => x1 => List$any$(x0, x1);

    function Kind$Parser$float$str_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7286 = self.err;
                var $7287 = self.nam;
                var $7288 = self.ini;
                var $7289 = self.idx;
                var $7290 = self.str;
                var self = $7290;
                if (self.length === 0) {
                    var $7292 = Parser$Reply$fail$($7287, $7288, $7289, "Not a digit.");
                    var $7291 = $7292;
                } else {
                    var $7293 = self.charCodeAt(0);
                    var $7294 = self.slice(1);
                    var _digits$9 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$nil)))))))))));
                    var _pst$10 = Parser$State$new$($7286, $7287, $7288, Nat$succ$($7289), $7294);
                    var self = List$any$(a1 => ($7293 === a1), _digits$9);
                    if (self) {
                        var $7296 = Parser$Reply$value$(_pst$10, $7293);
                        var $7295 = $7296;
                    } else {
                        var $7297 = Parser$Reply$fail$($7287, $7288, $7289, "Not a digit.");
                        var $7295 = $7297;
                    };
                    var $7291 = $7295;
                };
                var $7285 = $7291;
                break;
        };
        return $7285;
    };
    const Kind$Parser$float$str_digit = x0 => Kind$Parser$float$str_digit$(x0);

    function String$from_list$(_xs$1) {
        var self = _xs$1;
        switch (self._) {
            case 'List.cons':
                var $7299 = self.head;
                var $7300 = self.tail;
                var $7301 = String$cons$($7299, String$from_list$($7300));
                var $7298 = $7301;
                break;
            case 'List.nil':
                var $7302 = String$nil;
                var $7298 = $7302;
                break;
        };
        return $7298;
    };
    const String$from_list = x0 => String$from_list$(x0);
    const Kind$Parser$float$64 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7304 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7306 = self.err;
                        var self = $7304;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7308 = self.value;
                                var $7309 = Parser$Reply$error$(Parser$Error$combine$($7308, $7306));
                                var $7307 = $7309;
                                break;
                            case 'Maybe.none':
                                var $7310 = Parser$Reply$error$($7306);
                                var $7307 = $7310;
                                break;
                        };
                        var $7305 = $7307;
                        break;
                    case 'Parser.Reply.value':
                        var $7311 = self.pst;
                        var $7312 = self.val;
                        var self = $7311;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7314 = self.err;
                                var $7315 = self.nam;
                                var $7316 = self.ini;
                                var $7317 = self.idx;
                                var $7318 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7304, $7314), $7315, $7316, $7317, $7318);
                                var _sign$16 = Maybe$default$($7312, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7320 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7322 = self.err;
                                                var self = $7320;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7324 = self.value;
                                                        var $7325 = Parser$Reply$error$(Parser$Error$combine$($7324, $7322));
                                                        var $7323 = $7325;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7326 = Parser$Reply$error$($7322);
                                                        var $7323 = $7326;
                                                        break;
                                                };
                                                var $7321 = $7323;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7327 = self.pst;
                                                var $7328 = self.val;
                                                var self = $7327;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7330 = self.err;
                                                        var $7331 = self.nam;
                                                        var $7332 = self.ini;
                                                        var $7333 = self.idx;
                                                        var $7334 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7320, $7330), $7331, $7332, $7333, $7334);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7336 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7338 = self.err;
                                                                        var self = $7336;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7340 = self.value;
                                                                                var $7341 = Parser$Reply$error$(Parser$Error$combine$($7340, $7338));
                                                                                var $7339 = $7341;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7342 = Parser$Reply$error$($7338);
                                                                                var $7339 = $7342;
                                                                                break;
                                                                        };
                                                                        var $7337 = $7339;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7343 = self.pst;
                                                                        var self = $7343;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7345 = self.err;
                                                                                var $7346 = self.nam;
                                                                                var $7347 = self.ini;
                                                                                var $7348 = self.idx;
                                                                                var $7349 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7336, $7345), $7346, $7347, $7348, $7349);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7351 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7353 = self.err;
                                                                                                var self = $7351;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7355 = self.value;
                                                                                                        var $7356 = Parser$Reply$error$(Parser$Error$combine$($7355, $7353));
                                                                                                        var $7354 = $7356;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7357 = Parser$Reply$error$($7353);
                                                                                                        var $7354 = $7357;
                                                                                                        break;
                                                                                                };
                                                                                                var $7352 = $7354;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7358 = self.pst;
                                                                                                var $7359 = self.val;
                                                                                                var self = $7358;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7361 = self.err;
                                                                                                        var $7362 = self.nam;
                                                                                                        var $7363 = self.ini;
                                                                                                        var $7364 = self.idx;
                                                                                                        var $7365 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7351, $7361), $7362, $7363, $7364, $7365);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7367 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#64", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7369 = self.err;
                                                                                                                        var self = $7367;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7371 = self.value;
                                                                                                                                var $7372 = Parser$Reply$error$(Parser$Error$combine$($7371, $7369));
                                                                                                                                var $7370 = $7372;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7373 = Parser$Reply$error$($7369);
                                                                                                                                var $7370 = $7373;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7368 = $7370;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7374 = self.pst;
                                                                                                                        var self = $7374;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7376 = self.err;
                                                                                                                                var $7377 = self.nam;
                                                                                                                                var $7378 = self.ini;
                                                                                                                                var $7379 = self.idx;
                                                                                                                                var $7380 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7367, $7376), $7377, $7378, $7379, $7380);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7328)) + ("." + String$from_list$($7359))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F64.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7381 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7375 = $7381;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7368 = $7375;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7366 = $7368;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7360 = $7366;
                                                                                                        break;
                                                                                                };
                                                                                                var $7352 = $7360;
                                                                                                break;
                                                                                        };
                                                                                        var $7350 = $7352;
                                                                                        break;
                                                                                };
                                                                                var $7344 = $7350;
                                                                                break;
                                                                        };
                                                                        var $7337 = $7344;
                                                                        break;
                                                                };
                                                                var $7335 = $7337;
                                                                break;
                                                        };
                                                        var $7329 = $7335;
                                                        break;
                                                };
                                                var $7321 = $7329;
                                                break;
                                        };
                                        var $7319 = $7321;
                                        break;
                                };
                                var $7313 = $7319;
                                break;
                        };
                        var $7305 = $7313;
                        break;
                };
                var $7303 = $7305;
                break;
        };
        return $7303;
    }));
    const Kind$Parser$float$32 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7383 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7385 = self.err;
                        var self = $7383;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7387 = self.value;
                                var $7388 = Parser$Reply$error$(Parser$Error$combine$($7387, $7385));
                                var $7386 = $7388;
                                break;
                            case 'Maybe.none':
                                var $7389 = Parser$Reply$error$($7385);
                                var $7386 = $7389;
                                break;
                        };
                        var $7384 = $7386;
                        break;
                    case 'Parser.Reply.value':
                        var $7390 = self.pst;
                        var $7391 = self.val;
                        var self = $7390;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7393 = self.err;
                                var $7394 = self.nam;
                                var $7395 = self.ini;
                                var $7396 = self.idx;
                                var $7397 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7383, $7393), $7394, $7395, $7396, $7397);
                                var _sign$16 = Maybe$default$($7391, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7399 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7401 = self.err;
                                                var self = $7399;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7403 = self.value;
                                                        var $7404 = Parser$Reply$error$(Parser$Error$combine$($7403, $7401));
                                                        var $7402 = $7404;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7405 = Parser$Reply$error$($7401);
                                                        var $7402 = $7405;
                                                        break;
                                                };
                                                var $7400 = $7402;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7406 = self.pst;
                                                var $7407 = self.val;
                                                var self = $7406;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7409 = self.err;
                                                        var $7410 = self.nam;
                                                        var $7411 = self.ini;
                                                        var $7412 = self.idx;
                                                        var $7413 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7399, $7409), $7410, $7411, $7412, $7413);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7415 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7417 = self.err;
                                                                        var self = $7415;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7419 = self.value;
                                                                                var $7420 = Parser$Reply$error$(Parser$Error$combine$($7419, $7417));
                                                                                var $7418 = $7420;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7421 = Parser$Reply$error$($7417);
                                                                                var $7418 = $7421;
                                                                                break;
                                                                        };
                                                                        var $7416 = $7418;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7422 = self.pst;
                                                                        var self = $7422;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7424 = self.err;
                                                                                var $7425 = self.nam;
                                                                                var $7426 = self.ini;
                                                                                var $7427 = self.idx;
                                                                                var $7428 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7415, $7424), $7425, $7426, $7427, $7428);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7430 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7432 = self.err;
                                                                                                var self = $7430;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7434 = self.value;
                                                                                                        var $7435 = Parser$Reply$error$(Parser$Error$combine$($7434, $7432));
                                                                                                        var $7433 = $7435;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7436 = Parser$Reply$error$($7432);
                                                                                                        var $7433 = $7436;
                                                                                                        break;
                                                                                                };
                                                                                                var $7431 = $7433;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7437 = self.pst;
                                                                                                var $7438 = self.val;
                                                                                                var self = $7437;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7440 = self.err;
                                                                                                        var $7441 = self.nam;
                                                                                                        var $7442 = self.ini;
                                                                                                        var $7443 = self.idx;
                                                                                                        var $7444 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7430, $7440), $7441, $7442, $7443, $7444);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7446 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#32", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7448 = self.err;
                                                                                                                        var self = $7446;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7450 = self.value;
                                                                                                                                var $7451 = Parser$Reply$error$(Parser$Error$combine$($7450, $7448));
                                                                                                                                var $7449 = $7451;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7452 = Parser$Reply$error$($7448);
                                                                                                                                var $7449 = $7452;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7447 = $7449;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7453 = self.pst;
                                                                                                                        var self = $7453;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7455 = self.err;
                                                                                                                                var $7456 = self.nam;
                                                                                                                                var $7457 = self.ini;
                                                                                                                                var $7458 = self.idx;
                                                                                                                                var $7459 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7446, $7455), $7456, $7457, $7458, $7459);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7407)) + ("." + String$from_list$($7438))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F32.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7460 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7454 = $7460;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7447 = $7454;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7445 = $7447;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7439 = $7445;
                                                                                                        break;
                                                                                                };
                                                                                                var $7431 = $7439;
                                                                                                break;
                                                                                        };
                                                                                        var $7429 = $7431;
                                                                                        break;
                                                                                };
                                                                                var $7423 = $7429;
                                                                                break;
                                                                        };
                                                                        var $7416 = $7423;
                                                                        break;
                                                                };
                                                                var $7414 = $7416;
                                                                break;
                                                        };
                                                        var $7408 = $7414;
                                                        break;
                                                };
                                                var $7400 = $7408;
                                                break;
                                        };
                                        var $7398 = $7400;
                                        break;
                                };
                                var $7392 = $7398;
                                break;
                        };
                        var $7384 = $7392;
                        break;
                };
                var $7382 = $7384;
                break;
        };
        return $7382;
    }));

    function Either$(_A$1, _B$2) {
        var $7461 = null;
        return $7461;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $7462 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $7462;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $7463 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $7463;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7464 = Either$left$(_n$1);
                    return $7464;
                } else {
                    var $7465 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7467 = Either$right$(Nat$succ$($7465));
                        var $7466 = $7467;
                    } else {
                        var $7468 = (self - 1n);
                        var $7469 = Nat$sub_rem$($7468, $7465);
                        var $7466 = $7469;
                    };
                    return $7466;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $7470 = self.value;
                        var $7471 = Nat$div_mod$go$($7470, _m$2, Nat$succ$(_d$3));
                        return $7471;
                    case 'Either.right':
                        var $7472 = Pair$new$(_d$3, _n$1);
                        return $7472;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $7473 = self.fst;
                        var $7474 = self.snd;
                        var self = $7473;
                        if (self === 0n) {
                            var $7476 = List$cons$($7474, _res$3);
                            var $7475 = $7476;
                        } else {
                            var $7477 = (self - 1n);
                            var $7478 = Nat$to_base$go$(_base$1, $7473, List$cons$($7474, _res$3));
                            var $7475 = $7478;
                        };
                        return $7475;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $7479 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $7479;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7480 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $7480;
                } else {
                    var $7481 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7483 = _r$3;
                        var $7482 = $7483;
                    } else {
                        var $7484 = (self - 1n);
                        var $7485 = Nat$mod$go$($7484, $7481, Nat$succ$(_r$3));
                        var $7482 = $7485;
                    };
                    return $7482;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7486 = self.head;
                        var $7487 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $7489 = Maybe$some$($7486);
                            var $7488 = $7489;
                        } else {
                            var $7490 = (self - 1n);
                            var $7491 = List$at$($7490, $7487);
                            var $7488 = $7491;
                        };
                        return $7488;
                    case 'List.nil':
                        var $7492 = Maybe$none;
                        return $7492;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $7495 = self.value;
                    var $7496 = $7495;
                    var $7494 = $7496;
                    break;
                case 'Maybe.none':
                    var $7497 = 35;
                    var $7494 = $7497;
                    break;
            };
            var $7493 = $7494;
        } else {
            var $7498 = 35;
            var $7493 = $7498;
        };
        return $7493;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $7499 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $7500 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $7500;
        }));
        return $7499;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $7501 = Nat$to_string_base$(10n, _n$1);
        return $7501;
    };
    const Nat$show = x0 => Nat$show$(x0);

    function Kind$Parser$int_pos$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7503 = self.err;
                var _reply$7 = Parser$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7505 = self.err;
                        var self = $7503;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7507 = self.value;
                                var $7508 = Parser$Reply$error$(Parser$Error$combine$($7507, $7505));
                                var $7506 = $7508;
                                break;
                            case 'Maybe.none':
                                var $7509 = Parser$Reply$error$($7505);
                                var $7506 = $7509;
                                break;
                        };
                        var $7504 = $7506;
                        break;
                    case 'Parser.Reply.value':
                        var $7510 = self.pst;
                        var self = $7510;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7512 = self.err;
                                var $7513 = self.nam;
                                var $7514 = self.ini;
                                var $7515 = self.idx;
                                var $7516 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7503, $7512), $7513, $7514, $7515, $7516);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7518 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7520 = self.err;
                                                var self = $7518;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7522 = self.value;
                                                        var $7523 = Parser$Reply$error$(Parser$Error$combine$($7522, $7520));
                                                        var $7521 = $7523;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7524 = Parser$Reply$error$($7520);
                                                        var $7521 = $7524;
                                                        break;
                                                };
                                                var $7519 = $7521;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7525 = self.pst;
                                                var $7526 = self.val;
                                                var self = $7525;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7528 = self.err;
                                                        var $7529 = self.nam;
                                                        var $7530 = self.ini;
                                                        var $7531 = self.idx;
                                                        var $7532 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7518, $7528), $7529, $7530, $7531, $7532);
                                                        var $7533 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$true, Nat$from_base$(10n, $7526)));
                                                        var $7527 = $7533;
                                                        break;
                                                };
                                                var $7519 = $7527;
                                                break;
                                        };
                                        var $7517 = $7519;
                                        break;
                                };
                                var $7511 = $7517;
                                break;
                        };
                        var $7504 = $7511;
                        break;
                };
                var $7502 = $7504;
                break;
        };
        return $7502;
    };
    const Kind$Parser$int_pos = x0 => Kind$Parser$int_pos$(x0);

    function Kind$Parser$int_neg$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7535 = self.err;
                var _reply$7 = Parser$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7537 = self.err;
                        var self = $7535;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7539 = self.value;
                                var $7540 = Parser$Reply$error$(Parser$Error$combine$($7539, $7537));
                                var $7538 = $7540;
                                break;
                            case 'Maybe.none':
                                var $7541 = Parser$Reply$error$($7537);
                                var $7538 = $7541;
                                break;
                        };
                        var $7536 = $7538;
                        break;
                    case 'Parser.Reply.value':
                        var $7542 = self.pst;
                        var self = $7542;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7544 = self.err;
                                var $7545 = self.nam;
                                var $7546 = self.ini;
                                var $7547 = self.idx;
                                var $7548 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7535, $7544), $7545, $7546, $7547, $7548);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7550 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7552 = self.err;
                                                var self = $7550;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7554 = self.value;
                                                        var $7555 = Parser$Reply$error$(Parser$Error$combine$($7554, $7552));
                                                        var $7553 = $7555;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7556 = Parser$Reply$error$($7552);
                                                        var $7553 = $7556;
                                                        break;
                                                };
                                                var $7551 = $7553;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7557 = self.pst;
                                                var $7558 = self.val;
                                                var self = $7557;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7560 = self.err;
                                                        var $7561 = self.nam;
                                                        var $7562 = self.ini;
                                                        var $7563 = self.idx;
                                                        var $7564 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7550, $7560), $7561, $7562, $7563, $7564);
                                                        var $7565 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$false, Nat$from_base$(10n, $7558)));
                                                        var $7559 = $7565;
                                                        break;
                                                };
                                                var $7551 = $7559;
                                                break;
                                        };
                                        var $7549 = $7551;
                                        break;
                                };
                                var $7543 = $7549;
                                break;
                        };
                        var $7536 = $7543;
                        break;
                };
                var $7534 = $7536;
                break;
        };
        return $7534;
    };
    const Kind$Parser$int_neg = x0 => Kind$Parser$int_neg$(x0);

    function Kind$Parser$machine_integer$signed$(_size$1) {
        var $7566 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7567 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7569 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7571 = self.err;
                                var self = $7569;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7573 = self.value;
                                        var $7574 = Parser$Reply$error$(Parser$Error$combine$($7573, $7571));
                                        var $7572 = $7574;
                                        break;
                                    case 'Maybe.none':
                                        var $7575 = Parser$Reply$error$($7571);
                                        var $7572 = $7575;
                                        break;
                                };
                                var $7570 = $7572;
                                break;
                            case 'Parser.Reply.value':
                                var $7576 = self.pst;
                                var self = $7576;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7578 = self.err;
                                        var $7579 = self.nam;
                                        var $7580 = self.ini;
                                        var $7581 = self.idx;
                                        var $7582 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7569, $7578), $7579, $7580, $7581, $7582);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7584 = self.err;
                                                var _reply$23 = Parser$choice$(List$cons$(Kind$Parser$int_pos, List$cons$(Kind$Parser$int_neg, List$nil)), _reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7586 = self.err;
                                                        var self = $7584;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7588 = self.value;
                                                                var $7589 = Parser$Reply$error$(Parser$Error$combine$($7588, $7586));
                                                                var $7587 = $7589;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7590 = Parser$Reply$error$($7586);
                                                                var $7587 = $7590;
                                                                break;
                                                        };
                                                        var $7585 = $7587;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7591 = self.pst;
                                                        var $7592 = self.val;
                                                        var self = $7591;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7594 = self.err;
                                                                var $7595 = self.nam;
                                                                var $7596 = self.ini;
                                                                var $7597 = self.idx;
                                                                var $7598 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7584, $7594), $7595, $7596, $7597, $7598);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7600 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + _size_str$2), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7602 = self.err;
                                                                                var self = $7600;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7604 = self.value;
                                                                                        var $7605 = Parser$Reply$error$(Parser$Error$combine$($7604, $7602));
                                                                                        var $7603 = $7605;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7606 = Parser$Reply$error$($7602);
                                                                                        var $7603 = $7606;
                                                                                        break;
                                                                                };
                                                                                var $7601 = $7603;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7607 = self.pst;
                                                                                var self = $7607;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7609 = self.err;
                                                                                        var $7610 = self.nam;
                                                                                        var $7611 = self.ini;
                                                                                        var $7612 = self.idx;
                                                                                        var $7613 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7600, $7609), $7610, $7611, $7612, $7613);
                                                                                        var $7614 = Parser$Reply$value$(_reply$pst$45, (() => {
                                                                                            var self = $7592;
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $7615 = self.fst;
                                                                                                    var $7616 = self.snd;
                                                                                                    var _term$48 = Kind$Term$ref$(("I" + (_size_str$2 + ".from_nat")));
                                                                                                    var _term$49 = Kind$Term$app$(_term$48, Kind$Term$nat$($7616));
                                                                                                    var self = $7615;
                                                                                                    if (self) {
                                                                                                        var $7618 = _term$49;
                                                                                                        var _term$50 = $7618;
                                                                                                    } else {
                                                                                                        var $7619 = Kind$Term$app$(Kind$Term$ref$(("I" + (_size_str$2 + ".neg"))), _term$49);
                                                                                                        var _term$50 = $7619;
                                                                                                    };
                                                                                                    var $7617 = _term$50;
                                                                                                    return $7617;
                                                                                            };
                                                                                        })());
                                                                                        var $7608 = $7614;
                                                                                        break;
                                                                                };
                                                                                var $7601 = $7608;
                                                                                break;
                                                                        };
                                                                        var $7599 = $7601;
                                                                        break;
                                                                };
                                                                var $7593 = $7599;
                                                                break;
                                                        };
                                                        var $7585 = $7593;
                                                        break;
                                                };
                                                var $7583 = $7585;
                                                break;
                                        };
                                        var $7577 = $7583;
                                        break;
                                };
                                var $7570 = $7577;
                                break;
                        };
                        var $7568 = $7570;
                        break;
                };
                return $7568;
            });
            return $7567;
        })());
        return $7566;
    };
    const Kind$Parser$machine_integer$signed = x0 => Kind$Parser$machine_integer$signed$(x0);

    function Parser$hex_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7621 = self.err;
                var $7622 = self.nam;
                var $7623 = self.ini;
                var $7624 = self.idx;
                var $7625 = self.str;
                var self = $7625;
                if (self.length === 0) {
                    var $7627 = Parser$Reply$fail$($7622, $7623, $7624, "Not a digit.");
                    var $7626 = $7627;
                } else {
                    var $7628 = self.charCodeAt(0);
                    var $7629 = self.slice(1);
                    var _pst$9 = Parser$State$new$($7621, $7622, $7623, Nat$succ$($7624), $7629);
                    var self = ($7628 === 48);
                    if (self) {
                        var $7631 = Parser$Reply$value$(_pst$9, 0n);
                        var $7630 = $7631;
                    } else {
                        var self = ($7628 === 49);
                        if (self) {
                            var $7633 = Parser$Reply$value$(_pst$9, 1n);
                            var $7632 = $7633;
                        } else {
                            var self = ($7628 === 50);
                            if (self) {
                                var $7635 = Parser$Reply$value$(_pst$9, 2n);
                                var $7634 = $7635;
                            } else {
                                var self = ($7628 === 51);
                                if (self) {
                                    var $7637 = Parser$Reply$value$(_pst$9, 3n);
                                    var $7636 = $7637;
                                } else {
                                    var self = ($7628 === 52);
                                    if (self) {
                                        var $7639 = Parser$Reply$value$(_pst$9, 4n);
                                        var $7638 = $7639;
                                    } else {
                                        var self = ($7628 === 53);
                                        if (self) {
                                            var $7641 = Parser$Reply$value$(_pst$9, 5n);
                                            var $7640 = $7641;
                                        } else {
                                            var self = ($7628 === 54);
                                            if (self) {
                                                var $7643 = Parser$Reply$value$(_pst$9, 6n);
                                                var $7642 = $7643;
                                            } else {
                                                var self = ($7628 === 55);
                                                if (self) {
                                                    var $7645 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $7644 = $7645;
                                                } else {
                                                    var self = ($7628 === 56);
                                                    if (self) {
                                                        var $7647 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $7646 = $7647;
                                                    } else {
                                                        var self = ($7628 === 57);
                                                        if (self) {
                                                            var $7649 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $7648 = $7649;
                                                        } else {
                                                            var self = ($7628 === 97);
                                                            if (self) {
                                                                var $7651 = Parser$Reply$value$(_pst$9, 10n);
                                                                var $7650 = $7651;
                                                            } else {
                                                                var self = ($7628 === 98);
                                                                if (self) {
                                                                    var $7653 = Parser$Reply$value$(_pst$9, 11n);
                                                                    var $7652 = $7653;
                                                                } else {
                                                                    var self = ($7628 === 99);
                                                                    if (self) {
                                                                        var $7655 = Parser$Reply$value$(_pst$9, 12n);
                                                                        var $7654 = $7655;
                                                                    } else {
                                                                        var self = ($7628 === 100);
                                                                        if (self) {
                                                                            var $7657 = Parser$Reply$value$(_pst$9, 13n);
                                                                            var $7656 = $7657;
                                                                        } else {
                                                                            var self = ($7628 === 101);
                                                                            if (self) {
                                                                                var $7659 = Parser$Reply$value$(_pst$9, 14n);
                                                                                var $7658 = $7659;
                                                                            } else {
                                                                                var self = ($7628 === 102);
                                                                                if (self) {
                                                                                    var $7661 = Parser$Reply$value$(_pst$9, 15n);
                                                                                    var $7660 = $7661;
                                                                                } else {
                                                                                    var self = ($7628 === 65);
                                                                                    if (self) {
                                                                                        var $7663 = Parser$Reply$value$(_pst$9, 10n);
                                                                                        var $7662 = $7663;
                                                                                    } else {
                                                                                        var self = ($7628 === 66);
                                                                                        if (self) {
                                                                                            var $7665 = Parser$Reply$value$(_pst$9, 11n);
                                                                                            var $7664 = $7665;
                                                                                        } else {
                                                                                            var self = ($7628 === 67);
                                                                                            if (self) {
                                                                                                var $7667 = Parser$Reply$value$(_pst$9, 12n);
                                                                                                var $7666 = $7667;
                                                                                            } else {
                                                                                                var self = ($7628 === 68);
                                                                                                if (self) {
                                                                                                    var $7669 = Parser$Reply$value$(_pst$9, 13n);
                                                                                                    var $7668 = $7669;
                                                                                                } else {
                                                                                                    var self = ($7628 === 69);
                                                                                                    if (self) {
                                                                                                        var $7671 = Parser$Reply$value$(_pst$9, 14n);
                                                                                                        var $7670 = $7671;
                                                                                                    } else {
                                                                                                        var self = ($7628 === 70);
                                                                                                        if (self) {
                                                                                                            var $7673 = Parser$Reply$value$(_pst$9, 15n);
                                                                                                            var $7672 = $7673;
                                                                                                        } else {
                                                                                                            var $7674 = Parser$Reply$fail$($7622, $7623, $7624, "Not a digit.");
                                                                                                            var $7672 = $7674;
                                                                                                        };
                                                                                                        var $7670 = $7672;
                                                                                                    };
                                                                                                    var $7668 = $7670;
                                                                                                };
                                                                                                var $7666 = $7668;
                                                                                            };
                                                                                            var $7664 = $7666;
                                                                                        };
                                                                                        var $7662 = $7664;
                                                                                    };
                                                                                    var $7660 = $7662;
                                                                                };
                                                                                var $7658 = $7660;
                                                                            };
                                                                            var $7656 = $7658;
                                                                        };
                                                                        var $7654 = $7656;
                                                                    };
                                                                    var $7652 = $7654;
                                                                };
                                                                var $7650 = $7652;
                                                            };
                                                            var $7648 = $7650;
                                                        };
                                                        var $7646 = $7648;
                                                    };
                                                    var $7644 = $7646;
                                                };
                                                var $7642 = $7644;
                                            };
                                            var $7640 = $7642;
                                        };
                                        var $7638 = $7640;
                                    };
                                    var $7636 = $7638;
                                };
                                var $7634 = $7636;
                            };
                            var $7632 = $7634;
                        };
                        var $7630 = $7632;
                    };
                    var $7626 = $7630;
                };
                var $7620 = $7626;
                break;
        };
        return $7620;
    };
    const Parser$hex_digit = x0 => Parser$hex_digit$(x0);

    function Parser$hex_nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7676 = self.err;
                var _reply$7 = Parser$text$("0x", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7678 = self.err;
                        var self = $7676;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7680 = self.value;
                                var $7681 = Parser$Reply$error$(Parser$Error$combine$($7680, $7678));
                                var $7679 = $7681;
                                break;
                            case 'Maybe.none':
                                var $7682 = Parser$Reply$error$($7678);
                                var $7679 = $7682;
                                break;
                        };
                        var $7677 = $7679;
                        break;
                    case 'Parser.Reply.value':
                        var $7683 = self.pst;
                        var self = $7683;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7685 = self.err;
                                var $7686 = self.nam;
                                var $7687 = self.ini;
                                var $7688 = self.idx;
                                var $7689 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7676, $7685), $7686, $7687, $7688, $7689);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7691 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$hex_digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7693 = self.err;
                                                var self = $7691;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7695 = self.value;
                                                        var $7696 = Parser$Reply$error$(Parser$Error$combine$($7695, $7693));
                                                        var $7694 = $7696;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7697 = Parser$Reply$error$($7693);
                                                        var $7694 = $7697;
                                                        break;
                                                };
                                                var $7692 = $7694;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7698 = self.pst;
                                                var $7699 = self.val;
                                                var self = $7698;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7701 = self.err;
                                                        var $7702 = self.nam;
                                                        var $7703 = self.ini;
                                                        var $7704 = self.idx;
                                                        var $7705 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7691, $7701), $7702, $7703, $7704, $7705);
                                                        var $7706 = Parser$Reply$value$(_reply$pst$29, Nat$from_base$(16n, $7699));
                                                        var $7700 = $7706;
                                                        break;
                                                };
                                                var $7692 = $7700;
                                                break;
                                        };
                                        var $7690 = $7692;
                                        break;
                                };
                                var $7684 = $7690;
                                break;
                        };
                        var $7677 = $7684;
                        break;
                };
                var $7675 = $7677;
                break;
        };
        return $7675;
    };
    const Parser$hex_nat = x0 => Parser$hex_nat$(x0);
    const Kind$Parser$nat = Kind$Parser$block("nat")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7708 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7710 = self.err;
                        var self = $7708;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7712 = self.value;
                                var $7713 = Parser$Reply$error$(Parser$Error$combine$($7712, $7710));
                                var $7711 = $7713;
                                break;
                            case 'Maybe.none':
                                var $7714 = Parser$Reply$error$($7710);
                                var $7711 = $7714;
                                break;
                        };
                        var $7709 = $7711;
                        break;
                    case 'Parser.Reply.value':
                        var $7715 = self.pst;
                        var self = $7715;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7717 = self.err;
                                var $7718 = self.nam;
                                var $7719 = self.ini;
                                var $7720 = self.idx;
                                var $7721 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7708, $7717), $7718, $7719, $7720, $7721);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7723 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7725 = self.err;
                                                var self = $7723;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7727 = self.value;
                                                        var $7728 = Parser$Reply$error$(Parser$Error$combine$($7727, $7725));
                                                        var $7726 = $7728;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7729 = Parser$Reply$error$($7725);
                                                        var $7726 = $7729;
                                                        break;
                                                };
                                                var $7724 = $7726;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7730 = self.pst;
                                                var $7731 = self.val;
                                                var self = $7730;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7733 = self.err;
                                                        var $7734 = self.nam;
                                                        var $7735 = self.ini;
                                                        var $7736 = self.idx;
                                                        var $7737 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7723, $7733), $7734, $7735, $7736, $7737);
                                                        var $7738 = Parser$Reply$value$(_reply$pst$29, Kind$Term$nat$($7731));
                                                        var $7732 = $7738;
                                                        break;
                                                };
                                                var $7724 = $7732;
                                                break;
                                        };
                                        var $7722 = $7724;
                                        break;
                                };
                                var $7716 = $7722;
                                break;
                        };
                        var $7709 = $7716;
                        break;
                };
                var $7707 = $7709;
                break;
        };
        return $7707;
    }));

    function Kind$Parser$machine_integer$unsigned$(_size$1) {
        var $7739 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7740 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7742 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7744 = self.err;
                                var self = $7742;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7746 = self.value;
                                        var $7747 = Parser$Reply$error$(Parser$Error$combine$($7746, $7744));
                                        var $7745 = $7747;
                                        break;
                                    case 'Maybe.none':
                                        var $7748 = Parser$Reply$error$($7744);
                                        var $7745 = $7748;
                                        break;
                                };
                                var $7743 = $7745;
                                break;
                            case 'Parser.Reply.value':
                                var $7749 = self.pst;
                                var self = $7749;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7751 = self.err;
                                        var $7752 = self.nam;
                                        var $7753 = self.ini;
                                        var $7754 = self.idx;
                                        var $7755 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7742, $7751), $7752, $7753, $7754, $7755);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7757 = self.err;
                                                var _reply$23 = Kind$Parser$nat(_reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7759 = self.err;
                                                        var self = $7757;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7761 = self.value;
                                                                var $7762 = Parser$Reply$error$(Parser$Error$combine$($7761, $7759));
                                                                var $7760 = $7762;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7763 = Parser$Reply$error$($7759);
                                                                var $7760 = $7763;
                                                                break;
                                                        };
                                                        var $7758 = $7760;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7764 = self.pst;
                                                        var $7765 = self.val;
                                                        var self = $7764;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7767 = self.err;
                                                                var $7768 = self.nam;
                                                                var $7769 = self.ini;
                                                                var $7770 = self.idx;
                                                                var $7771 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7757, $7767), $7768, $7769, $7770, $7771);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7773 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + Nat$show$(_size$1)), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7775 = self.err;
                                                                                var self = $7773;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7777 = self.value;
                                                                                        var $7778 = Parser$Reply$error$(Parser$Error$combine$($7777, $7775));
                                                                                        var $7776 = $7778;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7779 = Parser$Reply$error$($7775);
                                                                                        var $7776 = $7779;
                                                                                        break;
                                                                                };
                                                                                var $7774 = $7776;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7780 = self.pst;
                                                                                var self = $7780;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7782 = self.err;
                                                                                        var $7783 = self.nam;
                                                                                        var $7784 = self.ini;
                                                                                        var $7785 = self.idx;
                                                                                        var $7786 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7773, $7782), $7783, $7784, $7785, $7786);
                                                                                        var _term$46 = Kind$Term$ref$(("Nat.to_u" + Nat$show$(_size$1)));
                                                                                        var _term$47 = Kind$Term$app$(_term$46, $7765);
                                                                                        var $7787 = Parser$Reply$value$(_reply$pst$45, _term$47);
                                                                                        var $7781 = $7787;
                                                                                        break;
                                                                                };
                                                                                var $7774 = $7781;
                                                                                break;
                                                                        };
                                                                        var $7772 = $7774;
                                                                        break;
                                                                };
                                                                var $7766 = $7772;
                                                                break;
                                                        };
                                                        var $7758 = $7766;
                                                        break;
                                                };
                                                var $7756 = $7758;
                                                break;
                                        };
                                        var $7750 = $7756;
                                        break;
                                };
                                var $7743 = $7750;
                                break;
                        };
                        var $7741 = $7743;
                        break;
                };
                return $7741;
            });
            return $7740;
        })());
        return $7739;
    };
    const Kind$Parser$machine_integer$unsigned = x0 => Kind$Parser$machine_integer$unsigned$(x0);
    const Kind$Parser$u64 = Kind$Parser$block("u64")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7789 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7791 = self.err;
                        var self = $7789;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7793 = self.value;
                                var $7794 = Parser$Reply$error$(Parser$Error$combine$($7793, $7791));
                                var $7792 = $7794;
                                break;
                            case 'Maybe.none':
                                var $7795 = Parser$Reply$error$($7791);
                                var $7792 = $7795;
                                break;
                        };
                        var $7790 = $7792;
                        break;
                    case 'Parser.Reply.value':
                        var $7796 = self.pst;
                        var self = $7796;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7798 = self.err;
                                var $7799 = self.nam;
                                var $7800 = self.ini;
                                var $7801 = self.idx;
                                var $7802 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7789, $7798), $7799, $7800, $7801, $7802);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7804 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7806 = self.err;
                                                var self = $7804;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7808 = self.value;
                                                        var $7809 = Parser$Reply$error$(Parser$Error$combine$($7808, $7806));
                                                        var $7807 = $7809;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7810 = Parser$Reply$error$($7806);
                                                        var $7807 = $7810;
                                                        break;
                                                };
                                                var $7805 = $7807;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7811 = self.pst;
                                                var $7812 = self.val;
                                                var self = $7811;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7814 = self.err;
                                                        var $7815 = self.nam;
                                                        var $7816 = self.ini;
                                                        var $7817 = self.idx;
                                                        var $7818 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7804, $7814), $7815, $7816, $7817, $7818);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7820 = self.err;
                                                                var _reply$35 = Parser$text$("l", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7822 = self.err;
                                                                        var self = $7820;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7824 = self.value;
                                                                                var $7825 = Parser$Reply$error$(Parser$Error$combine$($7824, $7822));
                                                                                var $7823 = $7825;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7826 = Parser$Reply$error$($7822);
                                                                                var $7823 = $7826;
                                                                                break;
                                                                        };
                                                                        var $7821 = $7823;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7827 = self.pst;
                                                                        var self = $7827;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7829 = self.err;
                                                                                var $7830 = self.nam;
                                                                                var $7831 = self.ini;
                                                                                var $7832 = self.idx;
                                                                                var $7833 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7820, $7829), $7830, $7831, $7832, $7833);
                                                                                var _term$44 = Kind$Term$ref$("U64.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7812));
                                                                                var $7834 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7828 = $7834;
                                                                                break;
                                                                        };
                                                                        var $7821 = $7828;
                                                                        break;
                                                                };
                                                                var $7819 = $7821;
                                                                break;
                                                        };
                                                        var $7813 = $7819;
                                                        break;
                                                };
                                                var $7805 = $7813;
                                                break;
                                        };
                                        var $7803 = $7805;
                                        break;
                                };
                                var $7797 = $7803;
                                break;
                        };
                        var $7790 = $7797;
                        break;
                };
                var $7788 = $7790;
                break;
        };
        return $7788;
    }));
    const Kind$Parser$u32 = Kind$Parser$block("u32")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7836 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7838 = self.err;
                        var self = $7836;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7840 = self.value;
                                var $7841 = Parser$Reply$error$(Parser$Error$combine$($7840, $7838));
                                var $7839 = $7841;
                                break;
                            case 'Maybe.none':
                                var $7842 = Parser$Reply$error$($7838);
                                var $7839 = $7842;
                                break;
                        };
                        var $7837 = $7839;
                        break;
                    case 'Parser.Reply.value':
                        var $7843 = self.pst;
                        var self = $7843;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7845 = self.err;
                                var $7846 = self.nam;
                                var $7847 = self.ini;
                                var $7848 = self.idx;
                                var $7849 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7836, $7845), $7846, $7847, $7848, $7849);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7851 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7853 = self.err;
                                                var self = $7851;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7855 = self.value;
                                                        var $7856 = Parser$Reply$error$(Parser$Error$combine$($7855, $7853));
                                                        var $7854 = $7856;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7857 = Parser$Reply$error$($7853);
                                                        var $7854 = $7857;
                                                        break;
                                                };
                                                var $7852 = $7854;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7858 = self.pst;
                                                var $7859 = self.val;
                                                var self = $7858;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7861 = self.err;
                                                        var $7862 = self.nam;
                                                        var $7863 = self.ini;
                                                        var $7864 = self.idx;
                                                        var $7865 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7851, $7861), $7862, $7863, $7864, $7865);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7867 = self.err;
                                                                var _reply$35 = Parser$text$("u", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7869 = self.err;
                                                                        var self = $7867;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7871 = self.value;
                                                                                var $7872 = Parser$Reply$error$(Parser$Error$combine$($7871, $7869));
                                                                                var $7870 = $7872;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7873 = Parser$Reply$error$($7869);
                                                                                var $7870 = $7873;
                                                                                break;
                                                                        };
                                                                        var $7868 = $7870;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7874 = self.pst;
                                                                        var self = $7874;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7876 = self.err;
                                                                                var $7877 = self.nam;
                                                                                var $7878 = self.ini;
                                                                                var $7879 = self.idx;
                                                                                var $7880 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7867, $7876), $7877, $7878, $7879, $7880);
                                                                                var _term$44 = Kind$Term$ref$("U32.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7859));
                                                                                var $7881 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7875 = $7881;
                                                                                break;
                                                                        };
                                                                        var $7868 = $7875;
                                                                        break;
                                                                };
                                                                var $7866 = $7868;
                                                                break;
                                                        };
                                                        var $7860 = $7866;
                                                        break;
                                                };
                                                var $7852 = $7860;
                                                break;
                                        };
                                        var $7850 = $7852;
                                        break;
                                };
                                var $7844 = $7850;
                                break;
                        };
                        var $7837 = $7844;
                        break;
                };
                var $7835 = $7837;
                break;
        };
        return $7835;
    }));
    const Kind$Parser$u16 = Kind$Parser$block("u16")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7883 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7885 = self.err;
                        var self = $7883;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7887 = self.value;
                                var $7888 = Parser$Reply$error$(Parser$Error$combine$($7887, $7885));
                                var $7886 = $7888;
                                break;
                            case 'Maybe.none':
                                var $7889 = Parser$Reply$error$($7885);
                                var $7886 = $7889;
                                break;
                        };
                        var $7884 = $7886;
                        break;
                    case 'Parser.Reply.value':
                        var $7890 = self.pst;
                        var self = $7890;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7892 = self.err;
                                var $7893 = self.nam;
                                var $7894 = self.ini;
                                var $7895 = self.idx;
                                var $7896 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7883, $7892), $7893, $7894, $7895, $7896);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7898 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7900 = self.err;
                                                var self = $7898;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7902 = self.value;
                                                        var $7903 = Parser$Reply$error$(Parser$Error$combine$($7902, $7900));
                                                        var $7901 = $7903;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7904 = Parser$Reply$error$($7900);
                                                        var $7901 = $7904;
                                                        break;
                                                };
                                                var $7899 = $7901;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7905 = self.pst;
                                                var $7906 = self.val;
                                                var self = $7905;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7908 = self.err;
                                                        var $7909 = self.nam;
                                                        var $7910 = self.ini;
                                                        var $7911 = self.idx;
                                                        var $7912 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7898, $7908), $7909, $7910, $7911, $7912);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7914 = self.err;
                                                                var _reply$35 = Parser$text$("s", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7916 = self.err;
                                                                        var self = $7914;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7918 = self.value;
                                                                                var $7919 = Parser$Reply$error$(Parser$Error$combine$($7918, $7916));
                                                                                var $7917 = $7919;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7920 = Parser$Reply$error$($7916);
                                                                                var $7917 = $7920;
                                                                                break;
                                                                        };
                                                                        var $7915 = $7917;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7921 = self.pst;
                                                                        var self = $7921;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7923 = self.err;
                                                                                var $7924 = self.nam;
                                                                                var $7925 = self.ini;
                                                                                var $7926 = self.idx;
                                                                                var $7927 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7914, $7923), $7924, $7925, $7926, $7927);
                                                                                var _term$44 = Kind$Term$ref$("U16.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7906));
                                                                                var $7928 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7922 = $7928;
                                                                                break;
                                                                        };
                                                                        var $7915 = $7922;
                                                                        break;
                                                                };
                                                                var $7913 = $7915;
                                                                break;
                                                        };
                                                        var $7907 = $7913;
                                                        break;
                                                };
                                                var $7899 = $7907;
                                                break;
                                        };
                                        var $7897 = $7899;
                                        break;
                                };
                                var $7891 = $7897;
                                break;
                        };
                        var $7884 = $7891;
                        break;
                };
                var $7882 = $7884;
                break;
        };
        return $7882;
    }));
    const Kind$Parser$u8 = Kind$Parser$block("u8")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7930 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7932 = self.err;
                        var self = $7930;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7934 = self.value;
                                var $7935 = Parser$Reply$error$(Parser$Error$combine$($7934, $7932));
                                var $7933 = $7935;
                                break;
                            case 'Maybe.none':
                                var $7936 = Parser$Reply$error$($7932);
                                var $7933 = $7936;
                                break;
                        };
                        var $7931 = $7933;
                        break;
                    case 'Parser.Reply.value':
                        var $7937 = self.pst;
                        var self = $7937;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7939 = self.err;
                                var $7940 = self.nam;
                                var $7941 = self.ini;
                                var $7942 = self.idx;
                                var $7943 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7930, $7939), $7940, $7941, $7942, $7943);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7945 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7947 = self.err;
                                                var self = $7945;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7949 = self.value;
                                                        var $7950 = Parser$Reply$error$(Parser$Error$combine$($7949, $7947));
                                                        var $7948 = $7950;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7951 = Parser$Reply$error$($7947);
                                                        var $7948 = $7951;
                                                        break;
                                                };
                                                var $7946 = $7948;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7952 = self.pst;
                                                var $7953 = self.val;
                                                var self = $7952;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7955 = self.err;
                                                        var $7956 = self.nam;
                                                        var $7957 = self.ini;
                                                        var $7958 = self.idx;
                                                        var $7959 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7945, $7955), $7956, $7957, $7958, $7959);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7961 = self.err;
                                                                var _reply$35 = Parser$text$("b", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7963 = self.err;
                                                                        var self = $7961;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7965 = self.value;
                                                                                var $7966 = Parser$Reply$error$(Parser$Error$combine$($7965, $7963));
                                                                                var $7964 = $7966;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7967 = Parser$Reply$error$($7963);
                                                                                var $7964 = $7967;
                                                                                break;
                                                                        };
                                                                        var $7962 = $7964;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7968 = self.pst;
                                                                        var self = $7968;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7970 = self.err;
                                                                                var $7971 = self.nam;
                                                                                var $7972 = self.ini;
                                                                                var $7973 = self.idx;
                                                                                var $7974 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7961, $7970), $7971, $7972, $7973, $7974);
                                                                                var _term$44 = Kind$Term$ref$("U8.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7953));
                                                                                var $7975 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7969 = $7975;
                                                                                break;
                                                                        };
                                                                        var $7962 = $7969;
                                                                        break;
                                                                };
                                                                var $7960 = $7962;
                                                                break;
                                                        };
                                                        var $7954 = $7960;
                                                        break;
                                                };
                                                var $7946 = $7954;
                                                break;
                                        };
                                        var $7944 = $7946;
                                        break;
                                };
                                var $7938 = $7944;
                                break;
                        };
                        var $7931 = $7938;
                        break;
                };
                var $7929 = $7931;
                break;
        };
        return $7929;
    }));

    function Parser$Number$new$(_sign$1, _numb$2, _frac$3) {
        var $7976 = ({
            _: 'Parser.Number.new',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7976;
    };
    const Parser$Number$new = x0 => x1 => x2 => Parser$Number$new$(x0, x1, x2);

    function Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7978 = self.err;
                var _reply$7 = Parser$choice$(List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7981 = self.err;
                            var _reply$13 = Parser$text$("+", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7983 = self.err;
                                    var self = $7981;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7985 = self.value;
                                            var $7986 = Parser$Reply$error$(Parser$Error$combine$($7985, $7983));
                                            var $7984 = $7986;
                                            break;
                                        case 'Maybe.none':
                                            var $7987 = Parser$Reply$error$($7983);
                                            var $7984 = $7987;
                                            break;
                                    };
                                    var $7982 = $7984;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7988 = self.pst;
                                    var self = $7988;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7990 = self.err;
                                            var $7991 = self.nam;
                                            var $7992 = self.ini;
                                            var $7993 = self.idx;
                                            var $7994 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7981, $7990), $7991, $7992, $7993, $7994);
                                            var $7995 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$true));
                                            var $7989 = $7995;
                                            break;
                                    };
                                    var $7982 = $7989;
                                    break;
                            };
                            var $7980 = $7982;
                            break;
                    };
                    return $7980;
                }), List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7997 = self.err;
                            var _reply$13 = Parser$text$("-", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7999 = self.err;
                                    var self = $7997;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $8001 = self.value;
                                            var $8002 = Parser$Reply$error$(Parser$Error$combine$($8001, $7999));
                                            var $8000 = $8002;
                                            break;
                                        case 'Maybe.none':
                                            var $8003 = Parser$Reply$error$($7999);
                                            var $8000 = $8003;
                                            break;
                                    };
                                    var $7998 = $8000;
                                    break;
                                case 'Parser.Reply.value':
                                    var $8004 = self.pst;
                                    var self = $8004;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8006 = self.err;
                                            var $8007 = self.nam;
                                            var $8008 = self.ini;
                                            var $8009 = self.idx;
                                            var $8010 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7997, $8006), $8007, $8008, $8009, $8010);
                                            var $8011 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$false));
                                            var $8005 = $8011;
                                            break;
                                    };
                                    var $7998 = $8005;
                                    break;
                            };
                            var $7996 = $7998;
                            break;
                    };
                    return $7996;
                }), List$cons$((_pst$7 => {
                    var $8012 = Parser$Reply$value$(_pst$7, Maybe$none);
                    return $8012;
                }), List$nil))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8013 = self.err;
                        var self = $7978;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8015 = self.value;
                                var $8016 = Parser$Reply$error$(Parser$Error$combine$($8015, $8013));
                                var $8014 = $8016;
                                break;
                            case 'Maybe.none':
                                var $8017 = Parser$Reply$error$($8013);
                                var $8014 = $8017;
                                break;
                        };
                        var $7979 = $8014;
                        break;
                    case 'Parser.Reply.value':
                        var $8018 = self.pst;
                        var $8019 = self.val;
                        var self = $8018;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8021 = self.err;
                                var $8022 = self.nam;
                                var $8023 = self.ini;
                                var $8024 = self.idx;
                                var $8025 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7978, $8021), $8022, $8023, $8024, $8025);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8027 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8029 = self.err;
                                                var self = $8027;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8031 = self.value;
                                                        var $8032 = Parser$Reply$error$(Parser$Error$combine$($8031, $8029));
                                                        var $8030 = $8032;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8033 = Parser$Reply$error$($8029);
                                                        var $8030 = $8033;
                                                        break;
                                                };
                                                var $8028 = $8030;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8034 = self.pst;
                                                var $8035 = self.val;
                                                var self = $8034;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8037 = self.err;
                                                        var $8038 = self.nam;
                                                        var $8039 = self.ini;
                                                        var $8040 = self.idx;
                                                        var $8041 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($8027, $8037), $8038, $8039, $8040, $8041);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8043 = self.err;
                                                                var self = _reply$pst$29;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $8045 = self.err;
                                                                        var _reply$40 = Parser$maybe$(Parser$text("."), _reply$pst$29);
                                                                        var self = _reply$40;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $8047 = self.err;
                                                                                var self = $8045;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $8049 = self.value;
                                                                                        var $8050 = Parser$Reply$error$(Parser$Error$combine$($8049, $8047));
                                                                                        var $8048 = $8050;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $8051 = Parser$Reply$error$($8047);
                                                                                        var $8048 = $8051;
                                                                                        break;
                                                                                };
                                                                                var $8046 = $8048;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $8052 = self.pst;
                                                                                var self = $8052;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8054 = self.err;
                                                                                        var $8055 = self.nam;
                                                                                        var $8056 = self.ini;
                                                                                        var $8057 = self.idx;
                                                                                        var $8058 = self.str;
                                                                                        var _reply$pst$48 = Parser$State$new$(Parser$Error$maybe_combine$($8045, $8054), $8055, $8056, $8057, $8058);
                                                                                        var self = _reply$pst$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $8060 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$nat, _reply$pst$48);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $8062 = self.err;
                                                                                                        var self = $8060;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $8064 = self.value;
                                                                                                                var $8065 = Parser$Reply$error$(Parser$Error$combine$($8064, $8062));
                                                                                                                var $8063 = $8065;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $8066 = Parser$Reply$error$($8062);
                                                                                                                var $8063 = $8066;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8061 = $8063;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $8067 = self.pst;
                                                                                                        var $8068 = self.val;
                                                                                                        var self = $8067;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8070 = self.err;
                                                                                                                var $8071 = self.nam;
                                                                                                                var $8072 = self.ini;
                                                                                                                var $8073 = self.idx;
                                                                                                                var $8074 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($8060, $8070), $8071, $8072, $8073, $8074);
                                                                                                                var $8075 = Parser$Reply$value$(_reply$pst$62, $8068);
                                                                                                                var $8069 = $8075;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8061 = $8069;
                                                                                                        break;
                                                                                                };
                                                                                                var $8059 = $8061;
                                                                                                break;
                                                                                        };
                                                                                        var $8053 = $8059;
                                                                                        break;
                                                                                };
                                                                                var $8046 = $8053;
                                                                                break;
                                                                        };
                                                                        var _reply$35 = $8046;
                                                                        break;
                                                                };
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8076 = self.err;
                                                                        var self = $8043;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8078 = self.value;
                                                                                var $8079 = Parser$Reply$error$(Parser$Error$combine$($8078, $8076));
                                                                                var $8077 = $8079;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8080 = Parser$Reply$error$($8076);
                                                                                var $8077 = $8080;
                                                                                break;
                                                                        };
                                                                        var $8044 = $8077;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8081 = self.pst;
                                                                        var $8082 = self.val;
                                                                        var self = $8081;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8084 = self.err;
                                                                                var $8085 = self.nam;
                                                                                var $8086 = self.ini;
                                                                                var $8087 = self.idx;
                                                                                var $8088 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($8043, $8084), $8085, $8086, $8087, $8088);
                                                                                var $8089 = Parser$Reply$value$(_reply$pst$43, Parser$Number$new$($8019, $8035, $8082));
                                                                                var $8083 = $8089;
                                                                                break;
                                                                        };
                                                                        var $8044 = $8083;
                                                                        break;
                                                                };
                                                                var $8042 = $8044;
                                                                break;
                                                        };
                                                        var $8036 = $8042;
                                                        break;
                                                };
                                                var $8028 = $8036;
                                                break;
                                        };
                                        var $8026 = $8028;
                                        break;
                                };
                                var $8020 = $8026;
                                break;
                        };
                        var $7979 = $8020;
                        break;
                };
                var $7977 = $7979;
                break;
        };
        return $7977;
    };
    const Parser$num = x0 => Parser$num$(x0);

    function Kind$Term$num$(_sign$1, _numb$2, _frac$3) {
        var $8090 = ({
            _: 'Kind.Term.num',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $8090;
    };
    const Kind$Term$num = x0 => x1 => x2 => Kind$Term$num$(x0, x1, x2);

    function Kind$Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8092 = self.err;
                var _reply$7 = Parser$num$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8094 = self.err;
                        var self = $8092;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8096 = self.value;
                                var $8097 = Parser$Reply$error$(Parser$Error$combine$($8096, $8094));
                                var $8095 = $8097;
                                break;
                            case 'Maybe.none':
                                var $8098 = Parser$Reply$error$($8094);
                                var $8095 = $8098;
                                break;
                        };
                        var $8093 = $8095;
                        break;
                    case 'Parser.Reply.value':
                        var $8099 = self.pst;
                        var $8100 = self.val;
                        var self = $8099;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8102 = self.err;
                                var $8103 = self.nam;
                                var $8104 = self.ini;
                                var $8105 = self.idx;
                                var $8106 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8092, $8102), $8103, $8104, $8105, $8106);
                                var self = $8100;
                                switch (self._) {
                                    case 'Parser.Number.new':
                                        var $8108 = self.sign;
                                        var $8109 = self.numb;
                                        var $8110 = self.frac;
                                        var self = $8108;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var self = $8110;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $8113 = (_pst$19 => {
                                                            var $8114 = Parser$Reply$value$(_pst$19, Kind$Term$nat$($8109));
                                                            return $8114;
                                                        });
                                                        var $8112 = $8113;
                                                        break;
                                                    case 'Maybe.some':
                                                        var $8115 = (_pst$20 => {
                                                            var $8116 = Parser$Reply$value$(_pst$20, Kind$Term$num$($8108, $8109, $8110));
                                                            return $8116;
                                                        });
                                                        var $8112 = $8115;
                                                        break;
                                                };
                                                var $8111 = $8112;
                                                break;
                                            case 'Maybe.some':
                                                var $8117 = (_pst$20 => {
                                                    var $8118 = Parser$Reply$value$(_pst$20, Kind$Term$num$($8108, $8109, $8110));
                                                    return $8118;
                                                });
                                                var $8111 = $8117;
                                                break;
                                        };
                                        var $8107 = $8111;
                                        break;
                                };
                                var $8107 = $8107(_reply$pst$15);
                                var $8101 = $8107;
                                break;
                        };
                        var $8093 = $8101;
                        break;
                };
                var $8091 = $8093;
                break;
        };
        return $8091;
    };
    const Kind$Parser$num = x0 => Kind$Parser$num$(x0);
    const Kind$Parser$reference = Kind$Parser$block("reference")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8120 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8122 = self.err;
                        var self = $8120;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8124 = self.value;
                                var $8125 = Parser$Reply$error$(Parser$Error$combine$($8124, $8122));
                                var $8123 = $8125;
                                break;
                            case 'Maybe.none':
                                var $8126 = Parser$Reply$error$($8122);
                                var $8123 = $8126;
                                break;
                        };
                        var $8121 = $8123;
                        break;
                    case 'Parser.Reply.value':
                        var $8127 = self.pst;
                        var $8128 = self.val;
                        var self = $8127;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8130 = self.err;
                                var $8131 = self.nam;
                                var $8132 = self.ini;
                                var $8133 = self.idx;
                                var $8134 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8120, $8130), $8131, $8132, $8133, $8134);
                                var self = ($8128 === "Type");
                                if (self) {
                                    var $8136 = (_pst$16 => {
                                        var $8137 = Parser$Reply$value$(_pst$16, Kind$Term$typ);
                                        return $8137;
                                    });
                                    var $8135 = $8136;
                                } else {
                                    var self = ($8128 === "true");
                                    if (self) {
                                        var $8139 = (_pst$16 => {
                                            var $8140 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.true"));
                                            return $8140;
                                        });
                                        var $8138 = $8139;
                                    } else {
                                        var self = ($8128 === "false");
                                        if (self) {
                                            var $8142 = (_pst$16 => {
                                                var $8143 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.false"));
                                                return $8143;
                                            });
                                            var $8141 = $8142;
                                        } else {
                                            var self = ($8128 === "unit");
                                            if (self) {
                                                var $8145 = (_pst$16 => {
                                                    var $8146 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Unit.new"));
                                                    return $8146;
                                                });
                                                var $8144 = $8145;
                                            } else {
                                                var self = ($8128 === "none");
                                                if (self) {
                                                    var _term$16 = Kind$Term$ref$("Maybe.none");
                                                    var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                    var $8148 = (_pst$18 => {
                                                        var $8149 = Parser$Reply$value$(_pst$18, _term$17);
                                                        return $8149;
                                                    });
                                                    var $8147 = $8148;
                                                } else {
                                                    var self = ($8128 === "refl");
                                                    if (self) {
                                                        var _term$16 = Kind$Term$ref$("Equal.refl");
                                                        var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                        var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                                        var $8151 = (_pst$19 => {
                                                            var $8152 = Parser$Reply$value$(_pst$19, _term$18);
                                                            return $8152;
                                                        });
                                                        var $8150 = $8151;
                                                    } else {
                                                        var $8153 = (_pst$16 => {
                                                            var $8154 = Parser$Reply$value$(_pst$16, Kind$Term$ref$($8128));
                                                            return $8154;
                                                        });
                                                        var $8150 = $8153;
                                                    };
                                                    var $8147 = $8150;
                                                };
                                                var $8144 = $8147;
                                            };
                                            var $8141 = $8144;
                                        };
                                        var $8138 = $8141;
                                    };
                                    var $8135 = $8138;
                                };
                                var $8135 = $8135(_reply$pst$15);
                                var $8129 = $8135;
                                break;
                        };
                        var $8121 = $8129;
                        break;
                };
                var $8119 = $8121;
                break;
        };
        return $8119;
    }));

    function Kind$Parser$text_now$(_text$1) {
        var $8155 = Parser$text(_text$1);
        return $8155;
    };
    const Kind$Parser$text_now = x0 => Kind$Parser$text_now$(x0);

    function Kind$Parser$items_now$(_ini$2, _parser$3, _end$4) {
        var $8156 = Parser$wrap1(Kind$Parser$text_now$(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $8158 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8160 = self.err;
                            var self = $8158;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8162 = self.value;
                                    var $8163 = Parser$Reply$error$(Parser$Error$combine$($8162, $8160));
                                    var $8161 = $8163;
                                    break;
                                case 'Maybe.none':
                                    var $8164 = Parser$Reply$error$($8160);
                                    var $8161 = $8164;
                                    break;
                            };
                            var $8159 = $8161;
                            break;
                        case 'Parser.Reply.value':
                            var $8165 = self.pst;
                            var self = $8165;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8167 = self.err;
                                    var $8168 = self.nam;
                                    var $8169 = self.ini;
                                    var $8170 = self.idx;
                                    var $8171 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($8158, $8167), $8168, $8169, $8170, $8171);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8173 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8175 = self.err;
                                                    var self = $8173;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8177 = self.value;
                                                            var $8178 = Parser$Reply$error$(Parser$Error$combine$($8177, $8175));
                                                            var $8176 = $8178;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8179 = Parser$Reply$error$($8175);
                                                            var $8176 = $8179;
                                                            break;
                                                    };
                                                    var $8174 = $8176;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8180 = self.pst;
                                                    var $8181 = self.val;
                                                    var self = $8180;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8183 = self.err;
                                                            var $8184 = self.nam;
                                                            var $8185 = self.ini;
                                                            var $8186 = self.idx;
                                                            var $8187 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($8173, $8183), $8184, $8185, $8186, $8187);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $8189 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $8191 = self.err;
                                                                            var self = $8189;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $8193 = self.value;
                                                                                    var $8194 = Parser$Reply$error$(Parser$Error$combine$($8193, $8191));
                                                                                    var $8192 = $8194;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $8195 = Parser$Reply$error$($8191);
                                                                                    var $8192 = $8195;
                                                                                    break;
                                                                            };
                                                                            var $8190 = $8192;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $8196 = self.pst;
                                                                            var self = $8196;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $8198 = self.err;
                                                                                    var $8199 = self.nam;
                                                                                    var $8200 = self.ini;
                                                                                    var $8201 = self.idx;
                                                                                    var $8202 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($8189, $8198), $8199, $8200, $8201, $8202);
                                                                                    var $8203 = Parser$Reply$value$(_reply$pst$47, $8181);
                                                                                    var $8197 = $8203;
                                                                                    break;
                                                                            };
                                                                            var $8190 = $8197;
                                                                            break;
                                                                    };
                                                                    var $8188 = $8190;
                                                                    break;
                                                            };
                                                            var $8182 = $8188;
                                                            break;
                                                    };
                                                    var $8174 = $8182;
                                                    break;
                                            };
                                            var $8172 = $8174;
                                            break;
                                    };
                                    var $8166 = $8172;
                                    break;
                            };
                            var $8159 = $8166;
                            break;
                    };
                    var $8157 = $8159;
                    break;
            };
            return $8157;
        }))(Kind$Parser$text(_end$4));
        return $8156;
    };
    const Kind$Parser$items_now = x0 => x1 => x2 => Kind$Parser$items_now$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kind$Parser$application$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8205 = self.err;
                var _reply$8 = Kind$Parser$items_now$("(", Kind$Parser$term, ")")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8207 = self.err;
                        var self = $8205;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8209 = self.value;
                                var $8210 = Parser$Reply$error$(Parser$Error$combine$($8209, $8207));
                                var $8208 = $8210;
                                break;
                            case 'Maybe.none':
                                var $8211 = Parser$Reply$error$($8207);
                                var $8208 = $8211;
                                break;
                        };
                        var $8206 = $8208;
                        break;
                    case 'Parser.Reply.value':
                        var $8212 = self.pst;
                        var $8213 = self.val;
                        var self = $8212;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8215 = self.err;
                                var $8216 = self.nam;
                                var $8217 = self.ini;
                                var $8218 = self.idx;
                                var $8219 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8205, $8215), $8216, $8217, $8218, $8219);
                                var _expr$17 = (() => {
                                    var $8222 = _func$1;
                                    var $8223 = $8213;
                                    let _f$18 = $8222;
                                    let _x$17;
                                    while ($8223._ === 'List.cons') {
                                        _x$17 = $8223.head;
                                        var $8222 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8222;
                                        $8223 = $8223.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8220 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8214 = $8220;
                                break;
                        };
                        var $8206 = $8214;
                        break;
                };
                var $8204 = $8206;
                break;
        };
        return $8204;
    };
    const Kind$Parser$application = x0 => x1 => Kind$Parser$application$(x0, x1);

    function Kind$Parser$application$erased$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8225 = self.err;
                var _reply$8 = Kind$Parser$items_now$("<", Kind$Parser$term, ">")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8227 = self.err;
                        var self = $8225;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8229 = self.value;
                                var $8230 = Parser$Reply$error$(Parser$Error$combine$($8229, $8227));
                                var $8228 = $8230;
                                break;
                            case 'Maybe.none':
                                var $8231 = Parser$Reply$error$($8227);
                                var $8228 = $8231;
                                break;
                        };
                        var $8226 = $8228;
                        break;
                    case 'Parser.Reply.value':
                        var $8232 = self.pst;
                        var $8233 = self.val;
                        var self = $8232;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8235 = self.err;
                                var $8236 = self.nam;
                                var $8237 = self.ini;
                                var $8238 = self.idx;
                                var $8239 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8225, $8235), $8236, $8237, $8238, $8239);
                                var _expr$17 = (() => {
                                    var $8242 = _func$1;
                                    var $8243 = $8233;
                                    let _f$18 = $8242;
                                    let _x$17;
                                    while ($8243._ === 'List.cons') {
                                        _x$17 = $8243.head;
                                        var $8242 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8242;
                                        $8243 = $8243.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8240 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8234 = $8240;
                                break;
                        };
                        var $8226 = $8234;
                        break;
                };
                var $8224 = $8226;
                break;
        };
        return $8224;
    };
    const Kind$Parser$application$erased = x0 => x1 => Kind$Parser$application$erased$(x0, x1);

    function Kind$Parser$list_set$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8245 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8247 = self.err;
                        var self = $8245;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8249 = self.value;
                                var $8250 = Parser$Reply$error$(Parser$Error$combine$($8249, $8247));
                                var $8248 = $8250;
                                break;
                            case 'Maybe.none':
                                var $8251 = Parser$Reply$error$($8247);
                                var $8248 = $8251;
                                break;
                        };
                        var $8246 = $8248;
                        break;
                    case 'Parser.Reply.value':
                        var $8252 = self.pst;
                        var self = $8252;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8254 = self.err;
                                var $8255 = self.nam;
                                var $8256 = self.ini;
                                var $8257 = self.idx;
                                var $8258 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8245, $8254), $8255, $8256, $8257, $8258);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8260 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8262 = self.err;
                                                var self = $8260;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8264 = self.value;
                                                        var $8265 = Parser$Reply$error$(Parser$Error$combine$($8264, $8262));
                                                        var $8263 = $8265;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8266 = Parser$Reply$error$($8262);
                                                        var $8263 = $8266;
                                                        break;
                                                };
                                                var $8261 = $8263;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8267 = self.pst;
                                                var $8268 = self.val;
                                                var self = $8267;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8270 = self.err;
                                                        var $8271 = self.nam;
                                                        var $8272 = self.ini;
                                                        var $8273 = self.idx;
                                                        var $8274 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8260, $8270), $8271, $8272, $8273, $8274);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8276 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8278 = self.err;
                                                                        var self = $8276;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8280 = self.value;
                                                                                var $8281 = Parser$Reply$error$(Parser$Error$combine$($8280, $8278));
                                                                                var $8279 = $8281;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8282 = Parser$Reply$error$($8278);
                                                                                var $8279 = $8282;
                                                                                break;
                                                                        };
                                                                        var $8277 = $8279;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8283 = self.pst;
                                                                        var self = $8283;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8285 = self.err;
                                                                                var $8286 = self.nam;
                                                                                var $8287 = self.ini;
                                                                                var $8288 = self.idx;
                                                                                var $8289 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8276, $8285), $8286, $8287, $8288, $8289);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8291 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8293 = self.err;
                                                                                                var self = $8291;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8295 = self.value;
                                                                                                        var $8296 = Parser$Reply$error$(Parser$Error$combine$($8295, $8293));
                                                                                                        var $8294 = $8296;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8297 = Parser$Reply$error$($8293);
                                                                                                        var $8294 = $8297;
                                                                                                        break;
                                                                                                };
                                                                                                var $8292 = $8294;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8298 = self.pst;
                                                                                                var self = $8298;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8300 = self.err;
                                                                                                        var $8301 = self.nam;
                                                                                                        var $8302 = self.ini;
                                                                                                        var $8303 = self.idx;
                                                                                                        var $8304 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8291, $8300), $8301, $8302, $8303, $8304);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8306 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8308 = self.err;
                                                                                                                        var self = $8306;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8310 = self.value;
                                                                                                                                var $8311 = Parser$Reply$error$(Parser$Error$combine$($8310, $8308));
                                                                                                                                var $8309 = $8311;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8312 = Parser$Reply$error$($8308);
                                                                                                                                var $8309 = $8312;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8307 = $8309;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8313 = self.pst;
                                                                                                                        var $8314 = self.val;
                                                                                                                        var self = $8313;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8316 = self.err;
                                                                                                                                var $8317 = self.nam;
                                                                                                                                var $8318 = self.ini;
                                                                                                                                var $8319 = self.idx;
                                                                                                                                var $8320 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8306, $8316), $8317, $8318, $8319, $8320);
                                                                                                                                var _term$73 = Kind$Term$ref$("List.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8268);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8314);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _list$1);
                                                                                                                                var $8321 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8315 = $8321;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8307 = $8315;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8305 = $8307;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8299 = $8305;
                                                                                                        break;
                                                                                                };
                                                                                                var $8292 = $8299;
                                                                                                break;
                                                                                        };
                                                                                        var $8290 = $8292;
                                                                                        break;
                                                                                };
                                                                                var $8284 = $8290;
                                                                                break;
                                                                        };
                                                                        var $8277 = $8284;
                                                                        break;
                                                                };
                                                                var $8275 = $8277;
                                                                break;
                                                        };
                                                        var $8269 = $8275;
                                                        break;
                                                };
                                                var $8261 = $8269;
                                                break;
                                        };
                                        var $8259 = $8261;
                                        break;
                                };
                                var $8253 = $8259;
                                break;
                        };
                        var $8246 = $8253;
                        break;
                };
                var $8244 = $8246;
                break;
        };
        return $8244;
    };
    const Kind$Parser$list_set = x0 => x1 => Kind$Parser$list_set$(x0, x1);

    function Kind$Parser$list_get$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8323 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8325 = self.err;
                        var self = $8323;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8327 = self.value;
                                var $8328 = Parser$Reply$error$(Parser$Error$combine$($8327, $8325));
                                var $8326 = $8328;
                                break;
                            case 'Maybe.none':
                                var $8329 = Parser$Reply$error$($8325);
                                var $8326 = $8329;
                                break;
                        };
                        var $8324 = $8326;
                        break;
                    case 'Parser.Reply.value':
                        var $8330 = self.pst;
                        var self = $8330;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8332 = self.err;
                                var $8333 = self.nam;
                                var $8334 = self.ini;
                                var $8335 = self.idx;
                                var $8336 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8323, $8332), $8333, $8334, $8335, $8336);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8338 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8340 = self.err;
                                                var self = $8338;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8342 = self.value;
                                                        var $8343 = Parser$Reply$error$(Parser$Error$combine$($8342, $8340));
                                                        var $8341 = $8343;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8344 = Parser$Reply$error$($8340);
                                                        var $8341 = $8344;
                                                        break;
                                                };
                                                var $8339 = $8341;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8345 = self.pst;
                                                var $8346 = self.val;
                                                var self = $8345;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8348 = self.err;
                                                        var $8349 = self.nam;
                                                        var $8350 = self.ini;
                                                        var $8351 = self.idx;
                                                        var $8352 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8338, $8348), $8349, $8350, $8351, $8352);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8354 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8356 = self.err;
                                                                        var self = $8354;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8358 = self.value;
                                                                                var $8359 = Parser$Reply$error$(Parser$Error$combine$($8358, $8356));
                                                                                var $8357 = $8359;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8360 = Parser$Reply$error$($8356);
                                                                                var $8357 = $8360;
                                                                                break;
                                                                        };
                                                                        var $8355 = $8357;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8361 = self.pst;
                                                                        var self = $8361;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8363 = self.err;
                                                                                var $8364 = self.nam;
                                                                                var $8365 = self.ini;
                                                                                var $8366 = self.idx;
                                                                                var $8367 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8354, $8363), $8364, $8365, $8366, $8367);
                                                                                var _term$45 = Kind$Term$ref$("List.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8346);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _list$1);
                                                                                var $8368 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8362 = $8368;
                                                                                break;
                                                                        };
                                                                        var $8355 = $8362;
                                                                        break;
                                                                };
                                                                var $8353 = $8355;
                                                                break;
                                                        };
                                                        var $8347 = $8353;
                                                        break;
                                                };
                                                var $8339 = $8347;
                                                break;
                                        };
                                        var $8337 = $8339;
                                        break;
                                };
                                var $8331 = $8337;
                                break;
                        };
                        var $8324 = $8331;
                        break;
                };
                var $8322 = $8324;
                break;
        };
        return $8322;
    };
    const Kind$Parser$list_get = x0 => x1 => Kind$Parser$list_get$(x0, x1);

    function Kind$Parser$map_set$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8370 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8372 = self.err;
                        var self = $8370;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8374 = self.value;
                                var $8375 = Parser$Reply$error$(Parser$Error$combine$($8374, $8372));
                                var $8373 = $8375;
                                break;
                            case 'Maybe.none':
                                var $8376 = Parser$Reply$error$($8372);
                                var $8373 = $8376;
                                break;
                        };
                        var $8371 = $8373;
                        break;
                    case 'Parser.Reply.value':
                        var $8377 = self.pst;
                        var self = $8377;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8379 = self.err;
                                var $8380 = self.nam;
                                var $8381 = self.ini;
                                var $8382 = self.idx;
                                var $8383 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8370, $8379), $8380, $8381, $8382, $8383);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8385 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8387 = self.err;
                                                var self = $8385;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8389 = self.value;
                                                        var $8390 = Parser$Reply$error$(Parser$Error$combine$($8389, $8387));
                                                        var $8388 = $8390;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8391 = Parser$Reply$error$($8387);
                                                        var $8388 = $8391;
                                                        break;
                                                };
                                                var $8386 = $8388;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8392 = self.pst;
                                                var $8393 = self.val;
                                                var self = $8392;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8395 = self.err;
                                                        var $8396 = self.nam;
                                                        var $8397 = self.ini;
                                                        var $8398 = self.idx;
                                                        var $8399 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8385, $8395), $8396, $8397, $8398, $8399);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8401 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8403 = self.err;
                                                                        var self = $8401;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8405 = self.value;
                                                                                var $8406 = Parser$Reply$error$(Parser$Error$combine$($8405, $8403));
                                                                                var $8404 = $8406;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8407 = Parser$Reply$error$($8403);
                                                                                var $8404 = $8407;
                                                                                break;
                                                                        };
                                                                        var $8402 = $8404;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8408 = self.pst;
                                                                        var self = $8408;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8410 = self.err;
                                                                                var $8411 = self.nam;
                                                                                var $8412 = self.ini;
                                                                                var $8413 = self.idx;
                                                                                var $8414 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8401, $8410), $8411, $8412, $8413, $8414);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8416 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8418 = self.err;
                                                                                                var self = $8416;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8420 = self.value;
                                                                                                        var $8421 = Parser$Reply$error$(Parser$Error$combine$($8420, $8418));
                                                                                                        var $8419 = $8421;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8422 = Parser$Reply$error$($8418);
                                                                                                        var $8419 = $8422;
                                                                                                        break;
                                                                                                };
                                                                                                var $8417 = $8419;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8423 = self.pst;
                                                                                                var self = $8423;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8425 = self.err;
                                                                                                        var $8426 = self.nam;
                                                                                                        var $8427 = self.ini;
                                                                                                        var $8428 = self.idx;
                                                                                                        var $8429 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8416, $8425), $8426, $8427, $8428, $8429);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8431 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8433 = self.err;
                                                                                                                        var self = $8431;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8435 = self.value;
                                                                                                                                var $8436 = Parser$Reply$error$(Parser$Error$combine$($8435, $8433));
                                                                                                                                var $8434 = $8436;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8437 = Parser$Reply$error$($8433);
                                                                                                                                var $8434 = $8437;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8432 = $8434;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8438 = self.pst;
                                                                                                                        var $8439 = self.val;
                                                                                                                        var self = $8438;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8441 = self.err;
                                                                                                                                var $8442 = self.nam;
                                                                                                                                var $8443 = self.ini;
                                                                                                                                var $8444 = self.idx;
                                                                                                                                var $8445 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8431, $8441), $8442, $8443, $8444, $8445);
                                                                                                                                var _term$73 = Kind$Term$ref$("Map.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8393);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8439);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _map$1);
                                                                                                                                var $8446 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8440 = $8446;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8432 = $8440;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8430 = $8432;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8424 = $8430;
                                                                                                        break;
                                                                                                };
                                                                                                var $8417 = $8424;
                                                                                                break;
                                                                                        };
                                                                                        var $8415 = $8417;
                                                                                        break;
                                                                                };
                                                                                var $8409 = $8415;
                                                                                break;
                                                                        };
                                                                        var $8402 = $8409;
                                                                        break;
                                                                };
                                                                var $8400 = $8402;
                                                                break;
                                                        };
                                                        var $8394 = $8400;
                                                        break;
                                                };
                                                var $8386 = $8394;
                                                break;
                                        };
                                        var $8384 = $8386;
                                        break;
                                };
                                var $8378 = $8384;
                                break;
                        };
                        var $8371 = $8378;
                        break;
                };
                var $8369 = $8371;
                break;
        };
        return $8369;
    };
    const Kind$Parser$map_set = x0 => x1 => Kind$Parser$map_set$(x0, x1);

    function Kind$Parser$map_get$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8448 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8450 = self.err;
                        var self = $8448;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8452 = self.value;
                                var $8453 = Parser$Reply$error$(Parser$Error$combine$($8452, $8450));
                                var $8451 = $8453;
                                break;
                            case 'Maybe.none':
                                var $8454 = Parser$Reply$error$($8450);
                                var $8451 = $8454;
                                break;
                        };
                        var $8449 = $8451;
                        break;
                    case 'Parser.Reply.value':
                        var $8455 = self.pst;
                        var self = $8455;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8457 = self.err;
                                var $8458 = self.nam;
                                var $8459 = self.ini;
                                var $8460 = self.idx;
                                var $8461 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8448, $8457), $8458, $8459, $8460, $8461);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8463 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8465 = self.err;
                                                var self = $8463;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8467 = self.value;
                                                        var $8468 = Parser$Reply$error$(Parser$Error$combine$($8467, $8465));
                                                        var $8466 = $8468;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8469 = Parser$Reply$error$($8465);
                                                        var $8466 = $8469;
                                                        break;
                                                };
                                                var $8464 = $8466;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8470 = self.pst;
                                                var $8471 = self.val;
                                                var self = $8470;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8473 = self.err;
                                                        var $8474 = self.nam;
                                                        var $8475 = self.ini;
                                                        var $8476 = self.idx;
                                                        var $8477 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8463, $8473), $8474, $8475, $8476, $8477);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8479 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8481 = self.err;
                                                                        var self = $8479;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8483 = self.value;
                                                                                var $8484 = Parser$Reply$error$(Parser$Error$combine$($8483, $8481));
                                                                                var $8482 = $8484;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8485 = Parser$Reply$error$($8481);
                                                                                var $8482 = $8485;
                                                                                break;
                                                                        };
                                                                        var $8480 = $8482;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8486 = self.pst;
                                                                        var self = $8486;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8488 = self.err;
                                                                                var $8489 = self.nam;
                                                                                var $8490 = self.ini;
                                                                                var $8491 = self.idx;
                                                                                var $8492 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8479, $8488), $8489, $8490, $8491, $8492);
                                                                                var _term$45 = Kind$Term$ref$("Map.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8471);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _map$1);
                                                                                var $8493 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8487 = $8493;
                                                                                break;
                                                                        };
                                                                        var $8480 = $8487;
                                                                        break;
                                                                };
                                                                var $8478 = $8480;
                                                                break;
                                                        };
                                                        var $8472 = $8478;
                                                        break;
                                                };
                                                var $8464 = $8472;
                                                break;
                                        };
                                        var $8462 = $8464;
                                        break;
                                };
                                var $8456 = $8462;
                                break;
                        };
                        var $8449 = $8456;
                        break;
                };
                var $8447 = $8449;
                break;
        };
        return $8447;
    };
    const Kind$Parser$map_get = x0 => x1 => Kind$Parser$map_get$(x0, x1);

    function Kind$Term$set$(_expr$1, _fkey$2, _fval$3) {
        var $8494 = ({
            _: 'Kind.Term.set',
            'expr': _expr$1,
            'fkey': _fkey$2,
            'fval': _fval$3
        });
        return $8494;
    };
    const Kind$Term$set = x0 => x1 => x2 => Kind$Term$set$(x0, x1, x2);

    function Kind$Parser$field_set$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8496 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8498 = self.err;
                        var self = $8496;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8500 = self.value;
                                var $8501 = Parser$Reply$error$(Parser$Error$combine$($8500, $8498));
                                var $8499 = $8501;
                                break;
                            case 'Maybe.none':
                                var $8502 = Parser$Reply$error$($8498);
                                var $8499 = $8502;
                                break;
                        };
                        var $8497 = $8499;
                        break;
                    case 'Parser.Reply.value':
                        var $8503 = self.pst;
                        var self = $8503;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8505 = self.err;
                                var $8506 = self.nam;
                                var $8507 = self.ini;
                                var $8508 = self.idx;
                                var $8509 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8496, $8505), $8506, $8507, $8508, $8509);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8511 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8513 = self.err;
                                                var self = $8511;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8515 = self.value;
                                                        var $8516 = Parser$Reply$error$(Parser$Error$combine$($8515, $8513));
                                                        var $8514 = $8516;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8517 = Parser$Reply$error$($8513);
                                                        var $8514 = $8517;
                                                        break;
                                                };
                                                var $8512 = $8514;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8518 = self.pst;
                                                var $8519 = self.val;
                                                var self = $8518;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8521 = self.err;
                                                        var $8522 = self.nam;
                                                        var $8523 = self.ini;
                                                        var $8524 = self.idx;
                                                        var $8525 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8511, $8521), $8522, $8523, $8524, $8525);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8527 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("<-", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8529 = self.err;
                                                                        var self = $8527;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8531 = self.value;
                                                                                var $8532 = Parser$Reply$error$(Parser$Error$combine$($8531, $8529));
                                                                                var $8530 = $8532;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8533 = Parser$Reply$error$($8529);
                                                                                var $8530 = $8533;
                                                                                break;
                                                                        };
                                                                        var $8528 = $8530;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8534 = self.pst;
                                                                        var self = $8534;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8536 = self.err;
                                                                                var $8537 = self.nam;
                                                                                var $8538 = self.ini;
                                                                                var $8539 = self.idx;
                                                                                var $8540 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8527, $8536), $8537, $8538, $8539, $8540);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8542 = self.err;
                                                                                        var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8544 = self.err;
                                                                                                var self = $8542;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8546 = self.value;
                                                                                                        var $8547 = Parser$Reply$error$(Parser$Error$combine$($8546, $8544));
                                                                                                        var $8545 = $8547;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8548 = Parser$Reply$error$($8544);
                                                                                                        var $8545 = $8548;
                                                                                                        break;
                                                                                                };
                                                                                                var $8543 = $8545;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8549 = self.pst;
                                                                                                var $8550 = self.val;
                                                                                                var self = $8549;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8552 = self.err;
                                                                                                        var $8553 = self.nam;
                                                                                                        var $8554 = self.ini;
                                                                                                        var $8555 = self.idx;
                                                                                                        var $8556 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8542, $8552), $8553, $8554, $8555, $8556);
                                                                                                        var $8557 = Parser$Reply$value$(_reply$pst$58, Kind$Term$set$(_term$1, $8519, $8550));
                                                                                                        var $8551 = $8557;
                                                                                                        break;
                                                                                                };
                                                                                                var $8543 = $8551;
                                                                                                break;
                                                                                        };
                                                                                        var $8541 = $8543;
                                                                                        break;
                                                                                };
                                                                                var $8535 = $8541;
                                                                                break;
                                                                        };
                                                                        var $8528 = $8535;
                                                                        break;
                                                                };
                                                                var $8526 = $8528;
                                                                break;
                                                        };
                                                        var $8520 = $8526;
                                                        break;
                                                };
                                                var $8512 = $8520;
                                                break;
                                        };
                                        var $8510 = $8512;
                                        break;
                                };
                                var $8504 = $8510;
                                break;
                        };
                        var $8497 = $8504;
                        break;
                };
                var $8495 = $8497;
                break;
        };
        return $8495;
    };
    const Kind$Parser$field_set = x0 => x1 => Kind$Parser$field_set$(x0, x1);

    function Kind$Term$get$(_expr$1, _fkey$2) {
        var $8558 = ({
            _: 'Kind.Term.get',
            'expr': _expr$1,
            'fkey': _fkey$2
        });
        return $8558;
    };
    const Kind$Term$get = x0 => x1 => Kind$Term$get$(x0, x1);

    function Kind$Parser$field_get$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8560 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8562 = self.err;
                        var self = $8560;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8564 = self.value;
                                var $8565 = Parser$Reply$error$(Parser$Error$combine$($8564, $8562));
                                var $8563 = $8565;
                                break;
                            case 'Maybe.none':
                                var $8566 = Parser$Reply$error$($8562);
                                var $8563 = $8566;
                                break;
                        };
                        var $8561 = $8563;
                        break;
                    case 'Parser.Reply.value':
                        var $8567 = self.pst;
                        var self = $8567;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8569 = self.err;
                                var $8570 = self.nam;
                                var $8571 = self.ini;
                                var $8572 = self.idx;
                                var $8573 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8560, $8569), $8570, $8571, $8572, $8573);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8575 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8577 = self.err;
                                                var self = $8575;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8579 = self.value;
                                                        var $8580 = Parser$Reply$error$(Parser$Error$combine$($8579, $8577));
                                                        var $8578 = $8580;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8581 = Parser$Reply$error$($8577);
                                                        var $8578 = $8581;
                                                        break;
                                                };
                                                var $8576 = $8578;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8582 = self.pst;
                                                var $8583 = self.val;
                                                var self = $8582;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8585 = self.err;
                                                        var $8586 = self.nam;
                                                        var $8587 = self.ini;
                                                        var $8588 = self.idx;
                                                        var $8589 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8575, $8585), $8586, $8587, $8588, $8589);
                                                        var $8590 = Parser$Reply$value$(_reply$pst$30, Kind$Term$get$(_term$1, $8583));
                                                        var $8584 = $8590;
                                                        break;
                                                };
                                                var $8576 = $8584;
                                                break;
                                        };
                                        var $8574 = $8576;
                                        break;
                                };
                                var $8568 = $8574;
                                break;
                        };
                        var $8561 = $8568;
                        break;
                };
                var $8559 = $8561;
                break;
        };
        return $8559;
    };
    const Kind$Parser$field_get = x0 => x1 => Kind$Parser$field_get$(x0, x1);

    function Kind$Parser$arrow$(_xtyp$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8592 = self.err;
                var _reply$8 = Kind$Parser$text$("->", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8594 = self.err;
                        var self = $8592;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8596 = self.value;
                                var $8597 = Parser$Reply$error$(Parser$Error$combine$($8596, $8594));
                                var $8595 = $8597;
                                break;
                            case 'Maybe.none':
                                var $8598 = Parser$Reply$error$($8594);
                                var $8595 = $8598;
                                break;
                        };
                        var $8593 = $8595;
                        break;
                    case 'Parser.Reply.value':
                        var $8599 = self.pst;
                        var self = $8599;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8601 = self.err;
                                var $8602 = self.nam;
                                var $8603 = self.ini;
                                var $8604 = self.idx;
                                var $8605 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8592, $8601), $8602, $8603, $8604, $8605);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8607 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8609 = self.err;
                                                var self = $8607;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8611 = self.value;
                                                        var $8612 = Parser$Reply$error$(Parser$Error$combine$($8611, $8609));
                                                        var $8610 = $8612;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8613 = Parser$Reply$error$($8609);
                                                        var $8610 = $8613;
                                                        break;
                                                };
                                                var $8608 = $8610;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8614 = self.pst;
                                                var $8615 = self.val;
                                                var self = $8614;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8617 = self.err;
                                                        var $8618 = self.nam;
                                                        var $8619 = self.ini;
                                                        var $8620 = self.idx;
                                                        var $8621 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8607, $8617), $8618, $8619, $8620, $8621);
                                                        var $8622 = Parser$Reply$value$(_reply$pst$30, Kind$Term$all$(Bool$false, "", "", _xtyp$1, (_s$31 => _x$32 => {
                                                            var $8623 = $8615;
                                                            return $8623;
                                                        })));
                                                        var $8616 = $8622;
                                                        break;
                                                };
                                                var $8608 = $8616;
                                                break;
                                        };
                                        var $8606 = $8608;
                                        break;
                                };
                                var $8600 = $8606;
                                break;
                        };
                        var $8593 = $8600;
                        break;
                };
                var $8591 = $8593;
                break;
        };
        return $8591;
    };
    const Kind$Parser$arrow = x0 => x1 => Kind$Parser$arrow$(x0, x1);

    function Kind$Parser$concat$(_lst0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8625 = self.err;
                var _reply$8 = Kind$Parser$text$("++", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8627 = self.err;
                        var self = $8625;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8629 = self.value;
                                var $8630 = Parser$Reply$error$(Parser$Error$combine$($8629, $8627));
                                var $8628 = $8630;
                                break;
                            case 'Maybe.none':
                                var $8631 = Parser$Reply$error$($8627);
                                var $8628 = $8631;
                                break;
                        };
                        var $8626 = $8628;
                        break;
                    case 'Parser.Reply.value':
                        var $8632 = self.pst;
                        var self = $8632;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8634 = self.err;
                                var $8635 = self.nam;
                                var $8636 = self.ini;
                                var $8637 = self.idx;
                                var $8638 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8625, $8634), $8635, $8636, $8637, $8638);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8640 = self.err;
                                        var _reply$22 = Parser$text$(" ", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8642 = self.err;
                                                var self = $8640;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8644 = self.value;
                                                        var $8645 = Parser$Reply$error$(Parser$Error$combine$($8644, $8642));
                                                        var $8643 = $8645;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8646 = Parser$Reply$error$($8642);
                                                        var $8643 = $8646;
                                                        break;
                                                };
                                                var $8641 = $8643;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8647 = self.pst;
                                                var self = $8647;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8649 = self.err;
                                                        var $8650 = self.nam;
                                                        var $8651 = self.ini;
                                                        var $8652 = self.idx;
                                                        var $8653 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8640, $8649), $8650, $8651, $8652, $8653);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8655 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8657 = self.err;
                                                                        var self = $8655;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8659 = self.value;
                                                                                var $8660 = Parser$Reply$error$(Parser$Error$combine$($8659, $8657));
                                                                                var $8658 = $8660;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8661 = Parser$Reply$error$($8657);
                                                                                var $8658 = $8661;
                                                                                break;
                                                                        };
                                                                        var $8656 = $8658;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8662 = self.pst;
                                                                        var $8663 = self.val;
                                                                        var self = $8662;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8665 = self.err;
                                                                                var $8666 = self.nam;
                                                                                var $8667 = self.ini;
                                                                                var $8668 = self.idx;
                                                                                var $8669 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8655, $8665), $8666, $8667, $8668, $8669);
                                                                                var _term$45 = Kind$Term$ref$("List.concat");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, _lst0$1);
                                                                                var _term$48 = Kind$Term$app$(_term$47, $8663);
                                                                                var $8670 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8664 = $8670;
                                                                                break;
                                                                        };
                                                                        var $8656 = $8664;
                                                                        break;
                                                                };
                                                                var $8654 = $8656;
                                                                break;
                                                        };
                                                        var $8648 = $8654;
                                                        break;
                                                };
                                                var $8641 = $8648;
                                                break;
                                        };
                                        var $8639 = $8641;
                                        break;
                                };
                                var $8633 = $8639;
                                break;
                        };
                        var $8626 = $8633;
                        break;
                };
                var $8624 = $8626;
                break;
        };
        return $8624;
    };
    const Kind$Parser$concat = x0 => x1 => Kind$Parser$concat$(x0, x1);

    function Kind$Parser$equality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8672 = self.err;
                var _reply$8 = Kind$Parser$text$("==", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8674 = self.err;
                        var self = $8672;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8676 = self.value;
                                var $8677 = Parser$Reply$error$(Parser$Error$combine$($8676, $8674));
                                var $8675 = $8677;
                                break;
                            case 'Maybe.none':
                                var $8678 = Parser$Reply$error$($8674);
                                var $8675 = $8678;
                                break;
                        };
                        var $8673 = $8675;
                        break;
                    case 'Parser.Reply.value':
                        var $8679 = self.pst;
                        var self = $8679;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8681 = self.err;
                                var $8682 = self.nam;
                                var $8683 = self.ini;
                                var $8684 = self.idx;
                                var $8685 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8672, $8681), $8682, $8683, $8684, $8685);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8687 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8689 = self.err;
                                                var self = $8687;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8691 = self.value;
                                                        var $8692 = Parser$Reply$error$(Parser$Error$combine$($8691, $8689));
                                                        var $8690 = $8692;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8693 = Parser$Reply$error$($8689);
                                                        var $8690 = $8693;
                                                        break;
                                                };
                                                var $8688 = $8690;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8694 = self.pst;
                                                var $8695 = self.val;
                                                var self = $8694;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8697 = self.err;
                                                        var $8698 = self.nam;
                                                        var $8699 = self.ini;
                                                        var $8700 = self.idx;
                                                        var $8701 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8687, $8697), $8698, $8699, $8700, $8701);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8695);
                                                        var $8702 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8696 = $8702;
                                                        break;
                                                };
                                                var $8688 = $8696;
                                                break;
                                        };
                                        var $8686 = $8688;
                                        break;
                                };
                                var $8680 = $8686;
                                break;
                        };
                        var $8673 = $8680;
                        break;
                };
                var $8671 = $8673;
                break;
        };
        return $8671;
    };
    const Kind$Parser$equality = x0 => x1 => Kind$Parser$equality$(x0, x1);

    function Kind$Term$ope$(_name$1, _arg0$2, _arg1$3) {
        var $8703 = ({
            _: 'Kind.Term.ope',
            'name': _name$1,
            'arg0': _arg0$2,
            'arg1': _arg1$3
        });
        return $8703;
    };
    const Kind$Term$ope = x0 => x1 => x2 => Kind$Term$ope$(x0, x1, x2);

    function Kind$Parser$op$(_sym$1, _ref$2, _val0$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $8705 = self.err;
                var _reply$10 = Kind$Parser$text$(_sym$1, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8707 = self.err;
                        var self = $8705;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8709 = self.value;
                                var $8710 = Parser$Reply$error$(Parser$Error$combine$($8709, $8707));
                                var $8708 = $8710;
                                break;
                            case 'Maybe.none':
                                var $8711 = Parser$Reply$error$($8707);
                                var $8708 = $8711;
                                break;
                        };
                        var $8706 = $8708;
                        break;
                    case 'Parser.Reply.value':
                        var $8712 = self.pst;
                        var self = $8712;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8714 = self.err;
                                var $8715 = self.nam;
                                var $8716 = self.ini;
                                var $8717 = self.idx;
                                var $8718 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($8705, $8714), $8715, $8716, $8717, $8718);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8720 = self.err;
                                        var _reply$24 = Kind$Parser$term(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8722 = self.err;
                                                var self = $8720;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8724 = self.value;
                                                        var $8725 = Parser$Reply$error$(Parser$Error$combine$($8724, $8722));
                                                        var $8723 = $8725;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8726 = Parser$Reply$error$($8722);
                                                        var $8723 = $8726;
                                                        break;
                                                };
                                                var $8721 = $8723;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8727 = self.pst;
                                                var $8728 = self.val;
                                                var self = $8727;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8730 = self.err;
                                                        var $8731 = self.nam;
                                                        var $8732 = self.ini;
                                                        var $8733 = self.idx;
                                                        var $8734 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($8720, $8730), $8731, $8732, $8733, $8734);
                                                        var $8735 = Parser$Reply$value$(_reply$pst$32, Kind$Term$ope$(_sym$1, _val0$3, $8728));
                                                        var $8729 = $8735;
                                                        break;
                                                };
                                                var $8721 = $8729;
                                                break;
                                        };
                                        var $8719 = $8721;
                                        break;
                                };
                                var $8713 = $8719;
                                break;
                        };
                        var $8706 = $8713;
                        break;
                };
                var $8704 = $8706;
                break;
        };
        return $8704;
    };
    const Kind$Parser$op = x0 => x1 => x2 => x3 => Kind$Parser$op$(x0, x1, x2, x3);
    const Kind$Parser$add = Kind$Parser$op("+")("Nat.add");
    const Kind$Parser$sub = Kind$Parser$op("-")("Nat.sub");
    const Kind$Parser$mul = Kind$Parser$op("*")("Nat.mul");
    const Kind$Parser$div = Kind$Parser$op("/")("Nat.div");
    const Kind$Parser$mod = Kind$Parser$op("%")("Nat.mod");
    const Kind$Parser$ltn = Kind$Parser$op("<?")("Nat.ltn");
    const Kind$Parser$lte = Kind$Parser$op("<=?")("Nat.lte");
    const Kind$Parser$eql = Kind$Parser$op("=?")("Nat.eql");
    const Kind$Parser$gte = Kind$Parser$op(">=?")("Nat.gte");
    const Kind$Parser$gtn = Kind$Parser$op(">?")("Nat.gtn");
    const Kind$Parser$and = Kind$Parser$op("&&")("Bool.and");
    const Kind$Parser$or = Kind$Parser$op("||")("Bool.or");

    function Kind$Parser$default$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8737 = self.err;
                var _reply$8 = Kind$Parser$text$("<>", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8739 = self.err;
                        var self = $8737;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8741 = self.value;
                                var $8742 = Parser$Reply$error$(Parser$Error$combine$($8741, $8739));
                                var $8740 = $8742;
                                break;
                            case 'Maybe.none':
                                var $8743 = Parser$Reply$error$($8739);
                                var $8740 = $8743;
                                break;
                        };
                        var $8738 = $8740;
                        break;
                    case 'Parser.Reply.value':
                        var $8744 = self.pst;
                        var self = $8744;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8746 = self.err;
                                var $8747 = self.nam;
                                var $8748 = self.ini;
                                var $8749 = self.idx;
                                var $8750 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8737, $8746), $8747, $8748, $8749, $8750);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8752 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8754 = self.err;
                                                var self = $8752;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8756 = self.value;
                                                        var $8757 = Parser$Reply$error$(Parser$Error$combine$($8756, $8754));
                                                        var $8755 = $8757;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8758 = Parser$Reply$error$($8754);
                                                        var $8755 = $8758;
                                                        break;
                                                };
                                                var $8753 = $8755;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8759 = self.pst;
                                                var $8760 = self.val;
                                                var self = $8759;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8762 = self.err;
                                                        var $8763 = self.nam;
                                                        var $8764 = self.ini;
                                                        var $8765 = self.idx;
                                                        var $8766 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8752, $8762), $8763, $8764, $8765, $8766);
                                                        var _term$31 = Kind$Term$ref$("Maybe.default");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8760);
                                                        var $8767 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8761 = $8767;
                                                        break;
                                                };
                                                var $8753 = $8761;
                                                break;
                                        };
                                        var $8751 = $8753;
                                        break;
                                };
                                var $8745 = $8751;
                                break;
                        };
                        var $8738 = $8745;
                        break;
                };
                var $8736 = $8738;
                break;
        };
        return $8736;
    };
    const Kind$Parser$default = x0 => x1 => Kind$Parser$default$(x0, x1);

    function Kind$Parser$cons$(_head$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8769 = self.err;
                var _reply$8 = Kind$Parser$text$("&", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8771 = self.err;
                        var self = $8769;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8773 = self.value;
                                var $8774 = Parser$Reply$error$(Parser$Error$combine$($8773, $8771));
                                var $8772 = $8774;
                                break;
                            case 'Maybe.none':
                                var $8775 = Parser$Reply$error$($8771);
                                var $8772 = $8775;
                                break;
                        };
                        var $8770 = $8772;
                        break;
                    case 'Parser.Reply.value':
                        var $8776 = self.pst;
                        var self = $8776;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8778 = self.err;
                                var $8779 = self.nam;
                                var $8780 = self.ini;
                                var $8781 = self.idx;
                                var $8782 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8769, $8778), $8779, $8780, $8781, $8782);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8784 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8786 = self.err;
                                                var self = $8784;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8788 = self.value;
                                                        var $8789 = Parser$Reply$error$(Parser$Error$combine$($8788, $8786));
                                                        var $8787 = $8789;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8790 = Parser$Reply$error$($8786);
                                                        var $8787 = $8790;
                                                        break;
                                                };
                                                var $8785 = $8787;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8791 = self.pst;
                                                var $8792 = self.val;
                                                var self = $8791;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8794 = self.err;
                                                        var $8795 = self.nam;
                                                        var $8796 = self.ini;
                                                        var $8797 = self.idx;
                                                        var $8798 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8784, $8794), $8795, $8796, $8797, $8798);
                                                        var _term$31 = Kind$Term$ref$("List.cons");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _head$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8792);
                                                        var $8799 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8793 = $8799;
                                                        break;
                                                };
                                                var $8785 = $8793;
                                                break;
                                        };
                                        var $8783 = $8785;
                                        break;
                                };
                                var $8777 = $8783;
                                break;
                        };
                        var $8770 = $8777;
                        break;
                };
                var $8768 = $8770;
                break;
        };
        return $8768;
    };
    const Kind$Parser$cons = x0 => x1 => Kind$Parser$cons$(x0, x1);

    function Kind$Parser$string_concat$(_str0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8801 = self.err;
                var _reply$8 = Kind$Parser$text$("|", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8803 = self.err;
                        var self = $8801;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8805 = self.value;
                                var $8806 = Parser$Reply$error$(Parser$Error$combine$($8805, $8803));
                                var $8804 = $8806;
                                break;
                            case 'Maybe.none':
                                var $8807 = Parser$Reply$error$($8803);
                                var $8804 = $8807;
                                break;
                        };
                        var $8802 = $8804;
                        break;
                    case 'Parser.Reply.value':
                        var $8808 = self.pst;
                        var self = $8808;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8810 = self.err;
                                var $8811 = self.nam;
                                var $8812 = self.ini;
                                var $8813 = self.idx;
                                var $8814 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8801, $8810), $8811, $8812, $8813, $8814);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8816 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8818 = self.err;
                                                var self = $8816;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8820 = self.value;
                                                        var $8821 = Parser$Reply$error$(Parser$Error$combine$($8820, $8818));
                                                        var $8819 = $8821;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8822 = Parser$Reply$error$($8818);
                                                        var $8819 = $8822;
                                                        break;
                                                };
                                                var $8817 = $8819;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8823 = self.pst;
                                                var $8824 = self.val;
                                                var self = $8823;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8826 = self.err;
                                                        var $8827 = self.nam;
                                                        var $8828 = self.ini;
                                                        var $8829 = self.idx;
                                                        var $8830 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8816, $8826), $8827, $8828, $8829, $8830);
                                                        var _term$31 = Kind$Term$ref$("String.concat");
                                                        var _term$32 = Kind$Term$app$(_term$31, _str0$1);
                                                        var _term$33 = Kind$Term$app$(_term$32, $8824);
                                                        var $8831 = Parser$Reply$value$(_reply$pst$30, _term$33);
                                                        var $8825 = $8831;
                                                        break;
                                                };
                                                var $8817 = $8825;
                                                break;
                                        };
                                        var $8815 = $8817;
                                        break;
                                };
                                var $8809 = $8815;
                                break;
                        };
                        var $8802 = $8809;
                        break;
                };
                var $8800 = $8802;
                break;
        };
        return $8800;
    };
    const Kind$Parser$string_concat = x0 => x1 => Kind$Parser$string_concat$(x0, x1);

    function Kind$Parser$sigma$(_val0$1) {
        var $8832 = Kind$Parser$block("sigma")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $8834 = self.err;
                    var _reply$8 = Kind$Parser$text$("~", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8836 = self.err;
                            var self = $8834;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8838 = self.value;
                                    var $8839 = Parser$Reply$error$(Parser$Error$combine$($8838, $8836));
                                    var $8837 = $8839;
                                    break;
                                case 'Maybe.none':
                                    var $8840 = Parser$Reply$error$($8836);
                                    var $8837 = $8840;
                                    break;
                            };
                            var $8835 = $8837;
                            break;
                        case 'Parser.Reply.value':
                            var $8841 = self.pst;
                            var self = $8841;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8843 = self.err;
                                    var $8844 = self.nam;
                                    var $8845 = self.ini;
                                    var $8846 = self.idx;
                                    var $8847 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8834, $8843), $8844, $8845, $8846, $8847);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8849 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8851 = self.err;
                                                    var self = $8849;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8853 = self.value;
                                                            var $8854 = Parser$Reply$error$(Parser$Error$combine$($8853, $8851));
                                                            var $8852 = $8854;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8855 = Parser$Reply$error$($8851);
                                                            var $8852 = $8855;
                                                            break;
                                                    };
                                                    var $8850 = $8852;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8856 = self.pst;
                                                    var $8857 = self.val;
                                                    var self = $8856;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8859 = self.err;
                                                            var $8860 = self.nam;
                                                            var $8861 = self.ini;
                                                            var $8862 = self.idx;
                                                            var $8863 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8849, $8859), $8860, $8861, $8862, $8863);
                                                            var _term$31 = Kind$Term$ref$("Sigma.new");
                                                            var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                            var _term$33 = Kind$Term$app$(_term$32, Kind$Term$hol$(Bits$e));
                                                            var _term$34 = Kind$Term$app$(_term$33, _val0$1);
                                                            var _term$35 = Kind$Term$app$(_term$34, $8857);
                                                            var $8864 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                            var $8858 = $8864;
                                                            break;
                                                    };
                                                    var $8850 = $8858;
                                                    break;
                                            };
                                            var $8848 = $8850;
                                            break;
                                    };
                                    var $8842 = $8848;
                                    break;
                            };
                            var $8835 = $8842;
                            break;
                    };
                    var $8833 = $8835;
                    break;
            };
            return $8833;
        }));
        return $8832;
    };
    const Kind$Parser$sigma = x0 => Kind$Parser$sigma$(x0);

    function Kind$Parser$inequality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8866 = self.err;
                var _reply$8 = Kind$Parser$text$("!=", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8868 = self.err;
                        var self = $8866;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8870 = self.value;
                                var $8871 = Parser$Reply$error$(Parser$Error$combine$($8870, $8868));
                                var $8869 = $8871;
                                break;
                            case 'Maybe.none':
                                var $8872 = Parser$Reply$error$($8868);
                                var $8869 = $8872;
                                break;
                        };
                        var $8867 = $8869;
                        break;
                    case 'Parser.Reply.value':
                        var $8873 = self.pst;
                        var self = $8873;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8875 = self.err;
                                var $8876 = self.nam;
                                var $8877 = self.ini;
                                var $8878 = self.idx;
                                var $8879 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8866, $8875), $8876, $8877, $8878, $8879);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8881 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8883 = self.err;
                                                var self = $8881;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8885 = self.value;
                                                        var $8886 = Parser$Reply$error$(Parser$Error$combine$($8885, $8883));
                                                        var $8884 = $8886;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8887 = Parser$Reply$error$($8883);
                                                        var $8884 = $8887;
                                                        break;
                                                };
                                                var $8882 = $8884;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8888 = self.pst;
                                                var $8889 = self.val;
                                                var self = $8888;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8891 = self.err;
                                                        var $8892 = self.nam;
                                                        var $8893 = self.ini;
                                                        var $8894 = self.idx;
                                                        var $8895 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8881, $8891), $8892, $8893, $8894, $8895);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8889);
                                                        var _term$35 = Kind$Term$app$(Kind$Term$ref$("Not"), _term$34);
                                                        var $8896 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                        var $8890 = $8896;
                                                        break;
                                                };
                                                var $8882 = $8890;
                                                break;
                                        };
                                        var $8880 = $8882;
                                        break;
                                };
                                var $8874 = $8880;
                                break;
                        };
                        var $8867 = $8874;
                        break;
                };
                var $8865 = $8867;
                break;
        };
        return $8865;
    };
    const Kind$Parser$inequality = x0 => x1 => Kind$Parser$inequality$(x0, x1);

    function Kind$Parser$rewrite$(_subt$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8898 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8900 = self.err;
                        var self = $8898;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8902 = self.value;
                                var $8903 = Parser$Reply$error$(Parser$Error$combine$($8902, $8900));
                                var $8901 = $8903;
                                break;
                            case 'Maybe.none':
                                var $8904 = Parser$Reply$error$($8900);
                                var $8901 = $8904;
                                break;
                        };
                        var $8899 = $8901;
                        break;
                    case 'Parser.Reply.value':
                        var $8905 = self.pst;
                        var self = $8905;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8907 = self.err;
                                var $8908 = self.nam;
                                var $8909 = self.ini;
                                var $8910 = self.idx;
                                var $8911 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8898, $8907), $8908, $8909, $8910, $8911);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8913 = self.err;
                                        var _reply$22 = Kind$Parser$text$("rewrite", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8915 = self.err;
                                                var self = $8913;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8917 = self.value;
                                                        var $8918 = Parser$Reply$error$(Parser$Error$combine$($8917, $8915));
                                                        var $8916 = $8918;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8919 = Parser$Reply$error$($8915);
                                                        var $8916 = $8919;
                                                        break;
                                                };
                                                var $8914 = $8916;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8920 = self.pst;
                                                var self = $8920;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8922 = self.err;
                                                        var $8923 = self.nam;
                                                        var $8924 = self.ini;
                                                        var $8925 = self.idx;
                                                        var $8926 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8913, $8922), $8923, $8924, $8925, $8926);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8928 = self.err;
                                                                var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8930 = self.err;
                                                                        var self = $8928;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8932 = self.value;
                                                                                var $8933 = Parser$Reply$error$(Parser$Error$combine$($8932, $8930));
                                                                                var $8931 = $8933;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8934 = Parser$Reply$error$($8930);
                                                                                var $8931 = $8934;
                                                                                break;
                                                                        };
                                                                        var $8929 = $8931;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8935 = self.pst;
                                                                        var $8936 = self.val;
                                                                        var self = $8935;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8938 = self.err;
                                                                                var $8939 = self.nam;
                                                                                var $8940 = self.ini;
                                                                                var $8941 = self.idx;
                                                                                var $8942 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8928, $8938), $8939, $8940, $8941, $8942);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8944 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("in", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8946 = self.err;
                                                                                                var self = $8944;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8948 = self.value;
                                                                                                        var $8949 = Parser$Reply$error$(Parser$Error$combine$($8948, $8946));
                                                                                                        var $8947 = $8949;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8950 = Parser$Reply$error$($8946);
                                                                                                        var $8947 = $8950;
                                                                                                        break;
                                                                                                };
                                                                                                var $8945 = $8947;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8951 = self.pst;
                                                                                                var self = $8951;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8953 = self.err;
                                                                                                        var $8954 = self.nam;
                                                                                                        var $8955 = self.ini;
                                                                                                        var $8956 = self.idx;
                                                                                                        var $8957 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8944, $8953), $8954, $8955, $8956, $8957);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8959 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8961 = self.err;
                                                                                                                        var self = $8959;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8963 = self.value;
                                                                                                                                var $8964 = Parser$Reply$error$(Parser$Error$combine$($8963, $8961));
                                                                                                                                var $8962 = $8964;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8965 = Parser$Reply$error$($8961);
                                                                                                                                var $8962 = $8965;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8960 = $8962;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8966 = self.pst;
                                                                                                                        var $8967 = self.val;
                                                                                                                        var self = $8966;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8969 = self.err;
                                                                                                                                var $8970 = self.nam;
                                                                                                                                var $8971 = self.ini;
                                                                                                                                var $8972 = self.idx;
                                                                                                                                var $8973 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8959, $8969), $8970, $8971, $8972, $8973);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $8975 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$("with", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $8977 = self.err;
                                                                                                                                                var self = $8975;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $8979 = self.value;
                                                                                                                                                        var $8980 = Parser$Reply$error$(Parser$Error$combine$($8979, $8977));
                                                                                                                                                        var $8978 = $8980;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $8981 = Parser$Reply$error$($8977);
                                                                                                                                                        var $8978 = $8981;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8976 = $8978;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $8982 = self.pst;
                                                                                                                                                var self = $8982;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $8984 = self.err;
                                                                                                                                                        var $8985 = self.nam;
                                                                                                                                                        var $8986 = self.ini;
                                                                                                                                                        var $8987 = self.idx;
                                                                                                                                                        var $8988 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($8975, $8984), $8985, $8986, $8987, $8988);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $8990 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $8992 = self.err;
                                                                                                                                                                        var self = $8990;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $8994 = self.value;
                                                                                                                                                                                var $8995 = Parser$Reply$error$(Parser$Error$combine$($8994, $8992));
                                                                                                                                                                                var $8993 = $8995;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $8996 = Parser$Reply$error$($8992);
                                                                                                                                                                                var $8993 = $8996;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8991 = $8993;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $8997 = self.pst;
                                                                                                                                                                        var $8998 = self.val;
                                                                                                                                                                        var self = $8997;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9000 = self.err;
                                                                                                                                                                                var $9001 = self.nam;
                                                                                                                                                                                var $9002 = self.ini;
                                                                                                                                                                                var $9003 = self.idx;
                                                                                                                                                                                var $9004 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($8990, $9000), $9001, $9002, $9003, $9004);
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.rewrite");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $8998);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, Kind$Term$lam$($8936, (_x$106 => {
                                                                                                                                                                                    var $9006 = $8967;
                                                                                                                                                                                    return $9006;
                                                                                                                                                                                })));
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, _subt$1);
                                                                                                                                                                                var $9005 = Parser$Reply$value$(_reply$pst$100, _term$107);
                                                                                                                                                                                var $8999 = $9005;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8991 = $8999;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $8989 = $8991;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $8983 = $8989;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8976 = $8983;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $8974 = $8976;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $8968 = $8974;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8960 = $8968;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8958 = $8960;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8952 = $8958;
                                                                                                        break;
                                                                                                };
                                                                                                var $8945 = $8952;
                                                                                                break;
                                                                                        };
                                                                                        var $8943 = $8945;
                                                                                        break;
                                                                                };
                                                                                var $8937 = $8943;
                                                                                break;
                                                                        };
                                                                        var $8929 = $8937;
                                                                        break;
                                                                };
                                                                var $8927 = $8929;
                                                                break;
                                                        };
                                                        var $8921 = $8927;
                                                        break;
                                                };
                                                var $8914 = $8921;
                                                break;
                                        };
                                        var $8912 = $8914;
                                        break;
                                };
                                var $8906 = $8912;
                                break;
                        };
                        var $8899 = $8906;
                        break;
                };
                var $8897 = $8899;
                break;
        };
        return $8897;
    };
    const Kind$Parser$rewrite = x0 => x1 => Kind$Parser$rewrite$(x0, x1);

    function Kind$Parser$annotation$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9008 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9010 = self.err;
                        var self = $9008;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9012 = self.value;
                                var $9013 = Parser$Reply$error$(Parser$Error$combine$($9012, $9010));
                                var $9011 = $9013;
                                break;
                            case 'Maybe.none':
                                var $9014 = Parser$Reply$error$($9010);
                                var $9011 = $9014;
                                break;
                        };
                        var $9009 = $9011;
                        break;
                    case 'Parser.Reply.value':
                        var $9015 = self.pst;
                        var self = $9015;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9017 = self.err;
                                var $9018 = self.nam;
                                var $9019 = self.ini;
                                var $9020 = self.idx;
                                var $9021 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9008, $9017), $9018, $9019, $9020, $9021);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9023 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9025 = self.err;
                                                var self = $9023;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9027 = self.value;
                                                        var $9028 = Parser$Reply$error$(Parser$Error$combine$($9027, $9025));
                                                        var $9026 = $9028;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9029 = Parser$Reply$error$($9025);
                                                        var $9026 = $9029;
                                                        break;
                                                };
                                                var $9024 = $9026;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9030 = self.pst;
                                                var $9031 = self.val;
                                                var self = $9030;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9033 = self.err;
                                                        var $9034 = self.nam;
                                                        var $9035 = self.ini;
                                                        var $9036 = self.idx;
                                                        var $9037 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9023, $9033), $9034, $9035, $9036, $9037);
                                                        var $9038 = Parser$Reply$value$(_reply$pst$30, Kind$Term$ann$(Bool$false, _term$1, $9031));
                                                        var $9032 = $9038;
                                                        break;
                                                };
                                                var $9024 = $9032;
                                                break;
                                        };
                                        var $9022 = $9024;
                                        break;
                                };
                                var $9016 = $9022;
                                break;
                        };
                        var $9009 = $9016;
                        break;
                };
                var $9007 = $9009;
                break;
        };
        return $9007;
    };
    const Kind$Parser$annotation = x0 => x1 => Kind$Parser$annotation$(x0, x1);

    function Kind$Parser$application$hole$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9040 = self.err;
                var _reply$8 = Kind$Parser$text_now$("!")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9042 = self.err;
                        var self = $9040;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9044 = self.value;
                                var $9045 = Parser$Reply$error$(Parser$Error$combine$($9044, $9042));
                                var $9043 = $9045;
                                break;
                            case 'Maybe.none':
                                var $9046 = Parser$Reply$error$($9042);
                                var $9043 = $9046;
                                break;
                        };
                        var $9041 = $9043;
                        break;
                    case 'Parser.Reply.value':
                        var $9047 = self.pst;
                        var self = $9047;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9049 = self.err;
                                var $9050 = self.nam;
                                var $9051 = self.ini;
                                var $9052 = self.idx;
                                var $9053 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9040, $9049), $9050, $9051, $9052, $9053);
                                var $9054 = Parser$Reply$value$(_reply$pst$16, Kind$Term$app$(_term$1, Kind$Term$hol$(Bits$e)));
                                var $9048 = $9054;
                                break;
                        };
                        var $9041 = $9048;
                        break;
                };
                var $9039 = $9041;
                break;
        };
        return $9039;
    };
    const Kind$Parser$application$hole = x0 => x1 => Kind$Parser$application$hole$(x0, x1);

    function Kind$Parser$term$suffix$(_term$1, _pst$2) {
        var Kind$Parser$term$suffix$ = (_term$1, _pst$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _pst$2]
        });
        var Kind$Parser$term$suffix = _term$1 => _pst$2 => Kind$Parser$term$suffix$(_term$1, _pst$2);
        var arg = [_term$1, _pst$2];
        while (true) {
            let [_term$1, _pst$2] = arg;
            var R = (() => {
                var self = _pst$2;
                switch (self._) {
                    case 'Parser.State.new':
                        var $9055 = self.err;
                        var $9056 = self.nam;
                        var $9057 = self.ini;
                        var $9058 = self.idx;
                        var $9059 = self.str;
                        var _suffix_parser$8 = Parser$choice(List$cons$(Kind$Parser$application(_term$1), List$cons$(Kind$Parser$application$erased(_term$1), List$cons$(Kind$Parser$list_set(_term$1), List$cons$(Kind$Parser$list_get(_term$1), List$cons$(Kind$Parser$map_set(_term$1), List$cons$(Kind$Parser$map_get(_term$1), List$cons$(Kind$Parser$field_set(_term$1), List$cons$(Kind$Parser$field_get(_term$1), List$cons$(Kind$Parser$arrow(_term$1), List$cons$(Kind$Parser$concat(_term$1), List$cons$(Kind$Parser$equality(_term$1), List$cons$(Kind$Parser$add(_term$1), List$cons$(Kind$Parser$sub(_term$1), List$cons$(Kind$Parser$mul(_term$1), List$cons$(Kind$Parser$div(_term$1), List$cons$(Kind$Parser$mod(_term$1), List$cons$(Kind$Parser$ltn(_term$1), List$cons$(Kind$Parser$lte(_term$1), List$cons$(Kind$Parser$eql(_term$1), List$cons$(Kind$Parser$gte(_term$1), List$cons$(Kind$Parser$gtn(_term$1), List$cons$(Kind$Parser$and(_term$1), List$cons$(Kind$Parser$or(_term$1), List$cons$(Kind$Parser$default(_term$1), List$cons$(Kind$Parser$cons(_term$1), List$cons$(Kind$Parser$string_concat(_term$1), List$cons$(Kind$Parser$sigma$(_term$1), List$cons$(Kind$Parser$inequality(_term$1), List$cons$(Kind$Parser$rewrite(_term$1), List$cons$(Kind$Parser$annotation(_term$1), List$cons$(Kind$Parser$application$hole(_term$1), List$nil))))))))))))))))))))))))))))))));
                        var self = _suffix_parser$8(_pst$2);
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $9061 = self.err;
                                var self = $9061;
                                switch (self._) {
                                    case 'Parser.Error.new':
                                        var _err$14 = Parser$Error$maybe_combine$($9055, Maybe$some$($9061));
                                        var _pst$15 = Parser$State$new$(_err$14, $9056, $9057, $9058, $9059);
                                        var $9063 = Parser$Reply$value$(_pst$15, _term$1);
                                        var $9062 = $9063;
                                        break;
                                };
                                var $9060 = $9062;
                                break;
                            case 'Parser.Reply.value':
                                var $9064 = self.pst;
                                var $9065 = self.val;
                                var $9066 = Kind$Parser$term$suffix$($9065, $9064);
                                var $9060 = $9066;
                                break;
                        };
                        return $9060;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$term$suffix = x0 => x1 => Kind$Parser$term$suffix$(x0, x1);
    const Kind$Parser$term = Kind$Parser$block("term")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9068 = self.err;
                var _reply$7 = Parser$choice$(List$cons$(Kind$Parser$dom, List$cons$(Kind$Parser$forall, List$cons$(Kind$Parser$lambda, List$cons$(Kind$Parser$lambda$erased, List$cons$(Kind$Parser$parenthesis, List$cons$(Kind$Parser$letforrange$u32$((_x$7 => {
                    var $9070 = Kind$Parser$term;
                    return $9070;
                })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$7 => {
                    var $9071 = Kind$Parser$term;
                    return $9071;
                })), List$cons$(Kind$Parser$letforrange$i32$((_x$7 => {
                    var $9072 = Kind$Parser$term;
                    return $9072;
                })), List$cons$(Kind$Parser$letforrange$i32$with$((_x$7 => {
                    var $9073 = Kind$Parser$term;
                    return $9073;
                })), List$cons$(Kind$Parser$letforrange$nat$((_x$7 => {
                    var $9074 = Kind$Parser$term;
                    return $9074;
                })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$7 => {
                    var $9075 = Kind$Parser$term;
                    return $9075;
                })), List$cons$(Kind$Parser$letforin$((_x$7 => {
                    var $9076 = Kind$Parser$term;
                    return $9076;
                })), List$cons$(Kind$Parser$letforin$with$((_x$7 => {
                    var $9077 = Kind$Parser$term;
                    return $9077;
                })), List$cons$(Kind$Parser$letwhile$((_x$7 => {
                    var $9078 = Kind$Parser$term;
                    return $9078;
                })), List$cons$(Kind$Parser$letwhile$with$((_x$7 => {
                    var $9079 = Kind$Parser$term;
                    return $9079;
                })), List$cons$(Kind$Parser$let$((_x$7 => {
                    var $9080 = Kind$Parser$term;
                    return $9080;
                })), List$cons$(Kind$Parser$let$omit$((_x$7 => {
                    var $9081 = Kind$Parser$term;
                    return $9081;
                })), List$cons$(Kind$Parser$getwhile$((_x$7 => {
                    var $9082 = Kind$Parser$term;
                    return $9082;
                })), List$cons$(Kind$Parser$getwhile$with((_x$7 => {
                    var $9083 = Kind$Parser$term;
                    return $9083;
                })), List$cons$(Kind$Parser$get$((_x$7 => {
                    var $9084 = Kind$Parser$term;
                    return $9084;
                })), List$cons$(Kind$Parser$get$omit$((_x$7 => {
                    var $9085 = Kind$Parser$term;
                    return $9085;
                })), List$cons$(Kind$Parser$def$((_x$7 => {
                    var $9086 = Kind$Parser$term;
                    return $9086;
                })), List$cons$(Kind$Parser$goal_rewrite, List$cons$(Kind$Parser$if, List$cons$(Kind$Parser$char, List$cons$(Kind$Parser$string$(34), List$cons$(Kind$Parser$string$(96), List$cons$(Kind$Parser$new, List$cons$(Kind$Parser$sigma$type, List$cons$(Kind$Parser$some, List$cons$(Kind$Parser$not, List$cons$(Kind$Parser$left, List$cons$(Kind$Parser$right, List$cons$(Kind$Parser$apply, List$cons$(Kind$Parser$chain, List$cons$(Kind$Parser$mirror, List$cons$(Kind$Parser$list, List$cons$(Kind$Parser$map, List$cons$(Kind$Parser$log$((_x$7 => {
                    var $9087 = Kind$Parser$term;
                    return $9087;
                })), List$cons$(Kind$Parser$do, List$cons$(Kind$Parser$case, List$cons$(Kind$Parser$open$((_x$7 => {
                    var $9088 = Kind$Parser$term;
                    return $9088;
                })), List$cons$(Kind$Parser$without, List$cons$(Kind$Parser$switch, List$cons$(Kind$Parser$goal, List$cons$(Kind$Parser$hole, List$cons$(Kind$Parser$float$64, List$cons$(Kind$Parser$float$32, List$cons$(Kind$Parser$machine_integer$signed$(256n), List$cons$(Kind$Parser$machine_integer$signed$(128n), List$cons$(Kind$Parser$machine_integer$signed$(64n), List$cons$(Kind$Parser$machine_integer$signed$(32n), List$cons$(Kind$Parser$machine_integer$signed$(16n), List$cons$(Kind$Parser$machine_integer$signed$(8n), List$cons$(Kind$Parser$machine_integer$unsigned$(256n), List$cons$(Kind$Parser$machine_integer$unsigned$(128n), List$cons$(Kind$Parser$machine_integer$unsigned$(64n), List$cons$(Kind$Parser$machine_integer$unsigned$(32n), List$cons$(Kind$Parser$machine_integer$unsigned$(16n), List$cons$(Kind$Parser$machine_integer$unsigned$(8n), List$cons$(Kind$Parser$u64, List$cons$(Kind$Parser$u32, List$cons$(Kind$Parser$u16, List$cons$(Kind$Parser$u8, List$cons$(Kind$Parser$num, List$cons$(Kind$Parser$reference, List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $9090 = self.err;
                            var _reply$13 = Kind$Parser$spaces(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $9092 = self.err;
                                    var self = $9090;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9094 = self.value;
                                            var $9095 = Parser$Reply$error$(Parser$Error$combine$($9094, $9092));
                                            var $9093 = $9095;
                                            break;
                                        case 'Maybe.none':
                                            var $9096 = Parser$Reply$error$($9092);
                                            var $9093 = $9096;
                                            break;
                                    };
                                    var $9091 = $9093;
                                    break;
                                case 'Parser.Reply.value':
                                    var $9097 = self.pst;
                                    var self = $9097;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $9099 = self.err;
                                            var $9100 = self.nam;
                                            var $9101 = self.ini;
                                            var $9102 = self.idx;
                                            var $9103 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($9090, $9099), $9100, $9101, $9102, $9103);
                                            var $9104 = Parser$fail$("Expected a term.", _reply$pst$21);
                                            var $9098 = $9104;
                                            break;
                                    };
                                    var $9091 = $9098;
                                    break;
                            };
                            var $9089 = $9091;
                            break;
                    };
                    return $9089;
                }), List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9105 = self.err;
                        var self = $9068;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9107 = self.value;
                                var $9108 = Parser$Reply$error$(Parser$Error$combine$($9107, $9105));
                                var $9106 = $9108;
                                break;
                            case 'Maybe.none':
                                var $9109 = Parser$Reply$error$($9105);
                                var $9106 = $9109;
                                break;
                        };
                        var $9069 = $9106;
                        break;
                    case 'Parser.Reply.value':
                        var $9110 = self.pst;
                        var $9111 = self.val;
                        var self = $9110;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9113 = self.err;
                                var $9114 = self.nam;
                                var $9115 = self.ini;
                                var $9116 = self.idx;
                                var $9117 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9068, $9113), $9114, $9115, $9116, $9117);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9119 = self.err;
                                        var _reply$21 = Kind$Parser$term$suffix$($9111, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9121 = self.err;
                                                var self = $9119;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9123 = self.value;
                                                        var $9124 = Parser$Reply$error$(Parser$Error$combine$($9123, $9121));
                                                        var $9122 = $9124;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9125 = Parser$Reply$error$($9121);
                                                        var $9122 = $9125;
                                                        break;
                                                };
                                                var $9120 = $9122;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9126 = self.pst;
                                                var $9127 = self.val;
                                                var self = $9126;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9129 = self.err;
                                                        var $9130 = self.nam;
                                                        var $9131 = self.ini;
                                                        var $9132 = self.idx;
                                                        var $9133 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9119, $9129), $9130, $9131, $9132, $9133);
                                                        var $9134 = Parser$Reply$value$(_reply$pst$29, $9127);
                                                        var $9128 = $9134;
                                                        break;
                                                };
                                                var $9120 = $9128;
                                                break;
                                        };
                                        var $9118 = $9120;
                                        break;
                                };
                                var $9112 = $9118;
                                break;
                        };
                        var $9069 = $9112;
                        break;
                };
                var $9067 = $9069;
                break;
        };
        return $9067;
    }));

    function Kind$Parser$name_term$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9136 = self.err;
                var _reply$8 = Kind$Parser$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9138 = self.err;
                        var self = $9136;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9140 = self.value;
                                var $9141 = Parser$Reply$error$(Parser$Error$combine$($9140, $9138));
                                var $9139 = $9141;
                                break;
                            case 'Maybe.none':
                                var $9142 = Parser$Reply$error$($9138);
                                var $9139 = $9142;
                                break;
                        };
                        var $9137 = $9139;
                        break;
                    case 'Parser.Reply.value':
                        var $9143 = self.pst;
                        var $9144 = self.val;
                        var self = $9143;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9146 = self.err;
                                var $9147 = self.nam;
                                var $9148 = self.ini;
                                var $9149 = self.idx;
                                var $9150 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9136, $9146), $9147, $9148, $9149, $9150);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9152 = self.err;
                                        var _reply$22 = Kind$Parser$text$(_sep$1, _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9154 = self.err;
                                                var self = $9152;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9156 = self.value;
                                                        var $9157 = Parser$Reply$error$(Parser$Error$combine$($9156, $9154));
                                                        var $9155 = $9157;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9158 = Parser$Reply$error$($9154);
                                                        var $9155 = $9158;
                                                        break;
                                                };
                                                var $9153 = $9155;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9159 = self.pst;
                                                var self = $9159;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9161 = self.err;
                                                        var $9162 = self.nam;
                                                        var $9163 = self.ini;
                                                        var $9164 = self.idx;
                                                        var $9165 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9152, $9161), $9162, $9163, $9164, $9165);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9167 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9169 = self.err;
                                                                        var self = $9167;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9171 = self.value;
                                                                                var $9172 = Parser$Reply$error$(Parser$Error$combine$($9171, $9169));
                                                                                var $9170 = $9172;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9173 = Parser$Reply$error$($9169);
                                                                                var $9170 = $9173;
                                                                                break;
                                                                        };
                                                                        var $9168 = $9170;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9174 = self.pst;
                                                                        var $9175 = self.val;
                                                                        var self = $9174;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9177 = self.err;
                                                                                var $9178 = self.nam;
                                                                                var $9179 = self.ini;
                                                                                var $9180 = self.idx;
                                                                                var $9181 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9167, $9177), $9178, $9179, $9180, $9181);
                                                                                var $9182 = Parser$Reply$value$(_reply$pst$44, Pair$new$($9144, $9175));
                                                                                var $9176 = $9182;
                                                                                break;
                                                                        };
                                                                        var $9168 = $9176;
                                                                        break;
                                                                };
                                                                var $9166 = $9168;
                                                                break;
                                                        };
                                                        var $9160 = $9166;
                                                        break;
                                                };
                                                var $9153 = $9160;
                                                break;
                                        };
                                        var $9151 = $9153;
                                        break;
                                };
                                var $9145 = $9151;
                                break;
                        };
                        var $9137 = $9145;
                        break;
                };
                var $9135 = $9137;
                break;
        };
        return $9135;
    };
    const Kind$Parser$name_term = x0 => x1 => Kind$Parser$name_term$(x0, x1);

    function Kind$Binder$new$(_eras$1, _name$2, _term$3) {
        var $9183 = ({
            _: 'Kind.Binder.new',
            'eras': _eras$1,
            'name': _name$2,
            'term': _term$3
        });
        return $9183;
    };
    const Kind$Binder$new = x0 => x1 => x2 => Kind$Binder$new$(x0, x1, x2);

    function Kind$Parser$binder$homo$(_sep$1, _eras$2) {
        var self = _eras$2;
        if (self) {
            var $9185 = "<";
            var _open$3 = $9185;
        } else {
            var $9186 = "(";
            var _open$3 = $9186;
        };
        var self = _eras$2;
        if (self) {
            var $9187 = ">";
            var _clos$4 = $9187;
        } else {
            var $9188 = ")";
            var _clos$4 = $9188;
        };
        var $9184 = (_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $9190 = self.err;
                    var _reply$11 = Kind$Parser$items1$(_open$3, Kind$Parser$name_term(_sep$1), _clos$4)(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $9192 = self.err;
                            var self = $9190;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9194 = self.value;
                                    var $9195 = Parser$Reply$error$(Parser$Error$combine$($9194, $9192));
                                    var $9193 = $9195;
                                    break;
                                case 'Maybe.none':
                                    var $9196 = Parser$Reply$error$($9192);
                                    var $9193 = $9196;
                                    break;
                            };
                            var $9191 = $9193;
                            break;
                        case 'Parser.Reply.value':
                            var $9197 = self.pst;
                            var $9198 = self.val;
                            var self = $9197;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $9200 = self.err;
                                    var $9201 = self.nam;
                                    var $9202 = self.ini;
                                    var $9203 = self.idx;
                                    var $9204 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($9190, $9200), $9201, $9202, $9203, $9204);
                                    var $9205 = Parser$Reply$value$(_reply$pst$19, List$mapped$($9198, (_pair$20 => {
                                        var self = _pair$20;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $9207 = self.fst;
                                                var $9208 = self.snd;
                                                var $9209 = Kind$Binder$new$(_eras$2, $9207, $9208);
                                                var $9206 = $9209;
                                                break;
                                        };
                                        return $9206;
                                    })));
                                    var $9199 = $9205;
                                    break;
                            };
                            var $9191 = $9199;
                            break;
                    };
                    var $9189 = $9191;
                    break;
            };
            return $9189;
        });
        return $9184;
    };
    const Kind$Parser$binder$homo = x0 => x1 => Kind$Parser$binder$homo$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9211 = self.head;
                var $9212 = self.tail;
                var $9213 = List$cons$($9211, List$concat$($9212, _bs$3));
                var $9210 = $9213;
                break;
            case 'List.nil':
                var $9214 = _bs$3;
                var $9210 = $9214;
                break;
        };
        return $9210;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function List$flatten$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $9216 = self.head;
                var $9217 = self.tail;
                var $9218 = List$concat$($9216, List$flatten$($9217));
                var $9215 = $9218;
                break;
            case 'List.nil':
                var $9219 = List$nil;
                var $9215 = $9219;
                break;
        };
        return $9215;
    };
    const List$flatten = x0 => List$flatten$(x0);

    function Kind$Parser$binder$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9221 = self.err;
                var _reply$8 = Parser$many1$(Parser$choice(List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$true), List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$false), List$nil))), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9223 = self.err;
                        var self = $9221;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9225 = self.value;
                                var $9226 = Parser$Reply$error$(Parser$Error$combine$($9225, $9223));
                                var $9224 = $9226;
                                break;
                            case 'Maybe.none':
                                var $9227 = Parser$Reply$error$($9223);
                                var $9224 = $9227;
                                break;
                        };
                        var $9222 = $9224;
                        break;
                    case 'Parser.Reply.value':
                        var $9228 = self.pst;
                        var $9229 = self.val;
                        var self = $9228;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9231 = self.err;
                                var $9232 = self.nam;
                                var $9233 = self.ini;
                                var $9234 = self.idx;
                                var $9235 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9221, $9231), $9232, $9233, $9234, $9235);
                                var $9236 = Parser$Reply$value$(_reply$pst$16, List$flatten$($9229));
                                var $9230 = $9236;
                                break;
                        };
                        var $9222 = $9230;
                        break;
                };
                var $9220 = $9222;
                break;
        };
        return $9220;
    };
    const Kind$Parser$binder = x0 => x1 => Kind$Parser$binder$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function Kind$Parser$forall$make$(_binds$1, _body$2) {
        var self = _binds$1;
        switch (self._) {
            case 'List.cons':
                var $9238 = self.head;
                var $9239 = self.tail;
                var self = $9238;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9241 = self.eras;
                        var $9242 = self.name;
                        var $9243 = self.term;
                        var $9244 = Kind$Term$all$($9241, "", $9242, $9243, (_s$8 => _x$9 => {
                            var $9245 = Kind$Parser$forall$make$($9239, _body$2);
                            return $9245;
                        }));
                        var $9240 = $9244;
                        break;
                };
                var $9237 = $9240;
                break;
            case 'List.nil':
                var $9246 = _body$2;
                var $9237 = $9246;
                break;
        };
        return $9237;
    };
    const Kind$Parser$forall$make = x0 => x1 => Kind$Parser$forall$make$(x0, x1);

    function List$at_last$(_index$2, _list$3) {
        var $9247 = List$at$(_index$2, List$reverse$(_list$3));
        return $9247;
    };
    const List$at_last = x0 => x1 => List$at_last$(x0, x1);

    function Kind$Term$var$(_name$1, _indx$2) {
        var $9248 = ({
            _: 'Kind.Term.var',
            'name': _name$1,
            'indx': _indx$2
        });
        return $9248;
    };
    const Kind$Term$var = x0 => x1 => Kind$Term$var$(x0, x1);

    function Kind$Context$get_name_skips$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $9250 = Pair$new$("", 0n);
            var $9249 = $9250;
        } else {
            var $9251 = self.charCodeAt(0);
            var $9252 = self.slice(1);
            var _name_skips$4 = Kind$Context$get_name_skips$($9252);
            var self = _name_skips$4;
            switch (self._) {
                case 'Pair.new':
                    var $9254 = self.fst;
                    var $9255 = self.snd;
                    var self = ($9251 === 94);
                    if (self) {
                        var $9257 = Pair$new$($9254, Nat$succ$($9255));
                        var $9256 = $9257;
                    } else {
                        var $9258 = Pair$new$(String$cons$($9251, $9254), $9255);
                        var $9256 = $9258;
                    };
                    var $9253 = $9256;
                    break;
            };
            var $9249 = $9253;
        };
        return $9249;
    };
    const Kind$Context$get_name_skips = x0 => Kind$Context$get_name_skips$(x0);

    function Kind$Name$eql$(_a$1, _b$2) {
        var $9259 = (_a$1 === _b$2);
        return $9259;
    };
    const Kind$Name$eql = x0 => x1 => Kind$Name$eql$(x0, x1);

    function Kind$Context$find$go$(_name$1, _skip$2, _ctx$3) {
        var Kind$Context$find$go$ = (_name$1, _skip$2, _ctx$3) => ({
            ctr: 'TCO',
            arg: [_name$1, _skip$2, _ctx$3]
        });
        var Kind$Context$find$go = _name$1 => _skip$2 => _ctx$3 => Kind$Context$find$go$(_name$1, _skip$2, _ctx$3);
        var arg = [_name$1, _skip$2, _ctx$3];
        while (true) {
            let [_name$1, _skip$2, _ctx$3] = arg;
            var R = (() => {
                var self = _ctx$3;
                switch (self._) {
                    case 'List.cons':
                        var $9260 = self.head;
                        var $9261 = self.tail;
                        var self = $9260;
                        switch (self._) {
                            case 'Pair.new':
                                var $9263 = self.fst;
                                var $9264 = self.snd;
                                var self = Kind$Name$eql$(_name$1, $9263);
                                if (self) {
                                    var self = _skip$2;
                                    if (self === 0n) {
                                        var $9267 = Maybe$some$($9264);
                                        var $9266 = $9267;
                                    } else {
                                        var $9268 = (self - 1n);
                                        var $9269 = Kind$Context$find$go$(_name$1, $9268, $9261);
                                        var $9266 = $9269;
                                    };
                                    var $9265 = $9266;
                                } else {
                                    var $9270 = Kind$Context$find$go$(_name$1, _skip$2, $9261);
                                    var $9265 = $9270;
                                };
                                var $9262 = $9265;
                                break;
                        };
                        return $9262;
                    case 'List.nil':
                        var $9271 = Maybe$none;
                        return $9271;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Context$find$go = x0 => x1 => x2 => Kind$Context$find$go$(x0, x1, x2);

    function Kind$Context$find$(_name$1, _ctx$2) {
        var self = Kind$Context$get_name_skips$(_name$1);
        switch (self._) {
            case 'Pair.new':
                var $9273 = self.fst;
                var $9274 = self.snd;
                var $9275 = Kind$Context$find$go$($9273, $9274, _ctx$2);
                var $9272 = $9275;
                break;
        };
        return $9272;
    };
    const Kind$Context$find = x0 => x1 => Kind$Context$find$(x0, x1);

    function Kind$Path$Builder$o$(_path$1, _x$2) {
        var $9276 = _path$1((_x$2 + '0'));
        return $9276;
    };
    const Kind$Path$Builder$o = x0 => x1 => Kind$Path$Builder$o$(x0, x1);

    function Kind$Path$Builder$i$(_path$1, _x$2) {
        var $9277 = _path$1((_x$2 + '1'));
        return $9277;
    };
    const Kind$Path$Builder$i = x0 => x1 => Kind$Path$Builder$i$(x0, x1);

    function Kind$Path$Builder$to_bits$(_path$1) {
        var $9278 = _path$1(Bits$e);
        return $9278;
    };
    const Kind$Path$Builder$to_bits = x0 => Kind$Path$Builder$to_bits$(x0);

    function List$imapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9280 = self.head;
                var $9281 = self.tail;
                var $9282 = List$cons$(_f$4(0n)($9280), List$imapped$($9281, (_n$7 => {
                    var $9283 = _f$4(Nat$succ$(_n$7));
                    return $9283;
                })));
                var $9279 = $9282;
                break;
            case 'List.nil':
                var $9284 = List$nil;
                var $9279 = $9284;
                break;
        };
        return $9279;
    };
    const List$imapped = x0 => x1 => List$imapped$(x0, x1);

    function Kind$Path$Builder$nat$(_n$1, _b$2) {
        var self = _n$1;
        if (self === 0n) {
            var $9286 = Kind$Path$Builder$o(_b$2);
            var $9285 = $9286;
        } else {
            var $9287 = (self - 1n);
            var $9288 = Kind$Path$Builder$i(Kind$Path$Builder$nat$($9287, _b$2));
            var $9285 = $9288;
        };
        return $9285;
    };
    const Kind$Path$Builder$nat = x0 => x1 => Kind$Path$Builder$nat$(x0, x1);

    function Kind$Term$bind$(_vars$1, _path$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.var':
                var $9290 = self.name;
                var $9291 = self.indx;
                var self = List$at_last$($9291, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9293 = self.value;
                        var $9294 = Pair$snd$($9293);
                        var $9292 = $9294;
                        break;
                    case 'Maybe.none':
                        var $9295 = Kind$Term$var$($9290, $9291);
                        var $9292 = $9295;
                        break;
                };
                var $9289 = $9292;
                break;
            case 'Kind.Term.ref':
                var $9296 = self.name;
                var self = Kind$Context$find$($9296, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9298 = self.value;
                        var $9299 = $9298;
                        var $9297 = $9299;
                        break;
                    case 'Maybe.none':
                        var $9300 = Kind$Term$ref$($9296);
                        var $9297 = $9300;
                        break;
                };
                var $9289 = $9297;
                break;
            case 'Kind.Term.all':
                var $9301 = self.eras;
                var $9302 = self.self;
                var $9303 = self.name;
                var $9304 = self.xtyp;
                var $9305 = self.body;
                var _vlen$9 = (list_length(_vars$1));
                var $9306 = Kind$Term$all$($9301, $9302, $9303, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9304), (_s$10 => _x$11 => {
                    var $9307 = Kind$Term$bind$(List$cons$(Pair$new$($9303, _x$11), List$cons$(Pair$new$($9302, _s$10), _vars$1)), Kind$Path$Builder$i(_path$2), $9305(Kind$Term$var$($9302, _vlen$9))(Kind$Term$var$($9303, Nat$succ$(_vlen$9))));
                    return $9307;
                }));
                var $9289 = $9306;
                break;
            case 'Kind.Term.lam':
                var $9308 = self.name;
                var $9309 = self.body;
                var _vlen$6 = (list_length(_vars$1));
                var $9310 = Kind$Term$lam$($9308, (_x$7 => {
                    var $9311 = Kind$Term$bind$(List$cons$(Pair$new$($9308, _x$7), _vars$1), Kind$Path$Builder$o(_path$2), $9309(Kind$Term$var$($9308, _vlen$6)));
                    return $9311;
                }));
                var $9289 = $9310;
                break;
            case 'Kind.Term.app':
                var $9312 = self.func;
                var $9313 = self.argm;
                var $9314 = Kind$Term$app$(Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9312), Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9313));
                var $9289 = $9314;
                break;
            case 'Kind.Term.let':
                var $9315 = self.name;
                var $9316 = self.expr;
                var $9317 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9318 = Kind$Term$let$($9315, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9316), (_x$8 => {
                    var $9319 = Kind$Term$bind$(List$cons$(Pair$new$($9315, _x$8), _vars$1), Kind$Path$Builder$i(_path$2), $9317(Kind$Term$var$($9315, _vlen$7)));
                    return $9319;
                }));
                var $9289 = $9318;
                break;
            case 'Kind.Term.def':
                var $9320 = self.name;
                var $9321 = self.expr;
                var $9322 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9323 = Kind$Term$def$($9320, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9321), (_x$8 => {
                    var $9324 = Kind$Term$bind$(List$cons$(Pair$new$($9320, _x$8), _vars$1), Kind$Path$Builder$i(_path$2), $9322(Kind$Term$var$($9320, _vlen$7)));
                    return $9324;
                }));
                var $9289 = $9323;
                break;
            case 'Kind.Term.ann':
                var $9325 = self.done;
                var $9326 = self.term;
                var $9327 = self.type;
                var $9328 = Kind$Term$ann$($9325, Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9326), Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9327));
                var $9289 = $9328;
                break;
            case 'Kind.Term.gol':
                var $9329 = self.name;
                var $9330 = self.dref;
                var $9331 = self.verb;
                var $9332 = Kind$Term$gol$($9329, $9330, $9331);
                var $9289 = $9332;
                break;
            case 'Kind.Term.nat':
                var $9333 = self.natx;
                var $9334 = Kind$Term$nat$($9333);
                var $9289 = $9334;
                break;
            case 'Kind.Term.chr':
                var $9335 = self.chrx;
                var $9336 = Kind$Term$chr$($9335);
                var $9289 = $9336;
                break;
            case 'Kind.Term.str':
                var $9337 = self.strx;
                var $9338 = Kind$Term$str$($9337);
                var $9289 = $9338;
                break;
            case 'Kind.Term.num':
                var $9339 = self.sign;
                var $9340 = self.numb;
                var $9341 = self.frac;
                var $9342 = Kind$Term$num$($9339, $9340, $9341);
                var $9289 = $9342;
                break;
            case 'Kind.Term.cse':
                var $9343 = self.expr;
                var $9344 = self.name;
                var $9345 = self.with;
                var $9346 = self.cses;
                var $9347 = self.moti;
                var _expr$10 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9343);
                var _name$11 = $9344;
                var _wyth$12 = List$mapped$($9345, (_with_var$12 => {
                    var self = _with_var$12;
                    switch (self._) {
                        case 'Kind.Ann.new':
                            var $9350 = self.name;
                            var $9351 = self.term;
                            var $9352 = self.type;
                            var _with_var_term$16 = Kind$Term$bind$(_vars$1, _path$2, $9351);
                            var self = $9352;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9354 = self.value;
                                    var $9355 = Maybe$some$(Kind$Term$bind$(_vars$1, _path$2, $9354));
                                    var _with_var_type$17 = $9355;
                                    break;
                                case 'Maybe.none':
                                    var $9356 = Maybe$none;
                                    var _with_var_type$17 = $9356;
                                    break;
                            };
                            var $9353 = Kind$Ann$new$($9350, _with_var_term$16, _with_var_type$17);
                            var $9349 = $9353;
                            break;
                    };
                    return $9349;
                }));
                var _cses$13 = $9346;
                var _moti$14 = $9347;
                var $9348 = Kind$Term$cse$(Kind$Path$Builder$to_bits$(_path$2), _expr$10, _name$11, _wyth$12, _cses$13, _moti$14);
                var $9289 = $9348;
                break;
            case 'Kind.Term.new':
                var $9357 = self.args;
                var _args$5 = List$imapped$($9357, (_idx$5 => _arg$6 => {
                    var $9359 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$nat$(_idx$5, _path$2), _arg$6);
                    return $9359;
                }));
                var $9358 = Kind$Term$new$(_args$5);
                var $9289 = $9358;
                break;
            case 'Kind.Term.get':
                var $9360 = self.expr;
                var $9361 = self.fkey;
                var _expr$6 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9360);
                var $9362 = Kind$Term$get$(_expr$6, $9361);
                var $9289 = $9362;
                break;
            case 'Kind.Term.set':
                var $9363 = self.expr;
                var $9364 = self.fkey;
                var $9365 = self.fval;
                var _expr$7 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9363);
                var _fval$8 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9365);
                var $9366 = Kind$Term$set$(_expr$7, $9364, _fval$8);
                var $9289 = $9366;
                break;
            case 'Kind.Term.ope':
                var $9367 = self.name;
                var $9368 = self.arg0;
                var $9369 = self.arg1;
                var _arg0$7 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$o(_path$2), $9368);
                var _arg1$8 = Kind$Term$bind$(_vars$1, Kind$Path$Builder$i(_path$2), $9369);
                var $9370 = Kind$Term$ope$($9367, _arg0$7, _arg1$8);
                var $9289 = $9370;
                break;
            case 'Kind.Term.ori':
                var $9371 = self.orig;
                var $9372 = self.expr;
                var $9373 = Kind$Term$ori$($9371, Kind$Term$bind$(_vars$1, _path$2, $9372));
                var $9289 = $9373;
                break;
            case 'Kind.Term.typ':
                var $9374 = Kind$Term$typ;
                var $9289 = $9374;
                break;
            case 'Kind.Term.hol':
                var $9375 = Kind$Term$hol$(Kind$Path$Builder$to_bits$(_path$2));
                var $9289 = $9375;
                break;
        };
        return $9289;
    };
    const Kind$Term$bind = x0 => x1 => x2 => Kind$Term$bind$(x0, x1, x2);

    function Trampoline$call$(_t$2) {
        var Trampoline$call$ = (_t$2) => ({
            ctr: 'TCO',
            arg: [_t$2]
        });
        var Trampoline$call = _t$2 => Trampoline$call$(_t$2);
        var arg = [_t$2];
        while (true) {
            let [_t$2] = arg;
            var R = (() => {
                var self = _t$2;
                switch (self._) {
                    case 'Trampoline.done':
                        var $9376 = self.value;
                        var $9377 = $9376;
                        return $9377;
                    case 'Trampoline.wrap':
                        var $9378 = self.value;
                        var $9379 = Trampoline$call$($9378(Unit$new));
                        return $9379;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Trampoline$call = x0 => Trampoline$call$(x0);

    function Trampoline$(_A$1) {
        var $9380 = null;
        return $9380;
    };
    const Trampoline = x0 => Trampoline$(x0);

    function Trampoline$wrap$(_value$2) {
        var $9381 = ({
            _: 'Trampoline.wrap',
            'value': _value$2
        });
        return $9381;
    };
    const Trampoline$wrap = x0 => Trampoline$wrap$(x0);

    function BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5) {
        var BitsMap$set_if_empty$cps$go$ = (_bits$2, _val$3, _map$4, _cont$5) => ({
            ctr: 'TCO',
            arg: [_bits$2, _val$3, _map$4, _cont$5]
        });
        var BitsMap$set_if_empty$cps$go = _bits$2 => _val$3 => _map$4 => _cont$5 => BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5);
        var arg = [_bits$2, _val$3, _map$4, _cont$5];
        while (true) {
            let [_bits$2, _val$3, _map$4, _cont$5] = arg;
            var R = (() => {
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $9382 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9384 = self.val;
                                var $9385 = self.lft;
                                var $9386 = self.rgt;
                                var $9387 = BitsMap$set_if_empty$cps$go$($9382, _val$3, $9385, (_lft$10 => {
                                    var $9388 = Trampoline$wrap$((_$11 => {
                                        var $9389 = _cont$5(BitsMap$tie$($9384, _lft$10, $9386));
                                        return $9389;
                                    }));
                                    return $9388;
                                }));
                                var $9383 = $9387;
                                break;
                            case 'BitsMap.new':
                                var $9390 = BitsMap$set_if_empty$cps$go$($9382, _val$3, BitsMap$new, (_lft$7 => {
                                    var $9391 = Trampoline$wrap$((_$8 => {
                                        var $9392 = _cont$5(BitsMap$tie$(Maybe$none, _lft$7, BitsMap$new));
                                        return $9392;
                                    }));
                                    return $9391;
                                }));
                                var $9383 = $9390;
                                break;
                        };
                        return $9383;
                    case 'i':
                        var $9393 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9395 = self.val;
                                var $9396 = self.lft;
                                var $9397 = self.rgt;
                                var $9398 = BitsMap$set_if_empty$cps$go$($9393, _val$3, $9397, (_rgt$10 => {
                                    var $9399 = Trampoline$wrap$((_$11 => {
                                        var $9400 = _cont$5(BitsMap$tie$($9395, $9396, _rgt$10));
                                        return $9400;
                                    }));
                                    return $9399;
                                }));
                                var $9394 = $9398;
                                break;
                            case 'BitsMap.new':
                                var $9401 = BitsMap$set_if_empty$cps$go$($9393, _val$3, BitsMap$new, (_rgt$7 => {
                                    var $9402 = Trampoline$wrap$((_$8 => {
                                        var $9403 = _cont$5(BitsMap$tie$(Maybe$none, BitsMap$new, _rgt$7));
                                        return $9403;
                                    }));
                                    return $9402;
                                }));
                                var $9394 = $9401;
                                break;
                        };
                        return $9394;
                    case 'e':
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9405 = self.val;
                                var $9406 = self.lft;
                                var $9407 = self.rgt;
                                var $9408 = _cont$5(BitsMap$tie$((() => {
                                    var self = $9405;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9409 = self.value;
                                            var $9410 = Maybe$some$($9409);
                                            return $9410;
                                        case 'Maybe.none':
                                            var $9411 = Maybe$some$(_val$3);
                                            return $9411;
                                    };
                                })(), $9406, $9407));
                                var $9404 = $9408;
                                break;
                            case 'BitsMap.new':
                                var $9412 = _cont$5(BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new));
                                var $9404 = $9412;
                                break;
                        };
                        return $9404;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BitsMap$set_if_empty$cps$go = x0 => x1 => x2 => x3 => BitsMap$set_if_empty$cps$go$(x0, x1, x2, x3);

    function Trampoline$done$(_value$2) {
        var $9413 = ({
            _: 'Trampoline.done',
            'value': _value$2
        });
        return $9413;
    };
    const Trampoline$done = x0 => Trampoline$done$(x0);

    function BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4) {
        var $9414 = Trampoline$call$(BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, Trampoline$done));
        return $9414;
    };
    const BitsMap$set_if_empty$cps = x0 => x1 => x2 => BitsMap$set_if_empty$cps$(x0, x1, x2);

    function BitsMap$set_if_empty$(_bits$2, _val$3, _map$4) {
        var $9415 = BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4);
        return $9415;
    };
    const BitsMap$set_if_empty = x0 => x1 => x2 => BitsMap$set_if_empty$(x0, x1, x2);

    function Kind$Map$set_if_empty$(_name$2, _val$3, _map$4) {
        var $9416 = BitsMap$set_if_empty$((kind_name_to_bits(_name$2)), _val$3, _map$4);
        return $9416;
    };
    const Kind$Map$set_if_empty = x0 => x1 => x2 => Kind$Map$set_if_empty$(x0, x1, x2);
    const Kind$Status$init = ({
        _: 'Kind.Status.init'
    });

    function Kind$Map$def$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _done$9, _defs$10) {
        var _defn$11 = Kind$Def$new(_file$1)(_code$2)(_orig$3)(_name$4)(_term$5)(_type$6)(_isct$7)(_arit$8);
        var self = _done$9;
        if (self) {
            var $9418 = Kind$Map$set$(_name$4, _defn$11(Kind$Status$done$(Bool$false)), _defs$10);
            var $9417 = $9418;
        } else {
            var $9419 = Kind$Map$set_if_empty$(_name$4, _defn$11(Kind$Status$init), _defs$10);
            var $9417 = $9419;
        };
        return $9417;
    };
    const Kind$Map$def = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => Kind$Map$def$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);

    function Kind$Parser$file$def$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $9421 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9423 = self.err;
                        var self = $9421;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9425 = self.value;
                                var $9426 = Parser$Reply$error$(Parser$Error$combine$($9425, $9423));
                                var $9424 = $9426;
                                break;
                            case 'Maybe.none':
                                var $9427 = Parser$Reply$error$($9423);
                                var $9424 = $9427;
                                break;
                        };
                        var $9422 = $9424;
                        break;
                    case 'Parser.Reply.value':
                        var $9428 = self.pst;
                        var self = $9428;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9430 = self.err;
                                var $9431 = self.nam;
                                var $9432 = self.ini;
                                var $9433 = self.idx;
                                var $9434 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($9421, $9430), $9431, $9432, $9433, $9434);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9436 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9438 = self.err;
                                                var self = $9436;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9440 = self.value;
                                                        var $9441 = Parser$Reply$error$(Parser$Error$combine$($9440, $9438));
                                                        var $9439 = $9441;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9442 = Parser$Reply$error$($9438);
                                                        var $9439 = $9442;
                                                        break;
                                                };
                                                var $9437 = $9439;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9443 = self.pst;
                                                var $9444 = self.val;
                                                var self = $9443;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9446 = self.err;
                                                        var $9447 = self.nam;
                                                        var $9448 = self.ini;
                                                        var $9449 = self.idx;
                                                        var $9450 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($9436, $9446), $9447, $9448, $9449, $9450);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9452 = self.err;
                                                                var _reply$38 = Kind$Parser$name1$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9454 = self.err;
                                                                        var self = $9452;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9456 = self.value;
                                                                                var $9457 = Parser$Reply$error$(Parser$Error$combine$($9456, $9454));
                                                                                var $9455 = $9457;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9458 = Parser$Reply$error$($9454);
                                                                                var $9455 = $9458;
                                                                                break;
                                                                        };
                                                                        var $9453 = $9455;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9459 = self.pst;
                                                                        var $9460 = self.val;
                                                                        var self = $9459;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9462 = self.err;
                                                                                var $9463 = self.nam;
                                                                                var $9464 = self.ini;
                                                                                var $9465 = self.idx;
                                                                                var $9466 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($9452, $9462), $9463, $9464, $9465, $9466);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9468 = self.err;
                                                                                        var _reply$52 = Parser$many$(Kind$Parser$binder(":"))(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9470 = self.err;
                                                                                                var self = $9468;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9472 = self.value;
                                                                                                        var $9473 = Parser$Reply$error$(Parser$Error$combine$($9472, $9470));
                                                                                                        var $9471 = $9473;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9474 = Parser$Reply$error$($9470);
                                                                                                        var $9471 = $9474;
                                                                                                        break;
                                                                                                };
                                                                                                var $9469 = $9471;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9475 = self.pst;
                                                                                                var $9476 = self.val;
                                                                                                var self = $9475;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9478 = self.err;
                                                                                                        var $9479 = self.nam;
                                                                                                        var $9480 = self.ini;
                                                                                                        var $9481 = self.idx;
                                                                                                        var $9482 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($9468, $9478), $9479, $9480, $9481, $9482);
                                                                                                        var _args$61 = List$flatten$($9476);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9484 = self.err;
                                                                                                                var _reply$67 = Kind$Parser$text$(":", _reply$pst$60);
                                                                                                                var self = _reply$67;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9486 = self.err;
                                                                                                                        var self = $9484;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9488 = self.value;
                                                                                                                                var $9489 = Parser$Reply$error$(Parser$Error$combine$($9488, $9486));
                                                                                                                                var $9487 = $9489;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9490 = Parser$Reply$error$($9486);
                                                                                                                                var $9487 = $9490;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9485 = $9487;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9491 = self.pst;
                                                                                                                        var self = $9491;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9493 = self.err;
                                                                                                                                var $9494 = self.nam;
                                                                                                                                var $9495 = self.ini;
                                                                                                                                var $9496 = self.idx;
                                                                                                                                var $9497 = self.str;
                                                                                                                                var _reply$pst$75 = Parser$State$new$(Parser$Error$maybe_combine$($9484, $9493), $9494, $9495, $9496, $9497);
                                                                                                                                var self = _reply$pst$75;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9499 = self.err;
                                                                                                                                        var _reply$81 = Kind$Parser$term(_reply$pst$75);
                                                                                                                                        var self = _reply$81;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9501 = self.err;
                                                                                                                                                var self = $9499;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9503 = self.value;
                                                                                                                                                        var $9504 = Parser$Reply$error$(Parser$Error$combine$($9503, $9501));
                                                                                                                                                        var $9502 = $9504;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9505 = Parser$Reply$error$($9501);
                                                                                                                                                        var $9502 = $9505;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9500 = $9502;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9506 = self.pst;
                                                                                                                                                var $9507 = self.val;
                                                                                                                                                var self = $9506;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9509 = self.err;
                                                                                                                                                        var $9510 = self.nam;
                                                                                                                                                        var $9511 = self.ini;
                                                                                                                                                        var $9512 = self.idx;
                                                                                                                                                        var $9513 = self.str;
                                                                                                                                                        var _reply$pst$89 = Parser$State$new$(Parser$Error$maybe_combine$($9499, $9509), $9510, $9511, $9512, $9513);
                                                                                                                                                        var self = _reply$pst$89;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $9515 = self.err;
                                                                                                                                                                var _reply$95 = Kind$Parser$term(_reply$pst$89);
                                                                                                                                                                var self = _reply$95;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $9517 = self.err;
                                                                                                                                                                        var self = $9515;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $9519 = self.value;
                                                                                                                                                                                var $9520 = Parser$Reply$error$(Parser$Error$combine$($9519, $9517));
                                                                                                                                                                                var $9518 = $9520;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $9521 = Parser$Reply$error$($9517);
                                                                                                                                                                                var $9518 = $9521;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9516 = $9518;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $9522 = self.pst;
                                                                                                                                                                        var $9523 = self.val;
                                                                                                                                                                        var self = $9522;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9525 = self.err;
                                                                                                                                                                                var $9526 = self.nam;
                                                                                                                                                                                var $9527 = self.ini;
                                                                                                                                                                                var $9528 = self.idx;
                                                                                                                                                                                var $9529 = self.str;
                                                                                                                                                                                var _reply$pst$103 = Parser$State$new$(Parser$Error$maybe_combine$($9515, $9525), $9526, $9527, $9528, $9529);
                                                                                                                                                                                var self = _reply$pst$103;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $9531 = self.err;
                                                                                                                                                                                        var _reply$109 = Parser$get_idx$(_reply$pst$103);
                                                                                                                                                                                        var self = _reply$109;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $9533 = self.err;
                                                                                                                                                                                                var self = $9531;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $9535 = self.value;
                                                                                                                                                                                                        var $9536 = Parser$Reply$error$(Parser$Error$combine$($9535, $9533));
                                                                                                                                                                                                        var $9534 = $9536;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $9537 = Parser$Reply$error$($9533);
                                                                                                                                                                                                        var $9534 = $9537;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9532 = $9534;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $9538 = self.pst;
                                                                                                                                                                                                var $9539 = self.val;
                                                                                                                                                                                                var self = $9538;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $9541 = self.err;
                                                                                                                                                                                                        var $9542 = self.nam;
                                                                                                                                                                                                        var $9543 = self.ini;
                                                                                                                                                                                                        var $9544 = self.idx;
                                                                                                                                                                                                        var $9545 = self.str;
                                                                                                                                                                                                        var _reply$pst$117 = Parser$State$new$(Parser$Error$maybe_combine$($9531, $9541), $9542, $9543, $9544, $9545);
                                                                                                                                                                                                        var _orig$118 = Pair$new$($9444, $9539);
                                                                                                                                                                                                        var _arit$119 = (list_length(_args$61));
                                                                                                                                                                                                        var _type$120 = Kind$Parser$forall$make$(_args$61, $9507);
                                                                                                                                                                                                        var _term$121 = Kind$Parser$lambda$make$(List$mapped$(_args$61, (_x$121 => {
                                                                                                                                                                                                            var self = _x$121;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Kind.Binder.new':
                                                                                                                                                                                                                    var $9548 = self.name;
                                                                                                                                                                                                                    var $9549 = $9548;
                                                                                                                                                                                                                    var $9547 = $9549;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            return $9547;
                                                                                                                                                                                                        })), $9523);
                                                                                                                                                                                                        var _type$122 = Kind$Term$bind$(List$nil, (_x$122 => {
                                                                                                                                                                                                            var $9550 = (_x$122 + '1');
                                                                                                                                                                                                            return $9550;
                                                                                                                                                                                                        }), _type$120);
                                                                                                                                                                                                        var _term$123 = Kind$Term$bind$(List$nil, (_x$123 => {
                                                                                                                                                                                                            var $9551 = (_x$123 + '0');
                                                                                                                                                                                                            return $9551;
                                                                                                                                                                                                        }), _term$121);
                                                                                                                                                                                                        var _defs$124 = Kind$Map$def$(_file$1, _code$2, _orig$118, $9460, _term$123, _type$122, Bool$false, _arit$119, Bool$false, _defs$3);
                                                                                                                                                                                                        var $9546 = Parser$Reply$value$(_reply$pst$117, _defs$124);
                                                                                                                                                                                                        var $9540 = $9546;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9532 = $9540;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $9530 = $9532;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $9524 = $9530;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9516 = $9524;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $9514 = $9516;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9508 = $9514;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9500 = $9508;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9498 = $9500;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9492 = $9498;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9485 = $9492;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9483 = $9485;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9477 = $9483;
                                                                                                        break;
                                                                                                };
                                                                                                var $9469 = $9477;
                                                                                                break;
                                                                                        };
                                                                                        var $9467 = $9469;
                                                                                        break;
                                                                                };
                                                                                var $9461 = $9467;
                                                                                break;
                                                                        };
                                                                        var $9453 = $9461;
                                                                        break;
                                                                };
                                                                var $9451 = $9453;
                                                                break;
                                                        };
                                                        var $9445 = $9451;
                                                        break;
                                                };
                                                var $9437 = $9445;
                                                break;
                                        };
                                        var $9435 = $9437;
                                        break;
                                };
                                var $9429 = $9435;
                                break;
                        };
                        var $9422 = $9429;
                        break;
                };
                var $9420 = $9422;
                break;
        };
        return $9420;
    };
    const Kind$Parser$file$def = x0 => x1 => x2 => x3 => Kind$Parser$file$def$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Constructor$new$(_name$1, _args$2, _inds$3) {
        var $9552 = ({
            _: 'Kind.Parser.ADT.Constructor.new',
            'name': _name$1,
            'args': _args$2,
            'inds': _inds$3
        });
        return $9552;
    };
    const Kind$Parser$ADT$Constructor$new = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$new$(x0, x1, x2);

    function Kind$Parser$ADT$ctor$(_namespace$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9554 = self.err;
                var _reply$8 = Kind$Parser$name1$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9556 = self.err;
                        var self = $9554;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9558 = self.value;
                                var $9559 = Parser$Reply$error$(Parser$Error$combine$($9558, $9556));
                                var $9557 = $9559;
                                break;
                            case 'Maybe.none':
                                var $9560 = Parser$Reply$error$($9556);
                                var $9557 = $9560;
                                break;
                        };
                        var $9555 = $9557;
                        break;
                    case 'Parser.Reply.value':
                        var $9561 = self.pst;
                        var $9562 = self.val;
                        var self = $9561;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9564 = self.err;
                                var $9565 = self.nam;
                                var $9566 = self.ini;
                                var $9567 = self.idx;
                                var $9568 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9554, $9564), $9565, $9566, $9567, $9568);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9570 = self.err;
                                        var _reply$22 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9572 = self.err;
                                                var self = $9570;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9574 = self.value;
                                                        var $9575 = Parser$Reply$error$(Parser$Error$combine$($9574, $9572));
                                                        var $9573 = $9575;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9576 = Parser$Reply$error$($9572);
                                                        var $9573 = $9576;
                                                        break;
                                                };
                                                var $9571 = $9573;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9577 = self.pst;
                                                var $9578 = self.val;
                                                var self = $9577;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9580 = self.err;
                                                        var $9581 = self.nam;
                                                        var $9582 = self.ini;
                                                        var $9583 = self.idx;
                                                        var $9584 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9570, $9580), $9581, $9582, $9583, $9584);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9586 = self.err;
                                                                var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $9589 = self.err;
                                                                            var _reply$42 = Kind$Parser$text$("~", _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $9591 = self.err;
                                                                                    var self = $9589;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $9593 = self.value;
                                                                                            var $9594 = Parser$Reply$error$(Parser$Error$combine$($9593, $9591));
                                                                                            var $9592 = $9594;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $9595 = Parser$Reply$error$($9591);
                                                                                            var $9592 = $9595;
                                                                                            break;
                                                                                    };
                                                                                    var $9590 = $9592;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $9596 = self.pst;
                                                                                    var self = $9596;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $9598 = self.err;
                                                                                            var $9599 = self.nam;
                                                                                            var $9600 = self.ini;
                                                                                            var $9601 = self.idx;
                                                                                            var $9602 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($9589, $9598), $9599, $9600, $9601, $9602);
                                                                                            var $9603 = Kind$Parser$binder$("=", _reply$pst$50);
                                                                                            var $9597 = $9603;
                                                                                            break;
                                                                                    };
                                                                                    var $9590 = $9597;
                                                                                    break;
                                                                            };
                                                                            var $9588 = $9590;
                                                                            break;
                                                                    };
                                                                    return $9588;
                                                                }), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9604 = self.err;
                                                                        var self = $9586;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9606 = self.value;
                                                                                var $9607 = Parser$Reply$error$(Parser$Error$combine$($9606, $9604));
                                                                                var $9605 = $9607;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9608 = Parser$Reply$error$($9604);
                                                                                var $9605 = $9608;
                                                                                break;
                                                                        };
                                                                        var $9587 = $9605;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9609 = self.pst;
                                                                        var $9610 = self.val;
                                                                        var self = $9609;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9612 = self.err;
                                                                                var $9613 = self.nam;
                                                                                var $9614 = self.ini;
                                                                                var $9615 = self.idx;
                                                                                var $9616 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9586, $9612), $9613, $9614, $9615, $9616);
                                                                                var _args$45 = Maybe$default$($9578, List$nil);
                                                                                var _inds$46 = Maybe$default$($9610, List$nil);
                                                                                var $9617 = Parser$Reply$value$(_reply$pst$44, Kind$Parser$ADT$Constructor$new$($9562, _args$45, _inds$46));
                                                                                var $9611 = $9617;
                                                                                break;
                                                                        };
                                                                        var $9587 = $9611;
                                                                        break;
                                                                };
                                                                var $9585 = $9587;
                                                                break;
                                                        };
                                                        var $9579 = $9585;
                                                        break;
                                                };
                                                var $9571 = $9579;
                                                break;
                                        };
                                        var $9569 = $9571;
                                        break;
                                };
                                var $9563 = $9569;
                                break;
                        };
                        var $9555 = $9563;
                        break;
                };
                var $9553 = $9555;
                break;
        };
        return $9553;
    };
    const Kind$Parser$ADT$ctor = x0 => x1 => Kind$Parser$ADT$ctor$(x0, x1);

    function Kind$Parser$ADT$Datatype$new$(_name$1, _pars$2, _inds$3, _ctrs$4, _deri$5) {
        var $9618 = ({
            _: 'Kind.Parser.ADT.Datatype.new',
            'name': _name$1,
            'pars': _pars$2,
            'inds': _inds$3,
            'ctrs': _ctrs$4,
            'deri': _deri$5
        });
        return $9618;
    };
    const Kind$Parser$ADT$Datatype$new = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Datatype$new$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$adt$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9620 = self.err;
                var _reply$7 = Kind$Parser$text$("type ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9622 = self.err;
                        var self = $9620;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9624 = self.value;
                                var $9625 = Parser$Reply$error$(Parser$Error$combine$($9624, $9622));
                                var $9623 = $9625;
                                break;
                            case 'Maybe.none':
                                var $9626 = Parser$Reply$error$($9622);
                                var $9623 = $9626;
                                break;
                        };
                        var $9621 = $9623;
                        break;
                    case 'Parser.Reply.value':
                        var $9627 = self.pst;
                        var self = $9627;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9629 = self.err;
                                var $9630 = self.nam;
                                var $9631 = self.ini;
                                var $9632 = self.idx;
                                var $9633 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9620, $9629), $9630, $9631, $9632, $9633);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9635 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9637 = self.err;
                                                var self = $9635;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9639 = self.value;
                                                        var $9640 = Parser$Reply$error$(Parser$Error$combine$($9639, $9637));
                                                        var $9638 = $9640;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9641 = Parser$Reply$error$($9637);
                                                        var $9638 = $9641;
                                                        break;
                                                };
                                                var $9636 = $9638;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9642 = self.pst;
                                                var $9643 = self.val;
                                                var self = $9642;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9645 = self.err;
                                                        var $9646 = self.nam;
                                                        var $9647 = self.ini;
                                                        var $9648 = self.idx;
                                                        var $9649 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9635, $9645), $9646, $9647, $9648, $9649);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9651 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9653 = self.err;
                                                                        var self = $9651;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9655 = self.value;
                                                                                var $9656 = Parser$Reply$error$(Parser$Error$combine$($9655, $9653));
                                                                                var $9654 = $9656;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9657 = Parser$Reply$error$($9653);
                                                                                var $9654 = $9657;
                                                                                break;
                                                                        };
                                                                        var $9652 = $9654;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9658 = self.pst;
                                                                        var $9659 = self.val;
                                                                        var self = $9658;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9661 = self.err;
                                                                                var $9662 = self.nam;
                                                                                var $9663 = self.ini;
                                                                                var $9664 = self.idx;
                                                                                var $9665 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($9651, $9661), $9662, $9663, $9664, $9665);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9667 = self.err;
                                                                                        var _reply$49 = Parser$maybe$((_pst$49 => {
                                                                                            var self = _pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $9670 = self.err;
                                                                                                    var _reply$55 = Kind$Parser$text$("~", _pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $9672 = self.err;
                                                                                                            var self = $9670;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $9674 = self.value;
                                                                                                                    var $9675 = Parser$Reply$error$(Parser$Error$combine$($9674, $9672));
                                                                                                                    var $9673 = $9675;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $9676 = Parser$Reply$error$($9672);
                                                                                                                    var $9673 = $9676;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9671 = $9673;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $9677 = self.pst;
                                                                                                            var self = $9677;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $9679 = self.err;
                                                                                                                    var $9680 = self.nam;
                                                                                                                    var $9681 = self.ini;
                                                                                                                    var $9682 = self.idx;
                                                                                                                    var $9683 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($9670, $9679), $9680, $9681, $9682, $9683);
                                                                                                                    var $9684 = Kind$Parser$binder$(":", _reply$pst$63);
                                                                                                                    var $9678 = $9684;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9671 = $9678;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $9669 = $9671;
                                                                                                    break;
                                                                                            };
                                                                                            return $9669;
                                                                                        }), _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9685 = self.err;
                                                                                                var self = $9667;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9687 = self.value;
                                                                                                        var $9688 = Parser$Reply$error$(Parser$Error$combine$($9687, $9685));
                                                                                                        var $9686 = $9688;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9689 = Parser$Reply$error$($9685);
                                                                                                        var $9686 = $9689;
                                                                                                        break;
                                                                                                };
                                                                                                var $9668 = $9686;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9690 = self.pst;
                                                                                                var $9691 = self.val;
                                                                                                var self = $9690;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9693 = self.err;
                                                                                                        var $9694 = self.nam;
                                                                                                        var $9695 = self.ini;
                                                                                                        var $9696 = self.idx;
                                                                                                        var $9697 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($9667, $9693), $9694, $9695, $9696, $9697);
                                                                                                        var _pars$58 = Maybe$default$($9659, List$nil);
                                                                                                        var _inds$59 = Maybe$default$($9691, List$nil);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9699 = self.err;
                                                                                                                var _reply$65 = Kind$Parser$items$("{", Kind$Parser$ADT$ctor($9643), "}")(_reply$pst$57);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9701 = self.err;
                                                                                                                        var self = $9699;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9703 = self.value;
                                                                                                                                var $9704 = Parser$Reply$error$(Parser$Error$combine$($9703, $9701));
                                                                                                                                var $9702 = $9704;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9705 = Parser$Reply$error$($9701);
                                                                                                                                var $9702 = $9705;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9700 = $9702;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9706 = self.pst;
                                                                                                                        var $9707 = self.val;
                                                                                                                        var self = $9706;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9709 = self.err;
                                                                                                                                var $9710 = self.nam;
                                                                                                                                var $9711 = self.ini;
                                                                                                                                var $9712 = self.idx;
                                                                                                                                var $9713 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($9699, $9709), $9710, $9711, $9712, $9713);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9715 = self.err;
                                                                                                                                        var _reply$79 = Parser$maybe$((_pst$79 => {
                                                                                                                                            var self = _pst$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $9718 = self.err;
                                                                                                                                                    var _reply$85 = Kind$Parser$text$("deriving", _pst$79);
                                                                                                                                                    var self = _reply$85;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $9720 = self.err;
                                                                                                                                                            var self = $9718;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $9722 = self.value;
                                                                                                                                                                    var $9723 = Parser$Reply$error$(Parser$Error$combine$($9722, $9720));
                                                                                                                                                                    var $9721 = $9723;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $9724 = Parser$Reply$error$($9720);
                                                                                                                                                                    var $9721 = $9724;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9719 = $9721;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $9725 = self.pst;
                                                                                                                                                            var self = $9725;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $9727 = self.err;
                                                                                                                                                                    var $9728 = self.nam;
                                                                                                                                                                    var $9729 = self.ini;
                                                                                                                                                                    var $9730 = self.idx;
                                                                                                                                                                    var $9731 = self.str;
                                                                                                                                                                    var _reply$pst$93 = Parser$State$new$(Parser$Error$maybe_combine$($9718, $9727), $9728, $9729, $9730, $9731);
                                                                                                                                                                    var $9732 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_reply$pst$93);
                                                                                                                                                                    var $9726 = $9732;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9719 = $9726;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $9717 = $9719;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $9717;
                                                                                                                                        }), _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9733 = self.err;
                                                                                                                                                var self = $9715;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9735 = self.value;
                                                                                                                                                        var $9736 = Parser$Reply$error$(Parser$Error$combine$($9735, $9733));
                                                                                                                                                        var $9734 = $9736;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9737 = Parser$Reply$error$($9733);
                                                                                                                                                        var $9734 = $9737;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9716 = $9734;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9738 = self.pst;
                                                                                                                                                var $9739 = self.val;
                                                                                                                                                var self = $9738;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9741 = self.err;
                                                                                                                                                        var $9742 = self.nam;
                                                                                                                                                        var $9743 = self.ini;
                                                                                                                                                        var $9744 = self.idx;
                                                                                                                                                        var $9745 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($9715, $9741), $9742, $9743, $9744, $9745);
                                                                                                                                                        var self = $9739;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                var $9747 = self.value;
                                                                                                                                                                var $9748 = $9747;
                                                                                                                                                                var _deri$88 = $9748;
                                                                                                                                                                break;
                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                var $9749 = List$nil;
                                                                                                                                                                var _deri$88 = $9749;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9746 = Parser$Reply$value$(_reply$pst$87, Kind$Parser$ADT$Datatype$new$($9643, _pars$58, _inds$59, $9707, _deri$88));
                                                                                                                                                        var $9740 = $9746;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9716 = $9740;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9714 = $9716;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9708 = $9714;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9700 = $9708;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9698 = $9700;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9692 = $9698;
                                                                                                        break;
                                                                                                };
                                                                                                var $9668 = $9692;
                                                                                                break;
                                                                                        };
                                                                                        var $9666 = $9668;
                                                                                        break;
                                                                                };
                                                                                var $9660 = $9666;
                                                                                break;
                                                                        };
                                                                        var $9652 = $9660;
                                                                        break;
                                                                };
                                                                var $9650 = $9652;
                                                                break;
                                                        };
                                                        var $9644 = $9650;
                                                        break;
                                                };
                                                var $9636 = $9644;
                                                break;
                                        };
                                        var $9634 = $9636;
                                        break;
                                };
                                var $9628 = $9634;
                                break;
                        };
                        var $9621 = $9628;
                        break;
                };
                var $9619 = $9621;
                break;
        };
        return $9619;
    };
    const Kind$Parser$ADT$adt = x0 => Kind$Parser$ADT$adt$(x0);

    function Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, _inds$3) {
        var self = _inds$3;
        switch (self._) {
            case 'List.cons':
                var $9751 = self.head;
                var $9752 = self.tail;
                var self = $9751;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9754 = self.eras;
                        var $9755 = self.name;
                        var $9756 = self.term;
                        var $9757 = Kind$Term$all$($9754, "", $9755, $9756, (_s$9 => _x$10 => {
                            var $9758 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, $9752);
                            return $9758;
                        }));
                        var $9753 = $9757;
                        break;
                };
                var $9750 = $9753;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9760 = self.pars;
                        var $9761 = self.inds;
                        var _slf$9 = Kind$Term$ref$(_name$2);
                        var _slf$10 = (() => {
                            var $9764 = _slf$9;
                            var $9765 = $9760;
                            let _slf$11 = $9764;
                            let _v$10;
                            while ($9765._ === 'List.cons') {
                                _v$10 = $9765.head;
                                var $9764 = Kind$Term$app$(_slf$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9766 = self.name;
                                            var $9767 = $9766;
                                            return $9767;
                                    };
                                })()));
                                _slf$11 = $9764;
                                $9765 = $9765.tail;
                            }
                            return _slf$11;
                        })();
                        var _slf$11 = (() => {
                            var $9769 = _slf$10;
                            var $9770 = $9761;
                            let _slf$12 = $9769;
                            let _v$11;
                            while ($9770._ === 'List.cons') {
                                _v$11 = $9770.head;
                                var $9769 = Kind$Term$app$(_slf$12, Kind$Term$ref$((() => {
                                    var self = _v$11;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9771 = self.name;
                                            var $9772 = $9771;
                                            return $9772;
                                    };
                                })()));
                                _slf$12 = $9769;
                                $9770 = $9770.tail;
                            }
                            return _slf$12;
                        })();
                        var $9762 = Kind$Term$all$(Bool$false, "", "", _slf$11, (_s$12 => _x$13 => {
                            var $9773 = Kind$Term$typ;
                            return $9773;
                        }));
                        var $9759 = $9762;
                        break;
                };
                var $9750 = $9759;
                break;
        };
        return $9750;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$motive$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$motive$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9775 = self.name;
                var $9776 = self.inds;
                var $9777 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, $9775, $9776);
                var $9774 = $9777;
                break;
        };
        return $9774;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive = x0 => Kind$Parser$ADT$Datatype$build_term$motive$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $9778 = self.head;
                        var $9779 = self.tail;
                        var $9780 = String$flatten$go$($9779, (_res$2 + $9778));
                        return $9780;
                    case 'List.nil':
                        var $9781 = _res$2;
                        return $9781;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $9782 = String$flatten$go$(_xs$1, "");
        return $9782;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, _args$3) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9784 = self.head;
                var $9785 = self.tail;
                var self = $9784;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9787 = self.eras;
                        var $9788 = self.name;
                        var $9789 = self.term;
                        var _eras$9 = $9787;
                        var _name$10 = $9788;
                        var _xtyp$11 = $9789;
                        var _body$12 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9785);
                        var $9790 = Kind$Term$all$(_eras$9, "", _name$10, _xtyp$11, (_s$13 => _x$14 => {
                            var $9791 = _body$12;
                            return $9791;
                        }));
                        var $9786 = $9790;
                        break;
                };
                var $9783 = $9786;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9793 = self.name;
                        var $9794 = self.pars;
                        var self = _ctor$2;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9796 = self.name;
                                var $9797 = self.args;
                                var $9798 = self.inds;
                                var _ret$12 = Kind$Term$ref$(Kind$Name$read$("P"));
                                var _ret$13 = (() => {
                                    var $9801 = _ret$12;
                                    var $9802 = $9798;
                                    let _ret$14 = $9801;
                                    let _v$13;
                                    while ($9802._ === 'List.cons') {
                                        _v$13 = $9802.head;
                                        var $9801 = Kind$Term$app$(_ret$14, (() => {
                                            var self = _v$13;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9803 = self.term;
                                                    var $9804 = $9803;
                                                    return $9804;
                                            };
                                        })());
                                        _ret$14 = $9801;
                                        $9802 = $9802.tail;
                                    }
                                    return _ret$14;
                                })();
                                var _ctr$14 = String$flatten$(List$cons$($9793, List$cons$(Kind$Name$read$("."), List$cons$($9796, List$nil))));
                                var _slf$15 = Kind$Term$ref$(_ctr$14);
                                var _slf$16 = (() => {
                                    var $9806 = _slf$15;
                                    var $9807 = $9794;
                                    let _slf$17 = $9806;
                                    let _v$16;
                                    while ($9807._ === 'List.cons') {
                                        _v$16 = $9807.head;
                                        var $9806 = Kind$Term$app$(_slf$17, Kind$Term$ref$((() => {
                                            var self = _v$16;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9808 = self.name;
                                                    var $9809 = $9808;
                                                    return $9809;
                                            };
                                        })()));
                                        _slf$17 = $9806;
                                        $9807 = $9807.tail;
                                    }
                                    return _slf$17;
                                })();
                                var _slf$17 = (() => {
                                    var $9811 = _slf$16;
                                    var $9812 = $9797;
                                    let _slf$18 = $9811;
                                    let _v$17;
                                    while ($9812._ === 'List.cons') {
                                        _v$17 = $9812.head;
                                        var $9811 = Kind$Term$app$(_slf$18, Kind$Term$ref$((() => {
                                            var self = _v$17;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9813 = self.name;
                                                    var $9814 = $9813;
                                                    return $9814;
                                            };
                                        })()));
                                        _slf$18 = $9811;
                                        $9812 = $9812.tail;
                                    }
                                    return _slf$18;
                                })();
                                var $9799 = Kind$Term$app$(_ret$13, _slf$17);
                                var $9795 = $9799;
                                break;
                        };
                        var $9792 = $9795;
                        break;
                };
                var $9783 = $9792;
                break;
        };
        return $9783;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructor$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9816 = self.args;
                var $9817 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9816);
                var $9815 = $9817;
                break;
        };
        return $9815;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor = x0 => x1 => Kind$Parser$ADT$Datatype$build_term$constructor$(x0, x1);

    function Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9819 = self.head;
                var $9820 = self.tail;
                var self = $9819;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9822 = self.name;
                        var $9823 = Kind$Term$all$(Bool$false, "", $9822, Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, $9819), (_s$9 => _x$10 => {
                            var $9824 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, $9820);
                            return $9824;
                        }));
                        var $9821 = $9823;
                        break;
                };
                var $9818 = $9821;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9826 = self.inds;
                        var _ret$9 = Kind$Term$ref$(Kind$Name$read$("P"));
                        var _ret$10 = (() => {
                            var $9829 = _ret$9;
                            var $9830 = $9826;
                            let _ret$11 = $9829;
                            let _v$10;
                            while ($9830._ === 'List.cons') {
                                _v$10 = $9830.head;
                                var $9829 = Kind$Term$app$(_ret$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9831 = self.name;
                                            var $9832 = $9831;
                                            return $9832;
                                    };
                                })()));
                                _ret$11 = $9829;
                                $9830 = $9830.tail;
                            }
                            return _ret$11;
                        })();
                        var $9827 = Kind$Term$app$(_ret$10, Kind$Term$ref$((_name$2 + ".Self")));
                        var $9825 = $9827;
                        break;
                };
                var $9818 = $9825;
                break;
        };
        return $9818;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructors$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9834 = self.name;
                var $9835 = self.ctrs;
                var $9836 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, $9834, $9835);
                var $9833 = $9836;
                break;
        };
        return $9833;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors = x0 => Kind$Parser$ADT$Datatype$build_term$constructors$(x0);

    function Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9838 = self.head;
                var $9839 = self.tail;
                var self = $9838;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9841 = self.name;
                        var $9842 = Kind$Term$lam$($9841, (_x$10 => {
                            var $9843 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, $9839, _inds$4);
                            return $9843;
                        }));
                        var $9840 = $9842;
                        break;
                };
                var $9837 = $9840;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9845 = self.head;
                        var $9846 = self.tail;
                        var self = $9845;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9848 = self.name;
                                var $9849 = Kind$Term$lam$($9848, (_x$10 => {
                                    var $9850 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, $9846);
                                    return $9850;
                                }));
                                var $9847 = $9849;
                                break;
                        };
                        var $9844 = $9847;
                        break;
                    case 'List.nil':
                        var $9851 = Kind$Term$all$(Bool$true, (_name$2 + ".Self"), Kind$Name$read$("P"), Kind$Parser$ADT$Datatype$build_term$motive$(_type$1), (_s$5 => _x$6 => {
                            var $9852 = Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1);
                            return $9852;
                        }));
                        var $9844 = $9851;
                        break;
                };
                var $9837 = $9844;
                break;
        };
        return $9837;
    };
    const Kind$Parser$ADT$Datatype$build_term$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_term$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_term$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9854 = self.name;
                var $9855 = self.pars;
                var $9856 = self.inds;
                var $9857 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, $9854, $9855, $9856);
                var $9853 = $9857;
                break;
        };
        return $9853;
    };
    const Kind$Parser$ADT$Datatype$build_term = x0 => Kind$Parser$ADT$Datatype$build_term$(x0);

    function Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9859 = self.head;
                var $9860 = self.tail;
                var self = $9859;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9862 = self.name;
                        var $9863 = self.term;
                        var $9864 = Kind$Term$all$(Bool$false, "", $9862, $9863, (_s$10 => _x$11 => {
                            var $9865 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, $9860, _inds$4);
                            return $9865;
                        }));
                        var $9861 = $9864;
                        break;
                };
                var $9858 = $9861;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9867 = self.head;
                        var $9868 = self.tail;
                        var self = $9867;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9870 = self.name;
                                var $9871 = self.term;
                                var $9872 = Kind$Term$all$(Bool$false, "", $9870, $9871, (_s$10 => _x$11 => {
                                    var $9873 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, $9868);
                                    return $9873;
                                }));
                                var $9869 = $9872;
                                break;
                        };
                        var $9866 = $9869;
                        break;
                    case 'List.nil':
                        var $9874 = Kind$Term$typ;
                        var $9866 = $9874;
                        break;
                };
                var $9858 = $9866;
                break;
        };
        return $9858;
    };
    const Kind$Parser$ADT$Datatype$build_type$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_type$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_type$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9876 = self.name;
                var $9877 = self.pars;
                var $9878 = self.inds;
                var $9879 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, $9876, $9877, $9878);
                var $9875 = $9879;
                break;
        };
        return $9875;
    };
    const Kind$Parser$ADT$Datatype$build_type = x0 => Kind$Parser$ADT$Datatype$build_type$(x0);

    function Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9881 = self.head;
                var $9882 = self.tail;
                var self = $9881;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9884 = self.name;
                        var $9885 = Kind$Term$lam$($9884, (_x$9 => {
                            var $9886 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9882);
                            return $9886;
                        }));
                        var $9883 = $9885;
                        break;
                };
                var $9880 = $9883;
                break;
            case 'List.nil':
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9888 = self.name;
                        var $9889 = self.args;
                        var _ret$7 = Kind$Term$ref$($9888);
                        var _ret$8 = (() => {
                            var $9892 = _ret$7;
                            var $9893 = $9889;
                            let _ret$9 = $9892;
                            let _arg$8;
                            while ($9893._ === 'List.cons') {
                                _arg$8 = $9893.head;
                                var $9892 = Kind$Term$app$(_ret$9, Kind$Term$ref$((() => {
                                    var self = _arg$8;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9894 = self.name;
                                            var $9895 = $9894;
                                            return $9895;
                                    };
                                })()));
                                _ret$9 = $9892;
                                $9893 = $9893.tail;
                            }
                            return _ret$9;
                        })();
                        var $9890 = _ret$8;
                        var $9887 = $9890;
                        break;
                };
                var $9880 = $9887;
                break;
        };
        return $9880;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt$go = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$build_term$opt$go$(x0, x1, x2);

    function Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9897 = self.ctrs;
                var $9898 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9897);
                var $9896 = $9898;
                break;
        };
        return $9896;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$opt$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9900 = self.head;
                var $9901 = self.tail;
                var self = $9900;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9903 = self.name;
                        var $9904 = Kind$Term$lam$($9903, (_x$11 => {
                            var $9905 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, $9901, _args$5);
                            return $9905;
                        }));
                        var $9902 = $9904;
                        break;
                };
                var $9899 = $9902;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9907 = self.head;
                        var $9908 = self.tail;
                        var self = $9907;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9910 = self.name;
                                var $9911 = Kind$Term$lam$($9910, (_x$11 => {
                                    var $9912 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, $9908);
                                    return $9912;
                                }));
                                var $9909 = $9911;
                                break;
                        };
                        var $9906 = $9909;
                        break;
                    case 'List.nil':
                        var $9913 = Kind$Term$lam$(Kind$Name$read$("P"), (_x$6 => {
                            var $9914 = Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2);
                            return $9914;
                        }));
                        var $9906 = $9913;
                        break;
                };
                var $9899 = $9906;
                break;
        };
        return $9899;
    };
    const Kind$Parser$ADT$Constructor$build_term$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_term$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_term$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9916 = self.name;
                var $9917 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9919 = self.args;
                        var $9920 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, $9916, $9917, $9919);
                        var $9918 = $9920;
                        break;
                };
                var $9915 = $9918;
                break;
        };
        return $9915;
    };
    const Kind$Parser$ADT$Constructor$build_term = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9922 = self.head;
                var $9923 = self.tail;
                var self = $9922;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9925 = self.eras;
                        var $9926 = self.name;
                        var $9927 = self.term;
                        var $9928 = Kind$Term$all$($9925, "", $9926, $9927, (_s$11 => _x$12 => {
                            var $9929 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, $9923, _args$5);
                            return $9929;
                        }));
                        var $9924 = $9928;
                        break;
                };
                var $9921 = $9924;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9931 = self.head;
                        var $9932 = self.tail;
                        var self = $9931;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9934 = self.eras;
                                var $9935 = self.name;
                                var $9936 = self.term;
                                var $9937 = Kind$Term$all$($9934, "", $9935, $9936, (_s$11 => _x$12 => {
                                    var $9938 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, $9932);
                                    return $9938;
                                }));
                                var $9933 = $9937;
                                break;
                        };
                        var $9930 = $9933;
                        break;
                    case 'List.nil':
                        var self = _type$1;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Datatype.new':
                                var $9940 = self.pars;
                                var self = _ctor$2;
                                switch (self._) {
                                    case 'Kind.Parser.ADT.Constructor.new':
                                        var $9942 = self.inds;
                                        var _type$14 = Kind$Term$ref$(_name$3);
                                        var _type$15 = (() => {
                                            var $9945 = _type$14;
                                            var $9946 = $9940;
                                            let _type$16 = $9945;
                                            let _v$15;
                                            while ($9946._ === 'List.cons') {
                                                _v$15 = $9946.head;
                                                var $9945 = Kind$Term$app$(_type$16, Kind$Term$ref$((() => {
                                                    var self = _v$15;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9947 = self.name;
                                                            var $9948 = $9947;
                                                            return $9948;
                                                    };
                                                })()));
                                                _type$16 = $9945;
                                                $9946 = $9946.tail;
                                            }
                                            return _type$16;
                                        })();
                                        var _type$16 = (() => {
                                            var $9950 = _type$15;
                                            var $9951 = $9942;
                                            let _type$17 = $9950;
                                            let _v$16;
                                            while ($9951._ === 'List.cons') {
                                                _v$16 = $9951.head;
                                                var $9950 = Kind$Term$app$(_type$17, (() => {
                                                    var self = _v$16;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9952 = self.term;
                                                            var $9953 = $9952;
                                                            return $9953;
                                                    };
                                                })());
                                                _type$17 = $9950;
                                                $9951 = $9951.tail;
                                            }
                                            return _type$17;
                                        })();
                                        var $9943 = _type$16;
                                        var $9941 = $9943;
                                        break;
                                };
                                var $9939 = $9941;
                                break;
                        };
                        var $9930 = $9939;
                        break;
                };
                var $9921 = $9930;
                break;
        };
        return $9921;
    };
    const Kind$Parser$ADT$Constructor$build_type$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_type$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_type$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9955 = self.name;
                var $9956 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9958 = self.args;
                        var $9959 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, $9955, $9956, $9958);
                        var $9957 = $9959;
                        break;
                };
                var $9954 = $9957;
                break;
        };
        return $9954;
    };
    const Kind$Parser$ADT$Constructor$build_type = x0 => x1 => Kind$Parser$ADT$Constructor$build_type$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $9961 = Bool$true;
                var $9960 = $9961;
                break;
            case 'List.cons':
                var $9962 = Bool$false;
                var $9960 = $9962;
                break;
        };
        return $9960;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Kind$Term$get_args$go$(_term$1, _args$2) {
        var Kind$Term$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Term$get_args$go = _term$1 => _args$2 => Kind$Term$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $9963 = self.func;
                        var $9964 = self.argm;
                        var $9965 = Kind$Term$get_args$go$($9963, List$cons$($9964, _args$2));
                        return $9965;
                    case 'Kind.Term.ori':
                        var $9966 = self.expr;
                        var $9967 = Kind$Term$get_args$go$($9966, _args$2);
                        return $9967;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $9968 = Pair$new$(_term$1, _args$2);
                        return $9968;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$get_args$go = x0 => x1 => Kind$Term$get_args$go$(x0, x1);

    function Kind$Term$get_args$(_term$1) {
        var $9969 = Kind$Term$get_args$go$(_term$1, List$nil);
        return $9969;
    };
    const Kind$Term$get_args = x0 => Kind$Term$get_args$(x0);

    function Kind$Parser$ADT$Derive$stringifier$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9971 = self.fst;
                var $9972 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9971) + ".stringifier"));
                var _term$6 = (() => {
                    var $9975 = _term$5;
                    var $9976 = $9972;
                    let _term$7 = $9975;
                    let _par$6;
                    while ($9976._ === 'List.cons') {
                        _par$6 = $9976.head;
                        var $9975 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9975;
                        $9976 = $9976.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9978 = _term$6;
                    var $9979 = $9972;
                    let _term$8 = $9978;
                    let _par$7;
                    while ($9979._ === 'List.cons') {
                        _par$7 = $9979.head;
                        var $9978 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$stringifier$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9978;
                        $9979 = $9979.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9980 = self.value;
                        var self = $9980;
                        switch (self._) {
                            case 'Pair.new':
                                var $9982 = self.fst;
                                var $9983 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9982));
                                var _term$12 = Kind$Term$app$(_term$11, $9983);
                                var $9984 = _term$12;
                                var $9981 = $9984;
                                break;
                        };
                        var $9973 = $9981;
                        break;
                    case 'Maybe.none':
                        var $9985 = _term$7;
                        var $9973 = $9985;
                        break;
                };
                var $9970 = $9973;
                break;
        };
        return $9970;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$args$(_args$1, _fst$2) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9987 = self.head;
                var $9988 = self.tail;
                var self = $9987;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9990 = self.name;
                        var $9991 = self.term;
                        var self = Kind$Term$get_args$($9991);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$10 = Kind$Parser$ADT$Derive$stringifier$term$args$($9988, Bool$false);
                                var _term$11 = Kind$Parser$ADT$Derive$stringifier$term$cont$($9991, Maybe$some$(Pair$new$(("x." + $9990), _rest$10)));
                                var _term$12 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$((() => {
                                    var self = _fst$2;
                                    if (self) {
                                        var $9994 = "(";
                                        return $9994;
                                    } else {
                                        var $9995 = ",";
                                        return $9995;
                                    };
                                })())), _term$11);
                                var $9993 = _term$12;
                                var $9992 = $9993;
                                break;
                        };
                        var $9989 = $9992;
                        break;
                };
                var $9986 = $9989;
                break;
            case 'List.nil':
                var _term$3 = Kind$Term$ref$("str");
                var self = _fst$2;
                if (self) {
                    var $9997 = _term$3;
                    var _term$4 = $9997;
                } else {
                    var $9998 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$(")")), _term$3);
                    var _term$4 = $9998;
                };
                var $9996 = _term$4;
                var $9986 = $9996;
                break;
        };
        return $9986;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$args = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$args$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, _ctr$2) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $10000 = self.name;
                var $10001 = self.args;
                var _term$6 = Kind$Term$ref$("Stringifier.text");
                var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$((_adt_name$1 + ("." + $10000))));
                var _term$8 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$stringifier$term$args$($10001, Bool$true));
                var $10002 = Pair$new$($10000, _term$8);
                var $9999 = $10002;
                break;
        };
        return $9999;
    };
    const Kind$Parser$ADT$Derive$stringifier$ctr = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$ctr$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, _ctrs$2) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $10004 = self.head;
                var $10005 = self.tail;
                var $10006 = List$cons$(Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, $10004), Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, $10005));
                var $10003 = $10006;
                break;
            case 'List.nil':
                var $10007 = List$nil;
                var $10003 = $10007;
                break;
        };
        return $10003;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$ctrs = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$ctrs$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10009 = self.name;
                var $10010 = self.pars;
                var $10011 = self.inds;
                var $10012 = self.ctrs;
                var self = (List$is_empty$($10010) && List$is_empty$($10011));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $10015 = Kind$Term$lam$("str", (_str$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$stringifier$term$ctrs$($10009, $10012);
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $10018 = _cses$10;
                                var $10019 = _ctrs$9;
                                let _cses$12 = $10018;
                                let _ctr$11;
                                while ($10019._ === 'List.cons') {
                                    _ctr$11 = $10019.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $10020 = self.fst;
                                            var $10021 = self.snd;
                                            var $10022 = Kind$Map$set$($10020, $10021, _cses$12);
                                            var $10018 = $10022;
                                            break;
                                    };
                                    _cses$12 = $10018;
                                    $10019 = $10019.tail;
                                }
                                return _cses$12;
                            })();
                            var $10016 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $10016;
                        }));
                        return $10015;
                    }));
                    var $10014 = Maybe$some$(_term$7);
                    var $10013 = $10014;
                } else {
                    var $10023 = Maybe$none;
                    var $10013 = $10023;
                };
                var $10008 = $10013;
                break;
        };
        return $10008;
    };
    const Kind$Parser$ADT$Derive$stringifier$term = x0 => Kind$Parser$ADT$Derive$stringifier$term$(x0);

    function Kind$Parser$ADT$Derive$stringifier$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10025 = self.name;
                var $10026 = self.pars;
                var $10027 = self.inds;
                var self = (List$is_empty$($10026) && List$is_empty$($10027));
                if (self) {
                    var $10029 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Stringifier"), Kind$Term$ref$($10025)));
                    var $10028 = $10029;
                } else {
                    var $10030 = Maybe$none;
                    var $10028 = $10030;
                };
                var $10024 = $10028;
                break;
        };
        return $10024;
    };
    const Kind$Parser$ADT$Derive$stringifier$type = x0 => Kind$Parser$ADT$Derive$stringifier$type$(x0);

    function Kind$Parser$ADT$Derived$new$(_name$1, _arit$2, _term$3, _type$4) {
        var $10031 = ({
            _: 'Kind.Parser.ADT.Derived.new',
            'name': _name$1,
            'arit': _arit$2,
            'term': _term$3,
            'type': _type$4
        });
        return $10031;
    };
    const Kind$Parser$ADT$Derived$new = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Derived$new$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Derive$parser$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10033 = self.fst;
                var $10034 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($10033) + ".parser"));
                var _term$5 = (() => {
                    var $10037 = _term$4;
                    var $10038 = $10034;
                    let _term$6 = $10037;
                    let _par$5;
                    while ($10038._ === 'List.cons') {
                        _par$5 = $10038.head;
                        var $10037 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $10037;
                        $10038 = $10038.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $10040 = _term$5;
                    var $10041 = $10034;
                    let _term$7 = $10040;
                    let _par$6;
                    while ($10041._ === 'List.cons') {
                        _par$6 = $10041.head;
                        var $10040 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$parser$term$cont$(_par$6));
                        _term$7 = $10040;
                        $10041 = $10041.tail;
                    }
                    return _term$7;
                })();
                var $10035 = _term$6;
                var $10032 = $10035;
                break;
        };
        return $10032;
    };
    const Kind$Parser$ADT$Derive$parser$term$cont = x0 => Kind$Parser$ADT$Derive$parser$term$cont$(x0);

    function Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $10043 = self.head;
                var $10044 = self.tail;
                var self = $10043;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10046 = self.name;
                        var $10047 = self.term;
                        var _term$11 = Kind$Term$ref$("Parser.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _cont$14 = Kind$Term$ref$("Parser.prefix");
                        var _cont$15 = Kind$Term$app$(_cont$14, Kind$Term$hol$(Bits$e));
                        var _cont$16 = Kind$Term$app$(_cont$15, Kind$Term$str$((() => {
                            var self = _fst$5;
                            if (self) {
                                var $10049 = "(";
                                return $10049;
                            } else {
                                var $10050 = ",";
                                return $10050;
                            };
                        })()));
                        var _cont$17 = Kind$Term$app$(_cont$16, Kind$Parser$ADT$Derive$parser$term$cont$($10047));
                        var _term$18 = Kind$Term$app$(_term$13, _cont$17);
                        var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$($10046, (_x$19 => {
                            var $10051 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, $10044, List$cons$(_x$19, _vars$4), Bool$false);
                            return $10051;
                        })));
                        var $10048 = _term$19;
                        var $10045 = $10048;
                        break;
                };
                var $10042 = $10045;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Parser.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $10053 = Kind$Term$app$(_func$10, _var$9);
                    return $10053;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var self = _fst$5;
                if (self) {
                    var $10054 = _body$10;
                    var $10052 = $10054;
                } else {
                    var _term$11 = Kind$Term$ref$("Parser.bind");
                    var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                    var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(")")));
                    var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$("", (_x$15 => {
                        var $10056 = _body$10;
                        return $10056;
                    })));
                    var $10055 = _term$15;
                    var $10052 = $10055;
                };
                var $10042 = $10052;
                break;
        };
        return $10042;
    };
    const Kind$Parser$ADT$Derive$parser$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$parser$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, _cses$2) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10058 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $10060 = self.head;
                        var $10061 = self.tail;
                        var self = $10060;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $10063 = self.name;
                                var $10064 = self.args;
                                var _cnam$13 = ($10058 + ("." + $10063));
                                var _term$14 = Kind$Term$ref$("Parser.bind");
                                var _term$15 = Kind$Term$app$(_term$14, Kind$Term$hol$(Bits$e));
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(_cnam$13)));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$lam$("", (_x$18 => {
                                    var $10066 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$13, $10064, List$nil, Bool$true);
                                    return $10066;
                                })));
                                var _list$19 = Kind$Term$ref$("List.cons");
                                var _list$20 = Kind$Term$app$(_list$19, Kind$Term$hol$(Bits$e));
                                var _list$21 = Kind$Term$app$(_list$20, _term$18);
                                var _list$22 = Kind$Term$app$(_list$21, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $10061));
                                var $10065 = _list$22;
                                var $10062 = $10065;
                                break;
                        };
                        var $10059 = $10062;
                        break;
                    case 'List.nil':
                        var _fail$8 = Kind$Term$ref$("Parser.fail");
                        var _fail$9 = Kind$Term$app$(_fail$8, Kind$Term$hol$(Bits$e));
                        var _fail$10 = Kind$Term$app$(_fail$9, Kind$Term$str$(""));
                        var _term$11 = Kind$Term$ref$("List.cons");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, _fail$10);
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)));
                        var $10067 = _term$14;
                        var $10059 = $10067;
                        break;
                };
                var $10057 = $10059;
                break;
        };
        return $10057;
    };
    const Kind$Parser$ADT$Derive$parser$term$cses = x0 => x1 => Kind$Parser$ADT$Derive$parser$term$cses$(x0, x1);

    function Kind$Parser$ADT$Derive$parser$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10069 = self.pars;
                var $10070 = self.inds;
                var $10071 = self.ctrs;
                var self = (List$is_empty$($10069) && List$is_empty$($10070));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Parser.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $10071));
                    var $10073 = Maybe$some$(_term$9);
                    var $10072 = $10073;
                } else {
                    var $10074 = Maybe$none;
                    var $10072 = $10074;
                };
                var $10068 = $10072;
                break;
        };
        return $10068;
    };
    const Kind$Parser$ADT$Derive$parser$term = x0 => Kind$Parser$ADT$Derive$parser$term$(x0);

    function Kind$Parser$ADT$Derive$parser$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10076 = self.name;
                var $10077 = self.pars;
                var $10078 = self.inds;
                var self = (List$is_empty$($10077) && List$is_empty$($10078));
                if (self) {
                    var $10080 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Parser"), Kind$Term$ref$($10076)));
                    var $10079 = $10080;
                } else {
                    var $10081 = Maybe$none;
                    var $10079 = $10081;
                };
                var $10075 = $10079;
                break;
        };
        return $10075;
    };
    const Kind$Parser$ADT$Derive$parser$type = x0 => Kind$Parser$ADT$Derive$parser$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10083 = self.fst;
                var $10084 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($10083) + ".serializer"));
                var _term$6 = (() => {
                    var $10087 = _term$5;
                    var $10088 = $10084;
                    let _term$7 = $10087;
                    let _par$6;
                    while ($10088._ === 'List.cons') {
                        _par$6 = $10088.head;
                        var $10087 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $10087;
                        $10088 = $10088.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $10090 = _term$6;
                    var $10091 = $10084;
                    let _term$8 = $10090;
                    let _par$7;
                    while ($10091._ === 'List.cons') {
                        _par$7 = $10091.head;
                        var $10090 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$serializer$term$cont$(_par$7, Maybe$none));
                        _term$8 = $10090;
                        $10091 = $10091.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10092 = self.value;
                        var self = $10092;
                        switch (self._) {
                            case 'Pair.new':
                                var $10094 = self.fst;
                                var $10095 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($10094));
                                var _term$12 = Kind$Term$app$(_term$11, $10095);
                                var $10096 = _term$12;
                                var $10093 = $10096;
                                break;
                        };
                        var $10085 = $10093;
                        break;
                    case 'Maybe.none':
                        var $10097 = _term$7;
                        var $10085 = $10097;
                        break;
                };
                var $10082 = $10085;
                break;
        };
        return $10082;
    };
    const Kind$Parser$ADT$Derive$serializer$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$serializer$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$term$args$(_args$1) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $10099 = self.head;
                var $10100 = self.tail;
                var self = $10099;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10102 = self.name;
                        var $10103 = self.term;
                        var self = Kind$Term$get_args$($10103);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$9 = Kind$Parser$ADT$Derive$serializer$term$args$($10100);
                                var _term$10 = Kind$Parser$ADT$Derive$serializer$term$cont$($10103, Maybe$some$(Pair$new$(("x." + $10102), _rest$9)));
                                var $10105 = _term$10;
                                var $10104 = $10105;
                                break;
                        };
                        var $10101 = $10104;
                        break;
                };
                var $10098 = $10101;
                break;
            case 'List.nil':
                var $10106 = Kind$Term$ref$("bs");
                var $10098 = $10106;
                break;
        };
        return $10098;
    };
    const Kind$Parser$ADT$Derive$serializer$term$args = x0 => Kind$Parser$ADT$Derive$serializer$term$args$(x0);

    function Kind$Parser$ADT$Derive$serializer$ctr$bits$(_bs$1, _rest$2) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $10108 = self.slice(0, -1);
                var $10109 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($10108, _rest$2));
                var $10107 = $10109;
                break;
            case 'i':
                var $10110 = self.slice(0, -1);
                var $10111 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($10110, _rest$2));
                var $10107 = $10111;
                break;
            case 'e':
                var $10112 = _rest$2;
                var $10107 = $10112;
                break;
        };
        return $10107;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr$bits = x0 => x1 => Kind$Parser$ADT$Derive$serializer$ctr$bits$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, _ctr$2, _header$3) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $10114 = self.name;
                var $10115 = self.args;
                var _term$7 = Kind$Parser$ADT$Derive$serializer$term$args$($10115);
                var _term$8 = Kind$Parser$ADT$Derive$serializer$ctr$bits$(_header$3, _term$7);
                var $10116 = Pair$new$($10114, _term$8);
                var $10113 = $10116;
                break;
        };
        return $10113;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$ctr$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, _ctrs$2, _header$3) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $10118 = self.head;
                var $10119 = self.tail;
                var $10120 = List$cons$(Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, $10118, _header$3), Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, $10119, Bits$inc$(_header$3)));
                var $10117 = $10120;
                break;
            case 'List.nil':
                var $10121 = List$nil;
                var $10117 = $10121;
                break;
        };
        return $10117;
    };
    const Kind$Parser$ADT$Derive$serializer$term$ctrs = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$term$ctrs$(x0, x1, x2);

    function Bits$zeros$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10123 = Bits$e;
            var $10122 = $10123;
        } else {
            var $10124 = (self - 1n);
            var $10125 = (Bits$zeros$($10124) + '0');
            var $10122 = $10125;
        };
        return $10122;
    };
    const Bits$zeros = x0 => Bits$zeros$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);

    function Nat$bitlen$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10127 = 0n;
            var $10126 = $10127;
        } else {
            var $10128 = (self - 1n);
            var $10129 = Nat$succ$(Nat$bitlen$((_n$1 / 2n)));
            var $10126 = $10129;
        };
        return $10126;
    };
    const Nat$bitlen = x0 => Nat$bitlen$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10131 = self.name;
                var $10132 = self.pars;
                var $10133 = self.inds;
                var $10134 = self.ctrs;
                var self = (List$is_empty$($10132) && List$is_empty$($10133));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $10137 = Kind$Term$lam$("bs", (_bs$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$serializer$term$ctrs$($10131, $10134, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($10134))))));
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $10140 = _cses$10;
                                var $10141 = _ctrs$9;
                                let _cses$12 = $10140;
                                let _ctr$11;
                                while ($10141._ === 'List.cons') {
                                    _ctr$11 = $10141.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $10142 = self.fst;
                                            var $10143 = self.snd;
                                            var $10144 = Kind$Map$set$($10142, $10143, _cses$12);
                                            var $10140 = $10144;
                                            break;
                                    };
                                    _cses$12 = $10140;
                                    $10141 = $10141.tail;
                                }
                                return _cses$12;
                            })();
                            var $10138 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $10138;
                        }));
                        return $10137;
                    }));
                    var $10136 = Maybe$some$(_term$7);
                    var $10135 = $10136;
                } else {
                    var $10145 = Maybe$none;
                    var $10135 = $10145;
                };
                var $10130 = $10135;
                break;
        };
        return $10130;
    };
    const Kind$Parser$ADT$Derive$serializer$term = x0 => Kind$Parser$ADT$Derive$serializer$term$(x0);

    function Kind$Parser$ADT$Derive$serializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10147 = self.name;
                var $10148 = self.pars;
                var $10149 = self.inds;
                var self = (List$is_empty$($10148) && List$is_empty$($10149));
                if (self) {
                    var $10151 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Serializer"), Kind$Term$ref$($10147)));
                    var $10150 = $10151;
                } else {
                    var $10152 = Maybe$none;
                    var $10150 = $10152;
                };
                var $10146 = $10150;
                break;
        };
        return $10146;
    };
    const Kind$Parser$ADT$Derive$serializer$type = x0 => Kind$Parser$ADT$Derive$serializer$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $10154 = self.slice(0, -1);
                var $10155 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$term$bits$($10154));
                var $10153 = $10155;
                break;
            case 'i':
                var $10156 = self.slice(0, -1);
                var $10157 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$term$bits$($10156));
                var $10153 = $10157;
                break;
            case 'e':
                var $10158 = Kind$Term$ref$("Bits.e");
                var $10153 = $10158;
                break;
        };
        return $10153;
    };
    const Kind$Parser$ADT$Derive$serializer$term$bits = x0 => Kind$Parser$ADT$Derive$serializer$term$bits$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10160 = self.fst;
                var $10161 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($10160) + ".deserializer"));
                var _term$5 = (() => {
                    var $10164 = _term$4;
                    var $10165 = $10161;
                    let _term$6 = $10164;
                    let _par$5;
                    while ($10165._ === 'List.cons') {
                        _par$5 = $10165.head;
                        var $10164 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $10164;
                        $10165 = $10165.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $10167 = _term$5;
                    var $10168 = $10161;
                    let _term$7 = $10167;
                    let _par$6;
                    while ($10168._ === 'List.cons') {
                        _par$6 = $10168.head;
                        var $10167 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$deserializer$term$cont$(_par$6));
                        _term$7 = $10167;
                        $10168 = $10168.tail;
                    }
                    return _term$7;
                })();
                var $10162 = _term$6;
                var $10159 = $10162;
                break;
        };
        return $10159;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cont = x0 => Kind$Parser$ADT$Derive$deserializer$term$cont$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $10170 = self.head;
                var $10171 = self.tail;
                var self = $10170;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10173 = self.name;
                        var $10174 = self.term;
                        var _term$11 = Kind$Term$ref$("Deserializer.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Parser$ADT$Derive$deserializer$term$cont$($10174));
                        var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$($10173, (_x$15 => {
                            var $10176 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, $10171, List$cons$(_x$15, _vars$4), Bool$false);
                            return $10176;
                        })));
                        var $10175 = _term$15;
                        var $10172 = $10175;
                        break;
                };
                var $10169 = $10172;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Deserializer.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $10178 = Kind$Term$app$(_func$10, _var$9);
                    return $10178;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var $10177 = _body$10;
                var $10169 = $10177;
                break;
        };
        return $10169;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$deserializer$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, _cses$2, _header$3) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10180 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $10182 = self.head;
                        var $10183 = self.tail;
                        var self = $10182;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $10185 = self.name;
                                var $10186 = self.args;
                                var _cnam$14 = ($10180 + ("." + $10185));
                                var _term$15 = Kind$Term$ref$("Deserializer.bind");
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$app$(Kind$Term$ref$("Deserializer.bits"), Kind$Parser$ADT$Derive$serializer$term$bits$(_header$3)));
                                var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$("", (_x$19 => {
                                    var $10188 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$14, $10186, List$nil, Bool$true);
                                    return $10188;
                                })));
                                var _list$20 = Kind$Term$ref$("List.cons");
                                var _list$21 = Kind$Term$app$(_list$20, Kind$Term$hol$(Bits$e));
                                var _list$22 = Kind$Term$app$(_list$21, _term$19);
                                var _list$23 = Kind$Term$app$(_list$22, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10183, Bits$inc$(_header$3)));
                                var $10187 = _list$23;
                                var $10184 = $10187;
                                break;
                        };
                        var $10181 = $10184;
                        break;
                    case 'List.nil':
                        var $10189 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                        var $10181 = $10189;
                        break;
                };
                var $10179 = $10181;
                break;
        };
        return $10179;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cses = x0 => x1 => x2 => Kind$Parser$ADT$Derive$deserializer$term$cses$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$deserializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10191 = self.pars;
                var $10192 = self.inds;
                var $10193 = self.ctrs;
                var self = (List$is_empty$($10191) && List$is_empty$($10192));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Deserializer.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10193, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($10193)))))));
                    var $10195 = Maybe$some$(_term$9);
                    var $10194 = $10195;
                } else {
                    var $10196 = Maybe$none;
                    var $10194 = $10196;
                };
                var $10190 = $10194;
                break;
        };
        return $10190;
    };
    const Kind$Parser$ADT$Derive$deserializer$term = x0 => Kind$Parser$ADT$Derive$deserializer$term$(x0);

    function Kind$Parser$ADT$Derive$deserializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10198 = self.name;
                var $10199 = self.pars;
                var $10200 = self.inds;
                var self = (List$is_empty$($10199) && List$is_empty$($10200));
                if (self) {
                    var $10202 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Deserializer"), Kind$Term$ref$($10198)));
                    var $10201 = $10202;
                } else {
                    var $10203 = Maybe$none;
                    var $10201 = $10203;
                };
                var $10197 = $10201;
                break;
        };
        return $10197;
    };
    const Kind$Parser$ADT$Derive$deserializer$type = x0 => Kind$Parser$ADT$Derive$deserializer$type$(x0);

    function Kind$Parser$ADT$Derive$by_name$(_deri$1, _adt$2) {
        var self = _adt$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10205 = self.name;
                var self = (_deri$1 === "stringifier");
                if (self) {
                    var _name$8 = ($10205 + ("." + _deri$1));
                    var $10207 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                        var $10208 = _m$bind$9;
                        return $10208;
                    }))(Kind$Parser$ADT$Derive$stringifier$term$(_adt$2))((_term$9 => {
                        var $10209 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                            var $10210 = _m$bind$10;
                            return $10210;
                        }))(Kind$Parser$ADT$Derive$stringifier$type$(_adt$2))((_type$10 => {
                            var $10211 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                var $10212 = _m$pure$12;
                                return $10212;
                            }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                            return $10211;
                        }));
                        return $10209;
                    }));
                    var $10206 = $10207;
                } else {
                    var self = (_deri$1 === "parser");
                    if (self) {
                        var _name$8 = ($10205 + ("." + _deri$1));
                        var $10214 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                            var $10215 = _m$bind$9;
                            return $10215;
                        }))(Kind$Parser$ADT$Derive$parser$term$(_adt$2))((_term$9 => {
                            var $10216 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                var $10217 = _m$bind$10;
                                return $10217;
                            }))(Kind$Parser$ADT$Derive$parser$type$(_adt$2))((_type$10 => {
                                var $10218 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                    var $10219 = _m$pure$12;
                                    return $10219;
                                }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                return $10218;
                            }));
                            return $10216;
                        }));
                        var $10213 = $10214;
                    } else {
                        var self = (_deri$1 === "serializer");
                        if (self) {
                            var _name$8 = ($10205 + ("." + _deri$1));
                            var $10221 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                var $10222 = _m$bind$9;
                                return $10222;
                            }))(Kind$Parser$ADT$Derive$serializer$term$(_adt$2))((_term$9 => {
                                var $10223 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $10224 = _m$bind$10;
                                    return $10224;
                                }))(Kind$Parser$ADT$Derive$serializer$type$(_adt$2))((_type$10 => {
                                    var $10225 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10226 = _m$pure$12;
                                        return $10226;
                                    }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                    return $10225;
                                }));
                                return $10223;
                            }));
                            var $10220 = $10221;
                        } else {
                            var self = (_deri$1 === "deserializer");
                            if (self) {
                                var _name$8 = ($10205 + ("." + _deri$1));
                                var $10228 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                    var $10229 = _m$bind$9;
                                    return $10229;
                                }))(Kind$Parser$ADT$Derive$deserializer$term$(_adt$2))((_term$9 => {
                                    var $10230 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $10231 = _m$bind$10;
                                        return $10231;
                                    }))(Kind$Parser$ADT$Derive$deserializer$type$(_adt$2))((_type$10 => {
                                        var $10232 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                            var $10233 = _m$pure$12;
                                            return $10233;
                                        }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                        return $10232;
                                    }));
                                    return $10230;
                                }));
                                var $10227 = $10228;
                            } else {
                                var $10234 = Maybe$none;
                                var $10227 = $10234;
                            };
                            var $10220 = $10227;
                        };
                        var $10213 = $10220;
                    };
                    var $10206 = $10213;
                };
                var $10204 = $10206;
                break;
        };
        return $10204;
    };
    const Kind$Parser$ADT$Derive$by_name = x0 => x1 => Kind$Parser$ADT$Derive$by_name$(x0, x1);

    function Kind$Parser$file$adt$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10236 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10238 = self.err;
                        var self = $10236;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10240 = self.value;
                                var $10241 = Parser$Reply$error$(Parser$Error$combine$($10240, $10238));
                                var $10239 = $10241;
                                break;
                            case 'Maybe.none':
                                var $10242 = Parser$Reply$error$($10238);
                                var $10239 = $10242;
                                break;
                        };
                        var $10237 = $10239;
                        break;
                    case 'Parser.Reply.value':
                        var $10243 = self.pst;
                        var self = $10243;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10245 = self.err;
                                var $10246 = self.nam;
                                var $10247 = self.ini;
                                var $10248 = self.idx;
                                var $10249 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10236, $10245), $10246, $10247, $10248, $10249);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10251 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10253 = self.err;
                                                var self = $10251;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10255 = self.value;
                                                        var $10256 = Parser$Reply$error$(Parser$Error$combine$($10255, $10253));
                                                        var $10254 = $10256;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10257 = Parser$Reply$error$($10253);
                                                        var $10254 = $10257;
                                                        break;
                                                };
                                                var $10252 = $10254;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10258 = self.pst;
                                                var $10259 = self.val;
                                                var self = $10258;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10261 = self.err;
                                                        var $10262 = self.nam;
                                                        var $10263 = self.ini;
                                                        var $10264 = self.idx;
                                                        var $10265 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10251, $10261), $10262, $10263, $10264, $10265);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10267 = self.err;
                                                                var _reply$38 = Kind$Parser$ADT$adt$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $10269 = self.err;
                                                                        var self = $10267;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $10271 = self.value;
                                                                                var $10272 = Parser$Reply$error$(Parser$Error$combine$($10271, $10269));
                                                                                var $10270 = $10272;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $10273 = Parser$Reply$error$($10269);
                                                                                var $10270 = $10273;
                                                                                break;
                                                                        };
                                                                        var $10268 = $10270;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $10274 = self.pst;
                                                                        var $10275 = self.val;
                                                                        var self = $10274;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $10277 = self.err;
                                                                                var $10278 = self.nam;
                                                                                var $10279 = self.ini;
                                                                                var $10280 = self.idx;
                                                                                var $10281 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($10267, $10277), $10278, $10279, $10280, $10281);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10283 = self.err;
                                                                                        var _reply$52 = Parser$get_idx$(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $10285 = self.err;
                                                                                                var self = $10283;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $10287 = self.value;
                                                                                                        var $10288 = Parser$Reply$error$(Parser$Error$combine$($10287, $10285));
                                                                                                        var $10286 = $10288;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $10289 = Parser$Reply$error$($10285);
                                                                                                        var $10286 = $10289;
                                                                                                        break;
                                                                                                };
                                                                                                var $10284 = $10286;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $10290 = self.pst;
                                                                                                var $10291 = self.val;
                                                                                                var self = $10290;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $10293 = self.err;
                                                                                                        var $10294 = self.nam;
                                                                                                        var $10295 = self.ini;
                                                                                                        var $10296 = self.idx;
                                                                                                        var $10297 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($10283, $10293), $10294, $10295, $10296, $10297);
                                                                                                        var _orig$61 = Pair$new$($10259, $10291);
                                                                                                        var self = $10275;
                                                                                                        switch (self._) {
                                                                                                            case 'Kind.Parser.ADT.Datatype.new':
                                                                                                                var $10299 = self.name;
                                                                                                                var $10300 = self.pars;
                                                                                                                var $10301 = self.inds;
                                                                                                                var $10302 = self.ctrs;
                                                                                                                var $10303 = self.deri;
                                                                                                                var _term$67 = Kind$Parser$ADT$Datatype$build_term$($10275);
                                                                                                                var _term$68 = Kind$Term$bind$(List$nil, (_x$68 => {
                                                                                                                    var $10305 = (_x$68 + '1');
                                                                                                                    return $10305;
                                                                                                                }), _term$67);
                                                                                                                var _type$69 = Kind$Parser$ADT$Datatype$build_type$($10275);
                                                                                                                var _type$70 = Kind$Term$bind$(List$nil, (_x$70 => {
                                                                                                                    var $10306 = (_x$70 + '0');
                                                                                                                    return $10306;
                                                                                                                }), _type$69);
                                                                                                                var _arit$71 = ((list_length($10300)) + (list_length($10301)));
                                                                                                                var _defs$72 = Kind$Map$def$(_file$1, _code$2, _orig$61, $10299, _term$68, _type$70, Bool$false, _arit$71, Bool$false, _defs$3);
                                                                                                                var _defs$73 = List$fold$($10302, _defs$72, (_ctr$73 => _defs$74 => {
                                                                                                                    var _typ_name$75 = $10299;
                                                                                                                    var _ctr_arit$76 = (_arit$71 + (list_length((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10308 = self.args;
                                                                                                                                var $10309 = $10308;
                                                                                                                                return $10309;
                                                                                                                        };
                                                                                                                    })())));
                                                                                                                    var _ctr_name$77 = String$flatten$(List$cons$(_typ_name$75, List$cons$(Kind$Name$read$("."), List$cons$((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10310 = self.name;
                                                                                                                                var $10311 = $10310;
                                                                                                                                return $10311;
                                                                                                                        };
                                                                                                                    })(), List$nil))));
                                                                                                                    var _ctr_term$78 = Kind$Parser$ADT$Constructor$build_term$($10275, _ctr$73);
                                                                                                                    var _ctr_term$79 = Kind$Term$bind$(List$nil, (_x$79 => {
                                                                                                                        var $10312 = (_x$79 + '1');
                                                                                                                        return $10312;
                                                                                                                    }), _ctr_term$78);
                                                                                                                    var _ctr_type$80 = Kind$Parser$ADT$Constructor$build_type$($10275, _ctr$73);
                                                                                                                    var _ctr_type$81 = Kind$Term$bind$(List$nil, (_x$81 => {
                                                                                                                        var $10313 = (_x$81 + '0');
                                                                                                                        return $10313;
                                                                                                                    }), _ctr_type$80);
                                                                                                                    var $10307 = Kind$Map$def$(_file$1, _code$2, _orig$61, _ctr_name$77, _ctr_term$79, _ctr_type$81, Bool$true, _ctr_arit$76, Bool$false, _defs$74);
                                                                                                                    return $10307;
                                                                                                                }));
                                                                                                                var _defs$74 = List$fold$($10303, Either$right$(_defs$73), (_deri$74 => _defs$75 => {
                                                                                                                    var self = _defs$75;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Either.left':
                                                                                                                            var $10315 = self.value;
                                                                                                                            var $10316 = Either$left$($10315);
                                                                                                                            var $10314 = $10316;
                                                                                                                            break;
                                                                                                                        case 'Either.right':
                                                                                                                            var $10317 = self.value;
                                                                                                                            var self = Kind$Parser$ADT$Derive$by_name$(_deri$74, $10275);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $10319 = self.value;
                                                                                                                                    var self = $10319;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kind.Parser.ADT.Derived.new':
                                                                                                                                            var $10321 = self.name;
                                                                                                                                            var $10322 = self.arit;
                                                                                                                                            var $10323 = self.term;
                                                                                                                                            var $10324 = self.type;
                                                                                                                                            var _name$82 = $10321;
                                                                                                                                            var _term$83 = $10323;
                                                                                                                                            var _term$84 = Kind$Term$bind$(List$nil, (_x$84 => {
                                                                                                                                                var $10326 = (_x$84 + '1');
                                                                                                                                                return $10326;
                                                                                                                                            }), _term$83);
                                                                                                                                            var _type$85 = $10324;
                                                                                                                                            var _type$86 = Kind$Term$bind$(List$nil, (_x$86 => {
                                                                                                                                                var $10327 = (_x$86 + '0');
                                                                                                                                                return $10327;
                                                                                                                                            }), _type$85);
                                                                                                                                            var _arit$87 = $10322;
                                                                                                                                            var $10325 = Either$right$(Kind$Map$def$(_file$1, _code$2, _orig$61, _name$82, _term$84, _type$86, Bool$false, _arit$87, Bool$false, $10317));
                                                                                                                                            var $10320 = $10325;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $10318 = $10320;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $10328 = Either$left$(("Can\'t derive \'" + (_deri$74 + ("\' for \'" + ($10299 + "\' type.")))));
                                                                                                                                    var $10318 = $10328;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $10314 = $10318;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    return $10314;
                                                                                                                }));
                                                                                                                var self = _defs$74;
                                                                                                                switch (self._) {
                                                                                                                    case 'Either.left':
                                                                                                                        var $10329 = self.value;
                                                                                                                        var $10330 = Parser$fail($10329);
                                                                                                                        var $10304 = $10330;
                                                                                                                        break;
                                                                                                                    case 'Either.right':
                                                                                                                        var $10331 = self.value;
                                                                                                                        var $10332 = (_pst$76 => {
                                                                                                                            var $10333 = Parser$Reply$value$(_pst$76, $10331);
                                                                                                                            return $10333;
                                                                                                                        });
                                                                                                                        var $10304 = $10332;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $10298 = $10304;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $10298 = $10298(_reply$pst$60);
                                                                                                        var $10292 = $10298;
                                                                                                        break;
                                                                                                };
                                                                                                var $10284 = $10292;
                                                                                                break;
                                                                                        };
                                                                                        var $10282 = $10284;
                                                                                        break;
                                                                                };
                                                                                var $10276 = $10282;
                                                                                break;
                                                                        };
                                                                        var $10268 = $10276;
                                                                        break;
                                                                };
                                                                var $10266 = $10268;
                                                                break;
                                                        };
                                                        var $10260 = $10266;
                                                        break;
                                                };
                                                var $10252 = $10260;
                                                break;
                                        };
                                        var $10250 = $10252;
                                        break;
                                };
                                var $10244 = $10250;
                                break;
                        };
                        var $10237 = $10244;
                        break;
                };
                var $10235 = $10237;
                break;
        };
        return $10235;
    };
    const Kind$Parser$file$adt = x0 => x1 => x2 => x3 => Kind$Parser$file$adt$(x0, x1, x2, x3);

    function Kind$Parser$file$end$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10335 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10337 = self.err;
                        var self = $10335;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10339 = self.value;
                                var $10340 = Parser$Reply$error$(Parser$Error$combine$($10339, $10337));
                                var $10338 = $10340;
                                break;
                            case 'Maybe.none':
                                var $10341 = Parser$Reply$error$($10337);
                                var $10338 = $10341;
                                break;
                        };
                        var $10336 = $10338;
                        break;
                    case 'Parser.Reply.value':
                        var $10342 = self.pst;
                        var self = $10342;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10344 = self.err;
                                var $10345 = self.nam;
                                var $10346 = self.ini;
                                var $10347 = self.idx;
                                var $10348 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10335, $10344), $10345, $10346, $10347, $10348);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10350 = self.err;
                                        var _reply$24 = Parser$eof$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10352 = self.err;
                                                var self = $10350;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10354 = self.value;
                                                        var $10355 = Parser$Reply$error$(Parser$Error$combine$($10354, $10352));
                                                        var $10353 = $10355;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10356 = Parser$Reply$error$($10352);
                                                        var $10353 = $10356;
                                                        break;
                                                };
                                                var $10351 = $10353;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10357 = self.pst;
                                                var self = $10357;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10359 = self.err;
                                                        var $10360 = self.nam;
                                                        var $10361 = self.ini;
                                                        var $10362 = self.idx;
                                                        var $10363 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10350, $10359), $10360, $10361, $10362, $10363);
                                                        var $10364 = Parser$Reply$value$(_reply$pst$32, _defs$3);
                                                        var $10358 = $10364;
                                                        break;
                                                };
                                                var $10351 = $10358;
                                                break;
                                        };
                                        var $10349 = $10351;
                                        break;
                                };
                                var $10343 = $10349;
                                break;
                        };
                        var $10336 = $10343;
                        break;
                };
                var $10334 = $10336;
                break;
        };
        return $10334;
    };
    const Kind$Parser$file$end = x0 => x1 => x2 => x3 => Kind$Parser$file$end$(x0, x1, x2, x3);

    function Kind$Parser$file$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10366 = self.err;
                var _reply$10 = Parser$is_eof$(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10368 = self.err;
                        var self = $10366;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10370 = self.value;
                                var $10371 = Parser$Reply$error$(Parser$Error$combine$($10370, $10368));
                                var $10369 = $10371;
                                break;
                            case 'Maybe.none':
                                var $10372 = Parser$Reply$error$($10368);
                                var $10369 = $10372;
                                break;
                        };
                        var $10367 = $10369;
                        break;
                    case 'Parser.Reply.value':
                        var $10373 = self.pst;
                        var $10374 = self.val;
                        var self = $10373;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10376 = self.err;
                                var $10377 = self.nam;
                                var $10378 = self.ini;
                                var $10379 = self.idx;
                                var $10380 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10366, $10376), $10377, $10378, $10379, $10380);
                                var self = $10374;
                                if (self) {
                                    var $10382 = (_pst$19 => {
                                        var $10383 = Parser$Reply$value$(_pst$19, _defs$3);
                                        return $10383;
                                    });
                                    var $10381 = $10382;
                                } else {
                                    var $10384 = (_pst$19 => {
                                        var self = _pst$19;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $10386 = self.err;
                                                var _reply$25 = Parser$choice$(List$cons$(Kind$Parser$file$def(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$adt(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$end(_file$1)(_code$2)(_defs$3), List$cons$(Parser$fail("Expected a top-level definition or a type declaration."), List$nil)))), _pst$19);
                                                var self = _reply$25;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $10388 = self.err;
                                                        var self = $10386;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $10390 = self.value;
                                                                var $10391 = Parser$Reply$error$(Parser$Error$combine$($10390, $10388));
                                                                var $10389 = $10391;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $10392 = Parser$Reply$error$($10388);
                                                                var $10389 = $10392;
                                                                break;
                                                        };
                                                        var $10387 = $10389;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $10393 = self.pst;
                                                        var $10394 = self.val;
                                                        var self = $10393;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10396 = self.err;
                                                                var $10397 = self.nam;
                                                                var $10398 = self.ini;
                                                                var $10399 = self.idx;
                                                                var $10400 = self.str;
                                                                var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($10386, $10396), $10397, $10398, $10399, $10400);
                                                                var self = _reply$pst$33;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $10402 = self.err;
                                                                        var _reply$39 = Kind$Parser$file$(_file$1, _code$2, $10394, _reply$pst$33);
                                                                        var self = _reply$39;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $10404 = self.err;
                                                                                var self = $10402;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $10406 = self.value;
                                                                                        var $10407 = Parser$Reply$error$(Parser$Error$combine$($10406, $10404));
                                                                                        var $10405 = $10407;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $10408 = Parser$Reply$error$($10404);
                                                                                        var $10405 = $10408;
                                                                                        break;
                                                                                };
                                                                                var $10403 = $10405;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $10409 = self.pst;
                                                                                var $10410 = self.val;
                                                                                var self = $10409;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10412 = self.err;
                                                                                        var $10413 = self.nam;
                                                                                        var $10414 = self.ini;
                                                                                        var $10415 = self.idx;
                                                                                        var $10416 = self.str;
                                                                                        var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($10402, $10412), $10413, $10414, $10415, $10416);
                                                                                        var $10417 = Parser$Reply$value$(_reply$pst$47, $10410);
                                                                                        var $10411 = $10417;
                                                                                        break;
                                                                                };
                                                                                var $10403 = $10411;
                                                                                break;
                                                                        };
                                                                        var $10401 = $10403;
                                                                        break;
                                                                };
                                                                var $10395 = $10401;
                                                                break;
                                                        };
                                                        var $10387 = $10395;
                                                        break;
                                                };
                                                var $10385 = $10387;
                                                break;
                                        };
                                        return $10385;
                                    });
                                    var $10381 = $10384;
                                };
                                var $10381 = $10381(_reply$pst$18);
                                var $10375 = $10381;
                                break;
                        };
                        var $10367 = $10375;
                        break;
                };
                var $10365 = $10367;
                break;
        };
        return $10365;
    };
    const Kind$Parser$file = x0 => x1 => x2 => x3 => Kind$Parser$file$(x0, x1, x2, x3);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $10419 = self.head;
                var $10420 = self.tail;
                var $10421 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $10422 = "";
                        return $10422;
                    } else {
                        var $10423 = _sep$1;
                        return $10423;
                    };
                })(), List$cons$($10419, List$cons$(String$join$go$(_sep$1, $10420, Bool$false), List$nil))));
                var $10418 = $10421;
                break;
            case 'List.nil':
                var $10424 = "";
                var $10418 = $10424;
                break;
        };
        return $10418;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $10425 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $10425;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $10426 = String$join$("\u{a}", _res$3);
        return $10426;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10428 = self.value;
                var $10429 = _f$5($10428);
                var $10427 = $10429;
                break;
            case 'Maybe.none':
                var $10430 = _a$4;
                var $10427 = $10430;
                break;
        };
        return $10427;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10432 = Bool$true;
            var $10431 = $10432;
        } else {
            var $10433 = (self - 1n);
            var $10434 = Bool$false;
            var $10431 = $10434;
        };
        return $10431;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10436 = Nat$zero;
            var $10435 = $10436;
        } else {
            var $10437 = (self - 1n);
            var $10438 = Nat$succ$(Nat$succ$(Nat$double$($10437)));
            var $10435 = $10438;
        };
        return $10435;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $10440 = _str$3;
            var $10439 = $10440;
        } else {
            var $10441 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $10443 = String$cons$(_chr$2, String$pad_right$($10441, _chr$2, ""));
                var $10442 = $10443;
            } else {
                var $10444 = self.charCodeAt(0);
                var $10445 = self.slice(1);
                var $10446 = String$cons$($10444, String$pad_right$($10441, _chr$2, $10445));
                var $10442 = $10446;
            };
            var $10439 = $10442;
        };
        return $10439;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $10447 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $10447;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Kind$Code$color$(_col$1, _str$2) {
        var $10448 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $10448;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $10450 = self.head;
                var $10451 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $10453 = List$nil;
                    var $10452 = $10453;
                } else {
                    var $10454 = (self - 1n);
                    var $10455 = List$cons$($10450, List$take$($10454, $10451));
                    var $10452 = $10455;
                };
                var $10449 = $10452;
                break;
            case 'List.nil':
                var $10456 = List$nil;
                var $10449 = $10456;
                break;
        };
        return $10449;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $10458 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $10457 = $10458;
                } else {
                    var $10459 = self.charCodeAt(0);
                    var $10460 = self.slice(1);
                    var self = ($10459 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $10463 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $10462 = $10463;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10466 = self.value;
                                        var $10467 = Maybe$some$(Nat$pred$($10466));
                                        var $10465 = $10467;
                                        break;
                                    case 'Maybe.none':
                                        var $10468 = Maybe$some$(_spa$10);
                                        var $10465 = $10468;
                                        break;
                                };
                                var _lft$15 = $10465;
                            } else {
                                var $10469 = (self - 1n);
                                var $10470 = _lft$7;
                                var _lft$15 = $10470;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $10464 = Kind$Code$highlight$go$($10460, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $10462 = $10464;
                        };
                        var $10461 = $10462;
                    } else {
                        var _chr$13 = String$cons$($10459, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $10472 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $10472;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $10474 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $10473 = $10474;
                            } else {
                                var $10475 = _chr$13;
                                var $10473 = $10475;
                            };
                            var _chr$14 = $10473;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $10476 = List$take$(_spa$10, _res$9);
                            var _res$15 = $10476;
                        } else {
                            var $10477 = _res$9;
                            var _res$15 = $10477;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $10471 = Kind$Code$highlight$go$($10460, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $10461 = $10471;
                    };
                    var $10457 = $10461;
                };
                return $10457;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $10478 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $10478;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function Kind$Defs$read$(_file$1, _code$2, _defs$3) {
        var self = Kind$Parser$file$(_file$1, _code$2, _defs$3, Parser$State$new$(Maybe$none, "", 0n, 0n, _code$2));
        switch (self._) {
            case 'Parser.Reply.error':
                var $10480 = self.err;
                var self = $10480;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $10482 = self.nam;
                        var $10483 = self.ini;
                        var $10484 = self.idx;
                        var $10485 = self.msg;
                        var _err$9 = ($10485 + (() => {
                            var self = $10482;
                            if (self.length === 0) {
                                var $10487 = "";
                                return $10487;
                            } else {
                                var $10488 = self.charCodeAt(0);
                                var $10489 = self.slice(1);
                                var $10490 = (" Inside " + ($10482 + ":"));
                                return $10490;
                            };
                        })());
                        var _hig$10 = Kind$Code$highlight$(_code$2, $10483, $10484, Nat$succ$($10484));
                        var _str$11 = String$flatten$(List$cons$(_err$9, List$cons$("\u{a}", List$cons$(_hig$10, List$nil))));
                        var $10486 = Either$left$(_str$11);
                        var $10481 = $10486;
                        break;
                };
                var $10479 = $10481;
                break;
            case 'Parser.Reply.value':
                var $10491 = self.val;
                var $10492 = Either$right$($10491);
                var $10479 = $10492;
                break;
        };
        return $10479;
    };
    const Kind$Defs$read = x0 => x1 => x2 => Kind$Defs$read$(x0, x1, x2);

    function Kind$Synth$load$go$(_name$1, _files$2, _defs$3) {
        var self = _files$2;
        switch (self._) {
            case 'List.cons':
                var $10494 = self.head;
                var $10495 = self.tail;
                var $10496 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                    var $10497 = _m$bind$6;
                    return $10497;
                }))(Kind$Synth$get_kind_code$($10494))((_code$6 => {
                    var _read$7 = Kind$Defs$read$($10494, _code$6, _defs$3);
                    var self = _read$7;
                    switch (self._) {
                        case 'Either.right':
                            var $10499 = self.value;
                            var _defs$9 = $10499;
                            var self = Kind$Map$get$(_name$1, _defs$9);
                            switch (self._) {
                                case 'Maybe.none':
                                    var $10501 = Kind$Synth$load$go$(_name$1, $10495, _defs$9);
                                    var $10500 = $10501;
                                    break;
                                case 'Maybe.some':
                                    var $10502 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10503 = _m$pure$12;
                                        return $10503;
                                    }))(Maybe$some$(_defs$9));
                                    var $10500 = $10502;
                                    break;
                            };
                            var $10498 = $10500;
                            break;
                        case 'Either.left':
                            var $10504 = Kind$Synth$load$go$(_name$1, $10495, _defs$3);
                            var $10498 = $10504;
                            break;
                    };
                    return $10498;
                }));
                var $10493 = $10496;
                break;
            case 'List.nil':
                var $10505 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                    var $10506 = _m$pure$5;
                    return $10506;
                }))(Maybe$none);
                var $10493 = $10505;
                break;
        };
        return $10493;
    };
    const Kind$Synth$load$go = x0 => x1 => x2 => Kind$Synth$load$go$(x0, x1, x2);

    function Kind$Synth$files_of$make$(_names$1, _last$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $10508 = self.head;
                var $10509 = self.tail;
                var _head$5 = (_last$2 + ($10508 + ".kind"));
                var _tail$6 = Kind$Synth$files_of$make$($10509, (_last$2 + ($10508 + "/")));
                var $10510 = List$cons$(_head$5, _tail$6);
                var $10507 = $10510;
                break;
            case 'List.nil':
                var $10511 = List$nil;
                var $10507 = $10511;
                break;
        };
        return $10507;
    };
    const Kind$Synth$files_of$make = x0 => x1 => Kind$Synth$files_of$make$(x0, x1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $10512 = _n$2;
                    return $10512;
                } else {
                    var $10513 = self.charCodeAt(0);
                    var $10514 = self.slice(1);
                    var $10515 = String$length$go$($10514, Nat$succ$(_n$2));
                    return $10515;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $10516 = String$length$go$(_xs$1, 0n);
        return $10516;
    };
    const String$length = x0 => String$length$(x0);

    function String$split$go$(_xs$1, _match$2, _last$3) {
        var self = _xs$1;
        if (self.length === 0) {
            var $10518 = List$cons$(_last$3, List$nil);
            var $10517 = $10518;
        } else {
            var $10519 = self.charCodeAt(0);
            var $10520 = self.slice(1);
            var self = String$starts_with$(_xs$1, _match$2);
            if (self) {
                var _rest$6 = String$drop$(String$length$(_match$2), _xs$1);
                var $10522 = List$cons$(_last$3, String$split$go$(_rest$6, _match$2, ""));
                var $10521 = $10522;
            } else {
                var _next$6 = String$cons$($10519, String$nil);
                var $10523 = String$split$go$($10520, _match$2, (_last$3 + _next$6));
                var $10521 = $10523;
            };
            var $10517 = $10521;
        };
        return $10517;
    };
    const String$split$go = x0 => x1 => x2 => String$split$go$(x0, x1, x2);

    function String$split$(_xs$1, _match$2) {
        var $10524 = String$split$go$(_xs$1, _match$2, "");
        return $10524;
    };
    const String$split = x0 => x1 => String$split$(x0, x1);

    function Kind$Synth$files_of$(_name$1) {
        var $10525 = List$reverse$(Kind$Synth$files_of$make$(String$split$(_name$1, "."), ""));
        return $10525;
    };
    const Kind$Synth$files_of = x0 => Kind$Synth$files_of$(x0);

    function Kind$Synth$load$(_name$1, _defs$2) {
        var $10526 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $10527 = _m$bind$3;
            return $10527;
        }))(Kind$Synth$load$cached$(List$cons$(_name$1, List$nil), _defs$2))((_cached_defs$3 => {
            var self = _cached_defs$3;
            switch (self._) {
                case 'Maybe.some':
                    var $10529 = self.value;
                    var $10530 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $10531 = _m$pure$6;
                        return $10531;
                    }))(Maybe$some$($10529));
                    var $10528 = $10530;
                    break;
                case 'Maybe.none':
                    var $10532 = Kind$Synth$load$go$(_name$1, Kind$Synth$files_of$(_name$1), _defs$2);
                    var $10528 = $10532;
                    break;
            };
            return $10528;
        }));
        return $10526;
    };
    const Kind$Synth$load = x0 => x1 => Kind$Synth$load$(x0, x1);
    const Kind$Status$wait = ({
        _: 'Kind.Status.wait'
    });

    function Kind$Check$(_V$1) {
        var $10533 = null;
        return $10533;
    };
    const Kind$Check = x0 => Kind$Check$(x0);

    function Kind$Check$result$(_value$2, _errors$3) {
        var $10534 = ({
            _: 'Kind.Check.result',
            'value': _value$2,
            'errors': _errors$3
        });
        return $10534;
    };
    const Kind$Check$result = x0 => x1 => Kind$Check$result$(x0, x1);

    function Kind$Error$undefined_reference$(_origin$1, _name$2) {
        var $10535 = ({
            _: 'Kind.Error.undefined_reference',
            'origin': _origin$1,
            'name': _name$2
        });
        return $10535;
    };
    const Kind$Error$undefined_reference = x0 => x1 => Kind$Error$undefined_reference$(x0, x1);

    function Kind$Error$waiting$(_name$1) {
        var $10536 = ({
            _: 'Kind.Error.waiting',
            'name': _name$1
        });
        return $10536;
    };
    const Kind$Error$waiting = x0 => Kind$Error$waiting$(x0);

    function Kind$Error$indirect$(_name$1) {
        var $10537 = ({
            _: 'Kind.Error.indirect',
            'name': _name$1
        });
        return $10537;
    };
    const Kind$Error$indirect = x0 => Kind$Error$indirect$(x0);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10539 = self.value;
                var $10540 = Maybe$some$(_f$4($10539));
                var $10538 = $10540;
                break;
            case 'Maybe.none':
                var $10541 = Maybe$none;
                var $10538 = $10541;
                break;
        };
        return $10538;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function Kind$Path$Maybe$Builder$o$(_path$1) {
        var $10542 = Maybe$mapped$(_path$1, Kind$Path$Builder$o);
        return $10542;
    };
    const Kind$Path$Maybe$Builder$o = x0 => Kind$Path$Maybe$Builder$o$(x0);

    function Kind$Path$Maybe$Builder$i$(_path$1) {
        var $10543 = Maybe$mapped$(_path$1, Kind$Path$Builder$i);
        return $10543;
    };
    const Kind$Path$Maybe$Builder$i = x0 => Kind$Path$Maybe$Builder$i$(x0);

    function Kind$Error$patch$(_path$1, _term$2) {
        var $10544 = ({
            _: 'Kind.Error.patch',
            'path': _path$1,
            'term': _term$2
        });
        return $10544;
    };
    const Kind$Error$patch = x0 => x1 => Kind$Error$patch$(x0, x1);

    function Kind$Path$Maybe$Builder$to_bits$(_path$1) {
        var self = _path$1;
        switch (self._) {
            case 'Maybe.some':
                var $10546 = self.value;
                var $10547 = $10546(Bits$e);
                var $10545 = $10547;
                break;
            case 'Maybe.none':
                var $10548 = Bits$e;
                var $10545 = $10548;
                break;
        };
        return $10545;
    };
    const Kind$Path$Maybe$Builder$to_bits = x0 => Kind$Path$Maybe$Builder$to_bits$(x0);

    function Kind$Term$check$patch$(_term$1, _type$2, _path$3) {
        var $10549 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$patch$(Kind$Path$Maybe$Builder$to_bits$(_path$3), _term$1), List$nil));
        return $10549;
    };
    const Kind$Term$check$patch = x0 => x1 => x2 => Kind$Term$check$patch$(x0, x1, x2);

    function Kind$Error$type_mismatch$(_origin$1, _expected$2, _detected$3, _context$4) {
        var $10550 = ({
            _: 'Kind.Error.type_mismatch',
            'origin': _origin$1,
            'expected': _expected$2,
            'detected': _detected$3,
            'context': _context$4
        });
        return $10550;
    };
    const Kind$Error$type_mismatch = x0 => x1 => x2 => x3 => Kind$Error$type_mismatch$(x0, x1, x2, x3);

    function Kind$Error$show_goal$(_name$1, _dref$2, _verb$3, _goal$4, _context$5) {
        var $10551 = ({
            _: 'Kind.Error.show_goal',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3,
            'goal': _goal$4,
            'context': _context$5
        });
        return $10551;
    };
    const Kind$Error$show_goal = x0 => x1 => x2 => x3 => x4 => Kind$Error$show_goal$(x0, x1, x2, x3, x4);

    function Kind$Path$Builder$nil$(_x$1) {
        var $10552 = _x$1;
        return $10552;
    };
    const Kind$Path$Builder$nil = x0 => Kind$Path$Builder$nil$(x0);
    const Kind$Path$Maybe$Builder$nil = Maybe$some$(Kind$Path$Builder$nil);

    function Kind$Term$check$direct$(_term$1, _defs$2) {
        var self = Kind$Term$check$(_term$1, Maybe$none, _defs$2, List$nil, Kind$Path$Maybe$Builder$nil, Maybe$none);
        switch (self._) {
            case 'Kind.Check.result':
                var $10554 = self.value;
                var $10555 = self.errors;
                var self = $10554;
                switch (self._) {
                    case 'Maybe.none':
                        var $10557 = Kind$Check$result$(Maybe$none, $10555);
                        var $10556 = $10557;
                        break;
                    case 'Maybe.some':
                        var self = Kind$Check$result$(Maybe$some$(_term$1), List$nil);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10559 = self.value;
                                var $10560 = self.errors;
                                var $10561 = Kind$Check$result$($10559, List$concat$($10555, $10560));
                                var $10558 = $10561;
                                break;
                        };
                        var $10556 = $10558;
                        break;
                };
                var $10553 = $10556;
                break;
        };
        return $10553;
    };
    const Kind$Term$check$direct = x0 => x1 => Kind$Term$check$direct$(x0, x1);

    function Kind$Term$check$get_name_of_self_type$slice$(_self$1) {
        var _len$2 = String$length$(_self$1);
        var _ini$3 = String$slice$(0n, (_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _self$1);
        var _end$4 = String$slice$((_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _len$2, _self$1);
        var self = (_end$4 === ".Self");
        if (self) {
            var $10563 = Maybe$some$(_ini$3);
            var $10562 = $10563;
        } else {
            var $10564 = Maybe$none;
            var $10562 = $10564;
        };
        return $10562;
    };
    const Kind$Term$check$get_name_of_self_type$slice = x0 => Kind$Term$check$get_name_of_self_type$slice$(x0);

    function Kind$Term$check$get_name_of_self_type$(_type$1, _defs$2) {
        var self = Kind$Term$reduce$(_type$1, Kind$Map$new);
        switch (self._) {
            case 'Kind.Term.ref':
                var $10566 = self.name;
                var $10567 = Maybe$some$($10566);
                var $10565 = $10567;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10569 = self.name;
                        var $10570 = Maybe$some$($10569);
                        var $10568 = $10570;
                        break;
                    case 'Kind.Term.all':
                        var $10571 = self.self;
                        var $10572 = Kind$Term$check$get_name_of_self_type$slice$($10571);
                        var $10568 = $10572;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10573 = Maybe$none;
                        var $10568 = $10573;
                        break;
                };
                var $10565 = $10568;
                break;
            case 'Kind.Term.typ':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10575 = self.name;
                        var $10576 = Maybe$some$($10575);
                        var $10574 = $10576;
                        break;
                    case 'Kind.Term.all':
                        var $10577 = self.self;
                        var $10578 = Kind$Term$check$get_name_of_self_type$slice$($10577);
                        var $10574 = $10578;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10579 = Maybe$none;
                        var $10574 = $10579;
                        break;
                };
                var $10565 = $10574;
                break;
            case 'Kind.Term.all':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10581 = self.name;
                        var $10582 = Maybe$some$($10581);
                        var $10580 = $10582;
                        break;
                    case 'Kind.Term.all':
                        var $10583 = self.self;
                        var $10584 = Kind$Term$check$get_name_of_self_type$slice$($10583);
                        var $10580 = $10584;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10585 = Maybe$none;
                        var $10580 = $10585;
                        break;
                };
                var $10565 = $10580;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10587 = self.name;
                        var $10588 = Maybe$some$($10587);
                        var $10586 = $10588;
                        break;
                    case 'Kind.Term.all':
                        var $10589 = self.self;
                        var $10590 = Kind$Term$check$get_name_of_self_type$slice$($10589);
                        var $10586 = $10590;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10591 = Maybe$none;
                        var $10586 = $10591;
                        break;
                };
                var $10565 = $10586;
                break;
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10593 = self.name;
                        var $10594 = Maybe$some$($10593);
                        var $10592 = $10594;
                        break;
                    case 'Kind.Term.all':
                        var $10595 = self.self;
                        var $10596 = Kind$Term$check$get_name_of_self_type$slice$($10595);
                        var $10592 = $10596;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10597 = Maybe$none;
                        var $10592 = $10597;
                        break;
                };
                var $10565 = $10592;
                break;
            case 'Kind.Term.cse':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10599 = self.name;
                        var $10600 = Maybe$some$($10599);
                        var $10598 = $10600;
                        break;
                    case 'Kind.Term.all':
                        var $10601 = self.self;
                        var $10602 = Kind$Term$check$get_name_of_self_type$slice$($10601);
                        var $10598 = $10602;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10603 = Maybe$none;
                        var $10598 = $10603;
                        break;
                };
                var $10565 = $10598;
                break;
        };
        return $10565;
    };
    const Kind$Term$check$get_name_of_self_type = x0 => x1 => Kind$Term$check$get_name_of_self_type$(x0, x1);

    function Kind$Term$check$expand$num$nat$(_numb$1) {
        var $10604 = Kind$Term$nat$(_numb$1);
        return $10604;
    };
    const Kind$Term$check$expand$num$nat = x0 => Kind$Term$check$expand$num$nat$(x0);

    function Kind$Term$check$expand$num$int$(_sign$1, _numb$2) {
        var _term$3 = Kind$Term$nat$(_numb$2);
        var _term$4 = Kind$Term$app$(Kind$Term$ref$("Int.from_nat"), _term$3);
        var self = _sign$1;
        switch (self._) {
            case 'Maybe.some':
                var $10606 = self.value;
                var self = $10606;
                if (self) {
                    var $10608 = _term$4;
                    var $10607 = $10608;
                } else {
                    var $10609 = Kind$Term$app$(Kind$Term$ref$("Int.neg"), _term$4);
                    var $10607 = $10609;
                };
                var _term$5 = $10607;
                break;
            case 'Maybe.none':
                var $10610 = _term$4;
                var _term$5 = $10610;
                break;
        };
        var $10605 = _term$5;
        return $10605;
    };
    const Kind$Term$check$expand$num$int = x0 => x1 => Kind$Term$check$expand$num$int$(x0, x1);

    function Kind$Term$check$expand$num$other$(_name$1, _sign$2, _numb$3, _frac$4) {
        var self = _sign$2;
        switch (self._) {
            case 'Maybe.some':
                var $10612 = self.value;
                var self = $10612;
                if (self) {
                    var $10614 = "+";
                    var $10613 = $10614;
                } else {
                    var $10615 = "-";
                    var $10613 = $10615;
                };
                var _text$5 = $10613;
                break;
            case 'Maybe.none':
                var $10616 = "";
                var _text$5 = $10616;
                break;
        };
        var _text$6 = (_text$5 + Nat$show$(_numb$3));
        var _text$7 = (_text$6 + (() => {
            var self = _frac$4;
            switch (self._) {
                case 'Maybe.some':
                    var $10617 = self.value;
                    var $10618 = ("." + Nat$show$($10617));
                    return $10618;
                case 'Maybe.none':
                    var $10619 = "";
                    return $10619;
            };
        })());
        var $10611 = Kind$Term$app$(Kind$Term$ref$((_name$1 + ".read")), Kind$Term$str$(_text$7));
        return $10611;
    };
    const Kind$Term$check$expand$num$other = x0 => x1 => x2 => x3 => Kind$Term$check$expand$num$other$(x0, x1, x2, x3);

    function Kind$Term$check$expand$num$(_sign$1, _numb$2, _frac$3, _type$4, _defs$5) {
        var self = _type$4;
        switch (self._) {
            case 'Maybe.some':
                var $10621 = self.value;
                var self = Kind$Term$check$get_name_of_self_type$($10621, _defs$5);
                switch (self._) {
                    case 'Maybe.some':
                        var $10623 = self.value;
                        var self = ($10623 === "Nat");
                        if (self) {
                            var $10625 = Maybe$some$(Kind$Term$check$expand$num$nat$(_numb$2));
                            var $10624 = $10625;
                        } else {
                            var self = ($10623 === "Int");
                            if (self) {
                                var $10627 = Maybe$some$(Kind$Term$check$expand$num$int$(_sign$1, _numb$2));
                                var $10626 = $10627;
                            } else {
                                var $10628 = Maybe$some$(Kind$Term$check$expand$num$other$($10623, _sign$1, _numb$2, _frac$3));
                                var $10626 = $10628;
                            };
                            var $10624 = $10626;
                        };
                        var $10622 = $10624;
                        break;
                    case 'Maybe.none':
                        var $10629 = Maybe$none;
                        var $10622 = $10629;
                        break;
                };
                var _got$6 = $10622;
                break;
            case 'Maybe.none':
                var $10630 = Maybe$none;
                var _got$6 = $10630;
                break;
        };
        var self = _got$6;
        switch (self._) {
            case 'Maybe.some':
                var $10631 = self.value;
                var $10632 = $10631;
                var $10620 = $10632;
                break;
            case 'Maybe.none':
                var self = _frac$3;
                switch (self._) {
                    case 'Maybe.none':
                        var self = _sign$1;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10635 = Kind$Term$check$expand$num$nat$(_numb$2);
                                var $10634 = $10635;
                                break;
                            case 'Maybe.some':
                                var $10636 = Kind$Term$check$expand$num$int$(_sign$1, _numb$2);
                                var $10634 = $10636;
                                break;
                        };
                        var $10633 = $10634;
                        break;
                    case 'Maybe.some':
                        var $10637 = Kind$Term$check$expand$num$other$("F64", _sign$1, _numb$2, _frac$3);
                        var $10633 = $10637;
                        break;
                };
                var $10620 = $10633;
                break;
        };
        return $10620;
    };
    const Kind$Term$check$expand$num = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$num$(x0, x1, x2, x3, x4);

    function Kind$Term$check$infer_types_of_with$(_vars$1, _defs$2, _ctx$3, _path$4, _orig$5) {
        var self = _vars$1;
        switch (self._) {
            case 'List.cons':
                var $10639 = self.head;
                var $10640 = self.tail;
                var self = $10639;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10642 = self.name;
                        var $10643 = self.term;
                        var $10644 = self.type;
                        var self = $10644;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10646 = self.value;
                                var $10647 = Kind$Check$result$(Maybe$some$(Maybe$some$($10646)), List$nil);
                                var self = $10647;
                                break;
                            case 'Maybe.none':
                                var self = Kind$Term$check$($10643, Maybe$none, _defs$2, _ctx$3, _path$4, _orig$5);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10649 = self.value;
                                        var $10650 = self.errors;
                                        var self = $10649;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $10652 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$(Maybe$some$($10652)), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $10654 = self.value;
                                                        var $10655 = self.errors;
                                                        var $10656 = Kind$Check$result$($10654, List$concat$($10650, $10655));
                                                        var $10653 = $10656;
                                                        break;
                                                };
                                                var $10651 = $10653;
                                                break;
                                            case 'Maybe.none':
                                                var $10657 = Kind$Check$result$(Maybe$none, $10650);
                                                var $10651 = $10657;
                                                break;
                                        };
                                        var $10648 = $10651;
                                        break;
                                };
                                var self = $10648;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10658 = self.value;
                                var $10659 = self.errors;
                                var self = $10658;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10661 = self.value;
                                        var self = Kind$Term$check$infer_types_of_with$($10640, _defs$2, _ctx$3, _path$4, _orig$5);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10663 = self.value;
                                                var $10664 = self.errors;
                                                var self = $10663;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10666 = self.value;
                                                        var self = Kind$Check$result$(Maybe$some$(List$cons$(Kind$Ann$new$($10642, $10643, $10661), $10666)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $10668 = self.value;
                                                                var $10669 = self.errors;
                                                                var $10670 = Kind$Check$result$($10668, List$concat$($10664, $10669));
                                                                var $10667 = $10670;
                                                                break;
                                                        };
                                                        var $10665 = $10667;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10671 = Kind$Check$result$(Maybe$none, $10664);
                                                        var $10665 = $10671;
                                                        break;
                                                };
                                                var self = $10665;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10672 = self.value;
                                                var $10673 = self.errors;
                                                var $10674 = Kind$Check$result$($10672, List$concat$($10659, $10673));
                                                var $10662 = $10674;
                                                break;
                                        };
                                        var $10660 = $10662;
                                        break;
                                    case 'Maybe.none':
                                        var $10675 = Kind$Check$result$(Maybe$none, $10659);
                                        var $10660 = $10675;
                                        break;
                                };
                                var $10645 = $10660;
                                break;
                        };
                        var $10641 = $10645;
                        break;
                };
                var $10638 = $10641;
                break;
            case 'List.nil':
                var $10676 = Kind$Check$result$(Maybe$some$(List$nil), List$nil);
                var $10638 = $10676;
                break;
        };
        return $10638;
    };
    const Kind$Term$check$infer_types_of_with = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$infer_types_of_with$(x0, x1, x2, x3, x4);

    function Kind$Term$normalize$(_term$1, _defs$2) {
        var self = Kind$Term$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $10678 = self.name;
                var $10679 = self.indx;
                var $10680 = Kind$Term$var$($10678, $10679);
                var $10677 = $10680;
                break;
            case 'Kind.Term.ref':
                var $10681 = self.name;
                var $10682 = Kind$Term$ref$($10681);
                var $10677 = $10682;
                break;
            case 'Kind.Term.all':
                var $10683 = self.eras;
                var $10684 = self.self;
                var $10685 = self.name;
                var $10686 = self.xtyp;
                var $10687 = self.body;
                var $10688 = Kind$Term$all$($10683, $10684, $10685, Kind$Term$normalize$($10686, _defs$2), (_s$8 => _x$9 => {
                    var $10689 = Kind$Term$normalize$($10687(_s$8)(_x$9), _defs$2);
                    return $10689;
                }));
                var $10677 = $10688;
                break;
            case 'Kind.Term.lam':
                var $10690 = self.name;
                var $10691 = self.body;
                var $10692 = Kind$Term$lam$($10690, (_x$5 => {
                    var $10693 = Kind$Term$normalize$($10691(_x$5), _defs$2);
                    return $10693;
                }));
                var $10677 = $10692;
                break;
            case 'Kind.Term.app':
                var $10694 = self.func;
                var $10695 = self.argm;
                var $10696 = Kind$Term$app$(Kind$Term$normalize$($10694, _defs$2), Kind$Term$normalize$($10695, _defs$2));
                var $10677 = $10696;
                break;
            case 'Kind.Term.let':
                var $10697 = self.name;
                var $10698 = self.expr;
                var $10699 = self.body;
                var $10700 = Kind$Term$let$($10697, Kind$Term$normalize$($10698, _defs$2), (_x$6 => {
                    var $10701 = Kind$Term$normalize$($10699(_x$6), _defs$2);
                    return $10701;
                }));
                var $10677 = $10700;
                break;
            case 'Kind.Term.def':
                var $10702 = self.name;
                var $10703 = self.expr;
                var $10704 = self.body;
                var $10705 = Kind$Term$def$($10702, Kind$Term$normalize$($10703, _defs$2), (_x$6 => {
                    var $10706 = Kind$Term$normalize$($10704(_x$6), _defs$2);
                    return $10706;
                }));
                var $10677 = $10705;
                break;
            case 'Kind.Term.ann':
                var $10707 = self.done;
                var $10708 = self.term;
                var $10709 = self.type;
                var $10710 = Kind$Term$ann$($10707, Kind$Term$normalize$($10708, _defs$2), Kind$Term$normalize$($10709, _defs$2));
                var $10677 = $10710;
                break;
            case 'Kind.Term.gol':
                var $10711 = self.name;
                var $10712 = self.dref;
                var $10713 = self.verb;
                var $10714 = Kind$Term$gol$($10711, $10712, $10713);
                var $10677 = $10714;
                break;
            case 'Kind.Term.hol':
                var $10715 = self.path;
                var $10716 = Kind$Term$hol$($10715);
                var $10677 = $10716;
                break;
            case 'Kind.Term.nat':
                var $10717 = self.natx;
                var $10718 = Kind$Term$nat$($10717);
                var $10677 = $10718;
                break;
            case 'Kind.Term.chr':
                var $10719 = self.chrx;
                var $10720 = Kind$Term$chr$($10719);
                var $10677 = $10720;
                break;
            case 'Kind.Term.str':
                var $10721 = self.strx;
                var $10722 = Kind$Term$str$($10721);
                var $10677 = $10722;
                break;
            case 'Kind.Term.ori':
                var $10723 = self.expr;
                var $10724 = Kind$Term$normalize$($10723, _defs$2);
                var $10677 = $10724;
                break;
            case 'Kind.Term.typ':
                var $10725 = Kind$Term$typ;
                var $10677 = $10725;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10726 = _term$1;
                var $10677 = $10726;
                break;
        };
        return $10677;
    };
    const Kind$Term$normalize = x0 => x1 => Kind$Term$normalize$(x0, x1);

    function Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var self = _wyth$1;
        switch (self._) {
            case 'List.cons':
                var $10728 = self.head;
                var $10729 = self.tail;
                var self = $10728;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10731 = self.name;
                        var $10732 = self.type;
                        var $10733 = Kind$Term$all$(Bool$false, "", $10731, Maybe$default$($10732, Kind$Term$hol$(Bits$e)), (_s$14 => _x$15 => {
                            var $10734 = Kind$Term$check$expand$cse$motive$($10729, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, Nat$succ$(Nat$succ$(_size$8)));
                            return $10734;
                        }));
                        var $10730 = $10733;
                        break;
                };
                var $10727 = $10730;
                break;
            case 'List.nil':
                var self = _moti$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10736 = self.value;
                        var $10737 = $10736;
                        var $10735 = $10737;
                        break;
                    case 'Maybe.none':
                        var self = _rtyp$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10739 = self.value;
                                var $10740 = Kind$Term$normalize$($10739, Kind$Map$new);
                                var $10738 = $10740;
                                break;
                            case 'Maybe.none':
                                var $10741 = Kind$Term$hol$(Bits$e);
                                var $10738 = $10741;
                                break;
                        };
                        var $10735 = $10738;
                        break;
                };
                var $10727 = $10735;
                break;
        };
        return $10727;
    };
    const Kind$Term$check$expand$cse$motive$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$go$(x0, x1, x2, x3, x4, x5, x6, x7);

    function List$tail$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $10743 = self.tail;
                var $10744 = $10743;
                var $10742 = $10744;
                break;
            case 'List.nil':
                var $10745 = List$nil;
                var $10742 = $10745;
                break;
        };
        return $10742;
    };
    const List$tail = x0 => List$tail$(x0);

    function Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4) {
        var Kind$Term$SmartMotive$vals$cont$ = (_expr$1, _term$2, _args$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_expr$1, _term$2, _args$3, _defs$4]
        });
        var Kind$Term$SmartMotive$vals$cont = _expr$1 => _term$2 => _args$3 => _defs$4 => Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4);
        var arg = [_expr$1, _term$2, _args$3, _defs$4];
        while (true) {
            let [_expr$1, _term$2, _args$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10746 = self.func;
                        var $10747 = self.argm;
                        var $10748 = Kind$Term$SmartMotive$vals$cont$(_expr$1, $10746, List$cons$($10747, _args$3), _defs$4);
                        return $10748;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10749 = List$cons$(_expr$1, List$tail$(List$reverse$(_args$3)));
                        return $10749;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$vals$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3) {
        var Kind$Term$SmartMotive$vals$ = (_expr$1, _type$2, _defs$3) => ({
            ctr: 'TCO',
            arg: [_expr$1, _type$2, _defs$3]
        });
        var Kind$Term$SmartMotive$vals = _expr$1 => _type$2 => _defs$3 => Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3);
        var arg = [_expr$1, _type$2, _defs$3];
        while (true) {
            let [_expr$1, _type$2, _defs$3] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$2, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10750 = self.body;
                        var $10751 = Kind$Term$SmartMotive$vals$(_expr$1, $10750(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        return $10751;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10752 = Kind$Term$SmartMotive$vals$cont$(_expr$1, _type$2, List$nil, _defs$3);
                        return $10752;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals = x0 => x1 => x2 => Kind$Term$SmartMotive$vals$(x0, x1, x2);

    function Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4) {
        var Kind$Term$SmartMotive$nams$cont$ = (_name$1, _term$2, _binds$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_name$1, _term$2, _binds$3, _defs$4]
        });
        var Kind$Term$SmartMotive$nams$cont = _name$1 => _term$2 => _binds$3 => _defs$4 => Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4);
        var arg = [_name$1, _term$2, _binds$3, _defs$4];
        while (true) {
            let [_name$1, _term$2, _binds$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10753 = self.self;
                        var $10754 = self.name;
                        var $10755 = self.body;
                        var $10756 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10755(Kind$Term$ref$($10753))(Kind$Term$ref$($10754)), List$cons$(String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10754, List$nil)))), _binds$3), _defs$4);
                        return $10756;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10757 = List$cons$(_name$1, List$tail$(_binds$3));
                        return $10757;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$nams$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$nams$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$nams$(_name$1, _type$2, _defs$3) {
        var self = Kind$Term$reduce$(_type$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10759 = self.xtyp;
                var $10760 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10759, List$nil, _defs$3);
                var $10758 = $10760;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10761 = List$nil;
                var $10758 = $10761;
                break;
        };
        return $10758;
    };
    const Kind$Term$SmartMotive$nams = x0 => x1 => x2 => Kind$Term$SmartMotive$nams$(x0, x1, x2);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $10763 = self.head;
                var $10764 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $10766 = self.head;
                        var $10767 = self.tail;
                        var $10768 = List$cons$(Pair$new$($10763, $10766), List$zip$($10764, $10767));
                        var $10765 = $10768;
                        break;
                    case 'List.nil':
                        var $10769 = List$nil;
                        var $10765 = $10769;
                        break;
                };
                var $10762 = $10765;
                break;
            case 'List.nil':
                var $10770 = List$nil;
                var $10762 = $10770;
                break;
        };
        return $10762;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kind$Term$serialize$go$(_term$1, _depth$2, _init$3, _diff$4, _x$5) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $10772 = self.indx;
                var self = ($10772 >= _init$3);
                if (self) {
                    var _name$8 = a1 => (a1 + (nat_to_bits(Nat$pred$((_depth$2 - $10772 <= 0n ? 0n : _depth$2 - $10772)))));
                    var $10774 = (((_name$8(_x$5) + '1') + '0') + '0');
                    var $10773 = $10774;
                } else {
                    var _name$8 = a1 => (a1 + (nat_to_bits($10772)));
                    var $10775 = (((_name$8(_x$5) + '0') + '1') + '0');
                    var $10773 = $10775;
                };
                var $10771 = $10773;
                break;
            case 'Kind.Term.ref':
                var $10776 = self.name;
                var _name$7 = a1 => (a1 + (kind_name_to_bits($10776)));
                var $10777 = (((_name$7(_x$5) + '0') + '0') + '0');
                var $10771 = $10777;
                break;
            case 'Kind.Term.all':
                var $10778 = self.eras;
                var $10779 = self.self;
                var $10780 = self.name;
                var $10781 = self.xtyp;
                var $10782 = self.body;
                var self = $10778;
                if (self) {
                    var $10784 = Bits$i;
                    var _eras$11 = $10784;
                } else {
                    var $10785 = Bits$o;
                    var _eras$11 = $10785;
                };
                var _self$12 = a1 => (a1 + (kind_name_to_bits($10779)));
                var _xtyp$13 = Kind$Term$serialize$go($10781)(_depth$2)(_init$3)(_diff$4);
                var _body$14 = Kind$Term$serialize$go($10782(Kind$Term$var$($10779, _depth$2))(Kind$Term$var$($10780, Nat$succ$(_depth$2))))(Nat$succ$(Nat$succ$(_depth$2)))(_init$3)(_diff$4);
                var $10783 = (((_eras$11(_self$12(_xtyp$13(_body$14(_x$5)))) + '0') + '0') + '1');
                var $10771 = $10783;
                break;
            case 'Kind.Term.lam':
                var $10786 = self.name;
                var $10787 = self.body;
                var _body$8 = Kind$Term$serialize$go($10787(Kind$Term$var$($10786, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10788 = (((_body$8(_x$5) + '1') + '0') + '1');
                var $10771 = $10788;
                break;
            case 'Kind.Term.app':
                var $10789 = self.func;
                var $10790 = self.argm;
                var _func$8 = Kind$Term$serialize$go($10789)(_depth$2)(_init$3)(_diff$4);
                var _argm$9 = Kind$Term$serialize$go($10790)(_depth$2)(_init$3)(_diff$4);
                var $10791 = (((_func$8(_argm$9(_x$5)) + '0') + '1') + '1');
                var $10771 = $10791;
                break;
            case 'Kind.Term.let':
                var $10792 = self.name;
                var $10793 = self.expr;
                var $10794 = self.body;
                var _expr$9 = Kind$Term$serialize$go($10793)(_depth$2)(_init$3)(_diff$4);
                var _body$10 = Kind$Term$serialize$go($10794(Kind$Term$var$($10792, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10795 = (((_expr$9(_body$10(_x$5)) + '1') + '1') + '1');
                var $10771 = $10795;
                break;
            case 'Kind.Term.def':
                var $10796 = self.expr;
                var $10797 = self.body;
                var $10798 = Kind$Term$serialize$go$($10797($10796), _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10798;
                break;
            case 'Kind.Term.ann':
                var $10799 = self.term;
                var $10800 = Kind$Term$serialize$go$($10799, _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10800;
                break;
            case 'Kind.Term.gol':
                var $10801 = self.name;
                var _name$9 = a1 => (a1 + (kind_name_to_bits($10801)));
                var $10802 = (((_name$9(_x$5) + '0') + '0') + '0');
                var $10771 = $10802;
                break;
            case 'Kind.Term.nat':
                var $10803 = self.natx;
                var $10804 = Kind$Term$serialize$go$(Kind$Term$unroll_nat$($10803), _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10804;
                break;
            case 'Kind.Term.chr':
                var $10805 = self.chrx;
                var $10806 = Kind$Term$serialize$go$(Kind$Term$unroll_chr$($10805), _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10806;
                break;
            case 'Kind.Term.str':
                var $10807 = self.strx;
                var $10808 = Kind$Term$serialize$go$(Kind$Term$unroll_str$($10807), _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10808;
                break;
            case 'Kind.Term.ori':
                var $10809 = self.expr;
                var $10810 = Kind$Term$serialize$go$($10809, _depth$2, _init$3, _diff$4, _x$5);
                var $10771 = $10810;
                break;
            case 'Kind.Term.typ':
                var $10811 = (((_x$5 + '1') + '1') + '0');
                var $10771 = $10811;
                break;
            case 'Kind.Term.hol':
                var $10812 = _x$5;
                var $10771 = $10812;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10813 = _diff$4(_x$5);
                var $10771 = $10813;
                break;
        };
        return $10771;
    };
    const Kind$Term$serialize$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$serialize$go$(x0, x1, x2, x3, x4);

    function Kind$Term$serialize$(_term$1, _depth$2, _side$3) {
        var self = _side$3;
        if (self) {
            var $10815 = Bits$o;
            var _diff$4 = $10815;
        } else {
            var $10816 = Bits$i;
            var _diff$4 = $10816;
        };
        var $10814 = Kind$Term$serialize$go$(_term$1, _depth$2, _depth$2, _diff$4, Bits$e);
        return $10814;
    };
    const Kind$Term$serialize = x0 => x1 => x2 => Kind$Term$serialize$(x0, x1, x2);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kind$Term$identical$(_a$1, _b$2, _lv$3) {
        var _ah$4 = Kind$Term$serialize$(_a$1, _lv$3, Bool$false);
        var _bh$5 = Kind$Term$serialize$(_b$2, _lv$3, Bool$true);
        var $10817 = (_bh$5 === _ah$4);
        return $10817;
    };
    const Kind$Term$identical = x0 => x1 => x2 => Kind$Term$identical$(x0, x1, x2);

    function Kind$Term$SmartMotive$replace$(_term$1, _from$2, _to$3, _lv$4) {
        var self = Kind$Term$identical$(_term$1, _from$2, _lv$4);
        if (self) {
            var $10819 = _to$3;
            var $10818 = $10819;
        } else {
            var self = _term$1;
            switch (self._) {
                case 'Kind.Term.var':
                    var $10821 = self.name;
                    var $10822 = self.indx;
                    var $10823 = Kind$Term$var$($10821, $10822);
                    var $10820 = $10823;
                    break;
                case 'Kind.Term.ref':
                    var $10824 = self.name;
                    var $10825 = Kind$Term$ref$($10824);
                    var $10820 = $10825;
                    break;
                case 'Kind.Term.all':
                    var $10826 = self.eras;
                    var $10827 = self.self;
                    var $10828 = self.name;
                    var $10829 = self.xtyp;
                    var $10830 = self.body;
                    var _xtyp$10 = Kind$Term$SmartMotive$replace$($10829, _from$2, _to$3, _lv$4);
                    var _body$11 = $10830(Kind$Term$ref$($10827))(Kind$Term$ref$($10828));
                    var _body$12 = Kind$Term$SmartMotive$replace$(_body$11, _from$2, _to$3, Nat$succ$(Nat$succ$(_lv$4)));
                    var $10831 = Kind$Term$all$($10826, $10827, $10828, _xtyp$10, (_s$13 => _x$14 => {
                        var $10832 = _body$12;
                        return $10832;
                    }));
                    var $10820 = $10831;
                    break;
                case 'Kind.Term.lam':
                    var $10833 = self.name;
                    var $10834 = self.body;
                    var _body$7 = $10834(Kind$Term$ref$($10833));
                    var _body$8 = Kind$Term$SmartMotive$replace$(_body$7, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10835 = Kind$Term$lam$($10833, (_x$9 => {
                        var $10836 = _body$8;
                        return $10836;
                    }));
                    var $10820 = $10835;
                    break;
                case 'Kind.Term.app':
                    var $10837 = self.func;
                    var $10838 = self.argm;
                    var _func$7 = Kind$Term$SmartMotive$replace$($10837, _from$2, _to$3, _lv$4);
                    var _argm$8 = Kind$Term$SmartMotive$replace$($10838, _from$2, _to$3, _lv$4);
                    var $10839 = Kind$Term$app$(_func$7, _argm$8);
                    var $10820 = $10839;
                    break;
                case 'Kind.Term.let':
                    var $10840 = self.name;
                    var $10841 = self.expr;
                    var $10842 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10841, _from$2, _to$3, _lv$4);
                    var _body$9 = $10842(Kind$Term$ref$($10840));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10843 = Kind$Term$let$($10840, _expr$8, (_x$11 => {
                        var $10844 = _body$10;
                        return $10844;
                    }));
                    var $10820 = $10843;
                    break;
                case 'Kind.Term.def':
                    var $10845 = self.name;
                    var $10846 = self.expr;
                    var $10847 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10846, _from$2, _to$3, _lv$4);
                    var _body$9 = $10847(Kind$Term$ref$($10845));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10848 = Kind$Term$def$($10845, _expr$8, (_x$11 => {
                        var $10849 = _body$10;
                        return $10849;
                    }));
                    var $10820 = $10848;
                    break;
                case 'Kind.Term.ann':
                    var $10850 = self.done;
                    var $10851 = self.term;
                    var $10852 = self.type;
                    var _term$8 = Kind$Term$SmartMotive$replace$($10851, _from$2, _to$3, _lv$4);
                    var _type$9 = Kind$Term$SmartMotive$replace$($10852, _from$2, _to$3, _lv$4);
                    var $10853 = Kind$Term$ann$($10850, _term$8, _type$9);
                    var $10820 = $10853;
                    break;
                case 'Kind.Term.get':
                    var $10854 = self.expr;
                    var $10855 = self.fkey;
                    var _expr$7 = Kind$Term$SmartMotive$replace$($10854, _from$2, _to$3, _lv$4);
                    var _fkey$8 = $10855;
                    var $10856 = Kind$Term$get$(_expr$7, _fkey$8);
                    var $10820 = $10856;
                    break;
                case 'Kind.Term.set':
                    var $10857 = self.expr;
                    var $10858 = self.fkey;
                    var $10859 = self.fval;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10857, _from$2, _to$3, _lv$4);
                    var _fkey$9 = $10858;
                    var _fval$10 = Kind$Term$SmartMotive$replace$($10859, _from$2, _to$3, _lv$4);
                    var $10860 = Kind$Term$set$(_expr$8, _fkey$9, _fval$10);
                    var $10820 = $10860;
                    break;
                case 'Kind.Term.ope':
                    var $10861 = self.name;
                    var $10862 = self.arg0;
                    var $10863 = self.arg1;
                    var _arg0$8 = Kind$Term$SmartMotive$replace$($10862, _from$2, _to$3, _lv$4);
                    var _arg1$9 = Kind$Term$SmartMotive$replace$($10863, _from$2, _to$3, _lv$4);
                    var $10864 = Kind$Term$ope$($10861, _arg0$8, _arg1$9);
                    var $10820 = $10864;
                    break;
                case 'Kind.Term.ori':
                    var $10865 = self.expr;
                    var $10866 = Kind$Term$SmartMotive$replace$($10865, _from$2, _to$3, _lv$4);
                    var $10820 = $10866;
                    break;
                case 'Kind.Term.typ':
                    var $10867 = Kind$Term$typ;
                    var $10820 = $10867;
                    break;
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                    var $10868 = _term$1;
                    var $10820 = $10868;
                    break;
            };
            var $10818 = $10820;
        };
        return $10818;
    };
    const Kind$Term$SmartMotive$replace = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$replace$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$make$(_name$1, _expr$2, _type$3, _moti$4, _size$5, _defs$6) {
        var _vals$7 = Kind$Term$SmartMotive$vals$(_expr$2, _type$3, _defs$6);
        var _nams$8 = Kind$Term$SmartMotive$nams$(_name$1, _type$3, _defs$6);
        var _subs$9 = List$zip$(_nams$8, _vals$7);
        var $10869 = List$fold$(_subs$9, _moti$4, (_sub$10 => _moti$11 => {
            var self = _sub$10;
            switch (self._) {
                case 'Pair.new':
                    var $10871 = self.fst;
                    var $10872 = self.snd;
                    var $10873 = Kind$Term$SmartMotive$replace$(_moti$11, $10872, Kind$Term$ref$($10871), _size$5);
                    var $10870 = $10873;
                    break;
            };
            return $10870;
        }));
        return $10869;
    };
    const Kind$Term$SmartMotive$make = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$SmartMotive$make$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$check$expand$cse$motive$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var _done$9 = Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8);
        var self = _moti$2;
        switch (self._) {
            case 'Maybe.none':
                var $10875 = Kind$Term$SmartMotive$make$(_name$3, _expr$4, _etyp$5, _done$9, _size$8, _defs$7);
                var $10874 = $10875;
                break;
            case 'Maybe.some':
                var $10876 = _done$9;
                var $10874 = $10876;
                break;
        };
        return $10874;
    };
    const Kind$Term$check$expand$cse$motive = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$(x0, x1, x2, x3, x4, x5, x6, x7);

    function Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, _type$3, _body$4, _defs$5) {
        var self = Kind$Term$reduce$(_type$3, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10878 = self.self;
                var $10879 = self.name;
                var $10880 = self.body;
                var $10881 = Kind$Term$lam$((() => {
                    var self = String$is_empty$($10879);
                    if (self) {
                        var $10882 = _name$1;
                        return $10882;
                    } else {
                        var $10883 = String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10879, List$nil))));
                        return $10883;
                    };
                })(), (_x$11 => {
                    var $10884 = Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, $10880(Kind$Term$var$($10878, 0n))(Kind$Term$var$($10879, 0n)), _body$4, _defs$5);
                    return $10884;
                }));
                var $10877 = $10881;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10886 = self.head;
                        var $10887 = self.tail;
                        var self = $10886;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10889 = self.name;
                                var $10890 = Kind$Term$lam$($10889, (_x$13 => {
                                    var $10891 = Kind$Term$check$expand$cse$argument$(_name$1, $10887, _type$3, _body$4, _defs$5);
                                    return $10891;
                                }));
                                var $10888 = $10890;
                                break;
                        };
                        var $10885 = $10888;
                        break;
                    case 'List.nil':
                        var $10892 = _body$4;
                        var $10885 = $10892;
                        break;
                };
                var $10877 = $10885;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10894 = self.head;
                        var $10895 = self.tail;
                        var self = $10894;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10897 = self.name;
                                var $10898 = Kind$Term$lam$($10897, (_x$12 => {
                                    var $10899 = Kind$Term$check$expand$cse$argument$(_name$1, $10895, _type$3, _body$4, _defs$5);
                                    return $10899;
                                }));
                                var $10896 = $10898;
                                break;
                        };
                        var $10893 = $10896;
                        break;
                    case 'List.nil':
                        var $10900 = _body$4;
                        var $10893 = $10900;
                        break;
                };
                var $10877 = $10893;
                break;
            case 'Kind.Term.typ':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10902 = self.head;
                        var $10903 = self.tail;
                        var self = $10902;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10905 = self.name;
                                var $10906 = Kind$Term$lam$($10905, (_x$11 => {
                                    var $10907 = Kind$Term$check$expand$cse$argument$(_name$1, $10903, _type$3, _body$4, _defs$5);
                                    return $10907;
                                }));
                                var $10904 = $10906;
                                break;
                        };
                        var $10901 = $10904;
                        break;
                    case 'List.nil':
                        var $10908 = _body$4;
                        var $10901 = $10908;
                        break;
                };
                var $10877 = $10901;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10910 = self.head;
                        var $10911 = self.tail;
                        var self = $10910;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10913 = self.name;
                                var $10914 = Kind$Term$lam$($10913, (_x$14 => {
                                    var $10915 = Kind$Term$check$expand$cse$argument$(_name$1, $10911, _type$3, _body$4, _defs$5);
                                    return $10915;
                                }));
                                var $10912 = $10914;
                                break;
                        };
                        var $10909 = $10912;
                        break;
                    case 'List.nil':
                        var $10916 = _body$4;
                        var $10909 = $10916;
                        break;
                };
                var $10877 = $10909;
                break;
            case 'Kind.Term.cse':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10918 = self.head;
                        var $10919 = self.tail;
                        var self = $10918;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10921 = self.name;
                                var $10922 = Kind$Term$lam$($10921, (_x$17 => {
                                    var $10923 = Kind$Term$check$expand$cse$argument$(_name$1, $10919, _type$3, _body$4, _defs$5);
                                    return $10923;
                                }));
                                var $10920 = $10922;
                                break;
                        };
                        var $10917 = $10920;
                        break;
                    case 'List.nil':
                        var $10924 = _body$4;
                        var $10917 = $10924;
                        break;
                };
                var $10877 = $10917;
                break;
        };
        return $10877;
    };
    const Kind$Term$check$expand$cse$argument = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$cse$argument$(x0, x1, x2, x3, x4);

    function Maybe$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Maybe.some':
                var $10926 = self.value;
                var $10927 = Maybe$some$($10926);
                var $10925 = $10927;
                break;
            case 'Maybe.none':
                var $10928 = _b$3;
                var $10925 = $10928;
                break;
        };
        return $10925;
    };
    const Maybe$or = x0 => x1 => Maybe$or$(x0, x1);

    function Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) {
        var Kind$Term$check$expand$cse$cases$ = (_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) => ({
            ctr: 'TCO',
            arg: [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7]
        });
        var Kind$Term$check$expand$cse$cases = _expr$1 => _name$2 => _wyth$3 => _cses$4 => _type$5 => _defs$6 => _ctxt$7 => Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7);
        var arg = [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7];
        while (true) {
            let [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$5, _defs$6);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10929 = self.self;
                        var $10930 = self.name;
                        var $10931 = self.xtyp;
                        var $10932 = self.body;
                        var _argm$13 = Maybe$or$(Kind$Map$get$($10930, _cses$4), Kind$Map$get$("_", _cses$4));
                        var _argm$14 = Maybe$default$(_argm$13, Kind$Term$ref$((_name$2 + ("_" + ($10930 + "_case")))));
                        var _argm$15 = Kind$Term$check$expand$cse$argument$(_name$2, _wyth$3, $10931, _argm$14, _defs$6);
                        var _expr$16 = Kind$Term$app$(_expr$1, _argm$15);
                        var _type$17 = $10932(Kind$Term$var$($10929, 0n))(Kind$Term$var$($10930, 0n));
                        var $10933 = Kind$Term$check$expand$cse$cases$(_expr$16, _name$2, _wyth$3, _cses$4, _type$17, _defs$6, _ctxt$7);
                        return $10933;
                    case 'Kind.Term.var':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                    case 'Kind.Term.ori':
                        var _expr$10 = (() => {
                            var $10936 = _expr$1;
                            var $10937 = _wyth$3;
                            let _expr$11 = $10936;
                            let _defn$10;
                            while ($10937._ === 'List.cons') {
                                _defn$10 = $10937.head;
                                var $10936 = Kind$Term$app$(_expr$11, (() => {
                                    var self = _defn$10;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10938 = self.term;
                                            var $10939 = $10938;
                                            return $10939;
                                    };
                                })());
                                _expr$11 = $10936;
                                $10937 = $10937.tail;
                            }
                            return _expr$11;
                        })();
                        var $10934 = _expr$10;
                        return $10934;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var _expr$9 = (() => {
                            var $10942 = _expr$1;
                            var $10943 = _wyth$3;
                            let _expr$10 = $10942;
                            let _defn$9;
                            while ($10943._ === 'List.cons') {
                                _defn$9 = $10943.head;
                                var $10942 = Kind$Term$app$(_expr$10, (() => {
                                    var self = _defn$9;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10944 = self.term;
                                            var $10945 = $10944;
                                            return $10945;
                                    };
                                })());
                                _expr$10 = $10942;
                                $10943 = $10943.tail;
                            }
                            return _expr$10;
                        })();
                        var $10940 = _expr$9;
                        return $10940;
                    case 'Kind.Term.typ':
                        var _expr$8 = (() => {
                            var $10948 = _expr$1;
                            var $10949 = _wyth$3;
                            let _expr$9 = $10948;
                            let _defn$8;
                            while ($10949._ === 'List.cons') {
                                _defn$8 = $10949.head;
                                var $10948 = Kind$Term$app$(_expr$9, (() => {
                                    var self = _defn$8;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10950 = self.term;
                                            var $10951 = $10950;
                                            return $10951;
                                    };
                                })());
                                _expr$9 = $10948;
                                $10949 = $10949.tail;
                            }
                            return _expr$9;
                        })();
                        var $10946 = _expr$8;
                        return $10946;
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var _expr$11 = (() => {
                            var $10954 = _expr$1;
                            var $10955 = _wyth$3;
                            let _expr$12 = $10954;
                            let _defn$11;
                            while ($10955._ === 'List.cons') {
                                _defn$11 = $10955.head;
                                var $10954 = Kind$Term$app$(_expr$12, (() => {
                                    var self = _defn$11;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10956 = self.term;
                                            var $10957 = $10956;
                                            return $10957;
                                    };
                                })());
                                _expr$12 = $10954;
                                $10955 = $10955.tail;
                            }
                            return _expr$12;
                        })();
                        var $10952 = _expr$11;
                        return $10952;
                    case 'Kind.Term.cse':
                        var _expr$14 = (() => {
                            var $10960 = _expr$1;
                            var $10961 = _wyth$3;
                            let _expr$15 = $10960;
                            let _defn$14;
                            while ($10961._ === 'List.cons') {
                                _defn$14 = $10961.head;
                                var $10960 = Kind$Term$app$(_expr$15, (() => {
                                    var self = _defn$14;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10962 = self.term;
                                            var $10963 = $10962;
                                            return $10963;
                                    };
                                })());
                                _expr$15 = $10960;
                                $10961 = $10961.tail;
                            }
                            return _expr$15;
                        })();
                        var $10958 = _expr$14;
                        return $10958;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$check$expand$cse$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Term$check$expand$cse$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Term$check$expand$cse$(_expr$1, _name$2, _wyth$3, _cses$4, _moti$5, _etyp$6, _rtyp$7, _defs$8, _ctxt$9) {
        var self = Kind$Term$reduce$(_etyp$6, _defs$8);
        switch (self._) {
            case 'Kind.Term.all':
                var $10965 = self.self;
                var $10966 = self.name;
                var $10967 = self.xtyp;
                var $10968 = self.body;
                var _moti$15 = Kind$Term$check$expand$cse$motive$(_wyth$3, _moti$5, _name$2, _expr$1, _etyp$6, _rtyp$7, _defs$8, (list_length(_ctxt$9)));
                var _argm$16 = Kind$Term$check$expand$cse$argument$(_name$2, List$nil, $10967, _moti$15, _defs$8);
                var _expr$17 = Kind$Term$app$(_expr$1, _argm$16);
                var _type$18 = $10968(Kind$Term$var$($10965, 0n))(Kind$Term$var$($10966, 0n));
                var $10969 = Maybe$some$(Kind$Term$check$expand$cse$cases$(_expr$17, _name$2, _wyth$3, _cses$4, _type$18, _defs$8, _ctxt$9));
                var $10964 = $10969;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10970 = Maybe$none;
                var $10964 = $10970;
                break;
        };
        return $10964;
    };
    const Kind$Term$check$expand$cse = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Term$check$expand$cse$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Error$cant_infer$(_origin$1, _term$2, _context$3) {
        var $10971 = ({
            _: 'Kind.Error.cant_infer',
            'origin': _origin$1,
            'term': _term$2,
            'context': _context$3
        });
        return $10971;
    };
    const Kind$Error$cant_infer = x0 => x1 => x2 => Kind$Error$cant_infer$(x0, x1, x2);

    function Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$3, _orig$4) {
        var $10972 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$cant_infer$(_orig$4, _term$1, _ctx$3), List$nil));
        return $10972;
    };
    const Kind$Term$check$cant_infer = x0 => x1 => x2 => x3 => Kind$Term$check$cant_infer$(x0, x1, x2, x3);

    function Kind$Term$get_bnds$(_term$1, _depth$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10974 = self.self;
                var $10975 = self.name;
                var $10976 = self.xtyp;
                var $10977 = self.body;
                var _b$8 = $10977(Kind$Term$var$($10974, _depth$2))(Kind$Term$var$($10975, Nat$succ$(_depth$2)));
                var self = Kind$Term$get_bnds$(_b$8, Nat$succ$(Nat$succ$(_depth$2)));
                switch (self._) {
                    case 'Pair.new':
                        var $10979 = self.fst;
                        var $10980 = self.snd;
                        var $10981 = Pair$new$(List$cons$(Pair$new$($10975, $10976), $10979), $10980);
                        var $10978 = $10981;
                        break;
                };
                var $10973 = $10978;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10982 = Pair$new$(List$nil, _term$1);
                var $10973 = $10982;
                break;
        };
        return $10973;
    };
    const Kind$Term$get_bnds = x0 => x1 => Kind$Term$get_bnds$(x0, x1);

    function List$last$go$(_xs$2, _last$3) {
        var List$last$go$ = (_xs$2, _last$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _last$3]
        });
        var List$last$go = _xs$2 => _last$3 => List$last$go$(_xs$2, _last$3);
        var arg = [_xs$2, _last$3];
        while (true) {
            let [_xs$2, _last$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $10983 = self.head;
                        var $10984 = self.tail;
                        var $10985 = List$last$go$($10984, Maybe$some$($10983));
                        return $10985;
                    case 'List.nil':
                        var $10986 = _last$3;
                        return $10986;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$last$go = x0 => x1 => List$last$go$(x0, x1);

    function List$last$(_xs$2) {
        var $10987 = List$last$go$(_xs$2, Maybe$none);
        return $10987;
    };
    const List$last = x0 => List$last$(x0);

    function Kind$Term$check$expand$set$count_params$(_xtyp$1) {
        var self = Kind$Term$get_bnds$(_xtyp$1, 0n);
        switch (self._) {
            case 'Pair.new':
                var $10989 = self.fst;
                var self = Kind$Term$get_args$(Pair$snd$(Maybe$default$(List$last$($10989), Pair$new$("", Kind$Term$typ))));
                switch (self._) {
                    case 'Pair.new':
                        var $10991 = self.snd;
                        var _indexs$6 = Nat$pred$((list_length($10989)));
                        var _params$7 = ((list_length($10991)) - _indexs$6 <= 0n ? 0n : (list_length($10991)) - _indexs$6);
                        var $10992 = _params$7;
                        var $10990 = $10992;
                        break;
                };
                var $10988 = $10990;
                break;
        };
        return $10988;
    };
    const Kind$Term$check$expand$set$count_params = x0 => Kind$Term$check$expand$set$count_params$(x0);

    function Nat$for$(_state$2, _from$3, _til$4, _func$5) {
        var Nat$for$ = (_state$2, _from$3, _til$4, _func$5) => ({
            ctr: 'TCO',
            arg: [_state$2, _from$3, _til$4, _func$5]
        });
        var Nat$for = _state$2 => _from$3 => _til$4 => _func$5 => Nat$for$(_state$2, _from$3, _til$4, _func$5);
        var arg = [_state$2, _from$3, _til$4, _func$5];
        while (true) {
            let [_state$2, _from$3, _til$4, _func$5] = arg;
            var R = (() => {
                var self = (_from$3 === _til$4);
                if (self) {
                    var $10993 = _state$2;
                    return $10993;
                } else {
                    var $10994 = Nat$for$(_func$5(_from$3)(_state$2), Nat$succ$(_from$3), _til$4, _func$5);
                    return $10994;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$for = x0 => x1 => x2 => x3 => Nat$for$(x0, x1, x2, x3);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $10995 = self.head;
                        var $10996 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $10998 = Maybe$some$($10995);
                            var $10997 = $10998;
                        } else {
                            var $10999 = (self - 1n);
                            var $11000 = List$get$($10999, $10996);
                            var $10997 = $11000;
                        };
                        return $10997;
                    case 'List.nil':
                        var $11001 = Maybe$none;
                        return $11001;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3) {
        var self = ((list_length(_args$1)) === 2n);
        if (self) {
            var _term$4 = Kind$Term$ref$("Pair.new");
            var _term$5 = Kind$Term$app$(_term$4, Kind$Term$hol$(Bits$e));
            var _term$6 = Kind$Term$app$(_term$5, Kind$Term$hol$(Bits$e));
            var _term$7 = Kind$Term$app$(_term$6, Maybe$default$(List$get$(0n, _args$1), Kind$Term$ref$("pair_fst")));
            var _term$8 = Kind$Term$app$(_term$7, Maybe$default$(List$get$(1n, _args$1), Kind$Term$ref$("pair_snd")));
            var $11003 = Maybe$some$(_term$8);
            var $11002 = $11003;
        } else {
            var $11004 = Maybe$none;
            var $11002 = $11004;
        };
        return $11002;
    };
    const Kind$Term$check$expand$new$pair = x0 => x1 => x2 => Kind$Term$check$expand$new$pair$(x0, x1, x2);

    function Kind$Term$check$expand$new$(_args$1, _type$2, _defs$3) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $11006 = self.value;
                var self = Kind$Term$reduce$($11006, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11008 = self.self;
                        var $11009 = self.xtyp;
                        var $11010 = self.body;
                        var self = Kind$Term$reduce$($11010(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11012 = self.name;
                                var _tnam$15 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($11008), "");
                                var _term$16 = Kind$Term$ref$((_tnam$15 + ("." + $11012)));
                                var _pars$17 = Kind$Term$check$expand$set$count_params$($11009);
                                var _term$18 = Nat$for$(_term$16, 0n, _pars$17, (_i$18 => _term$19 => {
                                    var $11014 = Kind$Term$app$(_term$19, Kind$Term$hol$(Bits$e));
                                    return $11014;
                                }));
                                var _term$19 = (() => {
                                    var $11016 = _term$18;
                                    var $11017 = _args$1;
                                    let _term$20 = $11016;
                                    let _arg$19;
                                    while ($11017._ === 'List.cons') {
                                        _arg$19 = $11017.head;
                                        var $11016 = Kind$Term$app$(_term$20, _arg$19);
                                        _term$20 = $11016;
                                        $11017 = $11017.tail;
                                    }
                                    return _term$20;
                                })();
                                var $11013 = Maybe$some$(_term$19);
                                var $11011 = $11013;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $11018 = Maybe$none;
                                var $11011 = $11018;
                                break;
                        };
                        var $11007 = $11011;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11019 = Maybe$none;
                        var $11007 = $11019;
                        break;
                };
                var _got$4 = $11007;
                break;
            case 'Maybe.none':
                var $11020 = Maybe$none;
                var _got$4 = $11020;
                break;
        };
        var self = _got$4;
        switch (self._) {
            case 'Maybe.some':
                var $11021 = self.value;
                var $11022 = Maybe$some$($11021);
                var $11005 = $11022;
                break;
            case 'Maybe.none':
                var $11023 = Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3);
                var $11005 = $11023;
                break;
        };
        return $11005;
    };
    const Kind$Term$check$expand$new = x0 => x1 => x2 => Kind$Term$check$expand$new$(x0, x1, x2);

    function Kind$Term$check$expand$get$selector$(_fkey$1, _ctor$2, _defs$3, _rett$4) {
        var self = Kind$Term$reduce$(_ctor$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $11025 = self.name;
                var $11026 = self.body;
                var $11027 = Kind$Term$lam$($11025, (_x$10 => {
                    var _body$11 = $11026(Kind$Term$typ)(Kind$Term$typ);
                    var self = ($11025 === _fkey$1);
                    if (self) {
                        var $11029 = _x$10;
                        var _rett$12 = $11029;
                    } else {
                        var $11030 = _rett$4;
                        var _rett$12 = $11030;
                    };
                    var $11028 = Kind$Term$check$expand$get$selector$(_fkey$1, _body$11, _defs$3, _rett$12);
                    return $11028;
                }));
                var $11024 = $11027;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11031 = _rett$4;
                var $11024 = $11031;
                break;
        };
        return $11024;
    };
    const Kind$Term$check$expand$get$selector = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$selector$(x0, x1, x2, x3);

    function Kind$Term$check$expand$get$(_expr$1, _fkey$2, _etyp$3, _defs$4) {
        var self = Kind$Term$reduce$(_etyp$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $11033 = self.body;
                var self = Kind$Term$reduce$($11033(Kind$Term$typ)(Kind$Term$typ), _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11035 = self.xtyp;
                        var _term$15 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$15 => {
                            var $11037 = Kind$Term$hol$(Bits$e);
                            return $11037;
                        })));
                        var _rett$16 = Kind$Term$ref$((_fkey$2 + "_field"));
                        var _sele$17 = Kind$Term$check$expand$get$selector$(_fkey$2, $11035, _defs$4, _rett$16);
                        var $11036 = Maybe$some$(Kind$Term$app$(_term$15, _sele$17));
                        var $11034 = $11036;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11038 = Maybe$none;
                        var $11034 = $11038;
                        break;
                };
                var $11032 = $11034;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11039 = Maybe$none;
                var $11032 = $11039;
                break;
        };
        return $11032;
    };
    const Kind$Term$check$expand$get = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$(x0, x1, x2, x3);

    function Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _ctor$3, _defs$4, _rett$5) {
        var self = Kind$Term$reduce$(_ctor$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $11041 = self.name;
                var $11042 = self.body;
                var $11043 = Kind$Term$lam$($11041, (_x$11 => {
                    var _body$12 = $11042(Kind$Term$typ)(Kind$Term$typ);
                    var _rett$13 = Kind$Term$app$(_rett$5, (() => {
                        var self = ($11041 === _fkey$1);
                        if (self) {
                            var $11045 = _fval$2;
                            return $11045;
                        } else {
                            var $11046 = _x$11;
                            return $11046;
                        };
                    })());
                    var $11044 = Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _body$12, _defs$4, _rett$13);
                    return $11044;
                }));
                var $11040 = $11043;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11047 = _rett$5;
                var $11040 = $11047;
                break;
        };
        return $11040;
    };
    const Kind$Term$check$expand$set$selector = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$selector$(x0, x1, x2, x3, x4);

    function Kind$Term$check$expand$set$(_expr$1, _fkey$2, _fval$3, _etyp$4, _defs$5) {
        var self = Kind$Term$reduce$(_etyp$4, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $11049 = self.self;
                var $11050 = self.xtyp;
                var $11051 = self.body;
                var self = Kind$Term$reduce$($11051(Kind$Term$typ)(Kind$Term$typ), _defs$5);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $11053 = self.name;
                        var $11054 = self.xtyp;
                        var _term$16 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$16 => {
                            var $11056 = Kind$Term$hol$(Bits$e);
                            return $11056;
                        })));
                        var _tnam$17 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($11049), "");
                        var _rett$18 = Kind$Term$ref$((_tnam$17 + ("." + $11053)));
                        var _pars$19 = Kind$Term$check$expand$set$count_params$($11050);
                        var _rett$20 = Nat$for$(_rett$18, 0n, _pars$19, (_i$20 => _rett$21 => {
                            var $11057 = Kind$Term$app$(_rett$21, Kind$Term$hol$(Bits$e));
                            return $11057;
                        }));
                        var _sele$21 = Kind$Term$check$expand$set$selector$(_fkey$2, _fval$3, $11054, _defs$5, _rett$20);
                        var $11055 = Maybe$some$(Kind$Term$app$(_term$16, _sele$21));
                        var $11052 = $11055;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11058 = Maybe$none;
                        var $11052 = $11058;
                        break;
                };
                var $11048 = $11052;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11059 = Maybe$none;
                var $11048 = $11059;
                break;
        };
        return $11048;
    };
    const Kind$Term$check$expand$set = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$(x0, x1, x2, x3, x4);

    function String$at$(_index$1, _str$2) {
        var String$at$ = (_index$1, _str$2) => ({
            ctr: 'TCO',
            arg: [_index$1, _str$2]
        });
        var String$at = _index$1 => _str$2 => String$at$(_index$1, _str$2);
        var arg = [_index$1, _str$2];
        while (true) {
            let [_index$1, _str$2] = arg;
            var R = (() => {
                var self = _str$2;
                if (self.length === 0) {
                    var $11060 = Maybe$none;
                    return $11060;
                } else {
                    var $11061 = self.charCodeAt(0);
                    var $11062 = self.slice(1);
                    var self = _index$1;
                    if (self === 0n) {
                        var $11064 = Maybe$some$($11061);
                        var $11063 = $11064;
                    } else {
                        var $11065 = (self - 1n);
                        var $11066 = String$at$($11065, $11062);
                        var $11063 = $11066;
                    };
                    return $11063;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$at = x0 => x1 => String$at$(x0, x1);

    function String$last$(_xs$1) {
        var $11067 = String$at$(Nat$pred$(String$length$(_xs$1)), _xs$1);
        return $11067;
    };
    const String$last = x0 => String$last$(x0);

    function Kind$Term$check$expand$ope$(_skip_cmp$1, _oper$2, _arg0$3, _arg1$4, _otyp$5, _defs$6) {
        var self = ((Maybe$default$(String$last$(_oper$2), 120) === 63) && _skip_cmp$1);
        if (self) {
            var $11069 = Maybe$none;
            var $11068 = $11069;
        } else {
            var _type_name$7 = Kind$Term$check$get_name_of_self_type$(_otyp$5, _defs$6);
            var self = _type_name$7;
            switch (self._) {
                case 'Maybe.some':
                    var $11071 = self.value;
                    var self = (_oper$2 === "+");
                    if (self) {
                        var $11073 = Maybe$some$("add");
                        var _oper_name$9 = $11073;
                    } else {
                        var self = (_oper$2 === "-");
                        if (self) {
                            var $11075 = Maybe$some$("sub");
                            var $11074 = $11075;
                        } else {
                            var self = (_oper$2 === "*");
                            if (self) {
                                var $11077 = Maybe$some$("mul");
                                var $11076 = $11077;
                            } else {
                                var self = (_oper$2 === "/");
                                if (self) {
                                    var $11079 = Maybe$some$("div");
                                    var $11078 = $11079;
                                } else {
                                    var self = (_oper$2 === "**");
                                    if (self) {
                                        var $11081 = Maybe$some$("pow");
                                        var $11080 = $11081;
                                    } else {
                                        var self = (_oper$2 === "%");
                                        if (self) {
                                            var $11083 = Maybe$some$("mod");
                                            var $11082 = $11083;
                                        } else {
                                            var self = (_oper$2 === "<?");
                                            if (self) {
                                                var $11085 = Maybe$some$("ltn");
                                                var $11084 = $11085;
                                            } else {
                                                var self = (_oper$2 === "<=?");
                                                if (self) {
                                                    var $11087 = Maybe$some$("lte");
                                                    var $11086 = $11087;
                                                } else {
                                                    var self = (_oper$2 === "=?");
                                                    if (self) {
                                                        var $11089 = Maybe$some$("eql");
                                                        var $11088 = $11089;
                                                    } else {
                                                        var self = (_oper$2 === ">=?");
                                                        if (self) {
                                                            var $11091 = Maybe$some$("gte");
                                                            var $11090 = $11091;
                                                        } else {
                                                            var self = (_oper$2 === ">?");
                                                            if (self) {
                                                                var $11093 = Maybe$some$("gtn");
                                                                var $11092 = $11093;
                                                            } else {
                                                                var self = (_oper$2 === "&&");
                                                                if (self) {
                                                                    var $11095 = Maybe$some$("and");
                                                                    var $11094 = $11095;
                                                                } else {
                                                                    var self = (_oper$2 === "||");
                                                                    if (self) {
                                                                        var $11097 = Maybe$some$("or");
                                                                        var $11096 = $11097;
                                                                    } else {
                                                                        var $11098 = Maybe$none;
                                                                        var $11096 = $11098;
                                                                    };
                                                                    var $11094 = $11096;
                                                                };
                                                                var $11092 = $11094;
                                                            };
                                                            var $11090 = $11092;
                                                        };
                                                        var $11088 = $11090;
                                                    };
                                                    var $11086 = $11088;
                                                };
                                                var $11084 = $11086;
                                            };
                                            var $11082 = $11084;
                                        };
                                        var $11080 = $11082;
                                    };
                                    var $11078 = $11080;
                                };
                                var $11076 = $11078;
                            };
                            var $11074 = $11076;
                        };
                        var _oper_name$9 = $11074;
                    };
                    var self = _oper_name$9;
                    switch (self._) {
                        case 'Maybe.some':
                            var $11099 = self.value;
                            var _term$11 = Kind$Term$ref$(($11071 + ("." + $11099)));
                            var _term$12 = Kind$Term$app$(_term$11, _arg0$3);
                            var _term$13 = Kind$Term$app$(_term$12, _arg1$4);
                            var $11100 = Maybe$some$(_term$13);
                            var $11072 = $11100;
                            break;
                        case 'Maybe.none':
                            var $11101 = Maybe$none;
                            var $11072 = $11101;
                            break;
                    };
                    var $11070 = $11072;
                    break;
                case 'Maybe.none':
                    var $11102 = Maybe$none;
                    var $11070 = $11102;
                    break;
            };
            var $11068 = $11070;
        };
        return $11068;
    };
    const Kind$Term$check$expand$ope = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$expand$ope$(x0, x1, x2, x3, x4, x5);

    function BitsSet$has$(_bits$1, _set$2) {
        var self = (bitsmap_get(_bits$1, _set$2));
        switch (self._) {
            case 'Maybe.none':
                var $11104 = Bool$false;
                var $11103 = $11104;
                break;
            case 'Maybe.some':
                var $11105 = Bool$true;
                var $11103 = $11105;
                break;
        };
        return $11103;
    };
    const BitsSet$has = x0 => x1 => BitsSet$has$(x0, x1);

    function BitsSet$mut$has$(_bits$1, _set$2) {
        var $11106 = BitsSet$has$(_bits$1, _set$2);
        return $11106;
    };
    const BitsSet$mut$has = x0 => x1 => BitsSet$mut$has$(x0, x1);

    function Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2) {
        var Kind$Term$equal$extra_holes$funari$ = (_term$1, _arity$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _arity$2]
        });
        var Kind$Term$equal$extra_holes$funari = _term$1 => _arity$2 => Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2);
        var arg = [_term$1, _arity$2];
        while (true) {
            let [_term$1, _arity$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $11107 = self.name;
                        var $11108 = Maybe$some$(Pair$new$($11107, _arity$2));
                        return $11108;
                    case 'Kind.Term.ref':
                        var $11109 = self.name;
                        var $11110 = Maybe$some$(Pair$new$($11109, _arity$2));
                        return $11110;
                    case 'Kind.Term.app':
                        var $11111 = self.func;
                        var $11112 = Kind$Term$equal$extra_holes$funari$($11111, Nat$succ$(_arity$2));
                        return $11112;
                    case 'Kind.Term.ori':
                        var $11113 = self.expr;
                        var $11114 = Kind$Term$equal$extra_holes$funari$($11113, _arity$2);
                        return $11114;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11115 = Maybe$none;
                        return $11115;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$equal$extra_holes$funari = x0 => x1 => Kind$Term$equal$extra_holes$funari$(x0, x1);

    function Kind$Term$has_holes$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11117 = self.xtyp;
                var $11118 = self.body;
                var $11119 = (Kind$Term$has_holes$($11117) || Kind$Term$has_holes$($11118(Kind$Term$typ)(Kind$Term$typ)));
                var $11116 = $11119;
                break;
            case 'Kind.Term.lam':
                var $11120 = self.body;
                var $11121 = Kind$Term$has_holes$($11120(Kind$Term$typ));
                var $11116 = $11121;
                break;
            case 'Kind.Term.app':
                var $11122 = self.func;
                var $11123 = self.argm;
                var $11124 = (Kind$Term$has_holes$($11122) || Kind$Term$has_holes$($11123));
                var $11116 = $11124;
                break;
            case 'Kind.Term.let':
                var $11125 = self.expr;
                var $11126 = self.body;
                var $11127 = (Kind$Term$has_holes$($11125) || Kind$Term$has_holes$($11126(Kind$Term$typ)));
                var $11116 = $11127;
                break;
            case 'Kind.Term.def':
                var $11128 = self.expr;
                var $11129 = self.body;
                var $11130 = (Kind$Term$has_holes$($11128) || Kind$Term$has_holes$($11129(Kind$Term$typ)));
                var $11116 = $11130;
                break;
            case 'Kind.Term.ann':
                var $11131 = self.term;
                var $11132 = self.type;
                var $11133 = (Kind$Term$has_holes$($11131) || Kind$Term$has_holes$($11132));
                var $11116 = $11133;
                break;
            case 'Kind.Term.ori':
                var $11134 = self.expr;
                var $11135 = Kind$Term$has_holes$($11134);
                var $11116 = $11135;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11136 = Bool$false;
                var $11116 = $11136;
                break;
            case 'Kind.Term.hol':
                var $11137 = Bool$true;
                var $11116 = $11137;
                break;
        };
        return $11116;
    };
    const Kind$Term$has_holes = x0 => Kind$Term$has_holes$(x0);

    function Kind$Term$equal$hole$(_path$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var self = Kind$Term$has_holes$(_term$2);
                if (self) {
                    var $11140 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                    var $11139 = $11140;
                } else {
                    var $11141 = Kind$Check$result$(Maybe$some$(Bool$true), List$cons$(Kind$Error$patch$(_path$1, Kind$Term$normalize$(_term$2, Kind$Map$new)), List$nil));
                    var $11139 = $11141;
                };
                var $11138 = $11139;
                break;
            case 'Kind.Term.hol':
                var $11142 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11138 = $11142;
                break;
        };
        return $11138;
    };
    const Kind$Term$equal$hole = x0 => x1 => Kind$Term$equal$hole$(x0, x1);

    function Kind$Term$equal$extra_holes$filler$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Kind.Term.app':
                var $11144 = self.func;
                var $11145 = self.argm;
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $11147 = self.func;
                        var $11148 = self.argm;
                        var self = Kind$Term$equal$extra_holes$filler$($11144, $11147);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11150 = self.value;
                                var $11151 = self.errors;
                                var self = $11150;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11153 = Kind$Check$result$(Maybe$none, $11151);
                                        var $11152 = $11153;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Term$equal$extra_holes$filler$($11145, $11148);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11155 = self.value;
                                                var $11156 = self.errors;
                                                var $11157 = Kind$Check$result$($11155, List$concat$($11151, $11156));
                                                var $11154 = $11157;
                                                break;
                                        };
                                        var $11152 = $11154;
                                        break;
                                };
                                var $11149 = $11152;
                                break;
                        };
                        var $11146 = $11149;
                        break;
                    case 'Kind.Term.hol':
                        var $11158 = self.path;
                        var self = Kind$Term$equal$hole$($11158, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11160 = self.value;
                                var $11161 = self.errors;
                                var self = $11160;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11163 = Kind$Check$result$(Maybe$none, $11161);
                                        var $11162 = $11163;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11165 = self.value;
                                                var $11166 = self.errors;
                                                var $11167 = Kind$Check$result$($11165, List$concat$($11161, $11166));
                                                var $11164 = $11167;
                                                break;
                                        };
                                        var $11162 = $11164;
                                        break;
                                };
                                var $11159 = $11162;
                                break;
                        };
                        var $11146 = $11159;
                        break;
                    case 'Kind.Term.ori':
                        var $11168 = self.expr;
                        var $11169 = Kind$Term$equal$extra_holes$filler$(_a$1, $11168);
                        var $11146 = $11169;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11170 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11146 = $11170;
                        break;
                };
                var $11143 = $11146;
                break;
            case 'Kind.Term.hol':
                var $11171 = self.path;
                var self = Kind$Term$equal$hole$($11171, _b$2);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11173 = self.value;
                        var $11174 = self.errors;
                        var self = $11173;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11176 = Kind$Check$result$(Maybe$none, $11174);
                                var $11175 = $11176;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11178 = self.value;
                                        var $11179 = self.errors;
                                        var $11180 = Kind$Check$result$($11178, List$concat$($11174, $11179));
                                        var $11177 = $11180;
                                        break;
                                };
                                var $11175 = $11177;
                                break;
                        };
                        var $11172 = $11175;
                        break;
                };
                var $11143 = $11172;
                break;
            case 'Kind.Term.ori':
                var $11181 = self.expr;
                var $11182 = Kind$Term$equal$extra_holes$filler$($11181, _b$2);
                var $11143 = $11182;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.get':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11184 = self.path;
                        var self = Kind$Term$equal$hole$($11184, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11186 = self.value;
                                var $11187 = self.errors;
                                var self = $11186;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11189 = Kind$Check$result$(Maybe$none, $11187);
                                        var $11188 = $11189;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11191 = self.value;
                                                var $11192 = self.errors;
                                                var $11193 = Kind$Check$result$($11191, List$concat$($11187, $11192));
                                                var $11190 = $11193;
                                                break;
                                        };
                                        var $11188 = $11190;
                                        break;
                                };
                                var $11185 = $11188;
                                break;
                        };
                        var $11183 = $11185;
                        break;
                    case 'Kind.Term.ori':
                        var $11194 = self.expr;
                        var $11195 = Kind$Term$equal$extra_holes$filler$(_a$1, $11194);
                        var $11183 = $11195;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11196 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11183 = $11196;
                        break;
                };
                var $11143 = $11183;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11198 = self.path;
                        var self = Kind$Term$equal$hole$($11198, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11200 = self.value;
                                var $11201 = self.errors;
                                var self = $11200;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11203 = Kind$Check$result$(Maybe$none, $11201);
                                        var $11202 = $11203;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11205 = self.value;
                                                var $11206 = self.errors;
                                                var $11207 = Kind$Check$result$($11205, List$concat$($11201, $11206));
                                                var $11204 = $11207;
                                                break;
                                        };
                                        var $11202 = $11204;
                                        break;
                                };
                                var $11199 = $11202;
                                break;
                        };
                        var $11197 = $11199;
                        break;
                    case 'Kind.Term.ori':
                        var $11208 = self.expr;
                        var $11209 = Kind$Term$equal$extra_holes$filler$(_a$1, $11208);
                        var $11197 = $11209;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11210 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11197 = $11210;
                        break;
                };
                var $11143 = $11197;
                break;
            case 'Kind.Term.typ':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11212 = self.path;
                        var self = Kind$Term$equal$hole$($11212, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11214 = self.value;
                                var $11215 = self.errors;
                                var self = $11214;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11217 = Kind$Check$result$(Maybe$none, $11215);
                                        var $11216 = $11217;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11219 = self.value;
                                                var $11220 = self.errors;
                                                var $11221 = Kind$Check$result$($11219, List$concat$($11215, $11220));
                                                var $11218 = $11221;
                                                break;
                                        };
                                        var $11216 = $11218;
                                        break;
                                };
                                var $11213 = $11216;
                                break;
                        };
                        var $11211 = $11213;
                        break;
                    case 'Kind.Term.ori':
                        var $11222 = self.expr;
                        var $11223 = Kind$Term$equal$extra_holes$filler$(_a$1, $11222);
                        var $11211 = $11223;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11224 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11211 = $11224;
                        break;
                };
                var $11143 = $11211;
                break;
            case 'Kind.Term.all':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11226 = self.path;
                        var self = Kind$Term$equal$hole$($11226, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11228 = self.value;
                                var $11229 = self.errors;
                                var self = $11228;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11231 = Kind$Check$result$(Maybe$none, $11229);
                                        var $11230 = $11231;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11233 = self.value;
                                                var $11234 = self.errors;
                                                var $11235 = Kind$Check$result$($11233, List$concat$($11229, $11234));
                                                var $11232 = $11235;
                                                break;
                                        };
                                        var $11230 = $11232;
                                        break;
                                };
                                var $11227 = $11230;
                                break;
                        };
                        var $11225 = $11227;
                        break;
                    case 'Kind.Term.ori':
                        var $11236 = self.expr;
                        var $11237 = Kind$Term$equal$extra_holes$filler$(_a$1, $11236);
                        var $11225 = $11237;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11238 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11225 = $11238;
                        break;
                };
                var $11143 = $11225;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11240 = self.path;
                        var self = Kind$Term$equal$hole$($11240, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11242 = self.value;
                                var $11243 = self.errors;
                                var self = $11242;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11245 = Kind$Check$result$(Maybe$none, $11243);
                                        var $11244 = $11245;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11247 = self.value;
                                                var $11248 = self.errors;
                                                var $11249 = Kind$Check$result$($11247, List$concat$($11243, $11248));
                                                var $11246 = $11249;
                                                break;
                                        };
                                        var $11244 = $11246;
                                        break;
                                };
                                var $11241 = $11244;
                                break;
                        };
                        var $11239 = $11241;
                        break;
                    case 'Kind.Term.ori':
                        var $11250 = self.expr;
                        var $11251 = Kind$Term$equal$extra_holes$filler$(_a$1, $11250);
                        var $11239 = $11251;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11252 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11239 = $11252;
                        break;
                };
                var $11143 = $11239;
                break;
            case 'Kind.Term.cse':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11254 = self.path;
                        var self = Kind$Term$equal$hole$($11254, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11256 = self.value;
                                var $11257 = self.errors;
                                var self = $11256;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11259 = Kind$Check$result$(Maybe$none, $11257);
                                        var $11258 = $11259;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11261 = self.value;
                                                var $11262 = self.errors;
                                                var $11263 = Kind$Check$result$($11261, List$concat$($11257, $11262));
                                                var $11260 = $11263;
                                                break;
                                        };
                                        var $11258 = $11260;
                                        break;
                                };
                                var $11255 = $11258;
                                break;
                        };
                        var $11253 = $11255;
                        break;
                    case 'Kind.Term.ori':
                        var $11264 = self.expr;
                        var $11265 = Kind$Term$equal$extra_holes$filler$(_a$1, $11264);
                        var $11253 = $11265;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11266 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11253 = $11266;
                        break;
                };
                var $11143 = $11253;
                break;
        };
        return $11143;
    };
    const Kind$Term$equal$extra_holes$filler = x0 => x1 => Kind$Term$equal$extra_holes$filler$(x0, x1);

    function Kind$Term$equal$extra_holes$(_a$1, _b$2) {
        var self = Kind$Term$equal$extra_holes$funari$(_a$1, 0n);
        switch (self._) {
            case 'Maybe.some':
                var $11268 = self.value;
                var self = Kind$Term$equal$extra_holes$funari$(_b$2, 0n);
                switch (self._) {
                    case 'Maybe.some':
                        var $11270 = self.value;
                        var self = $11268;
                        switch (self._) {
                            case 'Pair.new':
                                var $11272 = self.fst;
                                var $11273 = self.snd;
                                var self = $11270;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11275 = self.fst;
                                        var $11276 = self.snd;
                                        var _same_fun$9 = ($11272 === $11275);
                                        var _same_ari$10 = ($11273 === $11276);
                                        var self = (_same_fun$9 && _same_ari$10);
                                        if (self) {
                                            var $11278 = Kind$Term$equal$extra_holes$filler$(_a$1, _b$2);
                                            var $11277 = $11278;
                                        } else {
                                            var $11279 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                            var $11277 = $11279;
                                        };
                                        var $11274 = $11277;
                                        break;
                                };
                                var $11271 = $11274;
                                break;
                        };
                        var $11269 = $11271;
                        break;
                    case 'Maybe.none':
                        var $11280 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11269 = $11280;
                        break;
                };
                var $11267 = $11269;
                break;
            case 'Maybe.none':
                var $11281 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                var $11267 = $11281;
                break;
        };
        return $11267;
    };
    const Kind$Term$equal$extra_holes = x0 => x1 => Kind$Term$equal$extra_holes$(x0, x1);

    function BitsSet$set$(_bits$1, _set$2) {
        var $11282 = (bitsmap_set(_bits$1, Unit$new, _set$2, 'set'));
        return $11282;
    };
    const BitsSet$set = x0 => x1 => BitsSet$set$(x0, x1);

    function BitsSet$mut$set$(_bits$1, _set$2) {
        var $11283 = BitsSet$set$(_bits$1, _set$2);
        return $11283;
    };
    const BitsSet$mut$set = x0 => x1 => BitsSet$mut$set$(x0, x1);

    function Bool$eql$(_a$1, _b$2) {
        var self = _a$1;
        if (self) {
            var $11285 = _b$2;
            var $11284 = $11285;
        } else {
            var $11286 = (!_b$2);
            var $11284 = $11286;
        };
        return $11284;
    };
    const Bool$eql = x0 => x1 => Bool$eql$(x0, x1);

    function Kind$Term$equal$go$(_a$1, _b$2, _defs$3, _lv$4, _seen$5) {
        var _ah$6 = Kind$Term$serialize$(Kind$Term$reduce$(_a$1, Kind$Map$new), _lv$4, Bool$false);
        var _bh$7 = Kind$Term$serialize$(Kind$Term$reduce$(_b$2, Kind$Map$new), _lv$4, Bool$true);
        var self = (_bh$7 === _ah$6);
        if (self) {
            var $11288 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
            var $11287 = $11288;
        } else {
            var _a1$8 = Kind$Term$reduce$(_a$1, _defs$3);
            var _b1$9 = Kind$Term$reduce$(_b$2, _defs$3);
            var _ah$10 = Kind$Term$serialize$(_a1$8, _lv$4, Bool$false);
            var _bh$11 = Kind$Term$serialize$(_b1$9, _lv$4, Bool$true);
            var self = (_bh$11 === _ah$10);
            if (self) {
                var $11290 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11289 = $11290;
            } else {
                var _id$12 = (_bh$11 + _ah$10);
                var self = BitsSet$mut$has$(_id$12, _seen$5);
                if (self) {
                    var self = Kind$Term$equal$extra_holes$(_a$1, _b$2);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11293 = self.value;
                            var $11294 = self.errors;
                            var self = $11293;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11296 = Kind$Check$result$(Maybe$none, $11294);
                                    var $11295 = $11296;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11298 = self.value;
                                            var $11299 = self.errors;
                                            var $11300 = Kind$Check$result$($11298, List$concat$($11294, $11299));
                                            var $11297 = $11300;
                                            break;
                                    };
                                    var $11295 = $11297;
                                    break;
                            };
                            var $11292 = $11295;
                            break;
                    };
                    var $11291 = $11292;
                } else {
                    var self = _a1$8;
                    switch (self._) {
                        case 'Kind.Term.all':
                            var $11302 = self.eras;
                            var $11303 = self.self;
                            var $11304 = self.name;
                            var $11305 = self.xtyp;
                            var $11306 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.all':
                                    var $11308 = self.eras;
                                    var $11309 = self.self;
                                    var $11310 = self.name;
                                    var $11311 = self.xtyp;
                                    var $11312 = self.body;
                                    var _seen$23 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$24 = $11306(Kind$Term$var$($11303, _lv$4))(Kind$Term$var$($11304, Nat$succ$(_lv$4)));
                                    var _b1_body$25 = $11312(Kind$Term$var$($11309, _lv$4))(Kind$Term$var$($11310, Nat$succ$(_lv$4)));
                                    var _eq_self$26 = ($11303 === $11309);
                                    var _eq_eras$27 = Bool$eql$($11302, $11308);
                                    var self = (_eq_self$26 && _eq_eras$27);
                                    if (self) {
                                        var self = Kind$Term$equal$go$($11305, $11311, _defs$3, _lv$4, _seen$23);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11315 = self.value;
                                                var $11316 = self.errors;
                                                var self = $11315;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11318 = self.value;
                                                        var self = Kind$Term$equal$go$(_a1_body$24, _b1_body$25, _defs$3, Nat$succ$(Nat$succ$(_lv$4)), _seen$23);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11320 = self.value;
                                                                var $11321 = self.errors;
                                                                var self = $11320;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $11323 = self.value;
                                                                        var self = Kind$Check$result$(Maybe$some$(($11318 && $11323)), List$nil);
                                                                        switch (self._) {
                                                                            case 'Kind.Check.result':
                                                                                var $11325 = self.value;
                                                                                var $11326 = self.errors;
                                                                                var $11327 = Kind$Check$result$($11325, List$concat$($11321, $11326));
                                                                                var $11324 = $11327;
                                                                                break;
                                                                        };
                                                                        var $11322 = $11324;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $11328 = Kind$Check$result$(Maybe$none, $11321);
                                                                        var $11322 = $11328;
                                                                        break;
                                                                };
                                                                var self = $11322;
                                                                break;
                                                        };
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11329 = self.value;
                                                                var $11330 = self.errors;
                                                                var $11331 = Kind$Check$result$($11329, List$concat$($11316, $11330));
                                                                var $11319 = $11331;
                                                                break;
                                                        };
                                                        var $11317 = $11319;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11332 = Kind$Check$result$(Maybe$none, $11316);
                                                        var $11317 = $11332;
                                                        break;
                                                };
                                                var $11314 = $11317;
                                                break;
                                        };
                                        var $11313 = $11314;
                                    } else {
                                        var $11333 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                        var $11313 = $11333;
                                    };
                                    var $11307 = $11313;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11334 = self.path;
                                    var $11335 = Kind$Term$equal$hole$($11334, _a$1);
                                    var $11307 = $11335;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11336 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11307 = $11336;
                                    break;
                            };
                            var $11301 = $11307;
                            break;
                        case 'Kind.Term.lam':
                            var $11337 = self.name;
                            var $11338 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.lam':
                                    var $11340 = self.name;
                                    var $11341 = self.body;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$18 = $11338(Kind$Term$var$($11337, _lv$4));
                                    var _b1_body$19 = $11341(Kind$Term$var$($11340, _lv$4));
                                    var self = Kind$Term$equal$go$(_a1_body$18, _b1_body$19, _defs$3, Nat$succ$(_lv$4), _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11343 = self.value;
                                            var $11344 = self.errors;
                                            var self = $11343;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11346 = self.value;
                                                    var self = Kind$Check$result$(Maybe$some$($11346), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11348 = self.value;
                                                            var $11349 = self.errors;
                                                            var $11350 = Kind$Check$result$($11348, List$concat$($11344, $11349));
                                                            var $11347 = $11350;
                                                            break;
                                                    };
                                                    var $11345 = $11347;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11351 = Kind$Check$result$(Maybe$none, $11344);
                                                    var $11345 = $11351;
                                                    break;
                                            };
                                            var $11342 = $11345;
                                            break;
                                    };
                                    var $11339 = $11342;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11352 = self.path;
                                    var $11353 = Kind$Term$equal$hole$($11352, _a$1);
                                    var $11339 = $11353;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11354 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11339 = $11354;
                                    break;
                            };
                            var $11301 = $11339;
                            break;
                        case 'Kind.Term.app':
                            var $11355 = self.func;
                            var $11356 = self.argm;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.app':
                                    var $11358 = self.func;
                                    var $11359 = self.argm;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var self = Kind$Term$equal$go$($11355, $11358, _defs$3, _lv$4, _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11361 = self.value;
                                            var $11362 = self.errors;
                                            var self = $11361;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11364 = self.value;
                                                    var self = Kind$Term$equal$go$($11356, $11359, _defs$3, _lv$4, _seen$17);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11366 = self.value;
                                                            var $11367 = self.errors;
                                                            var self = $11366;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11369 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11364 && $11369)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11371 = self.value;
                                                                            var $11372 = self.errors;
                                                                            var $11373 = Kind$Check$result$($11371, List$concat$($11367, $11372));
                                                                            var $11370 = $11373;
                                                                            break;
                                                                    };
                                                                    var $11368 = $11370;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11374 = Kind$Check$result$(Maybe$none, $11367);
                                                                    var $11368 = $11374;
                                                                    break;
                                                            };
                                                            var self = $11368;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11375 = self.value;
                                                            var $11376 = self.errors;
                                                            var $11377 = Kind$Check$result$($11375, List$concat$($11362, $11376));
                                                            var $11365 = $11377;
                                                            break;
                                                    };
                                                    var $11363 = $11365;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11378 = Kind$Check$result$(Maybe$none, $11362);
                                                    var $11363 = $11378;
                                                    break;
                                            };
                                            var $11360 = $11363;
                                            break;
                                    };
                                    var $11357 = $11360;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11379 = self.path;
                                    var $11380 = Kind$Term$equal$hole$($11379, _a$1);
                                    var $11357 = $11380;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11381 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11357 = $11381;
                                    break;
                            };
                            var $11301 = $11357;
                            break;
                        case 'Kind.Term.let':
                            var $11382 = self.name;
                            var $11383 = self.expr;
                            var $11384 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.let':
                                    var $11386 = self.name;
                                    var $11387 = self.expr;
                                    var $11388 = self.body;
                                    var _seen$19 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$20 = $11384(Kind$Term$var$($11382, _lv$4));
                                    var _b1_body$21 = $11388(Kind$Term$var$($11386, _lv$4));
                                    var self = Kind$Term$equal$go$($11383, $11387, _defs$3, _lv$4, _seen$19);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11390 = self.value;
                                            var $11391 = self.errors;
                                            var self = $11390;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11393 = self.value;
                                                    var self = Kind$Term$equal$go$(_a1_body$20, _b1_body$21, _defs$3, Nat$succ$(_lv$4), _seen$19);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11395 = self.value;
                                                            var $11396 = self.errors;
                                                            var self = $11395;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11398 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11393 && $11398)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11400 = self.value;
                                                                            var $11401 = self.errors;
                                                                            var $11402 = Kind$Check$result$($11400, List$concat$($11396, $11401));
                                                                            var $11399 = $11402;
                                                                            break;
                                                                    };
                                                                    var $11397 = $11399;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11403 = Kind$Check$result$(Maybe$none, $11396);
                                                                    var $11397 = $11403;
                                                                    break;
                                                            };
                                                            var self = $11397;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11404 = self.value;
                                                            var $11405 = self.errors;
                                                            var $11406 = Kind$Check$result$($11404, List$concat$($11391, $11405));
                                                            var $11394 = $11406;
                                                            break;
                                                    };
                                                    var $11392 = $11394;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11407 = Kind$Check$result$(Maybe$none, $11391);
                                                    var $11392 = $11407;
                                                    break;
                                            };
                                            var $11389 = $11392;
                                            break;
                                    };
                                    var $11385 = $11389;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11408 = self.path;
                                    var $11409 = Kind$Term$equal$hole$($11408, _a$1);
                                    var $11385 = $11409;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11410 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11385 = $11410;
                                    break;
                            };
                            var $11301 = $11385;
                            break;
                        case 'Kind.Term.hol':
                            var $11411 = self.path;
                            var $11412 = Kind$Term$equal$hole$($11411, _b$2);
                            var $11301 = $11412;
                            break;
                        case 'Kind.Term.var':
                        case 'Kind.Term.get':
                        case 'Kind.Term.ori':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11414 = self.path;
                                    var $11415 = Kind$Term$equal$hole$($11414, _a$1);
                                    var $11413 = $11415;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11416 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11413 = $11416;
                                    break;
                            };
                            var $11301 = $11413;
                            break;
                        case 'Kind.Term.ref':
                        case 'Kind.Term.nat':
                        case 'Kind.Term.chr':
                        case 'Kind.Term.str':
                        case 'Kind.Term.new':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11418 = self.path;
                                    var $11419 = Kind$Term$equal$hole$($11418, _a$1);
                                    var $11417 = $11419;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11420 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11417 = $11420;
                                    break;
                            };
                            var $11301 = $11417;
                            break;
                        case 'Kind.Term.typ':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11422 = self.path;
                                    var $11423 = Kind$Term$equal$hole$($11422, _a$1);
                                    var $11421 = $11423;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11424 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11421 = $11424;
                                    break;
                            };
                            var $11301 = $11421;
                            break;
                        case 'Kind.Term.def':
                        case 'Kind.Term.ann':
                        case 'Kind.Term.gol':
                        case 'Kind.Term.num':
                        case 'Kind.Term.set':
                        case 'Kind.Term.ope':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11426 = self.path;
                                    var $11427 = Kind$Term$equal$hole$($11426, _a$1);
                                    var $11425 = $11427;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11428 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11425 = $11428;
                                    break;
                            };
                            var $11301 = $11425;
                            break;
                        case 'Kind.Term.cse':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11430 = self.path;
                                    var $11431 = Kind$Term$equal$hole$($11430, _a$1);
                                    var $11429 = $11431;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11432 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11429 = $11432;
                                    break;
                            };
                            var $11301 = $11429;
                            break;
                    };
                    var $11291 = $11301;
                };
                var $11289 = $11291;
            };
            var $11287 = $11289;
        };
        return $11287;
    };
    const Kind$Term$equal$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$equal$go$(x0, x1, x2, x3, x4);
    const BitsSet$new = BitsMap$new;

    function BitsSet$mut$new$(_a$1) {
        var $11433 = BitsSet$new;
        return $11433;
    };
    const BitsSet$mut$new = x0 => BitsSet$mut$new$(x0);

    function Kind$Term$check$(_term$1, _type$2, _defs$3, _ctx$4, _path$5, _orig$6) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11435 = self.name;
                var $11436 = self.indx;
                var self = List$at_last$($11436, _ctx$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $11438 = self.value;
                        var $11439 = Kind$Check$result$(Maybe$some$((() => {
                            var self = $11438;
                            switch (self._) {
                                case 'Pair.new':
                                    var $11440 = self.snd;
                                    var $11441 = $11440;
                                    return $11441;
                            };
                        })()), List$nil);
                        var $11437 = $11439;
                        break;
                    case 'Maybe.none':
                        var $11442 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11435), List$nil));
                        var $11437 = $11442;
                        break;
                };
                var self = $11437;
                break;
            case 'Kind.Term.ref':
                var $11443 = self.name;
                var self = Kind$Map$get$($11443, _defs$3);
                switch (self._) {
                    case 'Maybe.some':
                        var $11445 = self.value;
                        var self = $11445;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $11447 = self.name;
                                var $11448 = self.term;
                                var $11449 = self.type;
                                var $11450 = self.stat;
                                var _ref_name$18 = $11447;
                                var _ref_type$19 = $11449;
                                var _ref_term$20 = $11448;
                                var _ref_stat$21 = $11450;
                                var self = _ref_stat$21;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                        var $11452 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$waiting$(_ref_name$18), List$nil));
                                        var $11451 = $11452;
                                        break;
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $11453 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$nil);
                                        var $11451 = $11453;
                                        break;
                                    case 'Kind.Status.fail':
                                        var $11454 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$indirect$(_ref_name$18), List$nil));
                                        var $11451 = $11454;
                                        break;
                                };
                                var $11446 = $11451;
                                break;
                        };
                        var $11444 = $11446;
                        break;
                    case 'Maybe.none':
                        var $11455 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11443), List$nil));
                        var $11444 = $11455;
                        break;
                };
                var self = $11444;
                break;
            case 'Kind.Term.all':
                var $11456 = self.self;
                var $11457 = self.name;
                var $11458 = self.xtyp;
                var $11459 = self.body;
                var _ctx_size$12 = (list_length(_ctx$4));
                var _self_var$13 = Kind$Term$var$($11456, _ctx_size$12);
                var _body_var$14 = Kind$Term$var$($11457, Nat$succ$(_ctx_size$12));
                var _body_ctx$15 = List$cons$(Pair$new$($11457, $11458), List$cons$(Pair$new$($11456, _term$1), _ctx$4));
                var self = Kind$Term$check$($11458, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11461 = self.value;
                        var $11462 = self.errors;
                        var self = $11461;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11464 = Kind$Check$result$(Maybe$none, $11462);
                                var $11463 = $11464;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Term$check$($11459(_self_var$13)(_body_var$14), Maybe$some$(Kind$Term$typ), _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11466 = self.value;
                                        var $11467 = self.errors;
                                        var self = $11466;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11469 = Kind$Check$result$(Maybe$none, $11467);
                                                var $11468 = $11469;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11471 = self.value;
                                                        var $11472 = self.errors;
                                                        var $11473 = Kind$Check$result$($11471, List$concat$($11467, $11472));
                                                        var $11470 = $11473;
                                                        break;
                                                };
                                                var $11468 = $11470;
                                                break;
                                        };
                                        var self = $11468;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11474 = self.value;
                                        var $11475 = self.errors;
                                        var $11476 = Kind$Check$result$($11474, List$concat$($11462, $11475));
                                        var $11465 = $11476;
                                        break;
                                };
                                var $11463 = $11465;
                                break;
                        };
                        var $11460 = $11463;
                        break;
                };
                var self = $11460;
                break;
            case 'Kind.Term.lam':
                var $11477 = self.name;
                var $11478 = self.body;
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11480 = self.value;
                        var _typv$10 = Kind$Term$reduce$($11480, _defs$3);
                        var self = _typv$10;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11482 = self.xtyp;
                                var $11483 = self.body;
                                var _ctx_size$16 = (list_length(_ctx$4));
                                var _self_var$17 = _term$1;
                                var _body_var$18 = Kind$Term$var$($11477, _ctx_size$16);
                                var _body_typ$19 = $11483(_self_var$17)(_body_var$18);
                                var _body_ctx$20 = List$cons$(Pair$new$($11477, $11482), _ctx$4);
                                var self = Kind$Term$check$($11478(_body_var$18), Maybe$some$(_body_typ$19), _defs$3, _body_ctx$20, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11485 = self.value;
                                        var $11486 = self.errors;
                                        var self = $11485;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11488 = Kind$Check$result$(Maybe$none, $11486);
                                                var $11487 = $11488;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$($11480), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11490 = self.value;
                                                        var $11491 = self.errors;
                                                        var $11492 = Kind$Check$result$($11490, List$concat$($11486, $11491));
                                                        var $11489 = $11492;
                                                        break;
                                                };
                                                var $11487 = $11489;
                                                break;
                                        };
                                        var $11484 = $11487;
                                        break;
                                };
                                var $11481 = $11484;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.get':
                            case 'Kind.Term.ori':
                                var _expected$13 = Either$left$("function");
                                var _detected$14 = Either$right$($11480);
                                var $11493 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$13, _detected$14, _ctx$4), List$nil));
                                var $11481 = $11493;
                                break;
                            case 'Kind.Term.ref':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.new':
                                var _expected$12 = Either$left$("function");
                                var _detected$13 = Either$right$($11480);
                                var $11494 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$12, _detected$13, _ctx$4), List$nil));
                                var $11481 = $11494;
                                break;
                            case 'Kind.Term.typ':
                                var _expected$11 = Either$left$("function");
                                var _detected$12 = Either$right$($11480);
                                var $11495 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$11, _detected$12, _ctx$4), List$nil));
                                var $11481 = $11495;
                                break;
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.num':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                                var _expected$14 = Either$left$("function");
                                var _detected$15 = Either$right$($11480);
                                var $11496 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$14, _detected$15, _ctx$4), List$nil));
                                var $11481 = $11496;
                                break;
                            case 'Kind.Term.cse':
                                var _expected$17 = Either$left$("function");
                                var _detected$18 = Either$right$($11480);
                                var $11497 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$17, _detected$18, _ctx$4), List$nil));
                                var $11481 = $11497;
                                break;
                        };
                        var $11479 = $11481;
                        break;
                    case 'Maybe.none':
                        var _lam_type$9 = Kind$Term$hol$(Bits$e);
                        var _lam_term$10 = Kind$Term$ann$(Bool$false, _term$1, _lam_type$9);
                        var $11498 = Kind$Term$check$patch$(_lam_term$10, _type$2, _path$5);
                        var $11479 = $11498;
                        break;
                };
                var self = $11479;
                break;
            case 'Kind.Term.app':
                var $11499 = self.func;
                var $11500 = self.argm;
                var self = Kind$Term$check$($11499, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11502 = self.value;
                        var $11503 = self.errors;
                        var self = $11502;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11505 = self.value;
                                var _func_typ$12 = Kind$Term$reduce$($11505, _defs$3);
                                var self = _func_typ$12;
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $11507 = self.xtyp;
                                        var $11508 = self.body;
                                        var self = Kind$Term$check$($11500, Maybe$some$($11507), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11510 = self.value;
                                                var $11511 = self.errors;
                                                var self = $11510;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $11513 = Kind$Check$result$(Maybe$none, $11511);
                                                        var $11512 = $11513;
                                                        break;
                                                    case 'Maybe.some':
                                                        var self = Kind$Check$result$(Maybe$some$($11508($11499)($11500)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11515 = self.value;
                                                                var $11516 = self.errors;
                                                                var $11517 = Kind$Check$result$($11515, List$concat$($11511, $11516));
                                                                var $11514 = $11517;
                                                                break;
                                                        };
                                                        var $11512 = $11514;
                                                        break;
                                                };
                                                var $11509 = $11512;
                                                break;
                                        };
                                        var self = $11509;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.ori':
                                        var _expected$15 = Either$left$("function");
                                        var _detected$16 = Either$right$(_func_typ$12);
                                        var self = $11499;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11519 = self.orig;
                                                var $11520 = Maybe$some$($11519);
                                                var _orig$17 = $11520;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11521 = _orig$6;
                                                var _orig$17 = $11521;
                                                break;
                                        };
                                        var $11518 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$17, _expected$15, _detected$16, _ctx$4), List$nil));
                                        var self = $11518;
                                        break;
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.new':
                                        var _expected$14 = Either$left$("function");
                                        var _detected$15 = Either$right$(_func_typ$12);
                                        var self = $11499;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11523 = self.orig;
                                                var $11524 = Maybe$some$($11523);
                                                var _orig$16 = $11524;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11525 = _orig$6;
                                                var _orig$16 = $11525;
                                                break;
                                        };
                                        var $11522 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$16, _expected$14, _detected$15, _ctx$4), List$nil));
                                        var self = $11522;
                                        break;
                                    case 'Kind.Term.typ':
                                        var _expected$13 = Either$left$("function");
                                        var _detected$14 = Either$right$(_func_typ$12);
                                        var self = $11499;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11527 = self.orig;
                                                var $11528 = Maybe$some$($11527);
                                                var _orig$15 = $11528;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11529 = _orig$6;
                                                var _orig$15 = $11529;
                                                break;
                                        };
                                        var $11526 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$15, _expected$13, _detected$14, _ctx$4), List$nil));
                                        var self = $11526;
                                        break;
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                        var _expected$16 = Either$left$("function");
                                        var _detected$17 = Either$right$(_func_typ$12);
                                        var self = $11499;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11531 = self.orig;
                                                var $11532 = Maybe$some$($11531);
                                                var _orig$18 = $11532;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11533 = _orig$6;
                                                var _orig$18 = $11533;
                                                break;
                                        };
                                        var $11530 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$18, _expected$16, _detected$17, _ctx$4), List$nil));
                                        var self = $11530;
                                        break;
                                    case 'Kind.Term.cse':
                                        var _expected$19 = Either$left$("function");
                                        var _detected$20 = Either$right$(_func_typ$12);
                                        var self = $11499;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11535 = self.orig;
                                                var $11536 = Maybe$some$($11535);
                                                var _orig$21 = $11536;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11537 = _orig$6;
                                                var _orig$21 = $11537;
                                                break;
                                        };
                                        var $11534 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$21, _expected$19, _detected$20, _ctx$4), List$nil));
                                        var self = $11534;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11538 = self.value;
                                        var $11539 = self.errors;
                                        var $11540 = Kind$Check$result$($11538, List$concat$($11503, $11539));
                                        var $11506 = $11540;
                                        break;
                                };
                                var $11504 = $11506;
                                break;
                            case 'Maybe.none':
                                var $11541 = Kind$Check$result$(Maybe$none, $11503);
                                var $11504 = $11541;
                                break;
                        };
                        var $11501 = $11504;
                        break;
                };
                var self = $11501;
                break;
            case 'Kind.Term.let':
                var $11542 = self.name;
                var $11543 = self.expr;
                var $11544 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11543, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11546 = self.value;
                        var $11547 = self.errors;
                        var self = $11546;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11549 = self.value;
                                var _body_val$14 = $11544(Kind$Term$var$($11542, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11542, $11549), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11551 = self.value;
                                        var $11552 = self.errors;
                                        var self = $11551;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11554 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11554), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11556 = self.value;
                                                        var $11557 = self.errors;
                                                        var $11558 = Kind$Check$result$($11556, List$concat$($11552, $11557));
                                                        var $11555 = $11558;
                                                        break;
                                                };
                                                var $11553 = $11555;
                                                break;
                                            case 'Maybe.none':
                                                var $11559 = Kind$Check$result$(Maybe$none, $11552);
                                                var $11553 = $11559;
                                                break;
                                        };
                                        var self = $11553;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11560 = self.value;
                                        var $11561 = self.errors;
                                        var $11562 = Kind$Check$result$($11560, List$concat$($11547, $11561));
                                        var $11550 = $11562;
                                        break;
                                };
                                var $11548 = $11550;
                                break;
                            case 'Maybe.none':
                                var $11563 = Kind$Check$result$(Maybe$none, $11547);
                                var $11548 = $11563;
                                break;
                        };
                        var $11545 = $11548;
                        break;
                };
                var self = $11545;
                break;
            case 'Kind.Term.def':
                var $11564 = self.name;
                var $11565 = self.expr;
                var $11566 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11565, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11568 = self.value;
                        var $11569 = self.errors;
                        var self = $11568;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11571 = self.value;
                                var _body_val$14 = $11566($11565);
                                var _body_ctx$15 = List$cons$(Pair$new$($11564, $11571), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11573 = self.value;
                                        var $11574 = self.errors;
                                        var self = $11573;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11576 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11576), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11578 = self.value;
                                                        var $11579 = self.errors;
                                                        var $11580 = Kind$Check$result$($11578, List$concat$($11574, $11579));
                                                        var $11577 = $11580;
                                                        break;
                                                };
                                                var $11575 = $11577;
                                                break;
                                            case 'Maybe.none':
                                                var $11581 = Kind$Check$result$(Maybe$none, $11574);
                                                var $11575 = $11581;
                                                break;
                                        };
                                        var self = $11575;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11582 = self.value;
                                        var $11583 = self.errors;
                                        var $11584 = Kind$Check$result$($11582, List$concat$($11569, $11583));
                                        var $11572 = $11584;
                                        break;
                                };
                                var $11570 = $11572;
                                break;
                            case 'Maybe.none':
                                var $11585 = Kind$Check$result$(Maybe$none, $11569);
                                var $11570 = $11585;
                                break;
                        };
                        var $11567 = $11570;
                        break;
                };
                var self = $11567;
                break;
            case 'Kind.Term.ann':
                var $11586 = self.done;
                var $11587 = self.term;
                var $11588 = self.type;
                var self = $11586;
                if (self) {
                    var $11590 = Kind$Check$result$(Maybe$some$($11588), List$nil);
                    var $11589 = $11590;
                } else {
                    var self = Kind$Term$check$($11587, Maybe$some$($11588), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11592 = self.value;
                            var $11593 = self.errors;
                            var self = $11592;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11595 = Kind$Check$result$(Maybe$none, $11593);
                                    var $11594 = $11595;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Term$check$($11588, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$Path$Maybe$Builder$i$(_path$5), _orig$6);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11597 = self.value;
                                            var $11598 = self.errors;
                                            var self = $11597;
                                            switch (self._) {
                                                case 'Maybe.none':
                                                    var $11600 = Kind$Check$result$(Maybe$none, $11598);
                                                    var $11599 = $11600;
                                                    break;
                                                case 'Maybe.some':
                                                    var self = Kind$Check$result$(Maybe$some$($11588), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11602 = self.value;
                                                            var $11603 = self.errors;
                                                            var $11604 = Kind$Check$result$($11602, List$concat$($11598, $11603));
                                                            var $11601 = $11604;
                                                            break;
                                                    };
                                                    var $11599 = $11601;
                                                    break;
                                            };
                                            var self = $11599;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11605 = self.value;
                                            var $11606 = self.errors;
                                            var $11607 = Kind$Check$result$($11605, List$concat$($11593, $11606));
                                            var $11596 = $11607;
                                            break;
                                    };
                                    var $11594 = $11596;
                                    break;
                            };
                            var $11591 = $11594;
                            break;
                    };
                    var $11589 = $11591;
                };
                var self = $11589;
                break;
            case 'Kind.Term.gol':
                var $11608 = self.name;
                var $11609 = self.dref;
                var $11610 = self.verb;
                var $11611 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$show_goal$($11608, $11609, $11610, _type$2, _ctx$4), List$nil));
                var self = $11611;
                break;
            case 'Kind.Term.num':
                var $11612 = self.sign;
                var $11613 = self.numb;
                var $11614 = self.frac;
                var _dsug$10 = Kind$Term$check$expand$num$($11612, $11613, $11614, _type$2, _defs$3);
                var $11615 = Kind$Term$check$patch$(_dsug$10, _type$2, _path$5);
                var self = $11615;
                break;
            case 'Kind.Term.cse':
                var $11616 = self.expr;
                var $11617 = self.name;
                var $11618 = self.with;
                var $11619 = self.cses;
                var $11620 = self.moti;
                var _expr$13 = $11616;
                var self = Kind$Term$check$(_expr$13, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11622 = self.value;
                        var $11623 = self.errors;
                        var self = $11622;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11625 = self.value;
                                var self = Kind$Term$check$infer_types_of_with$($11618, _defs$3, _ctx$4, _path$5, _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11627 = self.value;
                                        var $11628 = self.errors;
                                        var self = $11627;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11630 = self.value;
                                                var _dsug$20 = Kind$Term$check$expand$cse$($11616, $11617, $11630, $11619, $11620, $11625, _type$2, _defs$3, _ctx$4);
                                                var self = _dsug$20;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11632 = self.value;
                                                        var $11633 = Kind$Term$check$patch$($11632, _type$2, _path$5);
                                                        var self = $11633;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11634 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                        var self = $11634;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11635 = self.value;
                                                        var $11636 = self.errors;
                                                        var $11637 = Kind$Check$result$($11635, List$concat$($11628, $11636));
                                                        var $11631 = $11637;
                                                        break;
                                                };
                                                var $11629 = $11631;
                                                break;
                                            case 'Maybe.none':
                                                var $11638 = Kind$Check$result$(Maybe$none, $11628);
                                                var $11629 = $11638;
                                                break;
                                        };
                                        var self = $11629;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11639 = self.value;
                                        var $11640 = self.errors;
                                        var $11641 = Kind$Check$result$($11639, List$concat$($11623, $11640));
                                        var $11626 = $11641;
                                        break;
                                };
                                var $11624 = $11626;
                                break;
                            case 'Maybe.none':
                                var $11642 = Kind$Check$result$(Maybe$none, $11623);
                                var $11624 = $11642;
                                break;
                        };
                        var $11621 = $11624;
                        break;
                };
                var self = $11621;
                break;
            case 'Kind.Term.new':
                var $11643 = self.args;
                var _dsug$8 = Kind$Term$check$expand$new$($11643, _type$2, _defs$3);
                var self = _dsug$8;
                switch (self._) {
                    case 'Maybe.some':
                        var $11645 = self.value;
                        var $11646 = Kind$Term$check$patch$($11645, _type$2, _path$5);
                        var $11644 = $11646;
                        break;
                    case 'Maybe.none':
                        var $11647 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                        var $11644 = $11647;
                        break;
                };
                var self = $11644;
                break;
            case 'Kind.Term.get':
                var $11648 = self.expr;
                var $11649 = self.fkey;
                var _expr$9 = $11648;
                var self = Kind$Term$check$(_expr$9, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11651 = self.value;
                        var $11652 = self.errors;
                        var self = $11651;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11654 = self.value;
                                var _dsug$13 = Kind$Term$check$expand$get$($11648, $11649, $11654, _defs$3);
                                var self = _dsug$13;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11656 = self.value;
                                        var $11657 = Kind$Term$check$patch$($11656, _type$2, _path$5);
                                        var self = $11657;
                                        break;
                                    case 'Maybe.none':
                                        var $11658 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11658;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11659 = self.value;
                                        var $11660 = self.errors;
                                        var $11661 = Kind$Check$result$($11659, List$concat$($11652, $11660));
                                        var $11655 = $11661;
                                        break;
                                };
                                var $11653 = $11655;
                                break;
                            case 'Maybe.none':
                                var $11662 = Kind$Check$result$(Maybe$none, $11652);
                                var $11653 = $11662;
                                break;
                        };
                        var $11650 = $11653;
                        break;
                };
                var self = $11650;
                break;
            case 'Kind.Term.set':
                var $11663 = self.expr;
                var $11664 = self.fkey;
                var $11665 = self.fval;
                var _expr$10 = $11663;
                var self = Kind$Term$check$(_expr$10, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11667 = self.value;
                        var $11668 = self.errors;
                        var self = $11667;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11670 = self.value;
                                var _dsug$14 = Kind$Term$check$expand$set$($11663, $11664, $11665, $11670, _defs$3);
                                var self = _dsug$14;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11672 = self.value;
                                        var $11673 = Kind$Term$check$patch$($11672, _type$2, _path$5);
                                        var self = $11673;
                                        break;
                                    case 'Maybe.none':
                                        var $11674 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11674;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11675 = self.value;
                                        var $11676 = self.errors;
                                        var $11677 = Kind$Check$result$($11675, List$concat$($11668, $11676));
                                        var $11671 = $11677;
                                        break;
                                };
                                var $11669 = $11671;
                                break;
                            case 'Maybe.none':
                                var $11678 = Kind$Check$result$(Maybe$none, $11668);
                                var $11669 = $11678;
                                break;
                        };
                        var $11666 = $11669;
                        break;
                };
                var self = $11666;
                break;
            case 'Kind.Term.ope':
                var $11679 = self.name;
                var $11680 = self.arg0;
                var $11681 = self.arg1;
                var _otyp$10 = Maybe$default$(_type$2, Kind$Term$hol$(Bits$e));
                var _dsug$11 = Kind$Term$check$expand$ope$(Bool$true, $11679, $11680, $11681, _otyp$10, _defs$3);
                var self = _dsug$11;
                switch (self._) {
                    case 'Maybe.some':
                        var $11683 = self.value;
                        var $11684 = Kind$Term$check$patch$($11683, _type$2, _path$5);
                        var $11682 = $11684;
                        break;
                    case 'Maybe.none':
                        var self = Kind$Term$check$($11680, Maybe$none, _defs$3, _ctx$4, Kind$Path$Maybe$Builder$o$(_path$5), _orig$6);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11686 = self.value;
                                var $11687 = self.errors;
                                var self = $11686;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11689 = self.value;
                                        var _dsug$15 = Kind$Term$check$expand$ope$(Bool$false, $11679, $11680, $11681, $11689, _defs$3);
                                        var self = _dsug$15;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11691 = self.value;
                                                var $11692 = Kind$Term$check$patch$($11691, _type$2, _path$5);
                                                var self = $11692;
                                                break;
                                            case 'Maybe.none':
                                                var $11693 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                var self = $11693;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11694 = self.value;
                                                var $11695 = self.errors;
                                                var $11696 = Kind$Check$result$($11694, List$concat$($11687, $11695));
                                                var $11690 = $11696;
                                                break;
                                        };
                                        var $11688 = $11690;
                                        break;
                                    case 'Maybe.none':
                                        var $11697 = Kind$Check$result$(Maybe$none, $11687);
                                        var $11688 = $11697;
                                        break;
                                };
                                var $11685 = $11688;
                                break;
                        };
                        var $11682 = $11685;
                        break;
                };
                var self = $11682;
                break;
            case 'Kind.Term.ori':
                var $11698 = self.orig;
                var $11699 = self.expr;
                var $11700 = Kind$Term$check$($11699, _type$2, _defs$3, _ctx$4, _path$5, Maybe$some$($11698));
                var self = $11700;
                break;
            case 'Kind.Term.typ':
                var $11701 = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                var self = $11701;
                break;
            case 'Kind.Term.hol':
                var $11702 = Kind$Check$result$(_type$2, List$nil);
                var self = $11702;
                break;
            case 'Kind.Term.nat':
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11704 = self.value;
                        var _tnam$9 = Kind$Term$check$get_name_of_self_type$($11704, _defs$3);
                        var self = _tnam$9;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11706 = self.value;
                                var self = ($11706 === "Nat");
                                if (self) {
                                    var $11708 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                    var $11707 = $11708;
                                } else {
                                    var _cast$11 = Kind$Term$ref$(($11706 + ".from_nat"));
                                    var _cast$12 = Kind$Term$app$(_cast$11, _term$1);
                                    var $11709 = Kind$Term$check$patch$(_cast$12, _type$2, _path$5);
                                    var $11707 = $11709;
                                };
                                var $11705 = $11707;
                                break;
                            case 'Maybe.none':
                                var $11710 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                var $11705 = $11710;
                                break;
                        };
                        var $11703 = $11705;
                        break;
                    case 'Maybe.none':
                        var $11711 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                        var $11703 = $11711;
                        break;
                };
                var self = $11703;
                break;
            case 'Kind.Term.chr':
                var $11712 = Kind$Term$check$direct$(Kind$Term$ref$("Char"), _defs$3);
                var self = $11712;
                break;
            case 'Kind.Term.str':
                var $11713 = Kind$Term$check$direct$(Kind$Term$ref$("String"), _defs$3);
                var self = $11713;
                break;
        };
        switch (self._) {
            case 'Kind.Check.result':
                var $11714 = self.value;
                var $11715 = self.errors;
                var self = $11714;
                switch (self._) {
                    case 'Maybe.some':
                        var $11717 = self.value;
                        var self = _type$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11719 = self.value;
                                var self = Kind$Term$equal$go$($11719, $11717, _defs$3, (list_length(_ctx$4)), BitsSet$mut$new$(Unit$new));
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11721 = self.value;
                                        var $11722 = self.errors;
                                        var self = $11721;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11724 = self.value;
                                                var self = $11724;
                                                if (self) {
                                                    var $11726 = Kind$Check$result$(Maybe$some$($11719), List$nil);
                                                    var self = $11726;
                                                } else {
                                                    var $11727 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, Either$right$($11719), Either$right$($11717), _ctx$4), List$nil));
                                                    var self = $11727;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11728 = self.value;
                                                        var $11729 = self.errors;
                                                        var $11730 = Kind$Check$result$($11728, List$concat$($11722, $11729));
                                                        var $11725 = $11730;
                                                        break;
                                                };
                                                var $11723 = $11725;
                                                break;
                                            case 'Maybe.none':
                                                var $11731 = Kind$Check$result$(Maybe$none, $11722);
                                                var $11723 = $11731;
                                                break;
                                        };
                                        var $11720 = $11723;
                                        break;
                                };
                                var self = $11720;
                                break;
                            case 'Maybe.none':
                                var $11732 = Kind$Check$result$(Maybe$some$($11717), List$nil);
                                var self = $11732;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11733 = self.value;
                                var $11734 = self.errors;
                                var $11735 = Kind$Check$result$($11733, List$concat$($11715, $11734));
                                var $11718 = $11735;
                                break;
                        };
                        var $11716 = $11718;
                        break;
                    case 'Maybe.none':
                        var $11736 = Kind$Check$result$(Maybe$none, $11715);
                        var $11716 = $11736;
                        break;
                };
                var $11434 = $11716;
                break;
        };
        return $11434;
    };
    const Kind$Term$check = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$(x0, x1, x2, x3, x4, x5);

    function Kind$Path$patch_at$list$(_path$2, _list$3, _cont$4) {
        var self = _path$2;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $11738 = self.slice(0, -1);
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $11740 = self.head;
                        var $11741 = self.tail;
                        var $11742 = List$cons$(_cont$4($11738)($11740), $11741);
                        var $11739 = $11742;
                        break;
                    case 'List.nil':
                        var $11743 = List$nil;
                        var $11739 = $11743;
                        break;
                };
                var $11737 = $11739;
                break;
            case 'i':
                var $11744 = self.slice(0, -1);
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $11746 = self.head;
                        var $11747 = self.tail;
                        var $11748 = List$cons$($11746, Kind$Path$patch_at$list$($11744, $11747, _cont$4));
                        var $11745 = $11748;
                        break;
                    case 'List.nil':
                        var $11749 = List$nil;
                        var $11745 = $11749;
                        break;
                };
                var $11737 = $11745;
                break;
            case 'e':
                var $11750 = List$nil;
                var $11737 = $11750;
                break;
        };
        return $11737;
    };
    const Kind$Path$patch_at$list = x0 => x1 => x2 => Kind$Path$patch_at$list$(x0, x1, x2);

    function Kind$Term$patch_at$(_path$1, _term$2, _fn$3) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.all':
                var $11752 = self.eras;
                var $11753 = self.self;
                var $11754 = self.name;
                var $11755 = self.xtyp;
                var $11756 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11758 = self.slice(0, -1);
                        var $11759 = Kind$Term$all$($11752, $11753, $11754, Kind$Term$patch_at$($11758, $11755, _fn$3), $11756);
                        var $11757 = $11759;
                        break;
                    case 'i':
                        var $11760 = self.slice(0, -1);
                        var $11761 = Kind$Term$all$($11752, $11753, $11754, $11755, (_s$10 => _x$11 => {
                            var $11762 = Kind$Term$patch_at$($11760, $11756(_s$10)(_x$11), _fn$3);
                            return $11762;
                        }));
                        var $11757 = $11761;
                        break;
                    case 'e':
                        var $11763 = _fn$3(_term$2);
                        var $11757 = $11763;
                        break;
                };
                var $11751 = $11757;
                break;
            case 'Kind.Term.lam':
                var $11764 = self.name;
                var $11765 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11767 = _fn$3(_term$2);
                        var $11766 = $11767;
                        break;
                    case 'o':
                    case 'i':
                        var $11768 = Kind$Term$lam$($11764, (_x$7 => {
                            var $11769 = Kind$Term$patch_at$(Bits$tail$(_path$1), $11765(_x$7), _fn$3);
                            return $11769;
                        }));
                        var $11766 = $11768;
                        break;
                };
                var $11751 = $11766;
                break;
            case 'Kind.Term.app':
                var $11770 = self.func;
                var $11771 = self.argm;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11773 = self.slice(0, -1);
                        var $11774 = Kind$Term$app$(Kind$Term$patch_at$($11773, $11770, _fn$3), $11771);
                        var $11772 = $11774;
                        break;
                    case 'i':
                        var $11775 = self.slice(0, -1);
                        var $11776 = Kind$Term$app$($11770, Kind$Term$patch_at$($11775, $11771, _fn$3));
                        var $11772 = $11776;
                        break;
                    case 'e':
                        var $11777 = _fn$3(_term$2);
                        var $11772 = $11777;
                        break;
                };
                var $11751 = $11772;
                break;
            case 'Kind.Term.let':
                var $11778 = self.name;
                var $11779 = self.expr;
                var $11780 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11782 = self.slice(0, -1);
                        var $11783 = Kind$Term$let$($11778, Kind$Term$patch_at$($11782, $11779, _fn$3), $11780);
                        var $11781 = $11783;
                        break;
                    case 'i':
                        var $11784 = self.slice(0, -1);
                        var $11785 = Kind$Term$let$($11778, $11779, (_x$8 => {
                            var $11786 = Kind$Term$patch_at$($11784, $11780(_x$8), _fn$3);
                            return $11786;
                        }));
                        var $11781 = $11785;
                        break;
                    case 'e':
                        var $11787 = _fn$3(_term$2);
                        var $11781 = $11787;
                        break;
                };
                var $11751 = $11781;
                break;
            case 'Kind.Term.def':
                var $11788 = self.name;
                var $11789 = self.expr;
                var $11790 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11792 = self.slice(0, -1);
                        var $11793 = Kind$Term$def$($11788, Kind$Term$patch_at$($11792, $11789, _fn$3), $11790);
                        var $11791 = $11793;
                        break;
                    case 'i':
                        var $11794 = self.slice(0, -1);
                        var $11795 = Kind$Term$def$($11788, $11789, (_x$8 => {
                            var $11796 = Kind$Term$patch_at$($11794, $11790(_x$8), _fn$3);
                            return $11796;
                        }));
                        var $11791 = $11795;
                        break;
                    case 'e':
                        var $11797 = _fn$3(_term$2);
                        var $11791 = $11797;
                        break;
                };
                var $11751 = $11791;
                break;
            case 'Kind.Term.ann':
                var $11798 = self.done;
                var $11799 = self.term;
                var $11800 = self.type;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11802 = self.slice(0, -1);
                        var $11803 = Kind$Term$ann$($11798, Kind$Term$patch_at$($11802, $11799, _fn$3), $11800);
                        var $11801 = $11803;
                        break;
                    case 'i':
                        var $11804 = self.slice(0, -1);
                        var $11805 = Kind$Term$ann$($11798, $11799, Kind$Term$patch_at$($11804, $11800, _fn$3));
                        var $11801 = $11805;
                        break;
                    case 'e':
                        var $11806 = _fn$3(_term$2);
                        var $11801 = $11806;
                        break;
                };
                var $11751 = $11801;
                break;
            case 'Kind.Term.cse':
                var $11807 = self.path;
                var $11808 = self.expr;
                var $11809 = self.name;
                var $11810 = self.with;
                var $11811 = self.cses;
                var $11812 = self.moti;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11814 = self.slice(0, -1);
                        var $11815 = Kind$Term$cse$($11807, Kind$Term$patch_at$($11814, $11808, _fn$3), $11809, $11810, $11811, $11812);
                        var $11813 = $11815;
                        break;
                    case 'e':
                        var $11816 = _fn$3(_term$2);
                        var $11813 = $11816;
                        break;
                    case 'i':
                        var $11817 = _term$2;
                        var $11813 = $11817;
                        break;
                };
                var $11751 = $11813;
                break;
            case 'Kind.Term.new':
                var $11818 = self.args;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11820 = _fn$3(_term$2);
                        var $11819 = $11820;
                        break;
                    case 'o':
                    case 'i':
                        var $11821 = Kind$Term$new$(Kind$Path$patch_at$list$(_path$1, $11818, (_arg_path$6 => _arg$7 => {
                            var $11822 = Kind$Term$patch_at$(_arg_path$6, _arg$7, _fn$3);
                            return $11822;
                        })));
                        var $11819 = $11821;
                        break;
                };
                var $11751 = $11819;
                break;
            case 'Kind.Term.get':
                var $11823 = self.expr;
                var $11824 = self.fkey;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11826 = self.slice(0, -1);
                        var $11827 = Kind$Term$get$(Kind$Term$patch_at$($11826, $11823, _fn$3), $11824);
                        var $11825 = $11827;
                        break;
                    case 'i':
                        var $11828 = self.slice(0, -1);
                        var $11829 = Kind$Term$get$(Kind$Term$patch_at$($11828, $11823, _fn$3), $11824);
                        var $11825 = $11829;
                        break;
                    case 'e':
                        var $11830 = _fn$3(_term$2);
                        var $11825 = $11830;
                        break;
                };
                var $11751 = $11825;
                break;
            case 'Kind.Term.set':
                var $11831 = self.expr;
                var $11832 = self.fkey;
                var $11833 = self.fval;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11835 = self.slice(0, -1);
                        var $11836 = Kind$Term$set$(Kind$Term$patch_at$($11835, $11831, _fn$3), $11832, $11833);
                        var $11834 = $11836;
                        break;
                    case 'i':
                        var $11837 = self.slice(0, -1);
                        var $11838 = Kind$Term$set$($11831, $11832, Kind$Term$patch_at$($11837, $11833, _fn$3));
                        var $11834 = $11838;
                        break;
                    case 'e':
                        var $11839 = _fn$3(_term$2);
                        var $11834 = $11839;
                        break;
                };
                var $11751 = $11834;
                break;
            case 'Kind.Term.ope':
                var $11840 = self.name;
                var $11841 = self.arg0;
                var $11842 = self.arg1;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11844 = self.slice(0, -1);
                        var $11845 = Kind$Term$ope$($11840, Kind$Term$patch_at$($11844, $11841, _fn$3), $11842);
                        var $11843 = $11845;
                        break;
                    case 'i':
                        var $11846 = self.slice(0, -1);
                        var $11847 = Kind$Term$ope$($11840, $11841, Kind$Term$patch_at$($11846, $11842, _fn$3));
                        var $11843 = $11847;
                        break;
                    case 'e':
                        var $11848 = _fn$3(_term$2);
                        var $11843 = $11848;
                        break;
                };
                var $11751 = $11843;
                break;
            case 'Kind.Term.ori':
                var $11849 = self.orig;
                var $11850 = self.expr;
                var $11851 = Kind$Term$ori$($11849, Kind$Term$patch_at$(_path$1, $11850, _fn$3));
                var $11751 = $11851;
                break;
            case 'Kind.Term.var':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11853 = _fn$3(_term$2);
                        var $11852 = $11853;
                        break;
                    case 'o':
                    case 'i':
                        var $11854 = _term$2;
                        var $11852 = $11854;
                        break;
                };
                var $11751 = $11852;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11856 = _fn$3(_term$2);
                        var $11855 = $11856;
                        break;
                    case 'o':
                    case 'i':
                        var $11857 = _term$2;
                        var $11855 = $11857;
                        break;
                };
                var $11751 = $11855;
                break;
            case 'Kind.Term.typ':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11859 = _fn$3(_term$2);
                        var $11858 = $11859;
                        break;
                    case 'o':
                    case 'i':
                        var $11860 = _term$2;
                        var $11858 = $11860;
                        break;
                };
                var $11751 = $11858;
                break;
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11862 = _fn$3(_term$2);
                        var $11861 = $11862;
                        break;
                    case 'o':
                    case 'i':
                        var $11863 = _term$2;
                        var $11861 = $11863;
                        break;
                };
                var $11751 = $11861;
                break;
        };
        return $11751;
    };
    const Kind$Term$patch_at = x0 => x1 => x2 => Kind$Term$patch_at$(x0, x1, x2);

    function Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, _errs$10, _fixd$11) {
        var self = _errs$10;
        switch (self._) {
            case 'List.cons':
                var $11865 = self.head;
                var $11866 = self.tail;
                var self = $11865;
                switch (self._) {
                    case 'Kind.Error.waiting':
                        var $11868 = self.name;
                        var $11869 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                            var $11870 = _m$bind$15;
                            return $11870;
                        }))(Kind$Synth$one$($11868, _defs$9))((_new_defs$15 => {
                            var self = _new_defs$15;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11872 = self.value;
                                    var $11873 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11872, $11866, Bool$true);
                                    var $11871 = $11873;
                                    break;
                                case 'Maybe.none':
                                    var $11874 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11866, _fixd$11);
                                    var $11871 = $11874;
                                    break;
                            };
                            return $11871;
                        }));
                        var $11867 = $11869;
                        break;
                    case 'Kind.Error.patch':
                        var $11875 = self.path;
                        var $11876 = self.term;
                        var self = $11875;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11878 = self.slice(0, -1);
                                var _term$17 = Kind$Term$patch_at$($11878, _term$5, (_x$17 => {
                                    var $11880 = $11876;
                                    return $11880;
                                }));
                                var $11879 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$17, _type$6, _isct$7, _arit$8, _defs$9, $11866, Bool$true);
                                var $11877 = $11879;
                                break;
                            case 'i':
                                var $11881 = self.slice(0, -1);
                                var _type$17 = Kind$Term$patch_at$($11881, _type$6, (_x$17 => {
                                    var $11883 = $11876;
                                    return $11883;
                                }));
                                var $11882 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$17, _isct$7, _arit$8, _defs$9, $11866, Bool$true);
                                var $11877 = $11882;
                                break;
                            case 'e':
                                var $11884 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                    var $11885 = _m$pure$17;
                                    return $11885;
                                }))(Maybe$none);
                                var $11877 = $11884;
                                break;
                        };
                        var $11867 = $11877;
                        break;
                    case 'Kind.Error.undefined_reference':
                        var $11886 = self.name;
                        var $11887 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                            var $11888 = _m$bind$16;
                            return $11888;
                        }))(Kind$Synth$one$($11886, _defs$9))((_new_defs$16 => {
                            var self = _new_defs$16;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11890 = self.value;
                                    var $11891 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11890, $11866, Bool$true);
                                    var $11889 = $11891;
                                    break;
                                case 'Maybe.none':
                                    var $11892 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11866, _fixd$11);
                                    var $11889 = $11892;
                                    break;
                            };
                            return $11889;
                        }));
                        var $11867 = $11887;
                        break;
                    case 'Kind.Error.type_mismatch':
                    case 'Kind.Error.show_goal':
                    case 'Kind.Error.indirect':
                    case 'Kind.Error.cant_infer':
                        var $11893 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11866, _fixd$11);
                        var $11867 = $11893;
                        break;
                };
                var $11864 = $11867;
                break;
            case 'List.nil':
                var self = _fixd$11;
                if (self) {
                    var _type$12 = Kind$Term$bind$(List$nil, (_x$12 => {
                        var $11896 = (_x$12 + '1');
                        return $11896;
                    }), _type$6);
                    var _term$13 = Kind$Term$bind$(List$nil, (_x$13 => {
                        var $11897 = (_x$13 + '0');
                        return $11897;
                    }), _term$5);
                    var _defs$14 = Kind$Map$set$(_name$4, Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$13, _type$12, _isct$7, _arit$8, Kind$Status$init), _defs$9);
                    var $11895 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                        var $11898 = _m$pure$16;
                        return $11898;
                    }))(Maybe$some$(_defs$14));
                    var $11894 = $11895;
                } else {
                    var $11899 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                        var $11900 = _m$pure$13;
                        return $11900;
                    }))(Maybe$none);
                    var $11894 = $11899;
                };
                var $11864 = $11894;
                break;
        };
        return $11864;
    };
    const Kind$Synth$fix = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => Kind$Synth$fix$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);

    function Kind$Status$fail$(_errors$1) {
        var $11901 = ({
            _: 'Kind.Status.fail',
            'errors': _errors$1
        });
        return $11901;
    };
    const Kind$Status$fail = x0 => Kind$Status$fail$(x0);

    function Kind$Synth$one$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $11903 = self.value;
                var self = $11903;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11905 = self.file;
                        var $11906 = self.code;
                        var $11907 = self.orig;
                        var $11908 = self.name;
                        var $11909 = self.term;
                        var $11910 = self.type;
                        var $11911 = self.isct;
                        var $11912 = self.arit;
                        var $11913 = self.stat;
                        var _file$13 = $11905;
                        var _code$14 = $11906;
                        var _orig$15 = $11907;
                        var _name$16 = $11908;
                        var _term$17 = $11909;
                        var _type$18 = $11910;
                        var _isct$19 = $11911;
                        var _arit$20 = $11912;
                        var _stat$21 = $11913;
                        var self = _stat$21;
                        switch (self._) {
                            case 'Kind.Status.init':
                                var _defs$22 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Kind$Status$wait), _defs$2);
                                var self = Kind$Term$check$(_type$18, Maybe$some$(Kind$Term$typ), _defs$22, List$nil, Kind$Path$Maybe$Builder$i$(Kind$Path$Maybe$Builder$nil), Maybe$none);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11916 = self.value;
                                        var $11917 = self.errors;
                                        var self = $11916;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11919 = Kind$Check$result$(Maybe$none, $11917);
                                                var $11918 = $11919;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Term$check$(_term$17, Maybe$some$(_type$18), _defs$22, List$nil, Kind$Path$Maybe$Builder$o$(Kind$Path$Maybe$Builder$nil), Maybe$none);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11921 = self.value;
                                                        var $11922 = self.errors;
                                                        var self = $11921;
                                                        switch (self._) {
                                                            case 'Maybe.none':
                                                                var $11924 = Kind$Check$result$(Maybe$none, $11922);
                                                                var $11923 = $11924;
                                                                break;
                                                            case 'Maybe.some':
                                                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                                                switch (self._) {
                                                                    case 'Kind.Check.result':
                                                                        var $11926 = self.value;
                                                                        var $11927 = self.errors;
                                                                        var $11928 = Kind$Check$result$($11926, List$concat$($11922, $11927));
                                                                        var $11925 = $11928;
                                                                        break;
                                                                };
                                                                var $11923 = $11925;
                                                                break;
                                                        };
                                                        var self = $11923;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11929 = self.value;
                                                        var $11930 = self.errors;
                                                        var $11931 = Kind$Check$result$($11929, List$concat$($11917, $11930));
                                                        var $11920 = $11931;
                                                        break;
                                                };
                                                var $11918 = $11920;
                                                break;
                                        };
                                        var _checked$23 = $11918;
                                        break;
                                };
                                var self = _checked$23;
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11932 = self.errors;
                                        var self = List$is_empty$($11932);
                                        if (self) {
                                            var _defs$26 = Kind$Map$def$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Bool$true, _defs$22);
                                            var $11934 = IO$monad$((_m$bind$27 => _m$pure$28 => {
                                                var $11935 = _m$pure$28;
                                                return $11935;
                                            }))(Maybe$some$(_defs$26));
                                            var $11933 = $11934;
                                        } else {
                                            var $11936 = IO$monad$((_m$bind$26 => _m$pure$27 => {
                                                var $11937 = _m$bind$26;
                                                return $11937;
                                            }))(Kind$Synth$fix$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _defs$22, $11932, Bool$false))((_fixed$26 => {
                                                var self = _fixed$26;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11939 = self.value;
                                                        var $11940 = Kind$Synth$one$(_name$16, $11939);
                                                        var $11938 = $11940;
                                                        break;
                                                    case 'Maybe.none':
                                                        var _stat$27 = Kind$Status$fail$($11932);
                                                        var _defs$28 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _stat$27), _defs$22);
                                                        var $11941 = IO$monad$((_m$bind$29 => _m$pure$30 => {
                                                            var $11942 = _m$pure$30;
                                                            return $11942;
                                                        }))(Maybe$some$(_defs$28));
                                                        var $11938 = $11941;
                                                        break;
                                                };
                                                return $11938;
                                            }));
                                            var $11933 = $11936;
                                        };
                                        var $11915 = $11933;
                                        break;
                                };
                                var $11914 = $11915;
                                break;
                            case 'Kind.Status.wait':
                                var $11943 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                    var $11944 = _m$pure$23;
                                    return $11944;
                                }))(Maybe$some$(_defs$2));
                                var $11914 = $11943;
                                break;
                            case 'Kind.Status.done':
                            case 'Kind.Status.fail':
                                var $11945 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                    var $11946 = _m$pure$24;
                                    return $11946;
                                }))(Maybe$some$(_defs$2));
                                var $11914 = $11945;
                                break;
                        };
                        var $11904 = $11914;
                        break;
                };
                var $11902 = $11904;
                break;
            case 'Maybe.none':
                var $11947 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $11948 = _m$bind$3;
                    return $11948;
                }))(IO$get_time)((_time_a$3 => {
                    var $11949 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $11950 = _m$bind$4;
                        return $11950;
                    }))(Kind$Synth$load$(_name$1, _defs$2))((_loaded$4 => {
                        var self = _loaded$4;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11952 = self.value;
                                var $11953 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $11954 = _m$bind$6;
                                    return $11954;
                                }))(IO$get_time)((_time_b$6 => {
                                    var $11955 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $11956 = _m$bind$7;
                                        return $11956;
                                    }))(Kind$Synth$one$(_name$1, $11952))((_result$7 => {
                                        var $11957 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $11958 = _m$bind$8;
                                            return $11958;
                                        }))(IO$get_time)((_time_c$8 => {
                                            var $11959 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $11960 = _m$pure$10;
                                                return $11960;
                                            }))(_result$7);
                                            return $11959;
                                        }));
                                        return $11957;
                                    }));
                                    return $11955;
                                }));
                                var $11951 = $11953;
                                break;
                            case 'Maybe.none':
                                var $11961 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                    var $11962 = _m$pure$6;
                                    return $11962;
                                }))(Maybe$none);
                                var $11951 = $11961;
                                break;
                        };
                        return $11951;
                    }));
                    return $11949;
                }));
                var $11902 = $11947;
                break;
        };
        return $11902;
    };
    const Kind$Synth$one = x0 => x1 => Kind$Synth$one$(x0, x1);

    function BitsMap$from_list$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $11964 = self.head;
                var $11965 = self.tail;
                var self = $11964;
                switch (self._) {
                    case 'Pair.new':
                        var $11967 = self.fst;
                        var $11968 = self.snd;
                        var $11969 = (bitsmap_set($11967, $11968, BitsMap$from_list$($11965), 'set'));
                        var $11966 = $11969;
                        break;
                };
                var $11963 = $11966;
                break;
            case 'List.nil':
                var $11970 = BitsMap$new;
                var $11963 = $11970;
                break;
        };
        return $11963;
    };
    const BitsMap$from_list = x0 => BitsMap$from_list$(x0);
    const Kind$Term$inline$names = (() => {
        var _inl$1 = List$cons$("Monad.pure", List$cons$("Monad.bind", List$cons$("Monad.new", List$cons$("Parser.monad", List$cons$("Parser.bind", List$cons$("Parser.pure", List$cons$("Kind.Check.pure", List$cons$("Kind.Check.bind", List$cons$("Kind.Check.monad", List$cons$("Kind.Check.value", List$cons$("Kind.Check.none", List$nil)))))))))));
        var _kvs$2 = List$mapped$(_inl$1, (_x$2 => {
            var $11972 = Pair$new$((kind_name_to_bits(_x$2)), Unit$new);
            return $11972;
        }));
        var $11971 = BitsMap$from_list$(_kvs$2);
        return $11971;
    })();

    function Kind$Term$inline$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $11974 = self.name;
                var _inli$4 = BitsSet$has$((kind_name_to_bits($11974)), Kind$Term$inline$names);
                var self = _inli$4;
                if (self) {
                    var self = Kind$Map$get$($11974, _defs$2);
                    switch (self._) {
                        case 'Maybe.some':
                            var $11977 = self.value;
                            var self = $11977;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $11979 = self.term;
                                    var $11980 = Kind$Term$inline$reduce$($11979, _defs$2);
                                    var $11978 = $11980;
                                    break;
                            };
                            var $11976 = $11978;
                            break;
                        case 'Maybe.none':
                            var $11981 = Kind$Term$ref$($11974);
                            var $11976 = $11981;
                            break;
                    };
                    var $11975 = $11976;
                } else {
                    var $11982 = _term$1;
                    var $11975 = $11982;
                };
                var $11973 = $11975;
                break;
            case 'Kind.Term.app':
                var $11983 = self.func;
                var $11984 = self.argm;
                var _func$5 = Kind$Term$inline$reduce$($11983, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11986 = self.body;
                        var $11987 = Kind$Term$inline$reduce$($11986($11984), _defs$2);
                        var $11985 = $11987;
                        break;
                    case 'Kind.Term.let':
                        var $11988 = self.name;
                        var $11989 = self.expr;
                        var $11990 = self.body;
                        var $11991 = Kind$Term$let$($11988, $11989, (_x$9 => {
                            var $11992 = Kind$Term$inline$reduce$(Kind$Term$app$($11990(_x$9), $11984), _defs$2);
                            return $11992;
                        }));
                        var $11985 = $11991;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11993 = _term$1;
                        var $11985 = $11993;
                        break;
                };
                var $11973 = $11985;
                break;
            case 'Kind.Term.ori':
                var $11994 = self.expr;
                var $11995 = Kind$Term$inline$reduce$($11994, _defs$2);
                var $11973 = $11995;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11996 = _term$1;
                var $11973 = $11996;
                break;
        };
        return $11973;
    };
    const Kind$Term$inline$reduce = x0 => x1 => Kind$Term$inline$reduce$(x0, x1);

    function Kind$Term$inline$(_term$1, _defs$2) {
        var self = Kind$Term$inline$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $11998 = self.name;
                var $11999 = self.indx;
                var $12000 = Kind$Term$var$($11998, $11999);
                var $11997 = $12000;
                break;
            case 'Kind.Term.ref':
                var $12001 = self.name;
                var $12002 = Kind$Term$ref$($12001);
                var $11997 = $12002;
                break;
            case 'Kind.Term.all':
                var $12003 = self.eras;
                var $12004 = self.self;
                var $12005 = self.name;
                var $12006 = self.xtyp;
                var $12007 = self.body;
                var $12008 = Kind$Term$all$($12003, $12004, $12005, Kind$Term$inline$($12006, _defs$2), (_s$8 => _x$9 => {
                    var $12009 = Kind$Term$inline$($12007(_s$8)(_x$9), _defs$2);
                    return $12009;
                }));
                var $11997 = $12008;
                break;
            case 'Kind.Term.lam':
                var $12010 = self.name;
                var $12011 = self.body;
                var $12012 = Kind$Term$lam$($12010, (_x$5 => {
                    var $12013 = Kind$Term$inline$($12011(_x$5), _defs$2);
                    return $12013;
                }));
                var $11997 = $12012;
                break;
            case 'Kind.Term.app':
                var $12014 = self.func;
                var $12015 = self.argm;
                var $12016 = Kind$Term$app$(Kind$Term$inline$($12014, _defs$2), Kind$Term$inline$($12015, _defs$2));
                var $11997 = $12016;
                break;
            case 'Kind.Term.let':
                var $12017 = self.name;
                var $12018 = self.expr;
                var $12019 = self.body;
                var $12020 = Kind$Term$let$($12017, Kind$Term$inline$($12018, _defs$2), (_x$6 => {
                    var $12021 = Kind$Term$inline$($12019(_x$6), _defs$2);
                    return $12021;
                }));
                var $11997 = $12020;
                break;
            case 'Kind.Term.def':
                var $12022 = self.name;
                var $12023 = self.expr;
                var $12024 = self.body;
                var $12025 = Kind$Term$def$($12022, Kind$Term$inline$($12023, _defs$2), (_x$6 => {
                    var $12026 = Kind$Term$inline$($12024(_x$6), _defs$2);
                    return $12026;
                }));
                var $11997 = $12025;
                break;
            case 'Kind.Term.ann':
                var $12027 = self.done;
                var $12028 = self.term;
                var $12029 = self.type;
                var $12030 = Kind$Term$ann$($12027, Kind$Term$inline$($12028, _defs$2), Kind$Term$inline$($12029, _defs$2));
                var $11997 = $12030;
                break;
            case 'Kind.Term.gol':
                var $12031 = self.name;
                var $12032 = self.dref;
                var $12033 = self.verb;
                var $12034 = Kind$Term$gol$($12031, $12032, $12033);
                var $11997 = $12034;
                break;
            case 'Kind.Term.hol':
                var $12035 = self.path;
                var $12036 = Kind$Term$hol$($12035);
                var $11997 = $12036;
                break;
            case 'Kind.Term.nat':
                var $12037 = self.natx;
                var $12038 = Kind$Term$nat$($12037);
                var $11997 = $12038;
                break;
            case 'Kind.Term.chr':
                var $12039 = self.chrx;
                var $12040 = Kind$Term$chr$($12039);
                var $11997 = $12040;
                break;
            case 'Kind.Term.str':
                var $12041 = self.strx;
                var $12042 = Kind$Term$str$($12041);
                var $11997 = $12042;
                break;
            case 'Kind.Term.ori':
                var $12043 = self.expr;
                var $12044 = Kind$Term$inline$($12043, _defs$2);
                var $11997 = $12044;
                break;
            case 'Kind.Term.typ':
                var $12045 = Kind$Term$typ;
                var $11997 = $12045;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $12046 = _term$1;
                var $11997 = $12046;
                break;
        };
        return $11997;
    };
    const Kind$Term$inline = x0 => x1 => Kind$Term$inline$(x0, x1);

    function BitsMap$values$go$(_xs$2, _list$3) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $12048 = self.val;
                var $12049 = self.lft;
                var $12050 = self.rgt;
                var self = $12048;
                switch (self._) {
                    case 'Maybe.some':
                        var $12052 = self.value;
                        var $12053 = List$cons$($12052, _list$3);
                        var _list0$7 = $12053;
                        break;
                    case 'Maybe.none':
                        var $12054 = _list$3;
                        var _list0$7 = $12054;
                        break;
                };
                var _list1$8 = BitsMap$values$go$($12049, _list0$7);
                var _list2$9 = BitsMap$values$go$($12050, _list1$8);
                var $12051 = _list2$9;
                var $12047 = $12051;
                break;
            case 'BitsMap.new':
                var $12055 = _list$3;
                var $12047 = $12055;
                break;
        };
        return $12047;
    };
    const BitsMap$values$go = x0 => x1 => BitsMap$values$go$(x0, x1);

    function BitsMap$values$(_xs$2) {
        var $12056 = BitsMap$values$go$(_xs$2, List$nil);
        return $12056;
    };
    const BitsMap$values = x0 => BitsMap$values$(x0);

    function Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4) {
        var Kind$Core$var_name$ = (_indx$1, _name$2, _brui$3, _vars$4) => ({
            ctr: 'TCO',
            arg: [_indx$1, _name$2, _brui$3, _vars$4]
        });
        var Kind$Core$var_name = _indx$1 => _name$2 => _brui$3 => _vars$4 => Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4);
        var arg = [_indx$1, _name$2, _brui$3, _vars$4];
        while (true) {
            let [_indx$1, _name$2, _brui$3, _vars$4] = arg;
            var R = (() => {
                var self = _indx$1;
                if (self === 0n) {
                    var self = _brui$3;
                    if (self === 0n) {
                        var $12058 = _name$2;
                        var $12057 = $12058;
                    } else {
                        var $12059 = (self - 1n);
                        var $12060 = (_name$2 + ("^" + Nat$show$(_brui$3)));
                        var $12057 = $12060;
                    };
                    return $12057;
                } else {
                    var $12061 = (self - 1n);
                    var self = _vars$4;
                    switch (self._) {
                        case 'List.cons':
                            var $12063 = self.head;
                            var $12064 = self.tail;
                            var self = (_name$2 === $12063);
                            if (self) {
                                var $12066 = Nat$succ$(_brui$3);
                                var _brui$8 = $12066;
                            } else {
                                var $12067 = _brui$3;
                                var _brui$8 = $12067;
                            };
                            var $12065 = Kind$Core$var_name$($12061, _name$2, _brui$8, $12064);
                            var $12062 = $12065;
                            break;
                        case 'List.nil':
                            var $12068 = "unbound";
                            var $12062 = $12068;
                            break;
                    };
                    return $12062;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$var_name = x0 => x1 => x2 => x3 => Kind$Core$var_name$(x0, x1, x2, x3);

    function Kind$Name$show$(_name$1) {
        var $12069 = _name$1;
        return $12069;
    };
    const Kind$Name$show = x0 => Kind$Name$show$(x0);

    function Bits$to_nat$(_b$1) {
        var self = _b$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $12071 = self.slice(0, -1);
                var $12072 = (2n * Bits$to_nat$($12071));
                var $12070 = $12072;
                break;
            case 'i':
                var $12073 = self.slice(0, -1);
                var $12074 = Nat$succ$((2n * Bits$to_nat$($12073)));
                var $12070 = $12074;
                break;
            case 'e':
                var $12075 = 0n;
                var $12070 = $12075;
                break;
        };
        return $12070;
    };
    const Bits$to_nat = x0 => Bits$to_nat$(x0);

    function U16$show_hex$(_a$1) {
        var self = _a$1;
        switch ('u16') {
            case 'u16':
                var $12077 = u16_to_word(self);
                var $12078 = Nat$to_string_base$(16n, Bits$to_nat$(Word$to_bits$($12077)));
                var $12076 = $12078;
                break;
        };
        return $12076;
    };
    const U16$show_hex = x0 => U16$show_hex$(x0);

    function Kind$Code$escape$char$(_chr$1) {
        var self = (_chr$1 === Kind$Code$backslash);
        if (self) {
            var $12080 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
            var $12079 = $12080;
        } else {
            var self = (_chr$1 === 34);
            if (self) {
                var $12082 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                var $12081 = $12082;
            } else {
                var self = (_chr$1 === 39);
                if (self) {
                    var $12084 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                    var $12083 = $12084;
                } else {
                    var self = U16$btw$(32, _chr$1, 126);
                    if (self) {
                        var $12086 = String$cons$(_chr$1, String$nil);
                        var $12085 = $12086;
                    } else {
                        var $12087 = (String$cons$(Kind$Code$backslash, String$nil) + ("u{" + (U16$show_hex$(_chr$1) + "}")));
                        var $12085 = $12087;
                    };
                    var $12083 = $12085;
                };
                var $12081 = $12083;
            };
            var $12079 = $12081;
        };
        return $12079;
    };
    const Kind$Code$escape$char = x0 => Kind$Code$escape$char$(x0);

    function Kind$Code$escape$go$(_str$1, _result$2) {
        var Kind$Code$escape$go$ = (_str$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_str$1, _result$2]
        });
        var Kind$Code$escape$go = _str$1 => _result$2 => Kind$Code$escape$go$(_str$1, _result$2);
        var arg = [_str$1, _result$2];
        while (true) {
            let [_str$1, _result$2] = arg;
            var R = (() => {
                var self = _str$1;
                if (self.length === 0) {
                    var $12088 = String$reverse$(_result$2);
                    return $12088;
                } else {
                    var $12089 = self.charCodeAt(0);
                    var $12090 = self.slice(1);
                    var $12091 = Kind$Code$escape$go$($12090, (String$reverse$(Kind$Code$escape$char$($12089)) + _result$2));
                    return $12091;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$escape$go = x0 => x1 => Kind$Code$escape$go$(x0, x1);

    function Kind$Code$escape$(_str$1) {
        var $12092 = Kind$Code$escape$go$(_str$1, "");
        return $12092;
    };
    const Kind$Code$escape = x0 => Kind$Code$escape$(x0);

    function Kind$Core$show$go$(_term$1, _indx$2, _vars$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $12094 = self.name;
                var $12095 = self.indx;
                var $12096 = Kind$Core$var_name$(Nat$pred$((_indx$2 - $12095 <= 0n ? 0n : _indx$2 - $12095)), $12094, 0n, _vars$3);
                var $12093 = $12096;
                break;
            case 'Kind.Term.ref':
                var $12097 = self.name;
                var $12098 = Kind$Name$show$($12097);
                var $12093 = $12098;
                break;
            case 'Kind.Term.all':
                var $12099 = self.eras;
                var $12100 = self.self;
                var $12101 = self.name;
                var $12102 = self.xtyp;
                var $12103 = self.body;
                var _eras$9 = $12099;
                var self = _eras$9;
                if (self) {
                    var $12105 = "%";
                    var _init$10 = $12105;
                } else {
                    var $12106 = "@";
                    var _init$10 = $12106;
                };
                var _self$11 = Kind$Name$show$($12100);
                var _name$12 = Kind$Name$show$($12101);
                var _xtyp$13 = Kind$Core$show$go$($12102, _indx$2, _vars$3);
                var _body$14 = Kind$Core$show$go$($12103(Kind$Term$var$($12100, _indx$2))(Kind$Term$var$($12101, Nat$succ$(_indx$2))), Nat$succ$(Nat$succ$(_indx$2)), List$cons$($12101, List$cons$($12100, _vars$3)));
                var $12104 = String$flatten$(List$cons$(_init$10, List$cons$(_self$11, List$cons$("(", List$cons$(_name$12, List$cons$(":", List$cons$(_xtyp$13, List$cons$(") ", List$cons$(_body$14, List$nil)))))))));
                var $12093 = $12104;
                break;
            case 'Kind.Term.lam':
                var $12107 = self.name;
                var $12108 = self.body;
                var _name$6 = Kind$Name$show$($12107);
                var _body$7 = Kind$Core$show$go$($12108(Kind$Term$var$($12107, _indx$2)), Nat$succ$(_indx$2), List$cons$($12107, _vars$3));
                var $12109 = String$flatten$(List$cons$("#", List$cons$(_name$6, List$cons$(" ", List$cons$(_body$7, List$nil)))));
                var $12093 = $12109;
                break;
            case 'Kind.Term.app':
                var $12110 = self.func;
                var $12111 = self.argm;
                var _func$6 = Kind$Core$show$go$($12110, _indx$2, _vars$3);
                var _argm$7 = Kind$Core$show$go$($12111, _indx$2, _vars$3);
                var $12112 = String$flatten$(List$cons$("(", List$cons$(_func$6, List$cons$(" ", List$cons$(_argm$7, List$cons$(")", List$nil))))));
                var $12093 = $12112;
                break;
            case 'Kind.Term.let':
                var $12113 = self.name;
                var $12114 = self.expr;
                var $12115 = self.body;
                var _name$7 = Kind$Name$show$($12113);
                var _expr$8 = Kind$Core$show$go$($12114, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($12115(Kind$Term$var$($12113, _indx$2)), Nat$succ$(_indx$2), List$cons$($12113, _vars$3));
                var $12116 = String$flatten$(List$cons$("!", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $12093 = $12116;
                break;
            case 'Kind.Term.def':
                var $12117 = self.name;
                var $12118 = self.expr;
                var $12119 = self.body;
                var _name$7 = Kind$Name$show$($12117);
                var _expr$8 = Kind$Core$show$go$($12118, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($12119(Kind$Term$var$($12117, _indx$2)), Nat$succ$(_indx$2), List$cons$($12117, _vars$3));
                var $12120 = String$flatten$(List$cons$("$", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $12093 = $12120;
                break;
            case 'Kind.Term.ann':
                var $12121 = self.term;
                var $12122 = self.type;
                var _term$7 = Kind$Core$show$go$($12121, _indx$2, _vars$3);
                var _type$8 = Kind$Core$show$go$($12122, _indx$2, _vars$3);
                var $12123 = String$flatten$(List$cons$("{", List$cons$(_term$7, List$cons$(":", List$cons$(_type$8, List$cons$("}", List$nil))))));
                var $12093 = $12123;
                break;
            case 'Kind.Term.nat':
                var $12124 = self.natx;
                var $12125 = String$flatten$(List$cons$("+", List$cons$(Nat$show$($12124), List$nil)));
                var $12093 = $12125;
                break;
            case 'Kind.Term.chr':
                var $12126 = self.chrx;
                var $12127 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($12126), List$cons$("\'", List$nil))));
                var $12093 = $12127;
                break;
            case 'Kind.Term.str':
                var $12128 = self.strx;
                var $12129 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($12128), List$cons$("\"", List$nil))));
                var $12093 = $12129;
                break;
            case 'Kind.Term.ori':
                var $12130 = self.expr;
                var $12131 = Kind$Core$show$go$($12130, _indx$2, _vars$3);
                var $12093 = $12131;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $12132 = "*";
                var $12093 = $12132;
                break;
        };
        return $12093;
    };
    const Kind$Core$show$go = x0 => x1 => x2 => Kind$Core$show$go$(x0, x1, x2);

    function Kind$Core$show$(_term$1) {
        var $12133 = Kind$Core$show$go$(_term$1, 0n, List$nil);
        return $12133;
    };
    const Kind$Core$show = x0 => Kind$Core$show$(x0);

    function Kind$Defs$core$(_defs$1) {
        var _result$2 = "";
        var _result$3 = (() => {
            var $12136 = _result$2;
            var $12137 = BitsMap$values$(_defs$1);
            let _result$4 = $12136;
            let _defn$3;
            while ($12137._ === 'List.cons') {
                _defn$3 = $12137.head;
                var self = _defn$3;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $12138 = self.name;
                        var $12139 = self.term;
                        var $12140 = self.type;
                        var $12141 = self.stat;
                        var self = $12141;
                        switch (self._) {
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $12143 = _result$4;
                                var $12142 = $12143;
                                break;
                            case 'Kind.Status.done':
                                var _name$15 = $12138;
                                var _term$16 = Kind$Core$show$($12139);
                                var _type$17 = Kind$Core$show$($12140);
                                var $12144 = String$flatten$(List$cons$(_result$4, List$cons$(_name$15, List$cons$(" : ", List$cons$(_type$17, List$cons$(" = ", List$cons$(_term$16, List$cons$(";\u{a}", List$nil))))))));
                                var $12142 = $12144;
                                break;
                        };
                        var $12136 = $12142;
                        break;
                };
                _result$4 = $12136;
                $12137 = $12137.tail;
            }
            return _result$4;
        })();
        var $12134 = _result$3;
        return $12134;
    };
    const Kind$Defs$core = x0 => Kind$Defs$core$(x0);

    function Kind$api$io$term_to_core$(_name$1) {
        var $12145 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $12146 = _m$bind$2;
            return $12146;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var self = _new_defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $12148 = self.value;
                    var $12149 = $12148;
                    var _defs$3 = $12149;
                    break;
                case 'Maybe.none':
                    var $12150 = Kind$Map$new;
                    var _defs$3 = $12150;
                    break;
            };
            var _defs$4 = BitsMap$map$((_defn$4 => {
                var self = _defn$4;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $12152 = self.file;
                        var $12153 = self.code;
                        var $12154 = self.orig;
                        var $12155 = self.name;
                        var $12156 = self.term;
                        var $12157 = self.type;
                        var $12158 = self.isct;
                        var $12159 = self.arit;
                        var $12160 = self.stat;
                        var _term$14 = Kind$Term$inline$($12156, _defs$3);
                        var _type$15 = Kind$Term$inline$($12157, _defs$3);
                        var $12161 = Kind$Def$new$($12152, $12153, $12154, $12155, _term$14, _type$15, $12158, $12159, $12160);
                        var $12151 = $12161;
                        break;
                };
                return $12151;
            }), _defs$3);
            var $12147 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                var $12162 = _m$pure$6;
                return $12162;
            }))(Kind$Defs$core$(_defs$4));
            return $12147;
        }));
        return $12145;
    };
    const Kind$api$io$term_to_core = x0 => Kind$api$io$term_to_core$(x0);

    function Kind$Comp$Defs$compile$defn$adjust$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12164 = self.file;
                var $12165 = self.code;
                var $12166 = self.orig;
                var $12167 = self.name;
                var $12168 = self.term;
                var $12169 = self.type;
                var $12170 = self.isct;
                var $12171 = self.arit;
                var $12172 = self.stat;
                var _term$12 = Kind$Term$inline$($12168, _defs$2);
                var _type$13 = Kind$Term$inline$($12169, _defs$2);
                var $12173 = Kind$Def$new$($12164, $12165, $12166, $12167, _term$12, _type$13, $12170, $12171, $12172);
                var $12163 = $12173;
                break;
        };
        return $12163;
    };
    const Kind$Comp$Defs$compile$defn$adjust = x0 => x1 => Kind$Comp$Defs$compile$defn$adjust$(x0, x1);

    function Kind$Comp$var$(_name$1) {
        var $12174 = ({
            _: 'Kind.Comp.var',
            'name': _name$1
        });
        return $12174;
    };
    const Kind$Comp$var = x0 => Kind$Comp$var$(x0);
    const Kind$Comp$nil = ({
        _: 'Kind.Comp.nil'
    });

    function Kind$Comp$ref$(_name$1) {
        var $12175 = ({
            _: 'Kind.Comp.ref',
            'name': _name$1
        });
        return $12175;
    };
    const Kind$Comp$ref = x0 => Kind$Comp$ref$(x0);
    const Kind$Comp$Prim$bool = ({
        _: 'Kind.Comp.Prim.bool'
    });
    const Kind$Comp$Prim$nat = ({
        _: 'Kind.Comp.Prim.nat'
    });
    const Kind$Comp$Prim$bits = ({
        _: 'Kind.Comp.Prim.bits'
    });
    const Kind$Comp$Prim$u16 = ({
        _: 'Kind.Comp.Prim.u16'
    });
    const Kind$Comp$Prim$u32 = ({
        _: 'Kind.Comp.Prim.u32'
    });
    const Kind$Comp$Prim$string = ({
        _: 'Kind.Comp.Prim.string'
    });
    const Kind$Comp$Prim$natives = List$cons$(Pair$new$("Bool", Kind$Comp$Prim$bool), List$cons$(Pair$new$("Nat", Kind$Comp$Prim$nat), List$cons$(Pair$new$("Bits", Kind$Comp$Prim$bits), List$cons$(Pair$new$("U16", Kind$Comp$Prim$u16), List$cons$(Pair$new$("U32", Kind$Comp$Prim$u32), List$cons$(Pair$new$("String", Kind$Comp$Prim$string), List$nil))))));

    function Kind$Term$equal$(_a$1, _b$2, _defs$3) {
        var self = Kind$Term$equal$go$(_a$1, _b$2, _defs$3, 0n, BitsSet$new);
        switch (self._) {
            case 'Kind.Check.result':
                var $12177 = self.value;
                var $12178 = Maybe$default$($12177, Bool$false);
                var $12176 = $12178;
                break;
        };
        return $12176;
    };
    const Kind$Term$equal = x0 => x1 => x2 => Kind$Term$equal$(x0, x1, x2);

    function Kind$Comp$compile$prim_of$(_type$1, _defs$2) {
        var _result$3 = Maybe$none;
        var _result$4 = (() => {
            var $12181 = _result$3;
            var $12182 = Kind$Comp$Prim$natives;
            let _result$5 = $12181;
            let _prim$4;
            while ($12182._ === 'List.cons') {
                _prim$4 = $12182.head;
                var self = _prim$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12183 = self.fst;
                        var $12184 = self.snd;
                        var self = _result$5;
                        switch (self._) {
                            case 'Maybe.none':
                                var self = Kind$Term$equal$(_type$1, Kind$Term$ref$($12183), _defs$2);
                                if (self) {
                                    var $12187 = Maybe$some$($12184);
                                    var $12186 = $12187;
                                } else {
                                    var $12188 = Maybe$none;
                                    var $12186 = $12188;
                                };
                                var $12185 = $12186;
                                break;
                            case 'Maybe.some':
                                var $12189 = _result$5;
                                var $12185 = $12189;
                                break;
                        };
                        var $12181 = $12185;
                        break;
                };
                _result$5 = $12181;
                $12182 = $12182.tail;
            }
            return _result$5;
        })();
        var $12179 = _result$4;
        return $12179;
    };
    const Kind$Comp$compile$prim_of = x0 => x1 => Kind$Comp$compile$prim_of$(x0, x1);

    function String$ends_with$(_xs$1, _match$2) {
        var _xs_reserved$3 = String$reverse$(_xs$1);
        var _match_reversed$4 = String$reverse$(_match$2);
        var $12190 = String$starts_with$(_xs_reserved$3, _match_reversed$4);
        return $12190;
    };
    const String$ends_with = x0 => x1 => String$ends_with$(x0, x1);

    function Kind$Comp$compile$adt$get_fields$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12192 = self.eras;
                var $12193 = self.name;
                var $12194 = self.body;
                var _head$7 = $12193;
                var _tail$8 = Kind$Comp$compile$adt$get_fields$($12194(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var self = $12192;
                if (self) {
                    var $12196 = _tail$8;
                    var $12195 = $12196;
                } else {
                    var $12197 = List$cons$(_head$7, _tail$8);
                    var $12195 = $12197;
                };
                var $12191 = $12195;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12198 = List$nil;
                var $12191 = $12198;
                break;
        };
        return $12191;
    };
    const Kind$Comp$compile$adt$get_fields = x0 => Kind$Comp$compile$adt$get_fields$(x0);

    function Kind$Comp$compile$adt$get_constructors$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12200 = self.name;
                var $12201 = self.xtyp;
                var $12202 = self.body;
                var _tail$7 = Kind$Comp$compile$adt$get_constructors$($12202(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var _name$8 = $12200;
                var _flds$9 = Kind$Comp$compile$adt$get_fields$($12201);
                var $12203 = List$cons$(Pair$new$(_name$8, _flds$9), _tail$7);
                var $12199 = $12203;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12204 = List$nil;
                var $12199 = $12204;
                break;
        };
        return $12199;
    };
    const Kind$Comp$compile$adt$get_constructors = x0 => Kind$Comp$compile$adt$get_constructors$(x0);

    function Kind$Comp$Prim$data$(_name$1, _ctrs$2) {
        var $12205 = ({
            _: 'Kind.Comp.Prim.data',
            'name': _name$1,
            'ctrs': _ctrs$2
        });
        return $12205;
    };
    const Kind$Comp$Prim$data = x0 => x1 => Kind$Comp$Prim$data$(x0, x1);

    function Kind$Comp$compile$adt$(_term$1, _defs$2) {
        var _term$3 = Kind$Term$reduce$(_term$1, _defs$2);
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.all':
                var $12207 = self.self;
                var $12208 = self.body;
                var self = String$ends_with$($12207, ".Self");
                if (self) {
                    var _body$9 = $12208(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n));
                    var _data$10 = Kind$Comp$compile$adt$get_constructors$(_body$9);
                    var _name$11 = String$take$((String$length$($12207) - 5n <= 0n ? 0n : String$length$($12207) - 5n), $12207);
                    var $12210 = Maybe$some$(Kind$Comp$Prim$data$(_name$11, _data$10));
                    var $12209 = $12210;
                } else {
                    var $12211 = Maybe$none;
                    var $12209 = $12211;
                };
                var $12206 = $12209;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12212 = Maybe$none;
                var $12206 = $12212;
                break;
        };
        return $12206;
    };
    const Kind$Comp$compile$adt = x0 => x1 => Kind$Comp$compile$adt$(x0, x1);

    function Kind$Comp$eli$(_prim$1, _expr$2) {
        var $12213 = ({
            _: 'Kind.Comp.eli',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12213;
    };
    const Kind$Comp$eli = x0 => x1 => Kind$Comp$eli$(x0, x1);

    function Kind$Comp$app$(_func$1, _argm$2) {
        var $12214 = ({
            _: 'Kind.Comp.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $12214;
    };
    const Kind$Comp$app = x0 => x1 => Kind$Comp$app$(x0, x1);

    function Kind$Comp$let$(_name$1, _expr$2, _body$3) {
        var $12215 = ({
            _: 'Kind.Comp.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $12215;
    };
    const Kind$Comp$let = x0 => x1 => x2 => Kind$Comp$let$(x0, x1, x2);

    function Kind$Comp$nat$(_natx$1) {
        var $12216 = ({
            _: 'Kind.Comp.nat',
            'natx': _natx$1
        });
        return $12216;
    };
    const Kind$Comp$nat = x0 => Kind$Comp$nat$(x0);

    function Kind$Comp$chr$(_chrx$1) {
        var $12217 = ({
            _: 'Kind.Comp.chr',
            'chrx': _chrx$1
        });
        return $12217;
    };
    const Kind$Comp$chr = x0 => Kind$Comp$chr$(x0);

    function Kind$Comp$str$(_strx$1) {
        var $12218 = ({
            _: 'Kind.Comp.str',
            'strx': _strx$1
        });
        return $12218;
    };
    const Kind$Comp$str = x0 => Kind$Comp$str$(x0);

    function Kind$Comp$lam$(_name$1, _body$2) {
        var $12219 = ({
            _: 'Kind.Comp.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $12219;
    };
    const Kind$Comp$lam = x0 => x1 => Kind$Comp$lam$(x0, x1);

    function Kind$Comp$ins$(_prim$1, _expr$2) {
        var $12220 = ({
            _: 'Kind.Comp.ins',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12220;
    };
    const Kind$Comp$ins = x0 => x1 => Kind$Comp$ins$(x0, x1);

    function Kind$Comp$compile$(_term$1, _type$2, _defs$3, _size$4) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $12222 = self.value;
                var _typv$6 = Kind$Term$reduce$($12222, _defs$3);
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $12224 = self.name;
                        var $12225 = self.body;
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $12227 = self.eras;
                                var $12228 = self.xtyp;
                                var $12229 = self.body;
                                var _self_var$14 = Kind$Term$ann$(Bool$true, _term$1, $12222);
                                var _name_uid$15 = ($12224 + ("$" + Nat$show$(_size$4)));
                                var _name_var$16 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$15, (_size$4 + 1n)), $12228);
                                var _body_typ$17 = $12229(_self_var$14)(_name_var$16);
                                var self = Kind$Comp$compile$($12225(_name_var$16), Maybe$some$(_body_typ$17), _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12231 = self.fst;
                                        var self = $12227;
                                        if (self) {
                                            var $12233 = $12231;
                                            var _term_cmp$20 = $12233;
                                        } else {
                                            var $12234 = Kind$Comp$lam$(_name_uid$15, $12231);
                                            var _term_cmp$20 = $12234;
                                        };
                                        var self = Kind$Comp$compile$prim_of$($12222, _defs$3);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $12235 = self.value;
                                                var $12236 = Kind$Comp$ins$($12235, _term_cmp$20);
                                                var _term_cmp$21 = $12236;
                                                break;
                                            case 'Maybe.none':
                                                var self = Kind$Comp$compile$adt$($12222, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12238 = self.value;
                                                        var $12239 = Kind$Comp$ins$($12238, _term_cmp$20);
                                                        var $12237 = $12239;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $12240 = _term_cmp$20;
                                                        var $12237 = $12240;
                                                        break;
                                                };
                                                var _term_cmp$21 = $12237;
                                                break;
                                        };
                                        var $12232 = Pair$new$(_term_cmp$21, $12222);
                                        var $12230 = $12232;
                                        break;
                                };
                                var $12226 = $12230;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12241 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12226 = $12241;
                                break;
                        };
                        var $12223 = $12226;
                        break;
                    case 'Kind.Term.let':
                        var $12242 = self.name;
                        var $12243 = self.expr;
                        var $12244 = self.body;
                        var self = Kind$Comp$compile$($12243, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12246 = self.fst;
                                var $12247 = self.snd;
                                var _name_uid$12 = ($12242 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$13 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$12, (_size$4 + 1n)), $12247);
                                var self = Kind$Comp$compile$($12244(_expr_var$13), _type$2, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12249 = self.fst;
                                        var $12250 = self.snd;
                                        var _term_cmp$16 = Kind$Comp$let$(_name_uid$12, $12246, $12249);
                                        var _term_typ$17 = $12250;
                                        var $12251 = Pair$new$(_term_cmp$16, _term_typ$17);
                                        var $12248 = $12251;
                                        break;
                                };
                                var $12245 = $12248;
                                break;
                        };
                        var $12223 = $12245;
                        break;
                    case 'Kind.Term.ori':
                        var $12252 = self.expr;
                        var $12253 = Kind$Comp$compile$($12252, _type$2, _defs$3, _size$4);
                        var $12223 = $12253;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12255 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12254 = $12255;
                                break;
                            case 'Kind.Term.typ':
                                var $12256 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12254 = $12256;
                                break;
                        };
                        var $12223 = $12254;
                        break;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12258 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12257 = $12258;
                                break;
                            case 'Kind.Term.typ':
                                var $12259 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12257 = $12259;
                                break;
                        };
                        var $12223 = $12257;
                        break;
                    case 'Kind.Term.typ':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12261 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12260 = $12261;
                                break;
                            case 'Kind.Term.typ':
                                var $12262 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12260 = $12262;
                                break;
                        };
                        var $12223 = $12260;
                        break;
                    case 'Kind.Term.all':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12264 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12263 = $12264;
                                break;
                            case 'Kind.Term.typ':
                                var $12265 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12263 = $12265;
                                break;
                        };
                        var $12223 = $12263;
                        break;
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12267 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12266 = $12267;
                                break;
                            case 'Kind.Term.typ':
                                var $12268 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12266 = $12268;
                                break;
                        };
                        var $12223 = $12266;
                        break;
                    case 'Kind.Term.cse':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12270 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12222);
                                var $12269 = $12270;
                                break;
                            case 'Kind.Term.typ':
                                var $12271 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12269 = $12271;
                                break;
                        };
                        var $12223 = $12269;
                        break;
                };
                var $12221 = $12223;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12273 = self.name;
                        var $12274 = self.indx;
                        var $12275 = Pair$new$(Kind$Comp$var$($12273), Kind$Term$var$($12273, $12274));
                        var $12272 = $12275;
                        break;
                    case 'Kind.Term.ref':
                        var $12276 = self.name;
                        var self = Kind$Map$get$($12276, _defs$3);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12278 = self.value;
                                var $12279 = Pair$new$(Kind$Comp$ref$($12276), (() => {
                                    var self = $12278;
                                    switch (self._) {
                                        case 'Kind.Def.new':
                                            var $12280 = self.type;
                                            var $12281 = $12280;
                                            return $12281;
                                    };
                                })());
                                var $12277 = $12279;
                                break;
                            case 'Maybe.none':
                                var $12282 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12277 = $12282;
                                break;
                        };
                        var $12272 = $12277;
                        break;
                    case 'Kind.Term.app':
                        var $12283 = self.func;
                        var $12284 = self.argm;
                        var self = Kind$Comp$compile$($12283, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12286 = self.fst;
                                var $12287 = self.snd;
                                var self = Kind$Term$reduce$($12287, _defs$3);
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $12289 = self.eras;
                                        var $12290 = self.xtyp;
                                        var $12291 = self.body;
                                        var self = Kind$Comp$compile$($12284, Maybe$some$($12290), _defs$3, _size$4);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $12293 = self.fst;
                                                var _term_typ$16 = $12291($12283)($12284);
                                                var self = Kind$Comp$compile$prim_of$($12287, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12295 = self.value;
                                                        var $12296 = Kind$Comp$eli$($12295, $12286);
                                                        var _term_cmp$17 = $12296;
                                                        break;
                                                    case 'Maybe.none':
                                                        var self = Kind$Comp$compile$adt$($12287, _defs$3);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $12298 = self.value;
                                                                var $12299 = Kind$Comp$eli$($12298, $12286);
                                                                var $12297 = $12299;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $12300 = $12286;
                                                                var $12297 = $12300;
                                                                break;
                                                        };
                                                        var _term_cmp$17 = $12297;
                                                        break;
                                                };
                                                var self = $12289;
                                                if (self) {
                                                    var $12301 = _term_cmp$17;
                                                    var _term_cmp$18 = $12301;
                                                } else {
                                                    var $12302 = Kind$Comp$app$(_term_cmp$17, $12293);
                                                    var _term_cmp$18 = $12302;
                                                };
                                                var $12294 = Pair$new$(_term_cmp$18, _term_typ$16);
                                                var $12292 = $12294;
                                                break;
                                        };
                                        var $12288 = $12292;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.typ':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.cse':
                                    case 'Kind.Term.new':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                    case 'Kind.Term.ori':
                                        var $12303 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                        var $12288 = $12303;
                                        break;
                                };
                                var $12285 = $12288;
                                break;
                        };
                        var $12272 = $12285;
                        break;
                    case 'Kind.Term.let':
                        var $12304 = self.name;
                        var $12305 = self.expr;
                        var $12306 = self.body;
                        var self = Kind$Comp$compile$($12305, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12308 = self.fst;
                                var $12309 = self.snd;
                                var _name_uid$10 = ($12304 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$11 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$10, (_size$4 + 1n)), $12309);
                                var self = Kind$Comp$compile$($12306(_expr_var$11), Maybe$none, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12311 = self.fst;
                                        var $12312 = self.snd;
                                        var $12313 = Pair$new$(Kind$Comp$let$(_name_uid$10, $12308, $12311), $12312);
                                        var $12310 = $12313;
                                        break;
                                };
                                var $12307 = $12310;
                                break;
                        };
                        var $12272 = $12307;
                        break;
                    case 'Kind.Term.def':
                        var $12314 = self.expr;
                        var $12315 = self.body;
                        var $12316 = Kind$Comp$compile$($12315($12314), Maybe$none, _defs$3, _size$4);
                        var $12272 = $12316;
                        break;
                    case 'Kind.Term.ann':
                        var $12317 = self.term;
                        var $12318 = self.type;
                        var $12319 = Kind$Comp$compile$($12317, Maybe$some$($12318), _defs$3, _size$4);
                        var $12272 = $12319;
                        break;
                    case 'Kind.Term.nat':
                        var $12320 = self.natx;
                        var $12321 = Pair$new$(Kind$Comp$nat$($12320), Kind$Term$ref$("Nat"));
                        var $12272 = $12321;
                        break;
                    case 'Kind.Term.chr':
                        var $12322 = self.chrx;
                        var $12323 = Pair$new$(Kind$Comp$chr$($12322), Kind$Term$ref$("Char"));
                        var $12272 = $12323;
                        break;
                    case 'Kind.Term.str':
                        var $12324 = self.strx;
                        var $12325 = Pair$new$(Kind$Comp$str$($12324), Kind$Term$ref$("String"));
                        var $12272 = $12325;
                        break;
                    case 'Kind.Term.ori':
                        var $12326 = self.expr;
                        var $12327 = Kind$Comp$compile$($12326, Maybe$none, _defs$3, _size$4);
                        var $12272 = $12327;
                        break;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12328 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                        var $12272 = $12328;
                        break;
                };
                var $12221 = $12272;
                break;
        };
        return $12221;
    };
    const Kind$Comp$compile = x0 => x1 => x2 => x3 => Kind$Comp$compile$(x0, x1, x2, x3);

    function Kind$Comp$Defs$compile$defn$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12330 = self.term;
                var $12331 = self.type;
                var self = Kind$Comp$compile$($12330, Maybe$some$($12331), _defs$2, 0n);
                switch (self._) {
                    case 'Pair.new':
                        var $12333 = self.fst;
                        var $12334 = $12333;
                        var $12332 = $12334;
                        break;
                };
                var $12329 = $12332;
                break;
        };
        return $12329;
    };
    const Kind$Comp$Defs$compile$defn = x0 => x1 => Kind$Comp$Defs$compile$defn$(x0, x1);

    function Kind$Comp$Defs$compile$(_defs$1) {
        var _defs$2 = BitsMap$map$((_x$2 => {
            var $12336 = Kind$Comp$Defs$compile$defn$adjust$(_x$2, _defs$1);
            return $12336;
        }), _defs$1);
        var _defs$3 = BitsMap$map$((_x$3 => {
            var $12337 = Kind$Comp$Defs$compile$defn$(_x$3, _defs$2);
            return $12337;
        }), _defs$2);
        var $12335 = _defs$3;
        return $12335;
    };
    const Kind$Comp$Defs$compile = x0 => Kind$Comp$Defs$compile$(x0);

    function Kind$Comp$dependency_sort$go$(_term$1, _defs$2, _seen$3, _list$4) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.ref':
                var $12339 = self.name;
                var self = Kind$Map$get$($12339, _seen$3);
                switch (self._) {
                    case 'Maybe.none':
                        var self = Kind$Map$get$($12339, _defs$2);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12342 = self.value;
                                var _term$7 = $12342;
                                var _seen$8 = Kind$Map$set$($12339, Unit$new, _seen$3);
                                var self = Kind$Comp$dependency_sort$go$(_term$7, _defs$2, _seen$8, _list$4);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12344 = self.fst;
                                        var $12345 = self.snd;
                                        var _list$11 = List$cons$(Pair$new$($12339, $12342), $12345);
                                        var $12346 = Pair$new$($12344, _list$11);
                                        var $12343 = $12346;
                                        break;
                                };
                                var $12341 = $12343;
                                break;
                            case 'Maybe.none':
                                var $12347 = Pair$new$(_seen$3, _list$4);
                                var $12341 = $12347;
                                break;
                        };
                        var $12340 = $12341;
                        break;
                    case 'Maybe.some':
                        var $12348 = Pair$new$(_seen$3, _list$4);
                        var $12340 = $12348;
                        break;
                };
                var $12338 = $12340;
                break;
            case 'Kind.Comp.lam':
                var $12349 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12349, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12351 = self.fst;
                        var $12352 = self.snd;
                        var $12353 = Pair$new$($12351, $12352);
                        var $12350 = $12353;
                        break;
                };
                var $12338 = $12350;
                break;
            case 'Kind.Comp.app':
                var $12354 = self.func;
                var $12355 = self.argm;
                var self = Kind$Comp$dependency_sort$go$($12354, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12357 = self.fst;
                        var $12358 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12355, _defs$2, $12357, $12358);
                        switch (self._) {
                            case 'Pair.new':
                                var $12360 = self.fst;
                                var $12361 = self.snd;
                                var $12362 = Pair$new$($12360, $12361);
                                var $12359 = $12362;
                                break;
                        };
                        var $12356 = $12359;
                        break;
                };
                var $12338 = $12356;
                break;
            case 'Kind.Comp.let':
                var $12363 = self.expr;
                var $12364 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12363, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12366 = self.fst;
                        var $12367 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12364, _defs$2, $12366, $12367);
                        switch (self._) {
                            case 'Pair.new':
                                var $12369 = self.fst;
                                var $12370 = self.snd;
                                var $12371 = Pair$new$($12369, $12370);
                                var $12368 = $12371;
                                break;
                        };
                        var $12365 = $12368;
                        break;
                };
                var $12338 = $12365;
                break;
            case 'Kind.Comp.eli':
                var $12372 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12372, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12374 = self.fst;
                        var $12375 = self.snd;
                        var $12376 = Pair$new$($12374, $12375);
                        var $12373 = $12376;
                        break;
                };
                var $12338 = $12373;
                break;
            case 'Kind.Comp.ins':
                var $12377 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12377, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12379 = self.fst;
                        var $12380 = self.snd;
                        var $12381 = Pair$new$($12379, $12380);
                        var $12378 = $12381;
                        break;
                };
                var $12338 = $12378;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12382 = Pair$new$(_seen$3, _list$4);
                var $12338 = $12382;
                break;
        };
        return $12338;
    };
    const Kind$Comp$dependency_sort$go = x0 => x1 => x2 => x3 => Kind$Comp$dependency_sort$go$(x0, x1, x2, x3);

    function Kind$Comp$dependency_sort$(_main$1, _defs$2) {
        var _term$3 = Kind$Comp$ref$(_main$1);
        var _seen$4 = Kind$Map$new;
        var _list$5 = List$nil;
        var self = Kind$Comp$dependency_sort$go$(_term$3, _defs$2, _seen$4, _list$5);
        switch (self._) {
            case 'Pair.new':
                var $12384 = self.snd;
                var $12385 = List$reverse$($12384);
                var $12383 = $12385;
                break;
        };
        return $12383;
    };
    const Kind$Comp$dependency_sort = x0 => x1 => Kind$Comp$dependency_sort$(x0, x1);

    function String$take_while$(_f$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $12387 = String$nil;
            var $12386 = $12387;
        } else {
            var $12388 = self.charCodeAt(0);
            var $12389 = self.slice(1);
            var self = _f$1($12388);
            if (self) {
                var $12391 = String$cons$($12388, String$take_while$(_f$1, $12389));
                var $12390 = $12391;
            } else {
                var $12392 = String$nil;
                var $12390 = $12392;
            };
            var $12386 = $12390;
        };
        return $12386;
    };
    const String$take_while = x0 => x1 => String$take_while$(x0, x1);

    function String$drop_while$(_f$1, _xs$2) {
        var String$drop_while$ = (_f$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_f$1, _xs$2]
        });
        var String$drop_while = _f$1 => _xs$2 => String$drop_while$(_f$1, _xs$2);
        var arg = [_f$1, _xs$2];
        while (true) {
            let [_f$1, _xs$2] = arg;
            var R = (() => {
                var self = _xs$2;
                if (self.length === 0) {
                    var $12393 = String$nil;
                    return $12393;
                } else {
                    var $12394 = self.charCodeAt(0);
                    var $12395 = self.slice(1);
                    var self = _f$1($12394);
                    if (self) {
                        var $12397 = String$drop_while$(_f$1, $12395);
                        var $12396 = $12397;
                    } else {
                        var $12398 = _xs$2;
                        var $12396 = $12398;
                    };
                    return $12396;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop_while = x0 => x1 => String$drop_while$(x0, x1);

    function Kind$Comp$replace$(_str$1, _vars$2) {
        var self = _str$1;
        if (self.length === 0) {
            var $12400 = _str$1;
            var $12399 = $12400;
        } else {
            var $12401 = self.charCodeAt(0);
            var $12402 = self.slice(1);
            var _a$5 = $12401;
            var self = (_a$5 === 36);
            if (self) {
                var _n_str$6 = String$take_while$((_b$6 => {
                    var $12405 = ((_b$6 >= 48) && (_b$6 <= 57));
                    return $12405;
                }), $12402);
                var self = (String$length$(_n_str$6) > 0n);
                if (self) {
                    var _n_str$tail$7 = String$drop_while$((_b$7 => {
                        var $12407 = ((_b$7 >= 48) && (_b$7 <= 57));
                        return $12407;
                    }), $12402);
                    var $12406 = (Maybe$default$(List$get$((BigInt(_n_str$6)), _vars$2), "?") + Kind$Comp$replace$(_n_str$tail$7, _vars$2));
                    var $12404 = $12406;
                } else {
                    var $12408 = String$cons$(_a$5, Kind$Comp$replace$($12402, _vars$2));
                    var $12404 = $12408;
                };
                var $12403 = $12404;
            } else {
                var $12409 = String$cons$(_a$5, Kind$Comp$replace$($12402, _vars$2));
                var $12403 = $12409;
            };
            var $12399 = $12403;
        };
        return $12399;
    };
    const Kind$Comp$replace = x0 => x1 => Kind$Comp$replace$(x0, x1);

    function List$create$go$(_len$2, _create_value$3, _result$4) {
        var List$create$go$ = (_len$2, _create_value$3, _result$4) => ({
            ctr: 'TCO',
            arg: [_len$2, _create_value$3, _result$4]
        });
        var List$create$go = _len$2 => _create_value$3 => _result$4 => List$create$go$(_len$2, _create_value$3, _result$4);
        var arg = [_len$2, _create_value$3, _result$4];
        while (true) {
            let [_len$2, _create_value$3, _result$4] = arg;
            var R = (() => {
                var self = _len$2;
                if (self === 0n) {
                    var $12410 = _result$4;
                    return $12410;
                } else {
                    var $12411 = (self - 1n);
                    var $12412 = List$create$go$($12411, _create_value$3, List$cons$(_create_value$3($12411), _result$4));
                    return $12412;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$create$go = x0 => x1 => x2 => List$create$go$(x0, x1, x2);

    function List$create$(_len$2, _create_value$3) {
        var $12413 = List$create$go$(_len$2, _create_value$3, List$nil);
        return $12413;
    };
    const List$create = x0 => x1 => List$create$(x0, x1);

    function Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, _j$6) {
        var self = _ctor$5;
        switch (self._) {
            case 'Pair.new':
                var $12415 = self.fst;
                var $12416 = self.snd;
                var self = (_j$6 === $12415);
                if (self) {
                    var $12418 = Kind$Comp$replace$($12416, List$create$($12415, (_j$9 => {
                        var $12419 = ("x" + Nat$show$(_j$9));
                        return $12419;
                    })));
                    var $12417 = $12418;
                } else {
                    var self = _lang$1;
                    switch (self._) {
                        case 'Kind.Comp.Language.new':
                            var $12421 = self.gram;
                            var $12422 = $12421;
                            var self = $12422;
                            break;
                    };
                    switch (self._) {
                        case 'Kind.Comp.Grammar.new':
                            var $12423 = self.lambda;
                            var $12424 = $12423;
                            var $12420 = $12424;
                            break;
                    };
                    var $12420 = $12420(("x" + Nat$show$(_j$6)))(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, Nat$succ$(_j$6)));
                    var $12417 = $12420;
                };
                var $12414 = $12417;
                break;
        };
        return $12414;
    };
    const Kind$Comp$Prim$instantiator$go = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Comp$Prim$instantiator$go$(x0, x1, x2, x3, x4, x5);

    function Kind$Comp$Prim$instantiator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12426 = self.nati;
                var $12427 = $12426;
                var _shape$5 = $12427;
                break;
        };
        var _shape$5 = _shape$5(_prim$2);
        var self = _shape$5;
        switch (self._) {
            case 'Kind.Comp.Native.new':
                var $12428 = self.inst;
                var _text$8 = "x";
                var _text$9 = (() => {
                    var $12431 = _text$8;
                    var $12432 = $12428;
                    let _text$10 = $12431;
                    let _ctor$9;
                    while ($12432._ === 'List.cons') {
                        _ctor$9 = $12432.head;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12433 = self.gram;
                                var $12434 = $12433;
                                var self = $12434;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Comp.Grammar.new':
                                var $12435 = self.application;
                                var $12436 = $12435;
                                var $12431 = $12436;
                                break;
                        };
                        var $12431 = $12431(_text$10)(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$9, 0n));
                        _text$10 = $12431;
                        $12432 = $12432.tail;
                    }
                    return _text$10;
                })();
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12437 = self.gram;
                        var $12438 = $12437;
                        var self = $12438;
                        break;
                };
                switch (self._) {
                    case 'Kind.Comp.Grammar.new':
                        var $12439 = self.lambda;
                        var $12440 = $12439;
                        var $12429 = $12440;
                        break;
                };
                var $12429 = $12429("x")(_text$9);
                var $12425 = $12429;
                break;
        };
        return $12425;
    };
    const Kind$Comp$Prim$instantiator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$instantiator$(x0, x1, x2, x3);

    function Kind$Comp$get_args$go$(_term$1, _args$2) {
        var Kind$Comp$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$get_args$go = _term$1 => _args$2 => Kind$Comp$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Comp.app':
                        var $12441 = self.func;
                        var $12442 = self.argm;
                        var $12443 = Kind$Comp$get_args$go$($12441, List$cons$($12442, _args$2));
                        return $12443;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.ref':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.eli':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12444 = Pair$new$(_term$1, _args$2);
                        return $12444;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$get_args$go = x0 => x1 => Kind$Comp$get_args$go$(x0, x1);

    function Kind$Comp$get_args$(_term$1) {
        var $12445 = Kind$Comp$get_args$go$(_term$1, List$nil);
        return $12445;
    };
    const Kind$Comp$get_args = x0 => Kind$Comp$get_args$(x0);

    function Kind$Comp$get_arity$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12447 = self.body;
                var $12448 = (1n + Kind$Comp$get_arity$($12447));
                var $12446 = $12448;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12449 = 0n;
                var $12446 = $12449;
                break;
        };
        return $12446;
    };
    const Kind$Comp$get_arity = x0 => Kind$Comp$get_arity$(x0);

    function Kind$Comp$get_vars$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12451 = self.name;
                var $12452 = self.body;
                var self = Kind$Comp$get_vars$($12452);
                switch (self._) {
                    case 'Pair.new':
                        var $12454 = self.fst;
                        var $12455 = self.snd;
                        var $12456 = Pair$new$(List$cons$($12451, $12454), $12455);
                        var $12453 = $12456;
                        break;
                };
                var $12450 = $12453;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12457 = Pair$new$(List$nil, _term$1);
                var $12450 = $12457;
                break;
        };
        return $12450;
    };
    const Kind$Comp$get_vars = x0 => Kind$Comp$get_vars$(x0);

    function Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) {
        var Kind$Comp$Prim$inst$go$ = (_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) => ({
            ctr: 'TCO',
            arg: [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7]
        });
        var Kind$Comp$Prim$inst$go = _lang$1 => _name$2 => _inst$3 => _vars$4 => _args$5 => _depth$6 => _defs$7 => Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7);
        var arg = [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7];
        while (true) {
            let [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7] = arg;
            var R = (() => {
                var self = _inst$3;
                switch (self._) {
                    case 'List.cons':
                        var $12458 = self.head;
                        var $12459 = self.tail;
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.cons':
                                var $12461 = self.head;
                                var $12462 = self.tail;
                                var self = (_name$2 === $12461);
                                if (self) {
                                    var self = $12458;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12465 = self.fst;
                                            var $12466 = self.snd;
                                            var self = ($12465 === (list_length(_args$5)));
                                            if (self) {
                                                var $12468 = Maybe$some$(Kind$Comp$replace$($12466, List$mapped$(_args$5, (_x$14 => {
                                                    var $12469 = Kind$Comp$transpile$term$(_lang$1, _x$14, _depth$6, _defs$7);
                                                    return $12469;
                                                }))));
                                                var $12467 = $12468;
                                            } else {
                                                var $12470 = Maybe$none;
                                                var $12467 = $12470;
                                            };
                                            var $12464 = $12467;
                                            break;
                                    };
                                    var $12463 = $12464;
                                } else {
                                    var $12471 = Kind$Comp$Prim$inst$go$(_lang$1, _name$2, $12459, $12462, _args$5, _depth$6, _defs$7);
                                    var $12463 = $12471;
                                };
                                var $12460 = $12463;
                                break;
                            case 'List.nil':
                                var $12472 = Maybe$none;
                                var $12460 = $12472;
                                break;
                        };
                        return $12460;
                    case 'List.nil':
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $12474 = Maybe$none;
                                var $12473 = $12474;
                                break;
                        };
                        return $12473;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$Prim$inst$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Comp$Prim$inst$go$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Comp$Prim$inst$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Comp.ins':
                var $12476 = self.prim;
                var $12477 = self.expr;
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12479 = self.nati;
                        var $12480 = $12479;
                        var _shape$7 = $12480;
                        break;
                };
                var _shape$7 = _shape$7($12476);
                var self = _shape$7;
                switch (self._) {
                    case 'Kind.Comp.Native.new':
                        var $12481 = self.inst;
                        var self = Kind$Comp$get_vars$($12477);
                        switch (self._) {
                            case 'Pair.new':
                                var $12483 = self.fst;
                                var $12484 = self.snd;
                                var self = ((list_length($12481)) === (list_length($12483)));
                                if (self) {
                                    var self = Kind$Comp$get_args$($12484);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12487 = self.fst;
                                            var $12488 = self.snd;
                                            var self = $12487;
                                            switch (self._) {
                                                case 'Kind.Comp.var':
                                                    var $12490 = self.name;
                                                    var $12491 = Kind$Comp$Prim$inst$go$(_lang$1, $12490, $12481, $12483, $12488, _depth$3, _defs$4);
                                                    var $12489 = $12491;
                                                    break;
                                                case 'Kind.Comp.ref':
                                                    var $12492 = self.name;
                                                    var $12493 = Kind$Comp$Prim$inst$go$(_lang$1, $12492, $12481, $12483, $12488, _depth$3, _defs$4);
                                                    var $12489 = $12493;
                                                    break;
                                                case 'Kind.Comp.nil':
                                                case 'Kind.Comp.lam':
                                                case 'Kind.Comp.app':
                                                case 'Kind.Comp.let':
                                                case 'Kind.Comp.eli':
                                                case 'Kind.Comp.ins':
                                                case 'Kind.Comp.nat':
                                                case 'Kind.Comp.chr':
                                                case 'Kind.Comp.str':
                                                case 'Kind.Comp.txt':
                                                    var $12494 = Maybe$none;
                                                    var $12489 = $12494;
                                                    break;
                                            };
                                            var $12486 = $12489;
                                            break;
                                    };
                                    var $12485 = $12486;
                                } else {
                                    var $12495 = Maybe$none;
                                    var $12485 = $12495;
                                };
                                var $12482 = $12485;
                                break;
                        };
                        var $12478 = $12482;
                        break;
                };
                var $12475 = $12478;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.lam':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12496 = Maybe$none;
                var $12475 = $12496;
                break;
        };
        return $12475;
    };
    const Kind$Comp$Prim$inst = x0 => x1 => x2 => x3 => Kind$Comp$Prim$inst$(x0, x1, x2, x3);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $12498 = self.pred;
                var $12499 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $12498));
                var $12497 = $12499;
                break;
            case 'Word.i':
                var $12500 = self.pred;
                var $12501 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $12500));
                var $12497 = $12501;
                break;
            case 'Word.e':
                var $12502 = _nil$3;
                var $12497 = $12502;
                break;
        };
        return $12497;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $12503 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $12504 = Nat$succ$((2n * _x$4));
            return $12504;
        }), _word$2);
        return $12503;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));

    function Kind$Comp$transpile$term$(_lang$1, _comp$2, _depth$3, _defs$4) {
        var _go$5 = Kind$Comp$transpile$term(_lang$1);
        var self = Kind$Comp$Prim$inst$(_lang$1, _comp$2, _depth$3, _defs$4);
        switch (self._) {
            case 'Maybe.some':
                var $12506 = self.value;
                var $12507 = $12506;
                var $12505 = $12507;
                break;
            case 'Maybe.none':
                var self = Kind$Comp$Prim$elim$(_lang$1, _comp$2, _depth$3, _defs$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $12509 = self.value;
                        var $12510 = $12509;
                        var $12508 = $12510;
                        break;
                    case 'Maybe.none':
                        var self = _comp$2;
                        switch (self._) {
                            case 'Kind.Comp.var':
                                var $12512 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12514 = self.gram;
                                        var $12515 = $12514;
                                        var self = $12515;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12516 = self.name;
                                        var $12517 = $12516;
                                        var $12513 = $12517;
                                        break;
                                };
                                var $12513 = $12513($12512);
                                var $12511 = $12513;
                                break;
                            case 'Kind.Comp.ref':
                                var $12518 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12520 = self.gram;
                                        var $12521 = $12520;
                                        var self = $12521;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12522 = self.name;
                                        var $12523 = $12522;
                                        var $12519 = $12523;
                                        break;
                                };
                                var $12519 = $12519($12518);
                                var $12511 = $12519;
                                break;
                            case 'Kind.Comp.lam':
                                var $12524 = self.name;
                                var $12525 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12527 = self.gram;
                                        var $12528 = $12527;
                                        var self = $12528;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12529 = self.lambda;
                                        var $12530 = $12529;
                                        var $12526 = $12530;
                                        break;
                                };
                                var $12526 = $12526((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12531 = self.gram;
                                            var $12532 = $12531;
                                            var self = $12532;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12533 = self.name;
                                            var $12534 = $12533;
                                            return $12534;
                                    };
                                })()($12524))(_go$5($12525)(Nat$succ$(_depth$3))(_defs$4));
                                var $12511 = $12526;
                                break;
                            case 'Kind.Comp.app':
                                var $12535 = self.func;
                                var $12536 = self.argm;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12538 = self.gram;
                                        var $12539 = $12538;
                                        var self = $12539;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12540 = self.application;
                                        var $12541 = $12540;
                                        var $12537 = $12541;
                                        break;
                                };
                                var $12537 = $12537(_go$5($12535)(_depth$3)(_defs$4))(_go$5($12536)(_depth$3)(_defs$4));
                                var $12511 = $12537;
                                break;
                            case 'Kind.Comp.let':
                                var $12542 = self.name;
                                var $12543 = self.expr;
                                var $12544 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12546 = self.gram;
                                        var $12547 = $12546;
                                        var self = $12547;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12548 = self.local_definition;
                                        var $12549 = $12548;
                                        var $12545 = $12549;
                                        break;
                                };
                                var $12545 = $12545((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12550 = self.gram;
                                            var $12551 = $12550;
                                            var self = $12551;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12552 = self.name;
                                            var $12553 = $12552;
                                            return $12553;
                                    };
                                })()($12542))(_go$5($12543)(_depth$3)(_defs$4))(_go$5($12544)(Nat$succ$(_depth$3))(_defs$4));
                                var $12511 = $12545;
                                break;
                            case 'Kind.Comp.eli':
                                var $12554 = self.prim;
                                var $12555 = self.expr;
                                var self = $12554;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12558 = self.gram;
                                                var $12559 = $12558;
                                                var self = $12559;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12560 = self.application;
                                                var $12561 = $12560;
                                                var $12557 = $12561;
                                                break;
                                        };
                                        var $12557 = $12557((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12562 = self.gram;
                                                    var $12563 = $12562;
                                                    var self = $12563;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12564 = self.elim_name;
                                                    var $12565 = $12564;
                                                    return $12565;
                                            };
                                        })()("Bool"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12557;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12567 = self.gram;
                                                var $12568 = $12567;
                                                var self = $12568;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12569 = self.application;
                                                var $12570 = $12569;
                                                var $12566 = $12570;
                                                break;
                                        };
                                        var $12566 = $12566((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12571 = self.gram;
                                                    var $12572 = $12571;
                                                    var self = $12572;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12573 = self.elim_name;
                                                    var $12574 = $12573;
                                                    return $12574;
                                            };
                                        })()("Bits"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12566;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12576 = self.gram;
                                                var $12577 = $12576;
                                                var self = $12577;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12578 = self.application;
                                                var $12579 = $12578;
                                                var $12575 = $12579;
                                                break;
                                        };
                                        var $12575 = $12575((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12580 = self.gram;
                                                    var $12581 = $12580;
                                                    var self = $12581;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12582 = self.elim_name;
                                                    var $12583 = $12582;
                                                    return $12583;
                                            };
                                        })()("Unit"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12575;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12585 = self.gram;
                                                var $12586 = $12585;
                                                var self = $12586;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12587 = self.application;
                                                var $12588 = $12587;
                                                var $12584 = $12588;
                                                break;
                                        };
                                        var $12584 = $12584((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12589 = self.gram;
                                                    var $12590 = $12589;
                                                    var self = $12590;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12591 = self.elim_name;
                                                    var $12592 = $12591;
                                                    return $12592;
                                            };
                                        })()("Nat"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12584;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12594 = self.gram;
                                                var $12595 = $12594;
                                                var self = $12595;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12596 = self.application;
                                                var $12597 = $12596;
                                                var $12593 = $12597;
                                                break;
                                        };
                                        var $12593 = $12593((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12598 = self.gram;
                                                    var $12599 = $12598;
                                                    var self = $12599;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12600 = self.elim_name;
                                                    var $12601 = $12600;
                                                    return $12601;
                                            };
                                        })()("U16"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12593;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12603 = self.gram;
                                                var $12604 = $12603;
                                                var self = $12604;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12605 = self.application;
                                                var $12606 = $12605;
                                                var $12602 = $12606;
                                                break;
                                        };
                                        var $12602 = $12602((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12607 = self.gram;
                                                    var $12608 = $12607;
                                                    var self = $12608;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12609 = self.elim_name;
                                                    var $12610 = $12609;
                                                    return $12610;
                                            };
                                        })()("U32"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12602;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12612 = self.gram;
                                                var $12613 = $12612;
                                                var self = $12613;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12614 = self.application;
                                                var $12615 = $12614;
                                                var $12611 = $12615;
                                                break;
                                        };
                                        var $12611 = $12611((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12616 = self.gram;
                                                    var $12617 = $12616;
                                                    var self = $12617;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12618 = self.elim_name;
                                                    var $12619 = $12618;
                                                    return $12619;
                                            };
                                        })()("String"))(_go$5($12555)(_depth$3)(_defs$4));
                                        var $12556 = $12611;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12620 = _go$5($12555)(_depth$3)(_defs$4);
                                        var $12556 = $12620;
                                        break;
                                };
                                var $12511 = $12556;
                                break;
                            case 'Kind.Comp.ins':
                                var $12621 = self.prim;
                                var $12622 = self.expr;
                                var self = $12621;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12625 = self.gram;
                                                var $12626 = $12625;
                                                var self = $12626;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12627 = self.application;
                                                var $12628 = $12627;
                                                var $12624 = $12628;
                                                break;
                                        };
                                        var $12624 = $12624((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12629 = self.gram;
                                                    var $12630 = $12629;
                                                    var self = $12630;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12631 = self.inst_name;
                                                    var $12632 = $12631;
                                                    return $12632;
                                            };
                                        })()("Bool"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12624;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12634 = self.gram;
                                                var $12635 = $12634;
                                                var self = $12635;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12636 = self.application;
                                                var $12637 = $12636;
                                                var $12633 = $12637;
                                                break;
                                        };
                                        var $12633 = $12633((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12638 = self.gram;
                                                    var $12639 = $12638;
                                                    var self = $12639;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12640 = self.inst_name;
                                                    var $12641 = $12640;
                                                    return $12641;
                                            };
                                        })()("Bits"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12633;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12643 = self.gram;
                                                var $12644 = $12643;
                                                var self = $12644;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12645 = self.application;
                                                var $12646 = $12645;
                                                var $12642 = $12646;
                                                break;
                                        };
                                        var $12642 = $12642((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12647 = self.gram;
                                                    var $12648 = $12647;
                                                    var self = $12648;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12649 = self.inst_name;
                                                    var $12650 = $12649;
                                                    return $12650;
                                            };
                                        })()("Unit"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12642;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12652 = self.gram;
                                                var $12653 = $12652;
                                                var self = $12653;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12654 = self.application;
                                                var $12655 = $12654;
                                                var $12651 = $12655;
                                                break;
                                        };
                                        var $12651 = $12651((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12656 = self.gram;
                                                    var $12657 = $12656;
                                                    var self = $12657;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12658 = self.inst_name;
                                                    var $12659 = $12658;
                                                    return $12659;
                                            };
                                        })()("Nat"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12651;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12661 = self.gram;
                                                var $12662 = $12661;
                                                var self = $12662;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12663 = self.application;
                                                var $12664 = $12663;
                                                var $12660 = $12664;
                                                break;
                                        };
                                        var $12660 = $12660((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12665 = self.gram;
                                                    var $12666 = $12665;
                                                    var self = $12666;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12667 = self.inst_name;
                                                    var $12668 = $12667;
                                                    return $12668;
                                            };
                                        })()("U16"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12660;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12670 = self.gram;
                                                var $12671 = $12670;
                                                var self = $12671;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12672 = self.application;
                                                var $12673 = $12672;
                                                var $12669 = $12673;
                                                break;
                                        };
                                        var $12669 = $12669((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12674 = self.gram;
                                                    var $12675 = $12674;
                                                    var self = $12675;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12676 = self.inst_name;
                                                    var $12677 = $12676;
                                                    return $12677;
                                            };
                                        })()("U32"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12669;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12679 = self.gram;
                                                var $12680 = $12679;
                                                var self = $12680;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12681 = self.application;
                                                var $12682 = $12681;
                                                var $12678 = $12682;
                                                break;
                                        };
                                        var $12678 = $12678((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12683 = self.gram;
                                                    var $12684 = $12683;
                                                    var self = $12684;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12685 = self.inst_name;
                                                    var $12686 = $12685;
                                                    return $12686;
                                            };
                                        })()("String"))(_go$5($12622)(_depth$3)(_defs$4));
                                        var $12623 = $12678;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12687 = _go$5($12622)(_depth$3)(_defs$4);
                                        var $12623 = $12687;
                                        break;
                                };
                                var $12511 = $12623;
                                break;
                            case 'Kind.Comp.nat':
                                var $12688 = self.natx;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12690 = self.gram;
                                        var $12691 = $12690;
                                        var self = $12691;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12692 = self.nat;
                                        var $12693 = $12692;
                                        var $12689 = $12693;
                                        break;
                                };
                                var $12689 = $12689($12688);
                                var $12511 = $12689;
                                break;
                            case 'Kind.Comp.chr':
                                var $12694 = self.chrx;
                                var $12695 = Nat$show$((BigInt($12694)));
                                var $12511 = $12695;
                                break;
                            case 'Kind.Comp.str':
                                var $12696 = self.strx;
                                var $12697 = ("\"" + ((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12698 = self.gram;
                                            var $12699 = $12698;
                                            var self = $12699;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12700 = self.string_literal;
                                            var $12701 = $12700;
                                            return $12701;
                                    };
                                })()($12696) + "\""));
                                var $12511 = $12697;
                                break;
                            case 'Kind.Comp.txt':
                                var $12702 = self.text;
                                var $12703 = $12702;
                                var $12511 = $12703;
                                break;
                            case 'Kind.Comp.nil':
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12705 = self.gram;
                                        var $12706 = $12705;
                                        var self = $12706;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12707 = self.null;
                                        var $12708 = $12707;
                                        var $12704 = $12708;
                                        break;
                                };
                                var $12511 = $12704;
                                break;
                        };
                        var $12508 = $12511;
                        break;
                };
                var $12505 = $12508;
                break;
        };
        return $12505;
    };
    const Kind$Comp$transpile$term = x0 => x1 => x2 => x3 => Kind$Comp$transpile$term$(x0, x1, x2, x3);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $12710 = self.head;
                var $12711 = self.tail;
                var $12712 = List$cons$(_f$3($12710), List$map$(_f$3, $12711));
                var $12709 = $12712;
                break;
            case 'List.nil':
                var $12713 = List$nil;
                var $12709 = $12713;
                break;
        };
        return $12709;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$seq$go$(_n$1, _xs$2) {
        var List$seq$go$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var List$seq$go = _n$1 => _xs$2 => List$seq$go$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $12714 = _xs$2;
                    return $12714;
                } else {
                    var $12715 = (self - 1n);
                    var $12716 = List$seq$go$($12715, List$cons$($12715, _xs$2));
                    return $12716;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$seq$go = x0 => x1 => List$seq$go$(x0, x1);

    function List$seq$(_n$1) {
        var $12717 = List$seq$go$(_n$1, List$nil);
        return $12717;
    };
    const List$seq = x0 => List$seq$(x0);

    function Kind$Comp$txt$(_text$1) {
        var $12718 = ({
            _: 'Kind.Comp.txt',
            'text': _text$1
        });
        return $12718;
    };
    const Kind$Comp$txt = x0 => Kind$Comp$txt$(x0);

    function Kind$Comp$subst$(_name$1, _value$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Comp.var':
                var $12720 = self.name;
                var self = (_name$1 === $12720);
                if (self) {
                    var $12722 = _value$2;
                    var $12721 = $12722;
                } else {
                    var $12723 = Kind$Comp$var$($12720);
                    var $12721 = $12723;
                };
                var $12719 = $12721;
                break;
            case 'Kind.Comp.ref':
                var $12724 = self.name;
                var $12725 = Kind$Comp$ref$($12724);
                var $12719 = $12725;
                break;
            case 'Kind.Comp.lam':
                var $12726 = self.name;
                var $12727 = self.body;
                var $12728 = Kind$Comp$lam$($12726, (() => {
                    var self = (_name$1 === $12726);
                    if (self) {
                        var $12729 = $12727;
                        return $12729;
                    } else {
                        var $12730 = Kind$Comp$subst$(_name$1, _value$2, $12727);
                        return $12730;
                    };
                })());
                var $12719 = $12728;
                break;
            case 'Kind.Comp.app':
                var $12731 = self.func;
                var $12732 = self.argm;
                var $12733 = Kind$Comp$app$(Kind$Comp$subst$(_name$1, _value$2, $12731), Kind$Comp$subst$(_name$1, _value$2, $12732));
                var $12719 = $12733;
                break;
            case 'Kind.Comp.let':
                var $12734 = self.name;
                var $12735 = self.expr;
                var $12736 = self.body;
                var $12737 = Kind$Comp$let$($12734, Kind$Comp$subst$(_name$1, _value$2, $12735), (() => {
                    var self = (_name$1 === $12734);
                    if (self) {
                        var $12738 = $12736;
                        return $12738;
                    } else {
                        var $12739 = Kind$Comp$subst$(_name$1, _value$2, $12736);
                        return $12739;
                    };
                })());
                var $12719 = $12737;
                break;
            case 'Kind.Comp.eli':
                var $12740 = self.prim;
                var $12741 = self.expr;
                var $12742 = Kind$Comp$eli$($12740, Kind$Comp$subst$(_name$1, _value$2, $12741));
                var $12719 = $12742;
                break;
            case 'Kind.Comp.ins':
                var $12743 = self.prim;
                var $12744 = self.expr;
                var $12745 = Kind$Comp$ins$($12743, Kind$Comp$subst$(_name$1, _value$2, $12744));
                var $12719 = $12745;
                break;
            case 'Kind.Comp.nat':
                var $12746 = self.natx;
                var $12747 = Kind$Comp$nat$($12746);
                var $12719 = $12747;
                break;
            case 'Kind.Comp.chr':
                var $12748 = self.chrx;
                var $12749 = Kind$Comp$chr$($12748);
                var $12719 = $12749;
                break;
            case 'Kind.Comp.str':
                var $12750 = self.strx;
                var $12751 = Kind$Comp$str$($12750);
                var $12719 = $12751;
                break;
            case 'Kind.Comp.txt':
                var $12752 = self.text;
                var $12753 = Kind$Comp$txt$($12752);
                var $12719 = $12753;
                break;
            case 'Kind.Comp.nil':
                var $12754 = Kind$Comp$nil;
                var $12719 = $12754;
                break;
        };
        return $12719;
    };
    const Kind$Comp$subst = x0 => x1 => x2 => Kind$Comp$subst$(x0, x1, x2);

    function Kind$Comp$apply$(_term$1, _args$2) {
        var Kind$Comp$apply$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$apply = _term$1 => _args$2 => Kind$Comp$apply$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _args$2;
                switch (self._) {
                    case 'List.cons':
                        var $12755 = self.head;
                        var $12756 = self.tail;
                        var self = _term$1;
                        switch (self._) {
                            case 'Kind.Comp.lam':
                                var $12758 = self.name;
                                var $12759 = self.body;
                                var $12760 = Kind$Comp$apply$(Kind$Comp$subst$($12758, $12755, $12759), $12756);
                                var $12757 = $12760;
                                break;
                            case 'Kind.Comp.nil':
                            case 'Kind.Comp.var':
                            case 'Kind.Comp.ref':
                            case 'Kind.Comp.app':
                            case 'Kind.Comp.let':
                            case 'Kind.Comp.eli':
                            case 'Kind.Comp.ins':
                            case 'Kind.Comp.nat':
                            case 'Kind.Comp.chr':
                            case 'Kind.Comp.str':
                            case 'Kind.Comp.txt':
                                var $12761 = Kind$Comp$apply$(Kind$Comp$app$(_term$1, $12755), $12756);
                                var $12757 = $12761;
                                break;
                        };
                        return $12757;
                    case 'List.nil':
                        var $12762 = _term$1;
                        return $12762;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$apply = x0 => x1 => Kind$Comp$apply$(x0, x1);

    function Kind$Comp$Prim$elim$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = Kind$Comp$get_args$(_term$2);
        switch (self._) {
            case 'Pair.new':
                var $12764 = self.fst;
                var $12765 = self.snd;
                var self = $12764;
                switch (self._) {
                    case 'Kind.Comp.ref':
                        var $12767 = self.name;
                        var self = Kind$Map$get$($12767, _defs$4);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12769 = self.value;
                                var _arity$9 = Kind$Comp$get_arity$($12769);
                                var self = ((_arity$9 === (list_length($12765))) && (_arity$9 > 0n));
                                if (self) {
                                    var _inlined_args$10 = List$map$((_arg$10 => {
                                        var $12772 = Kind$Comp$transpile$term$(_lang$1, _arg$10, _depth$3, _defs$4);
                                        return $12772;
                                    }), $12765);
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12773 = self.gram;
                                            var $12774 = $12773;
                                            var self = $12774;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12775 = self.global_application;
                                            var $12776 = $12775;
                                            var _code$11 = $12776;
                                            break;
                                    };
                                    var _code$11 = _code$11($12767)(_inlined_args$10);
                                    var $12771 = Maybe$some$(_code$11);
                                    var $12770 = $12771;
                                } else {
                                    var $12777 = Maybe$none;
                                    var $12770 = $12777;
                                };
                                var $12768 = $12770;
                                break;
                            case 'Maybe.none':
                                var $12778 = Maybe$none;
                                var $12768 = $12778;
                                break;
                        };
                        var $12766 = $12768;
                        break;
                    case 'Kind.Comp.eli':
                        var $12779 = self.prim;
                        var $12780 = self.expr;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12782 = self.nati;
                                var $12783 = $12782;
                                var _shape$9 = $12783;
                                break;
                        };
                        var _shape$9 = _shape$9($12779);
                        var self = _shape$9;
                        switch (self._) {
                            case 'Kind.Comp.Native.new':
                                var $12784 = self.elim;
                                var self = $12784;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12786 = self.fst;
                                        var $12787 = self.snd;
                                        var _args_len$14 = (list_length($12765));
                                        var _cses_len$15 = (list_length($12787));
                                        var self = (_args_len$14 > _cses_len$15);
                                        if (self) {
                                            var $12789 = Maybe$none;
                                            var $12788 = $12789;
                                        } else {
                                            var _lams_len$16 = (_cses_len$15 - _args_len$14 <= 0n ? 0n : _cses_len$15 - _args_len$14);
                                            var _args$17 = Nat$for$($12765, 0n, _lams_len$16, (_i$17 => _args$18 => {
                                                var $12791 = List$concat$(_args$18, List$cons$(Kind$Comp$var$(("c" + Nat$show$(_i$17))), List$nil));
                                                return $12791;
                                            }));
                                            var _self$18 = ("self" + Nat$show$(_depth$3));
                                            var _cse_body_list$19 = List$map$((_item$19 => {
                                                var self = _item$19;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $12793 = self.fst;
                                                        var $12794 = self.snd;
                                                        var self = $12793;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $12796 = self.fst;
                                                                var $12797 = self.snd;
                                                                var _flds_len$24 = (list_length($12797));
                                                                var _let_args_n$25 = List$reverse$(List$seq$(_flds_len$24));
                                                                var _lam_args_n$26 = List$reverse$(List$seq$(_lams_len$16));
                                                                var _keys$27 = List$create$(_flds_len$24, (_k$27 => {
                                                                    var $12799 = Kind$Comp$var$(("f" + Nat$show$((_depth$3 + _k$27))));
                                                                    return $12799;
                                                                }));
                                                                var _argj$28 = Kind$Comp$apply$($12794, _keys$27);
                                                                var _body$29 = Kind$Comp$transpile$term$(_lang$1, _argj$28, ((_depth$3 + _flds_len$24) + _lams_len$16), _defs$4);
                                                                var _body$30 = (() => {
                                                                    var $12801 = _body$29;
                                                                    var $12802 = _lam_args_n$26;
                                                                    let _body$31 = $12801;
                                                                    let _i$30;
                                                                    while ($12802._ === 'List.cons') {
                                                                        _i$30 = $12802.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12803 = self.gram;
                                                                                var $12804 = $12803;
                                                                                var self = $12804;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12805 = self.lambda;
                                                                                var $12806 = $12805;
                                                                                var $12801 = $12806;
                                                                                break;
                                                                        };
                                                                        var $12801 = $12801(("c" + Nat$show$(_i$30)))(_body$31);
                                                                        _body$31 = $12801;
                                                                        $12802 = $12802.tail;
                                                                    }
                                                                    return _body$31;
                                                                })();
                                                                var _text$31 = _body$30;
                                                                var _text$32 = (() => {
                                                                    var $12808 = _text$31;
                                                                    var $12809 = _let_args_n$25;
                                                                    let _text$33 = $12808;
                                                                    let _k$32;
                                                                    while ($12809._ === 'List.cons') {
                                                                        _k$32 = $12809.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12810 = self.gram;
                                                                                var $12811 = $12810;
                                                                                var self = $12811;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12812 = self.local_definition;
                                                                                var $12813 = $12812;
                                                                                var $12808 = $12813;
                                                                                break;
                                                                        };
                                                                        var $12808 = $12808(("f" + Nat$show$((_depth$3 + _k$32))))(Kind$Comp$replace$(Maybe$default$(List$get$(_k$32, $12797), ""), List$cons$(_self$18, List$nil)))(_text$33);
                                                                        _text$33 = $12808;
                                                                        $12809 = $12809.tail;
                                                                    }
                                                                    return _text$33;
                                                                })();
                                                                var $12798 = Pair$new$($12796, _text$32);
                                                                var $12795 = $12798;
                                                                break;
                                                        };
                                                        var $12792 = $12795;
                                                        break;
                                                };
                                                return $12792;
                                            }), List$zip$($12787, _args$17));
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12814 = self.gram;
                                                    var $12815 = $12814;
                                                    var self = $12815;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12816 = self.select;
                                                    var $12817 = $12816;
                                                    var _ret$20 = $12817;
                                                    break;
                                            };
                                            var _ret$20 = _ret$20(Kind$Comp$replace$($12786, List$cons$(_self$18, List$nil)))(_cse_body_list$19);
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12818 = self.gram;
                                                    var $12819 = $12818;
                                                    var self = $12819;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12820 = self.local_definition;
                                                    var $12821 = $12820;
                                                    var _ret$21 = $12821;
                                                    break;
                                            };
                                            var _ret$21 = _ret$21(_self$18)(Kind$Comp$transpile$term$(_lang$1, $12780, _depth$3, _defs$4))(_ret$20);
                                            var $12790 = Maybe$some$(_ret$21);
                                            var $12788 = $12790;
                                        };
                                        var $12785 = $12788;
                                        break;
                                };
                                var $12781 = $12785;
                                break;
                        };
                        var $12766 = $12781;
                        break;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.app':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12822 = Maybe$none;
                        var $12766 = $12822;
                        break;
                };
                var $12763 = $12766;
                break;
        };
        return $12763;
    };
    const Kind$Comp$Prim$elim = x0 => x1 => x2 => x3 => Kind$Comp$Prim$elim$(x0, x1, x2, x3);

    function Kind$Comp$Prim$eliminator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var _term$5 = Kind$Comp$eli$(_prim$2, Kind$Comp$var$("x"));
        var _text$6 = Maybe$default$(Kind$Comp$Prim$elim$(_lang$1, _term$5, 0n, _defs$4), "");
        var _term$7 = Kind$Comp$lam$("x", Kind$Comp$txt$(_text$6));
        var $12823 = Kind$Comp$transpile$term$(_lang$1, _term$7, _depth$3, _defs$4);
        return $12823;
    };
    const Kind$Comp$Prim$eliminator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$eliminator$(x0, x1, x2, x3);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $12824 = self.key;
                        var $12825 = self.val;
                        var $12826 = self.left;
                        var $12827 = self.right;
                        var self = _cmp$3(_key$4)($12824);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12829 = BBT$lookup$(_cmp$3, _key$4, $12826);
                                var $12828 = $12829;
                                break;
                            case 'Cmp.eql':
                                var $12830 = Maybe$some$($12825);
                                var $12828 = $12830;
                                break;
                            case 'Cmp.gtn':
                                var $12831 = BBT$lookup$(_cmp$3, _key$4, $12827);
                                var $12828 = $12831;
                                break;
                        };
                        return $12828;
                    case 'BBT.tip':
                        var $12832 = Maybe$none;
                        return $12832;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $12834 = Cmp$ltn;
            var $12833 = $12834;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $12836 = Cmp$eql;
                var $12835 = $12836;
            } else {
                var $12837 = Cmp$gtn;
                var $12835 = $12837;
            };
            var $12833 = $12835;
        };
        return $12833;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12839 = Cmp$eql;
                        var $12838 = $12839;
                    } else {
                        var $12840 = self.charCodeAt(0);
                        var $12841 = self.slice(1);
                        var $12842 = Cmp$ltn;
                        var $12838 = $12842;
                    };
                    return $12838;
                } else {
                    var $12843 = self.charCodeAt(0);
                    var $12844 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12846 = Cmp$gtn;
                        var $12845 = $12846;
                    } else {
                        var $12847 = self.charCodeAt(0);
                        var $12848 = self.slice(1);
                        var self = U16$cmp$($12843, $12847);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12850 = Cmp$ltn;
                                var $12849 = $12850;
                                break;
                            case 'Cmp.eql':
                                var $12851 = String$cmp$($12844, $12848);
                                var $12849 = $12851;
                                break;
                            case 'Cmp.gtn':
                                var $12852 = Cmp$gtn;
                                var $12849 = $12852;
                                break;
                        };
                        var $12845 = $12849;
                    };
                    return $12845;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $12853 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $12853;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function BBT$(_K$1, _V$2) {
        var $12854 = null;
        return $12854;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $12855 = null;
        return $12855;
    };
    const Map = x0 => Map$(x0);

    function Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$2, _defs$3) {
        var _code$4 = "";
        var _code$5 = (() => {
            var $12858 = _code$4;
            var $12859 = Kind$Comp$Prim$natives;
            let _code$6 = $12858;
            let _nati$5;
            while ($12859._ === 'List.cons') {
                _nati$5 = $12859.head;
                var self = _nati$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12860 = self.fst;
                        var $12861 = self.snd;
                        var _code$9 = (_code$6 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12863 = self.gram;
                                    var $12864 = $12863;
                                    var self = $12864;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12865 = self.global_function;
                                    var $12866 = $12865;
                                    return $12866;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12867 = self.gram;
                                    var $12868 = $12867;
                                    var self = $12868;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12869 = self.inst_name;
                                    var $12870 = $12869;
                                    return $12870;
                            };
                        })()($12860))(List$nil)(Kind$Comp$Prim$instantiator$(_lang$1, $12861, 0n, _defs$3)));
                        var _code$10 = (_code$9 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12871 = self.gram;
                                    var $12872 = $12871;
                                    var self = $12872;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12873 = self.global_function;
                                    var $12874 = $12873;
                                    return $12874;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12875 = self.gram;
                                    var $12876 = $12875;
                                    var self = $12876;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12877 = self.elim_name;
                                    var $12878 = $12877;
                                    return $12878;
                            };
                        })()($12860))(List$nil)(Kind$Comp$Prim$eliminator$(_lang$1, $12861, 0n, _defs$3)));
                        var $12862 = _code$10;
                        var $12858 = $12862;
                        break;
                };
                _code$6 = $12858;
                $12859 = $12859.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12880 = _code$5;
            var $12881 = _defs_list$2;
            let _code$7 = $12880;
            let _defn$6;
            while ($12881._ === 'List.cons') {
                _defn$6 = $12881.head;
                var self = _defn$6;
                switch (self._) {
                    case 'Pair.new':
                        var $12882 = self.fst;
                        var $12883 = self.snd;
                        var self = Kind$Comp$get_vars$($12883);
                        switch (self._) {
                            case 'Pair.new':
                                var $12885 = self.fst;
                                var $12886 = self.snd;
                                var self = Map$get$($12882, (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12888 = self.opts;
                                            var $12889 = $12888;
                                            return $12889;
                                    };
                                })());
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $12890 = self.value;
                                        var $12891 = Kind$Comp$replace$(Pair$snd$($12890), $12885);
                                        var _inlined_body$12 = $12891;
                                        break;
                                    case 'Maybe.none':
                                        var $12892 = Kind$Comp$transpile$term$(_lang$1, $12886, 0n, _defs$3);
                                        var _inlined_body$12 = $12892;
                                        break;
                                };
                                var _code$13 = (_code$7 + (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12893 = self.gram;
                                            var $12894 = $12893;
                                            var self = $12894;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12895 = self.global_function;
                                            var $12896 = $12895;
                                            return $12896;
                                    };
                                })()($12882)($12885)(_inlined_body$12));
                                var $12887 = _code$13;
                                var $12884 = $12887;
                                break;
                        };
                        var $12880 = $12884;
                        break;
                };
                _code$7 = $12880;
                $12881 = $12881.tail;
            }
            return _code$7;
        })();
        var $12856 = _code$6;
        return $12856;
    };
    const Kind$Comp$transpile$global_definitions = x0 => x1 => x2 => Kind$Comp$transpile$global_definitions$(x0, x1, x2);

    function Kind$Comp$transpile$(_lang$1, _main$2, _defs$3) {
        var _defs_list$4 = Kind$Comp$dependency_sort$(_main$2, _defs$3);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12898 = self.gram;
                var $12899 = $12898;
                var self = $12899;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12900 = self.program;
                var $12901 = $12900;
                var _code$5 = $12901;
                break;
        };
        var _code$5 = _code$5(_main$2)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12902 = self.base;
                    var $12903 = $12902;
                    return $12903;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$4, _defs$3))));
        var $12897 = _code$5;
        return $12897;
    };
    const Kind$Comp$transpile = x0 => x1 => x2 => Kind$Comp$transpile$(x0, x1, x2);

    function Kind$Comp$Language$new$(_gram$1, _nati$2, _opts$3, _base$4) {
        var $12904 = ({
            _: 'Kind.Comp.Language.new',
            'gram': _gram$1,
            'nati': _nati$2,
            'opts': _opts$3,
            'base': _base$4
        });
        return $12904;
    };
    const Kind$Comp$Language$new = x0 => x1 => x2 => x3 => Kind$Comp$Language$new$(x0, x1, x2, x3);

    function Kind$Comp$Grammar$new$(_null$1, _name$2, _inst_name$3, _elim_name$4, _lambda$5, _application$6, _local_definition$7, _global_function$8, _global_application$9, _select$10, _string_literal$11, _nat$12, _module$13, _program$14) {
        var $12905 = ({
            _: 'Kind.Comp.Grammar.new',
            'null': _null$1,
            'name': _name$2,
            'inst_name': _inst_name$3,
            'elim_name': _elim_name$4,
            'lambda': _lambda$5,
            'application': _application$6,
            'local_definition': _local_definition$7,
            'global_function': _global_function$8,
            'global_application': _global_application$9,
            'select': _select$10,
            'string_literal': _string_literal$11,
            'nat': _nat$12,
            'module': _module$13,
            'program': _program$14
        });
        return $12905;
    };
    const Kind$Comp$Grammar$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => x11 => x12 => x13 => Kind$Comp$Grammar$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13);
    const Kind$Comp$Target$Scheme$null = "\'()";

    function Kind$Comp$Target$Scheme$name$(_name$1) {
        var self = String$is_empty$(_name$1);
        if (self) {
            var $12907 = "-";
            var $12906 = $12907;
        } else {
            var $12908 = _name$1;
            var $12906 = $12908;
        };
        return $12906;
    };
    const Kind$Comp$Target$Scheme$name = x0 => Kind$Comp$Target$Scheme$name$(x0);

    function Kind$Comp$Target$Scheme$inst_name$(_name$1) {
        var $12909 = (_name$1 + "-inst");
        return $12909;
    };
    const Kind$Comp$Target$Scheme$inst_name = x0 => Kind$Comp$Target$Scheme$inst_name$(x0);

    function Kind$Comp$Target$Scheme$elim_name$(_name$1) {
        var $12910 = (_name$1 + "-elim");
        return $12910;
    };
    const Kind$Comp$Target$Scheme$elim_name = x0 => Kind$Comp$Target$Scheme$elim_name$(x0);

    function Kind$Comp$Target$Scheme$lambda$(_name$1, _body$2) {
        var $12911 = ("(lambda (" + (_name$1 + (") " + (_body$2 + ")"))));
        return $12911;
    };
    const Kind$Comp$Target$Scheme$lambda = x0 => x1 => Kind$Comp$Target$Scheme$lambda$(x0, x1);

    function Kind$Comp$Target$Scheme$application$(_func$1, _argm$2) {
        var $12912 = ("(" + (_func$1 + (" " + (_argm$2 + ")"))));
        return $12912;
    };
    const Kind$Comp$Target$Scheme$application = x0 => x1 => Kind$Comp$Target$Scheme$application$(x0, x1);

    function Kind$Comp$Target$Scheme$local_definition$(_name$1, _expr$2, _body$3) {
        var $12913 = ("(let ((" + (_name$1 + (" " + (_expr$2 + (")) " + (_body$3 + ")"))))));
        return $12913;
    };
    const Kind$Comp$Target$Scheme$local_definition = x0 => x1 => x2 => Kind$Comp$Target$Scheme$local_definition$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$global_application$(_name$1, _args$2) {
        var $12914 = ("($" + (_name$1 + (" " + (String$join$(" ", _args$2) + ")"))));
        return $12914;
    };
    const Kind$Comp$Target$Scheme$global_application = x0 => x1 => Kind$Comp$Target$Scheme$global_application$(x0, x1);

    function Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, _rem_args$3) {
        var self = _rem_args$3;
        switch (self._) {
            case 'List.cons':
                var $12916 = self.head;
                var $12917 = self.tail;
                var $12918 = Kind$Comp$Target$Scheme$lambda$($12916, Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, $12917));
                var $12915 = $12918;
                break;
            case 'List.nil':
                var $12919 = Kind$Comp$Target$Scheme$global_application$(_fun$1, _args$2);
                var $12915 = $12919;
                break;
        };
        return $12915;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas$aux = x0 => x1 => x2 => Kind$Comp$Target$Scheme$nest_lambdas$aux$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2) {
        var _body$3 = Kind$Comp$Target$Scheme$nest_lambdas$aux$(_name$1, _args$2, _args$2);
        var $12920 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
        return $12920;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas = x0 => x1 => Kind$Comp$Target$Scheme$nest_lambdas$(x0, x1);

    function Kind$Comp$Target$Scheme$global_function$(_name$1, _args$2, _body$3) {
        var self = _args$2;
        switch (self._) {
            case 'List.nil':
                var $12922 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
                var $12921 = $12922;
                break;
            case 'List.cons':
                var $12923 = ("(define ($" + (_name$1 + (" " + (String$join$(" ", _args$2) + (") " + (_body$3 + (")\u{a}" + Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2))))))));
                var $12921 = $12923;
                break;
        };
        return $12921;
    };
    const Kind$Comp$Target$Scheme$global_function = x0 => x1 => x2 => Kind$Comp$Target$Scheme$global_function$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$select$(_term$1, _cse_body_list$2) {
        var _cses$3 = "";
        var _cses$4 = (() => {
            var $12926 = _cses$3;
            var $12927 = _cse_body_list$2;
            let _cses$5 = $12926;
            let _cse_body$4;
            while ($12927._ === 'List.cons') {
                _cse_body$4 = $12927.head;
                var self = _cse_body$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12928 = self.fst;
                        var $12929 = self.snd;
                        var $12930 = (_cses$5 + (" (" + ($12928 + (" " + ($12929 + ")")))));
                        var $12926 = $12930;
                        break;
                };
                _cses$5 = $12926;
                $12927 = $12927.tail;
            }
            return _cses$5;
        })();
        var $12924 = ("(case " + (_term$1 + (_cses$4 + ")")));
        return $12924;
    };
    const Kind$Comp$Target$Scheme$select = x0 => x1 => Kind$Comp$Target$Scheme$select$(x0, x1);

    function Char$to_string$(_chr$1) {
        var $12931 = String$cons$(_chr$1, String$nil);
        return $12931;
    };
    const Char$to_string = x0 => Char$to_string$(x0);

    function Kind$Comp$Target$Scheme$string_literal$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $12933 = "";
            var $12932 = $12933;
        } else {
            var $12934 = self.charCodeAt(0);
            var $12935 = self.slice(1);
            var $12936 = ((() => {
                var self = (($12934 === 92) || ($12934 === 34));
                if (self) {
                    var $12937 = ("\\" + Char$to_string$($12934));
                    return $12937;
                } else {
                    var self = (($12934 >= 32) && ($12934 <= 126));
                    if (self) {
                        var $12939 = Char$to_string$($12934);
                        var $12938 = $12939;
                    } else {
                        var $12940 = ("\\x" + (U16$show_hex$($12934) + ";"));
                        var $12938 = $12940;
                    };
                    return $12938;
                };
            })() + Kind$Comp$Target$Scheme$string_literal$($12935));
            var $12932 = $12936;
        };
        return $12932;
    };
    const Kind$Comp$Target$Scheme$string_literal = x0 => Kind$Comp$Target$Scheme$string_literal$(x0);

    function Kind$Comp$Target$Scheme$nat$(_nat$1) {
        var $12941 = Nat$show$(_nat$1);
        return $12941;
    };
    const Kind$Comp$Target$Scheme$nat = x0 => Kind$Comp$Target$Scheme$nat$(x0);
    const Kind$Comp$Target$Scheme$exports = List$cons$("suffix?", List$cons$("prefix?", List$cons$("run-all", List$cons$("run_io", List$cons$("print-lines", List$cons$("run_kind", List$cons$("make-string-view", List$cons$("string-view?", List$cons$("string-view-end", List$cons$("string-view-start", List$cons$("kstring-length", List$cons$("kstring-head", List$cons$("kstring-tail", List$cons$("string-view-ref", List$cons$("kstring?", List$cons$("kstring->string", List$cons$("kstring-append", List$cons$("kstring-getter", List$cons$("kstring_join", List$nil)))))))))))))))))));

    function Kind$Comp$Target$Scheme$module$(_name$1, _exports$2, _defs$3) {
        var _code$4 = ("#!chezscheme\u{a}(library (" + (_name$1 + ") (export"));
        var _code$5 = (() => {
            var $12944 = _code$4;
            var $12945 = Kind$Comp$Target$Scheme$exports;
            let _code$6 = $12944;
            let _export$5;
            while ($12945._ === 'List.cons') {
                _export$5 = $12945.head;
                var $12944 = (_code$6 + (" " + _export$5));
                _code$6 = $12944;
                $12945 = $12945.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12947 = _code$5;
            var $12948 = _exports$2;
            let _code$7 = $12947;
            let _export$6;
            while ($12948._ === 'List.cons') {
                _export$6 = $12948.head;
                var $12947 = (_code$7 + (" " + _export$6));
                _code$7 = $12947;
                $12948 = $12948.tail;
            }
            return _code$7;
        })();
        var _code$7 = (_code$6 + ")\u{a}");
        var _code$8 = (_code$7 + "(import (chezscheme))\u{a}");
        var _code$9 = (_code$8 + (_defs$3 + ")"));
        var $12942 = _code$9;
        return $12942;
    };
    const Kind$Comp$Target$Scheme$module = x0 => x1 => x2 => Kind$Comp$Target$Scheme$module$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$program$(_main$1, _defs$2) {
        var _code$3 = (_defs$2 + ("(run_kind " + (_main$1 + ")")));
        var $12949 = _code$3;
        return $12949;
    };
    const Kind$Comp$Target$Scheme$program = x0 => x1 => Kind$Comp$Target$Scheme$program$(x0, x1);
    const Kind$Comp$Target$Scheme$grammar = Kind$Comp$Grammar$new$(Kind$Comp$Target$Scheme$null, Kind$Comp$Target$Scheme$name, Kind$Comp$Target$Scheme$inst_name, Kind$Comp$Target$Scheme$elim_name, Kind$Comp$Target$Scheme$lambda, Kind$Comp$Target$Scheme$application, Kind$Comp$Target$Scheme$local_definition, Kind$Comp$Target$Scheme$global_function, Kind$Comp$Target$Scheme$global_application, Kind$Comp$Target$Scheme$select, Kind$Comp$Target$Scheme$string_literal, Kind$Comp$Target$Scheme$nat, Kind$Comp$Target$Scheme$module, Kind$Comp$Target$Scheme$program);

    function Kind$Comp$Native$new$(_inst$1, _elim$2) {
        var $12950 = ({
            _: 'Kind.Comp.Native.new',
            'inst': _inst$1,
            'elim': _elim$2
        });
        return $12950;
    };
    const Kind$Comp$Native$new = x0 => x1 => Kind$Comp$Native$new$(x0, x1);

    function Kind$Comp$Target$Scheme$natives$(_prim$1) {
        var self = _prim$1;
        switch (self._) {
            case 'Kind.Comp.Prim.data':
                var $12952 = self.name;
                var $12953 = self.ctrs;
                var $12954 = Kind$Comp$Native$new$(List$fold$($12953, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12956 = self.fst;
                            var $12957 = self.snd;
                            var _fields_size$8 = (list_length($12957));
                            var _fields_vars$9 = String$join$("", List$create$(_fields_size$8, (_x$9 => {
                                var $12959 = (" $" + Nat$show$(_x$9));
                                return $12959;
                            })));
                            var $12958 = List$cons$(Pair$new$(_fields_size$8, ("(vector \'" + ($12952 + ("." + ($12956 + (_fields_vars$9 + ")")))))), _result$5);
                            var $12955 = $12958;
                            break;
                    };
                    return $12955;
                })), Pair$new$("(get $0 0)", List$fold$($12953, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12961 = self.fst;
                            var $12962 = self.snd;
                            var _fields_size$8 = (list_length($12962));
                            var _fields_gets$9 = List$create$(_fields_size$8, (_i$9 => {
                                var $12964 = ("(get $0 " + (Nat$show$(Nat$succ$(_i$9)) + ")"));
                                return $12964;
                            }));
                            var $12963 = List$cons$(Pair$new$(("\'" + ($12952 + ("." + $12961))), _fields_gets$9), _result$5);
                            var $12960 = $12963;
                            break;
                    };
                    return $12960;
                }))));
                var $12951 = $12954;
                break;
            case 'Kind.Comp.Prim.bool':
                var $12965 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$cons$(Pair$new$(0n, "#f"), List$nil)), Pair$new$("$0", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$nil), List$nil))));
                var $12951 = $12965;
                break;
            case 'Kind.Comp.Prim.bits':
                var $12966 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#b1"), List$cons$(Pair$new$(1n, "(bitwise-arithmetic-shift-left $0 #b1)"), List$cons$(Pair$new$(1n, "(bitwise-ior (bitwise-arithmetic-shift-left $0 #b1) #b1)"), List$nil))), Pair$new$("(if (eq? $0 #b1) 2 (bitwise-and $0 #b1))", List$cons$(Pair$new$("2", List$nil), List$cons$(Pair$new$("0", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$cons$(Pair$new$("1", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$nil)))));
                var $12951 = $12966;
                break;
            case 'Kind.Comp.Prim.unit':
                var $12967 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$nil), List$nil)));
                var $12951 = $12967;
                break;
            case 'Kind.Comp.Prim.nat':
                var $12968 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "0"), List$cons$(Pair$new$(1n, "(+ $0 1)"), List$nil)), Pair$new$("(= $0 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(- $0 1)", List$nil)), List$nil))));
                var $12951 = $12968;
                break;
            case 'Kind.Comp.Prim.u16':
                var $12969 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u16 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u16-to-word $0)", List$nil)), List$nil)));
                var $12951 = $12969;
                break;
            case 'Kind.Comp.Prim.u32':
                var $12970 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u 32 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u-to-word 32 $0)", List$nil)), List$nil)));
                var $12951 = $12970;
                break;
            case 'Kind.Comp.Prim.string':
                var $12971 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "\"\""), List$cons$(Pair$new$(2n, "(kstring-append (make-string 1 (integer->char $0)) $1)"), List$nil)), Pair$new$("(<= (kstring-length $0) 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(char->integer (kstring-head $0))", List$cons$("(kstring-tail $0)", List$nil))), List$nil))));
                var $12951 = $12971;
                break;
        };
        return $12951;
    };
    const Kind$Comp$Target$Scheme$natives = x0 => Kind$Comp$Target$Scheme$natives$(x0);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $12972 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $12972;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $12973 = word_to_u32(_value$1);
        return $12973;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $12974 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $12974;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $12976 = self.size;
                var $12977 = $12976;
                var $12975 = $12977;
                break;
            case 'BBT.tip':
                var $12978 = 0;
                var $12975 = $12978;
                break;
        };
        return $12975;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $12979 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $12979;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $12981 = Bool$false;
                var $12980 = $12981;
                break;
            case 'Cmp.gtn':
                var $12982 = Bool$true;
                var $12980 = $12982;
                break;
        };
        return $12980;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $12983 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $12983;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $12985 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $12984 = $12985;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $12988 = self.key;
                        var $12989 = self.val;
                        var $12990 = self.left;
                        var $12991 = self.right;
                        var _size_rl$17 = BBT$size$($12990);
                        var _size_rr$18 = BBT$size$($12991);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $12988;
                            var _new_val$20 = $12989;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $12990);
                            var _new_right$22 = $12991;
                            var $12993 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $12992 = $12993;
                        } else {
                            var self = $12990;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $12995 = self.key;
                                    var $12996 = self.val;
                                    var $12997 = self.left;
                                    var $12998 = self.right;
                                    var _new_key$24 = $12995;
                                    var _new_val$25 = $12996;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $12997);
                                    var _new_right$27 = BBT$node$($12988, $12989, $12998, $12991);
                                    var $12999 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $12994 = $12999;
                                    break;
                                case 'BBT.tip':
                                    var $13000 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $12994 = $13000;
                                    break;
                            };
                            var $12992 = $12994;
                        };
                        var $12987 = $12992;
                        break;
                    case 'BBT.tip':
                        var $13001 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $12987 = $13001;
                        break;
                };
                var $12986 = $12987;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $13004 = self.key;
                            var $13005 = self.val;
                            var $13006 = self.left;
                            var $13007 = self.right;
                            var _size_ll$17 = BBT$size$($13006);
                            var _size_lr$18 = BBT$size$($13007);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $13004;
                                var _new_val$20 = $13005;
                                var _new_left$21 = $13006;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $13007, _r$6);
                                var $13009 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $13008 = $13009;
                            } else {
                                var self = $13007;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $13011 = self.key;
                                        var $13012 = self.val;
                                        var $13013 = self.left;
                                        var $13014 = self.right;
                                        var _new_key$24 = $13011;
                                        var _new_val$25 = $13012;
                                        var _new_left$26 = BBT$node$($13004, $13005, $13006, $13013);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $13014, _r$6);
                                        var $13015 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $13010 = $13015;
                                        break;
                                    case 'BBT.tip':
                                        var $13016 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $13010 = $13016;
                                        break;
                                };
                                var $13008 = $13010;
                            };
                            var $13003 = $13008;
                            break;
                        case 'BBT.tip':
                            var $13017 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $13003 = $13017;
                            break;
                    };
                    var $13002 = $13003;
                } else {
                    var $13018 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $13002 = $13018;
                };
                var $12986 = $13002;
            };
            var $12984 = $12986;
        };
        return $12984;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $13020 = self.key;
                var $13021 = self.val;
                var $13022 = self.left;
                var $13023 = self.right;
                var self = _cmp$3(_key$4)($13020);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $13020;
                        var _new_val$13 = $13021;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $13022);
                        var _new_right$15 = $13023;
                        var $13025 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $13024 = $13025;
                        break;
                    case 'Cmp.eql':
                        var $13026 = BBT$node$(_key$4, _val$5, $13022, $13023);
                        var $13024 = $13026;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $13020;
                        var _new_val$13 = $13021;
                        var _new_left$14 = $13022;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $13023);
                        var $13027 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $13024 = $13027;
                        break;
                };
                var $13019 = $13024;
                break;
            case 'BBT.tip':
                var $13028 = BBT$singleton$(_key$4, _val$5);
                var $13019 = $13028;
                break;
        };
        return $13019;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $13029 = self.head;
                        var $13030 = self.tail;
                        var _key$8 = Pair$fst$($13029);
                        var _val$9 = Pair$snd$($13029);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $13031 = BBT$from_list$go$(_cmp$3, _new_acc$10, $13030);
                        return $13031;
                    case 'List.nil':
                        var $13032 = _acc$4;
                        return $13032;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $13033 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $13033;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $13034 = BBT$from_list$(String$cmp, _xs$2);
        return $13034;
    };
    const Map$from_list = x0 => Map$from_list$(x0);
    const Kind$Comp$Target$Scheme$optimizeds = Map$from_list$(List$cons$(Pair$new$("Bool.not", Pair$new$(1n, "(not $0)")), List$cons$(Pair$new$("Bool.and", Pair$new$(2n, "(and $0 $1)")), List$cons$(Pair$new$("Bool.if", Pair$new$(3n, "(if $0 $1 $2)")), List$cons$(Pair$new$("Bool.or", Pair$new$(2n, "(or $0 $1)")), List$cons$(Pair$new$("Nat.add", Pair$new$(2n, "(+ $0 $1)")), List$cons$(Pair$new$("Nat.sub", Pair$new$(2n, "(max (- $0 $1) 0)")), List$cons$(Pair$new$("Nat.mul", Pair$new$(2n, "(* $0 $1)")), List$cons$(Pair$new$("Nat.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("Nat.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("Nat.pow", Pair$new$(2n, "(expt $0 $1)")), List$cons$(Pair$new$("Nat.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("Nat.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("Nat.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("Nat.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("Nat.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("Nat.to_u16", Pair$new$(1n, "$0")), List$cons$(Pair$new$("Nat.show", Pair$new$(1n, "(number->string $0)")), List$cons$(Pair$new$("U16.add", Pair$new$(2n, "(mod (+ $0 $1) 65536)")), List$cons$(Pair$new$("U16.sub", Pair$new$(2n, "(mod (- $0 $1) 65536)")), List$cons$(Pair$new$("U16.mul", Pair$new$(2n, "(mod (* $0 $1) 65536)")), List$cons$(Pair$new$("U16.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("U16.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("U16.pow", Pair$new$(2n, "(mod (expt $0 $1) 65536)")), List$cons$(Pair$new$("U16.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("U16.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("U16.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("U16.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("U16.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("U16.inc", Pair$new$(2n, "(+ $0 1)")), List$cons$(Pair$new$("U16.to_nat", Pair$new$(1n, "$0")), List$cons$(Pair$new$("String.eql", Pair$new$(2n, "(string=? (kstring->string $0) (kstring->string $1))")), List$cons$(Pair$new$("String.concat", Pair$new$(2n, "(kstring-append $0 $1)")), List$nil)))))))))))))))))))))))))))))))));
    const Kind$Comp$Target$Scheme$basics = "; string-view record type (fast way to get a tail)\u{a}(define-record string-view\u{a}  ((immutable data)  ; underlying string\u{a}   (immutable start) ; start position (inclusive)\u{a}   (immutable end))) ; end position (exclusive)\u{a}\u{a}(define string-view-ref\u{a}  (lambda (x y)\u{a}    (string-ref (string-view-data x) (+ (string-view-start x) y))))\u{a}\u{a}(define kstring-tail\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (make-string-view\u{a}        (string-view-data x)\u{a}        (+ (string-view-start x) 1)\u{a}        (string-view-end x))\u{a}      (make-string-view\u{a}        x\u{a}        1\u{a}        (string-length x)))))\u{a}\u{a}(define kstring-head\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (string-ref (string-view-data x) (string-view-start x))\u{a}      (string-ref x 0))))\u{a}\u{a}(define kstring-length\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (- (string-view-end x) (string-view-start x))\u{a}      (string-length x))))\u{a}\u{a}(define kstring?\u{a}  (lambda (x)\u{a}    (or (string-view? x) (string? x))))\u{a}\u{a}(define kstring->string\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (substring (string-view-data x) (string-view-start x) (string-view-end x))\u{a}      x)))\u{a}\u{a}; TODO depending on x, we could safely append data at the end\u{a}(define kstring-append\u{a}  (lambda (x y)\u{a}    (string-append (kstring->string x) (kstring->string y))))\u{a}\u{a}(define kstring-getter\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      string-view-ref\u{a}      string-ref)))\u{a}\u{a}; Joins a list of strings with an intercalated separator\u{a}(define (kstring_join sep strs fst)\u{a}  (if (null? strs) \u{a}    \"\"\u{a}    (kstring-append\u{a}      (if fst \"\" sep)\u{a}      (car strs)\u{a}      (kstring_join sep (cdr strs) #f))))\u{a}\u{a}; Short alias to vector-ref\u{a}(define get vector-ref)\u{a}\u{a}; Converts a Kind word to a native integer\u{a}(define (word-to-u16 w)\u{a}  (define (word-to-u16-go i w x)\u{a}    (cond ((= 16 i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u16-go (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u16-go (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u16-go (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u16-go 0 w 0))\u{a}\u{a}(define (word-to-u n w)\u{a}  (define (word-to-u-go n i w x)\u{a}    (cond ((= n i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u-go n (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u-go n (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u-go n (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u-go n 0 w 0))\u{a}\u{a}; Converts a native integer to a Kind word\u{a}(define (u16-to-word x)\u{a}  (define (u16-to-word-go i x w)\u{a}    (if (= 16 i) w (u16-to-word-go (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- 15 i)) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u16-to-word-go 0 x (vector \'Word.e)))\u{a}\u{a}(define (u-to-word n x)\u{a}  (define (u-to-word-go n i x w)\u{a}    (if (= n i) w (u-to-word-go n (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- n (+ i 1))) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u-to-word-go n 0 x (vector \'Word.e)))\u{a}\u{a}(define suffix?\u{a}  (lambda (str suff)\u{a}    (let ((suff_length (string-length suff))\u{a}          (str_length (string-length str)))\u{a}      (if (<= suff_length str_length)\u{a}        (string=?\u{a}          (substring str (- str_length suff_length) str_length)\u{a}          suff)\u{a}        #f))))\u{a}\u{a}(define prefix?\u{a}  (lambda (str pref)\u{a}    (let ((pref_length (string-length pref))\u{a}          (str_length (string-length str)))\u{a}      (if (<= pref_length str_length)\u{a}        (string=?\u{a}          (substring str 0 pref_length)\u{a}          pref)\u{a}        #f))))\u{a}\u{a}; Returns the last index that chr occurs in str, -1 otherwise\u{a}(define (last_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (kstring-length str))\u{a}      -1\u{a}      (let ((rest (last_index_of chr str (+ idx 1))))\u{a}        (if (char=? (string-ref str idx) chr)\u{a}          (max idx rest)\u{a}          rest)))))\u{a}\u{a}; Returns the first index that chr occurs in str, -1 otherwise\u{a}(define (first_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (string-length str))\u{a}      -1\u{a}      (if (char=? (string-ref str idx) chr)\u{a}        idx\u{a}        (first_index_of chr str (+ idx 1))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_first chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (first_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_last chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (last_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Converts a date to a string, in milliseconds\u{a}(define (time_to_string time)\u{a}  (number->string\u{a}    (+ (* (time-second time) 1000)\u{a}      (div (time-nanosecond time) 1000000))))\u{a}\u{a}; Prints a text with a newline\u{a}(define (print txt)\u{a}  (display (kstring->string txt))\u{a}  (display \"\u{a}\"))\u{a}\u{a}; Gets a line from stdin\u{a}(define (get_line)\u{a}  (let ((port (current-input-port)))\u{a}    (get-line port)))\u{a}\u{a}; Deletes a file\u{a}(define (del_file file)\u{a}  (delete-file (kstring->string file)))\u{a}\u{a}; Gets the contents of a file as a string\u{a}; If it doesn\'t exist, returns empty\u{a}(define (get_file ifile)\u{a}  (let ((file (kstring->string ifile)))\u{a}    (if (file-exists? file)\u{a}      (let ((port (open-input-file file)))\u{a}        (let ((text (get-string-all port)))\u{a}          (begin\u{a}            (close-input-port port)\u{a}            text)))\u{a}      \"\")))\u{a}\u{a}; Sets the contents of a file\u{a}(define (set_file file text)\u{a}  (system (string-append \"mkdir -p \" (car (split_at_last #\\/ file))))\u{a}  (if (file-exists? file) (delete-file file))\u{a}  (let ((port (open-output-file file)))\u{a}    (begin\u{a}      (display text port)\u{a}      (close-output-port port))))\u{a}\u{a}; Returns a list of files in a directory\u{a}(define (get_dir path)\u{a}  (directory-list path)) \u{a}\u{a}; Returns the time a file was modified. TODO: test on Windows/Linux\u{a}(define (get_file_mtime file)\u{a}  (time_to_string (file-modification-time (kstring->string file))))\u{a}\u{a}; Returns the current time\u{a}(define (get_time)\u{a}  (time_to_string (current-time)))\u{a}\u{a}; Performs a single Kind IO action\u{a}(define (io_action iname)\u{a}  (let ((name (kstring->string iname)))\u{a}  (case name\u{a}    (\"print\" (lambda (x) (print x)))\u{a}    (\"put_string\" (lambda (x) (display x)))\u{a}    (\"get_line\" (lambda (x) (get_line)))\u{a}    (\"del_file\" (lambda (x) (del_file x)))\u{a}    (\"get_file\" (lambda (x) (get_file x)))\u{a}    (\"set_file\" (lambda (x) (let ((file_text (split_at_first #\\= (kstring->string x)))) (set_file (car file_text) (cdr file_text)))))\u{a}    (\"get_dir\" (lambda (x) (get_dir x)))\u{a}    (\"get_file_mtime\" (lambda (x) (get_file_mtime x)))\u{a}    (\"get_time\" (lambda (x) (get_time)))\u{a}    (\"request\" (lambda (x) \"\"))\u{a}    (else (display (string-append \"IO action not found: \" name))))))\u{a}\u{a}; Runs a Kind IO program\u{a}(define (run_io io)\u{a}  (case (vector-ref io 0)\u{a}    (\'IO.end (vector-ref io 1))\u{a}    (\'IO.ask (let (\u{a}      (io_query (vector-ref io 1))\u{a}      (io_param (vector-ref io 2))\u{a}      (io_then (vector-ref io 3)))\u{a}      (run_io (io_then ((io_action io_query) io_param)))))))\u{a}\u{a}(define (run_kind term)\u{a}  (if\u{a}    (and\u{a}      (vector? term)\u{a}      (or\u{a}        (eq? (vector-ref term 0) \'IO.ask)\u{a}        (eq? (vector-ref term 0) \'IO.end)))\u{a}    (run_io term)\u{a}    (print term)))\u{a}\u{a}(define (print-lines args)\u{a}  (unless (null? args)\u{a}    (display (car args))\u{a}    (newline)\u{a}    (print-lines (cdr args))))\u{a}\u{a}(define run-all\u{a}    (lambda (p)\u{a}      (let ((code (get-datum p)))\u{a}        (unless (eq? code #!eof)\u{a}          (compile code)\u{a}          (run-all p)))))\u{a}";
    const Kind$Comp$Target$Scheme$Language = Kind$Comp$Language$new$(Kind$Comp$Target$Scheme$grammar, Kind$Comp$Target$Scheme$natives, Kind$Comp$Target$Scheme$optimizeds, Kind$Comp$Target$Scheme$basics);

    function Kind$api$io$term_to_scheme$(_name$1) {
        var $13035 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13036 = _m$bind$2;
            return $13036;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var _defs$3 = Maybe$default$(_defs$2, Kind$Map$new);
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$(Kind$Comp$Target$Scheme$Language, _name$1, _compiled$4);
            var $13037 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13038 = _m$pure$7;
                return $13038;
            }))(_schemed$5);
            return $13037;
        }));
        return $13035;
    };
    const Kind$api$io$term_to_scheme = x0 => Kind$api$io$term_to_scheme$(x0);

    function Kind$Synth$many$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $13040 = self.head;
                var $13041 = self.tail;
                var $13042 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13043 = _m$bind$5;
                    return $13043;
                }))(Kind$Synth$one$($13040, _defs$2))((_new_defs$5 => {
                    var self = _new_defs$5;
                    switch (self._) {
                        case 'Maybe.some':
                            var $13045 = self.value;
                            var $13046 = Kind$Synth$many$($13041, $13045);
                            var $13044 = $13046;
                            break;
                        case 'Maybe.none':
                            var $13047 = Kind$Synth$many$($13041, _defs$2);
                            var $13044 = $13047;
                            break;
                    };
                    return $13044;
                }));
                var $13039 = $13042;
                break;
            case 'List.nil':
                var $13048 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13049 = _m$pure$4;
                    return $13049;
                }))(_defs$2);
                var $13039 = $13048;
                break;
        };
        return $13039;
    };
    const Kind$Synth$many = x0 => x1 => Kind$Synth$many$(x0, x1);

    function Kind$Comp$dependency_sort$module$(_exports$1, _defs$2) {
        var _ret$3 = Pair$new$(Kind$Map$new, List$nil);
        var _ret$4 = (() => {
            var $13052 = _ret$3;
            var $13053 = _exports$1;
            let _ret$5 = $13052;
            let _export$4;
            while ($13053._ === 'List.cons') {
                _export$4 = $13053.head;
                var _term$6 = Kind$Comp$ref$(_export$4);
                var self = _ret$5;
                switch (self._) {
                    case 'Pair.new':
                        var $13054 = self.fst;
                        var $13055 = self.snd;
                        var $13056 = Kind$Comp$dependency_sort$go$(_term$6, _defs$2, $13054, $13055);
                        var $13052 = $13056;
                        break;
                };
                _ret$5 = $13052;
                $13053 = $13053.tail;
            }
            return _ret$5;
        })();
        var self = _ret$4;
        switch (self._) {
            case 'Pair.new':
                var $13057 = self.snd;
                var $13058 = List$reverse$($13057);
                var $13050 = $13058;
                break;
        };
        return $13050;
    };
    const Kind$Comp$dependency_sort$module = x0 => x1 => Kind$Comp$dependency_sort$module$(x0, x1);

    function Kind$Comp$transpile$module$(_lang$1, _name$2, _exports$3, _defs$4) {
        var _defs_list$5 = Kind$Comp$dependency_sort$module$(_exports$3, _defs$4);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $13060 = self.gram;
                var $13061 = $13060;
                var self = $13061;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $13062 = self.module;
                var $13063 = $13062;
                var _code$6 = $13063;
                break;
        };
        var _code$6 = _code$6(_name$2)(_exports$3)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $13064 = self.base;
                    var $13065 = $13064;
                    return $13065;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$5, _defs$4))));
        var $13059 = _code$6;
        return $13059;
    };
    const Kind$Comp$transpile$module = x0 => x1 => x2 => x3 => Kind$Comp$transpile$module$(x0, x1, x2, x3);

    function Kind$api$io$terms_to_scheme_lib$(_name$1, _exports$2) {
        var $13066 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13067 = _m$bind$3;
            return $13067;
        }))(Kind$Synth$many$(_exports$2, Kind$Map$new))((_defs$3 => {
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$module$(Kind$Comp$Target$Scheme$Language, _name$1, _exports$2, _compiled$4);
            var $13068 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13069 = _m$pure$7;
                return $13069;
            }))(_schemed$5);
            return $13068;
        }));
        return $13066;
    };
    const Kind$api$io$terms_to_scheme_lib = x0 => x1 => Kind$api$io$terms_to_scheme_lib$(x0, x1);

    function BitsMap$keys$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $13071 = self.val;
                var $13072 = self.lft;
                var $13073 = self.rgt;
                var self = $13071;
                switch (self._) {
                    case 'Maybe.none':
                        var $13075 = _list$4;
                        var _list0$8 = $13075;
                        break;
                    case 'Maybe.some':
                        var $13076 = List$cons$(Bits$reverse$(_key$3), _list$4);
                        var _list0$8 = $13076;
                        break;
                };
                var _list1$9 = BitsMap$keys$go$($13072, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$keys$go$($13073, (_key$3 + '1'), _list1$9);
                var $13074 = _list2$10;
                var $13070 = $13074;
                break;
            case 'BitsMap.new':
                var $13077 = _list$4;
                var $13070 = $13077;
                break;
        };
        return $13070;
    };
    const BitsMap$keys$go = x0 => x1 => x2 => BitsMap$keys$go$(x0, x1, x2);

    function BitsMap$keys$(_xs$2) {
        var $13078 = List$reverse$(BitsMap$keys$go$(_xs$2, Bits$e, List$nil));
        return $13078;
    };
    const BitsMap$keys = x0 => BitsMap$keys$(x0);

    function Kind$Synth$file$(_file$1, _defs$2) {
        var $13079 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13080 = _m$bind$3;
            return $13080;
        }))(IO$get_file$(_file$1))((_code$3 => {
            var _read$4 = Kind$Defs$read$(_file$1, _code$3, _defs$2);
            var self = _read$4;
            switch (self._) {
                case 'Either.left':
                    var $13082 = self.value;
                    var $13083 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $13084 = _m$pure$7;
                        return $13084;
                    }))(Either$left$($13082));
                    var $13081 = $13083;
                    break;
                case 'Either.right':
                    var $13085 = self.value;
                    var _file_defs$6 = $13085;
                    var _file_keys$7 = BitsMap$keys$(_file_defs$6);
                    var _file_nams$8 = List$mapped$(_file_keys$7, Kind$Name$from_bits);
                    var $13086 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                        var $13087 = _m$bind$9;
                        return $13087;
                    }))(Kind$Synth$many$(_file_nams$8, _file_defs$6))((_defs$9 => {
                        var $13088 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                            var $13089 = _m$pure$11;
                            return $13089;
                        }))(Either$right$(Pair$new$(_file_nams$8, _defs$9)));
                        return $13088;
                    }));
                    var $13081 = $13086;
                    break;
            };
            return $13081;
        }));
        return $13079;
    };
    const Kind$Synth$file = x0 => x1 => Kind$Synth$file$(x0, x1);

    function IO$put_string$(_text$1) {
        var $13090 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $13091 = IO$end$(Unit$new);
            return $13091;
        }));
        return $13090;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $13092 = IO$put_string$((_text$1 + "\u{a}"));
        return $13092;
    };
    const IO$print = x0 => IO$print$(x0);

    function Kind$Term$show$as_nat$go$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $13094 = self.name;
                var self = ($13094 === "Nat.zero");
                if (self) {
                    var $13096 = Maybe$some$(0n);
                    var $13095 = $13096;
                } else {
                    var $13097 = Maybe$none;
                    var $13095 = $13097;
                };
                var $13093 = $13095;
                break;
            case 'Kind.Term.app':
                var $13098 = self.func;
                var $13099 = self.argm;
                var self = $13098;
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $13101 = self.name;
                        var self = ($13101 === "Nat.succ");
                        if (self) {
                            var $13103 = Maybe$monad$((_m$bind$5 => _m$pure$6 => {
                                var $13104 = _m$bind$5;
                                return $13104;
                            }))(Kind$Term$show$as_nat$go$($13099))((_pred$5 => {
                                var $13105 = Maybe$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $13106 = _m$pure$7;
                                    return $13106;
                                }))(Nat$succ$(_pred$5));
                                return $13105;
                            }));
                            var $13102 = $13103;
                        } else {
                            var $13107 = Maybe$none;
                            var $13102 = $13107;
                        };
                        var $13100 = $13102;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $13108 = Maybe$none;
                        var $13100 = $13108;
                        break;
                };
                var $13093 = $13100;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $13109 = Maybe$none;
                var $13093 = $13109;
                break;
        };
        return $13093;
    };
    const Kind$Term$show$as_nat$go = x0 => Kind$Term$show$as_nat$go$(x0);

    function Kind$Term$show$as_nat$(_term$1) {
        var $13110 = Maybe$mapped$(Kind$Term$show$as_nat$go$(_term$1), Nat$show);
        return $13110;
    };
    const Kind$Term$show$as_nat = x0 => Kind$Term$show$as_nat$(x0);

    function Kind$Term$show$is_ref$(_term$1, _name$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $13112 = self.name;
                var $13113 = (_name$2 === $13112);
                var $13111 = $13113;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $13114 = Bool$false;
                var $13111 = $13114;
                break;
        };
        return $13111;
    };
    const Kind$Term$show$is_ref = x0 => x1 => Kind$Term$show$is_ref$(x0, x1);

    function Kind$Term$show$app$done$(_term$1, _path$2, _args$3) {
        var _arity$4 = (list_length(_args$3));
        var self = (Kind$Term$show$is_ref$(_term$1, "Equal") && (_arity$4 === 3n));
        if (self) {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var _eq_lft$6 = Maybe$default$(List$at$(1n, _args$3), "?");
            var _eq_rgt$7 = Maybe$default$(List$at$(2n, _args$3), "?");
            var $13116 = String$flatten$(List$cons$(_eq_lft$6, List$cons$(" == ", List$cons$(_eq_rgt$7, List$nil))));
            var $13115 = $13116;
        } else {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var self = _func$5;
            if (self.length === 0) {
                var $13118 = Bool$false;
                var _wrap$6 = $13118;
            } else {
                var $13119 = self.charCodeAt(0);
                var $13120 = self.slice(1);
                var $13121 = ($13119 === 40);
                var _wrap$6 = $13121;
            };
            var _args$7 = String$join$(",", _args$3);
            var self = _wrap$6;
            if (self) {
                var $13122 = String$flatten$(List$cons$("(", List$cons$(_func$5, List$cons$(")", List$nil))));
                var _func$8 = $13122;
            } else {
                var $13123 = _func$5;
                var _func$8 = $13123;
            };
            var $13117 = String$flatten$(List$cons$(_func$8, List$cons$("(", List$cons$(_args$7, List$cons$(")", List$nil)))));
            var $13115 = $13117;
        };
        return $13115;
    };
    const Kind$Term$show$app$done = x0 => x1 => x2 => Kind$Term$show$app$done$(x0, x1, x2);

    function Kind$Term$show$app$(_term$1, _path$2, _args$3) {
        var Kind$Term$show$app$ = (_term$1, _path$2, _args$3) => ({
            ctr: 'TCO',
            arg: [_term$1, _path$2, _args$3]
        });
        var Kind$Term$show$app = _term$1 => _path$2 => _args$3 => Kind$Term$show$app$(_term$1, _path$2, _args$3);
        var arg = [_term$1, _path$2, _args$3];
        while (true) {
            let [_term$1, _path$2, _args$3] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $13124 = self.func;
                        var $13125 = self.argm;
                        var $13126 = Kind$Term$show$app$($13124, Kind$Path$Maybe$Builder$o$(_path$2), List$cons$(Kind$Term$show$go$($13125, Kind$Path$Maybe$Builder$i$(_path$2)), _args$3));
                        return $13126;
                    case 'Kind.Term.ori':
                        var $13127 = self.expr;
                        var $13128 = Kind$Term$show$app$($13127, _path$2, _args$3);
                        return $13128;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $13129 = Kind$Term$show$app$done$(_term$1, _path$2, _args$3);
                        return $13129;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$show$app = x0 => x1 => x2 => Kind$Term$show$app$(x0, x1, x2);

    function BitsMap$to_list$(_xs$2) {
        var $13130 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        return $13130;
    };
    const BitsMap$to_list = x0 => BitsMap$to_list$(x0);

    function Kind$Term$show$go$(_term$1, _path$2) {
        var self = Kind$Term$show$as_nat$(_term$1);
        switch (self._) {
            case 'Maybe.some':
                var $13132 = self.value;
                var $13133 = $13132;
                var $13131 = $13133;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $13135 = self.name;
                        var $13136 = Kind$Name$show$($13135);
                        var $13134 = $13136;
                        break;
                    case 'Kind.Term.ref':
                        var $13137 = self.name;
                        var _name$4 = Kind$Name$show$($13137);
                        var self = _path$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13139 = self.value;
                                var _path_val$6 = ((Bits$e + '1') + Kind$Path$Builder$to_bits$($13139));
                                var _path_str$7 = Nat$show$(Bits$to_nat$(_path_val$6));
                                var $13140 = String$flatten$(List$cons$(_name$4, List$cons$(Kind$Code$color$("2", ("-" + _path_str$7)), List$nil)));
                                var $13138 = $13140;
                                break;
                            case 'Maybe.none':
                                var $13141 = _name$4;
                                var $13138 = $13141;
                                break;
                        };
                        var $13134 = $13138;
                        break;
                    case 'Kind.Term.all':
                        var $13142 = self.eras;
                        var $13143 = self.self;
                        var $13144 = self.name;
                        var $13145 = self.xtyp;
                        var $13146 = self.body;
                        var _eras$8 = $13142;
                        var _self$9 = Kind$Name$show$($13143);
                        var _name$10 = Kind$Name$show$($13144);
                        var _type$11 = Kind$Term$show$go$($13145, Kind$Path$Maybe$Builder$o$(_path$2));
                        var self = _eras$8;
                        if (self) {
                            var $13148 = "<";
                            var _open$12 = $13148;
                        } else {
                            var $13149 = "(";
                            var _open$12 = $13149;
                        };
                        var self = _eras$8;
                        if (self) {
                            var $13150 = ">";
                            var _clos$13 = $13150;
                        } else {
                            var $13151 = ")";
                            var _clos$13 = $13151;
                        };
                        var _body$14 = Kind$Term$show$go$($13146(Kind$Term$var$($13143, 0n))(Kind$Term$var$($13144, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13147 = String$flatten$(List$cons$(_self$9, List$cons$(_open$12, List$cons$(_name$10, List$cons$(":", List$cons$(_type$11, List$cons$(_clos$13, List$cons$(" ", List$cons$(_body$14, List$nil)))))))));
                        var $13134 = $13147;
                        break;
                    case 'Kind.Term.lam':
                        var $13152 = self.name;
                        var $13153 = self.body;
                        var _name$5 = Kind$Name$show$($13152);
                        var _body$6 = Kind$Term$show$go$($13153(Kind$Term$var$($13152, 0n)), Kind$Path$Maybe$Builder$o$(_path$2));
                        var $13154 = String$flatten$(List$cons$("(", List$cons$(_name$5, List$cons$(") ", List$cons$(_body$6, List$nil)))));
                        var $13134 = $13154;
                        break;
                    case 'Kind.Term.let':
                        var $13155 = self.name;
                        var $13156 = self.expr;
                        var $13157 = self.body;
                        var _name$6 = Kind$Name$show$($13155);
                        var _expr$7 = Kind$Term$show$go$($13156, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($13157(Kind$Term$var$($13155, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13158 = String$flatten$(List$cons$("let ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $13134 = $13158;
                        break;
                    case 'Kind.Term.def':
                        var $13159 = self.name;
                        var $13160 = self.expr;
                        var $13161 = self.body;
                        var _name$6 = Kind$Name$show$($13159);
                        var _expr$7 = Kind$Term$show$go$($13160, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($13161(Kind$Term$var$($13159, 0n)), Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13162 = String$flatten$(List$cons$("def ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $13134 = $13162;
                        break;
                    case 'Kind.Term.ann':
                        var $13163 = self.term;
                        var $13164 = self.type;
                        var _term$6 = Kind$Term$show$go$($13163, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _type$7 = Kind$Term$show$go$($13164, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13165 = String$flatten$(List$cons$(_term$6, List$cons$("::", List$cons$(_type$7, List$nil))));
                        var $13134 = $13165;
                        break;
                    case 'Kind.Term.gol':
                        var $13166 = self.name;
                        var _name$6 = Kind$Name$show$($13166);
                        var $13167 = String$flatten$(List$cons$("?", List$cons$(_name$6, List$nil)));
                        var $13134 = $13167;
                        break;
                    case 'Kind.Term.nat':
                        var $13168 = self.natx;
                        var $13169 = String$flatten$(List$cons$(Nat$show$($13168), List$nil));
                        var $13134 = $13169;
                        break;
                    case 'Kind.Term.chr':
                        var $13170 = self.chrx;
                        var $13171 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($13170), List$cons$("\'", List$nil))));
                        var $13134 = $13171;
                        break;
                    case 'Kind.Term.str':
                        var $13172 = self.strx;
                        var $13173 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($13172), List$cons$("\"", List$nil))));
                        var $13134 = $13173;
                        break;
                    case 'Kind.Term.num':
                        var $13174 = self.sign;
                        var $13175 = self.numb;
                        var $13176 = self.frac;
                        var $13177 = String$flatten$(List$cons$((() => {
                            var self = $13174;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13178 = self.value;
                                    var self = $13178;
                                    if (self) {
                                        var $13180 = "+";
                                        var $13179 = $13180;
                                    } else {
                                        var $13181 = "-";
                                        var $13179 = $13181;
                                    };
                                    return $13179;
                                case 'Maybe.none':
                                    var $13182 = "";
                                    return $13182;
                            };
                        })(), List$cons$(Nat$show$($13175), List$cons$((() => {
                            var self = $13176;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13183 = self.value;
                                    var $13184 = ("." + Nat$show$($13183));
                                    return $13184;
                                case 'Maybe.none':
                                    var $13185 = "";
                                    return $13185;
                            };
                        })(), List$nil))));
                        var $13134 = $13177;
                        break;
                    case 'Kind.Term.cse':
                        var $13186 = self.expr;
                        var $13187 = self.name;
                        var $13188 = self.with;
                        var $13189 = self.cses;
                        var $13190 = self.moti;
                        var _expr$9 = Kind$Term$show$go$($13186, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _name$10 = Kind$Name$show$($13187);
                        var _wyth$11 = String$join$("; ", List$mapped$($13188, (_with_var$11 => {
                            var self = _with_var$11;
                            switch (self._) {
                                case 'Kind.Ann.new':
                                    var $13193 = self.name;
                                    var $13194 = self.type;
                                    var self = $13194;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $13196 = self.value;
                                            var $13197 = ($13193 + (": " + Kind$Term$show$go$($13196, Maybe$none)));
                                            var $13195 = $13197;
                                            break;
                                        case 'Maybe.none':
                                            var $13198 = $13193;
                                            var $13195 = $13198;
                                            break;
                                    };
                                    var $13192 = $13195;
                                    break;
                            };
                            return $13192;
                        })));
                        var _cses$12 = BitsMap$to_list$($13189);
                        var _cses$13 = String$join$("", List$mapped$(_cses$12, (_x$13 => {
                            var _name$14 = Kind$Name$from_bits$(Pair$fst$(_x$13));
                            var _term$15 = Kind$Term$show$go$(Pair$snd$(_x$13), Maybe$none);
                            var $13199 = String$flatten$(List$cons$(_name$14, List$cons$(": ", List$cons$(_term$15, List$cons$(", ", List$nil)))));
                            return $13199;
                        })));
                        var self = $13190;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13200 = self.value;
                                var $13201 = String$flatten$(List$cons$(": ", List$cons$(Kind$Term$show$go$($13200, Maybe$none), List$nil)));
                                var _moti$14 = $13201;
                                break;
                            case 'Maybe.none':
                                var $13202 = "";
                                var _moti$14 = $13202;
                                break;
                        };
                        var $13191 = String$flatten$(List$cons$("case ", List$cons$(_expr$9, List$cons$(" as ", List$cons$(_name$10, List$cons$(_wyth$11, List$cons$(" { ", List$cons$(_cses$13, List$cons$("}", List$cons$(_moti$14, List$nil))))))))));
                        var $13134 = $13191;
                        break;
                    case 'Kind.Term.new':
                        var $13203 = self.args;
                        var _args$4 = List$fold$($13203, (_path$4 => {
                            var $13205 = List$nil;
                            return $13205;
                        }), (_arg$4 => _res$5 => _path$6 => {
                            var $13206 = List$cons$(Kind$Term$show$go$(_arg$4, _path$6), _res$5(Kind$Path$Maybe$Builder$o$(_path$6)));
                            return $13206;
                        }))(_path$2);
                        var $13204 = String$flatten$(List$cons$("{", List$cons$(String$join$(",", _args$4), List$cons$("}", List$nil))));
                        var $13134 = $13204;
                        break;
                    case 'Kind.Term.get':
                        var $13207 = self.expr;
                        var $13208 = self.fkey;
                        var _expr$5 = Kind$Term$show$go$($13207, Kind$Path$Maybe$Builder$o$(_path$2));
                        var $13209 = String$flatten$(List$cons$(_expr$5, List$cons$("@", List$cons$($13208, List$nil))));
                        var $13134 = $13209;
                        break;
                    case 'Kind.Term.set':
                        var $13210 = self.expr;
                        var $13211 = self.fkey;
                        var $13212 = self.fval;
                        var _expr$6 = Kind$Term$show$go$($13210, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _fval$7 = Kind$Term$show$go$($13212, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13213 = String$flatten$(List$cons$(_expr$6, List$cons$("@", List$cons$($13211, List$cons$(" <- ", List$cons$(_fval$7, List$nil))))));
                        var $13134 = $13213;
                        break;
                    case 'Kind.Term.ope':
                        var $13214 = self.name;
                        var $13215 = self.arg0;
                        var $13216 = self.arg1;
                        var _arg0$6 = Kind$Term$show$go$($13215, Kind$Path$Maybe$Builder$o$(_path$2));
                        var _arg1$7 = Kind$Term$show$go$($13216, Kind$Path$Maybe$Builder$i$(_path$2));
                        var $13217 = String$flatten$(List$cons$("(", List$cons$(_arg0$6, List$cons$(" ", List$cons$($13214, List$cons$(" ", List$cons$(_arg1$7, List$cons$(")", List$nil))))))));
                        var $13134 = $13217;
                        break;
                    case 'Kind.Term.ori':
                        var $13218 = self.expr;
                        var $13219 = Kind$Term$show$go$($13218, _path$2);
                        var $13134 = $13219;
                        break;
                    case 'Kind.Term.typ':
                        var $13220 = "Type";
                        var $13134 = $13220;
                        break;
                    case 'Kind.Term.app':
                        var $13221 = Kind$Term$show$app$(_term$1, _path$2, List$nil);
                        var $13134 = $13221;
                        break;
                    case 'Kind.Term.hol':
                        var $13222 = "_";
                        var $13134 = $13222;
                        break;
                };
                var $13131 = $13134;
                break;
        };
        return $13131;
    };
    const Kind$Term$show$go = x0 => x1 => Kind$Term$show$go$(x0, x1);

    function Kind$Term$show$(_term$1) {
        var $13223 = Kind$Term$show$go$(_term$1, Maybe$none);
        return $13223;
    };
    const Kind$Term$show = x0 => Kind$Term$show$(x0);

    function Kind$Defs$report$types$(_defs$1, _names$2) {
        var _types$3 = "";
        var _types$4 = (() => {
            var $13226 = _types$3;
            var $13227 = _names$2;
            let _types$5 = $13226;
            let _name$4;
            while ($13227._ === 'List.cons') {
                _name$4 = $13227.head;
                var self = Kind$Map$get$(_name$4, _defs$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $13228 = self.value;
                        var self = $13228;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13230 = self.type;
                                var $13231 = (_types$5 + (_name$4 + (": " + (Kind$Term$show$($13230) + "\u{a}"))));
                                var $13229 = $13231;
                                break;
                        };
                        var $13226 = $13229;
                        break;
                    case 'Maybe.none':
                        var $13232 = _types$5;
                        var $13226 = $13232;
                        break;
                };
                _types$5 = $13226;
                $13227 = $13227.tail;
            }
            return _types$5;
        })();
        var $13224 = _types$4;
        return $13224;
    };
    const Kind$Defs$report$types = x0 => x1 => Kind$Defs$report$types$(x0, x1);

    function List$filter$(_f$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $13234 = self.head;
                var $13235 = self.tail;
                var self = _f$2($13234);
                if (self) {
                    var $13237 = List$cons$($13234, List$filter$(_f$2, $13235));
                    var $13236 = $13237;
                } else {
                    var $13238 = List$filter$(_f$2, $13235);
                    var $13236 = $13238;
                };
                var $13233 = $13236;
                break;
            case 'List.nil':
                var $13239 = List$nil;
                var $13233 = $13239;
                break;
        };
        return $13233;
    };
    const List$filter = x0 => x1 => List$filter$(x0, x1);

    function Kind$Error$is_undef$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.cant_infer':
                var $13241 = Bool$false;
                var $13240 = $13241;
                break;
            case 'Kind.Error.undefined_reference':
                var $13242 = Bool$true;
                var $13240 = $13242;
                break;
        };
        return $13240;
    };
    const Kind$Error$is_undef = x0 => Kind$Error$is_undef$(x0);

    function Kind$Error$is_mistake$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.cant_infer':
                var $13244 = Bool$true;
                var $13243 = $13244;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
                var $13245 = Bool$false;
                var $13243 = $13245;
                break;
        };
        return $13243;
    };
    const Kind$Error$is_mistake = x0 => Kind$Error$is_mistake$(x0);

    function Kind$Error$is_goal$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
            case 'Kind.Error.cant_infer':
                var $13247 = Bool$false;
                var $13246 = $13247;
                break;
            case 'Kind.Error.show_goal':
                var $13248 = Bool$true;
                var $13246 = $13248;
                break;
        };
        return $13246;
    };
    const Kind$Error$is_goal = x0 => Kind$Error$is_goal$(x0);

    function Kind$Error$relevant$(_errors$1) {
        var _undefs$2 = List$filter$(Kind$Error$is_undef, _errors$1);
        var _mistakes$3 = List$filter$(Kind$Error$is_mistake, _errors$1);
        var _goals$4 = List$filter$(Kind$Error$is_goal, _errors$1);
        var self = _undefs$2;
        switch (self._) {
            case 'List.nil':
                var self = _mistakes$3;
                switch (self._) {
                    case 'List.cons':
                        var $13251 = self.head;
                        var $13252 = List$concat$(List$cons$($13251, List$nil), _goals$4);
                        var $13250 = $13252;
                        break;
                    case 'List.nil':
                        var $13253 = _goals$4;
                        var $13250 = $13253;
                        break;
                };
                var $13249 = $13250;
                break;
            case 'List.cons':
                var $13254 = List$concat$(_undefs$2, _goals$4);
                var $13249 = $13254;
                break;
        };
        return $13249;
    };
    const Kind$Error$relevant = x0 => Kind$Error$relevant$(x0);

    function Kind$Context$show$(_context$1) {
        var self = _context$1;
        switch (self._) {
            case 'List.cons':
                var $13256 = self.head;
                var $13257 = self.tail;
                var self = $13256;
                switch (self._) {
                    case 'Pair.new':
                        var $13259 = self.fst;
                        var $13260 = self.snd;
                        var _name$6 = Kind$Name$show$($13259);
                        var _type$7 = Kind$Term$show$(Kind$Term$normalize$($13260, Kind$Map$new));
                        var _rest$8 = Kind$Context$show$($13257);
                        var $13261 = (_rest$8 + ("- " + (_name$6 + (": " + (_type$7 + "\u{a}")))));
                        var $13258 = $13261;
                        break;
                };
                var $13255 = $13258;
                break;
            case 'List.nil':
                var $13262 = "";
                var $13255 = $13262;
                break;
        };
        return $13255;
    };
    const Kind$Context$show = x0 => Kind$Context$show$(x0);

    function Kind$Term$expand_at$(_path$1, _term$2, _defs$3) {
        var $13263 = Kind$Term$patch_at$(_path$1, _term$2, (_term$4 => {
            var self = _term$4;
            switch (self._) {
                case 'Kind.Term.ref':
                    var $13265 = self.name;
                    var self = Kind$Map$get$($13265, _defs$3);
                    switch (self._) {
                        case 'Maybe.some':
                            var $13267 = self.value;
                            var self = $13267;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $13269 = self.term;
                                    var $13270 = $13269;
                                    var $13268 = $13270;
                                    break;
                            };
                            var $13266 = $13268;
                            break;
                        case 'Maybe.none':
                            var $13271 = Kind$Term$ref$($13265);
                            var $13266 = $13271;
                            break;
                    };
                    var $13264 = $13266;
                    break;
                case 'Kind.Term.var':
                case 'Kind.Term.typ':
                case 'Kind.Term.all':
                case 'Kind.Term.lam':
                case 'Kind.Term.app':
                case 'Kind.Term.let':
                case 'Kind.Term.def':
                case 'Kind.Term.ann':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                case 'Kind.Term.get':
                case 'Kind.Term.set':
                case 'Kind.Term.ope':
                case 'Kind.Term.ori':
                    var $13272 = _term$4;
                    var $13264 = $13272;
                    break;
            };
            return $13264;
        }));
        return $13263;
    };
    const Kind$Term$expand_at = x0 => x1 => x2 => Kind$Term$expand_at$(x0, x1, x2);

    function Kind$Term$expand_ct$(_term$1, _defs$2, _arity$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $13274 = self.name;
                var $13275 = self.indx;
                var $13276 = Kind$Term$var$($13274, $13275);
                var $13273 = $13276;
                break;
            case 'Kind.Term.ref':
                var $13277 = self.name;
                var self = Kind$Map$get$($13277, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $13279 = self.value;
                        var self = $13279;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13281 = self.term;
                                var $13282 = self.isct;
                                var $13283 = self.arit;
                                var self = ($13282 && (_arity$3 > $13283));
                                if (self) {
                                    var $13285 = $13281;
                                    var $13284 = $13285;
                                } else {
                                    var $13286 = Kind$Term$ref$($13277);
                                    var $13284 = $13286;
                                };
                                var $13280 = $13284;
                                break;
                        };
                        var $13278 = $13280;
                        break;
                    case 'Maybe.none':
                        var $13287 = Kind$Term$ref$($13277);
                        var $13278 = $13287;
                        break;
                };
                var $13273 = $13278;
                break;
            case 'Kind.Term.all':
                var $13288 = self.eras;
                var $13289 = self.self;
                var $13290 = self.name;
                var $13291 = self.xtyp;
                var $13292 = self.body;
                var $13293 = Kind$Term$all$($13288, $13289, $13290, Kind$Term$expand_ct$($13291, _defs$2, 0n), (_s$9 => _x$10 => {
                    var $13294 = Kind$Term$expand_ct$($13292(_s$9)(_x$10), _defs$2, 0n);
                    return $13294;
                }));
                var $13273 = $13293;
                break;
            case 'Kind.Term.lam':
                var $13295 = self.name;
                var $13296 = self.body;
                var $13297 = Kind$Term$lam$($13295, (_x$6 => {
                    var $13298 = Kind$Term$expand_ct$($13296(_x$6), _defs$2, 0n);
                    return $13298;
                }));
                var $13273 = $13297;
                break;
            case 'Kind.Term.app':
                var $13299 = self.func;
                var $13300 = self.argm;
                var $13301 = Kind$Term$app$(Kind$Term$expand_ct$($13299, _defs$2, Nat$succ$(_arity$3)), Kind$Term$expand_ct$($13300, _defs$2, 0n));
                var $13273 = $13301;
                break;
            case 'Kind.Term.let':
                var $13302 = self.name;
                var $13303 = self.expr;
                var $13304 = self.body;
                var $13305 = Kind$Term$let$($13302, Kind$Term$expand_ct$($13303, _defs$2, 0n), (_x$7 => {
                    var $13306 = Kind$Term$expand_ct$($13304(_x$7), _defs$2, 0n);
                    return $13306;
                }));
                var $13273 = $13305;
                break;
            case 'Kind.Term.def':
                var $13307 = self.name;
                var $13308 = self.expr;
                var $13309 = self.body;
                var $13310 = Kind$Term$def$($13307, Kind$Term$expand_ct$($13308, _defs$2, 0n), (_x$7 => {
                    var $13311 = Kind$Term$expand_ct$($13309(_x$7), _defs$2, 0n);
                    return $13311;
                }));
                var $13273 = $13310;
                break;
            case 'Kind.Term.ann':
                var $13312 = self.done;
                var $13313 = self.term;
                var $13314 = self.type;
                var $13315 = Kind$Term$ann$($13312, Kind$Term$expand_ct$($13313, _defs$2, 0n), Kind$Term$expand_ct$($13314, _defs$2, 0n));
                var $13273 = $13315;
                break;
            case 'Kind.Term.gol':
                var $13316 = self.name;
                var $13317 = self.dref;
                var $13318 = self.verb;
                var $13319 = Kind$Term$gol$($13316, $13317, $13318);
                var $13273 = $13319;
                break;
            case 'Kind.Term.hol':
                var $13320 = self.path;
                var $13321 = Kind$Term$hol$($13320);
                var $13273 = $13321;
                break;
            case 'Kind.Term.nat':
                var $13322 = self.natx;
                var $13323 = Kind$Term$nat$($13322);
                var $13273 = $13323;
                break;
            case 'Kind.Term.chr':
                var $13324 = self.chrx;
                var $13325 = Kind$Term$chr$($13324);
                var $13273 = $13325;
                break;
            case 'Kind.Term.str':
                var $13326 = self.strx;
                var $13327 = Kind$Term$str$($13326);
                var $13273 = $13327;
                break;
            case 'Kind.Term.ori':
                var $13328 = self.orig;
                var $13329 = self.expr;
                var $13330 = Kind$Term$ori$($13328, $13329);
                var $13273 = $13330;
                break;
            case 'Kind.Term.typ':
                var $13331 = Kind$Term$typ;
                var $13273 = $13331;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $13332 = _term$1;
                var $13273 = $13332;
                break;
        };
        return $13273;
    };
    const Kind$Term$expand_ct = x0 => x1 => x2 => Kind$Term$expand_ct$(x0, x1, x2);

    function Kind$Term$expand$(_dref$1, _term$2, _defs$3) {
        var _term$4 = Kind$Term$normalize$(_term$2, Kind$Map$new);
        var _term$5 = (() => {
            var $13335 = _term$4;
            var $13336 = _dref$1;
            let _term$6 = $13335;
            let _path$5;
            while ($13336._ === 'List.cons') {
                _path$5 = $13336.head;
                var _term$7 = Kind$Term$expand_at$(_path$5, _term$6, _defs$3);
                var _term$8 = Kind$Term$normalize$(_term$7, Kind$Map$new);
                var _term$9 = Kind$Term$expand_ct$(_term$8, _defs$3, 0n);
                var _term$10 = Kind$Term$normalize$(_term$9, Kind$Map$new);
                var $13335 = _term$10;
                _term$6 = $13335;
                $13336 = $13336.tail;
            }
            return _term$6;
        })();
        var $13333 = _term$5;
        return $13333;
    };
    const Kind$Term$expand = x0 => x1 => x2 => Kind$Term$expand$(x0, x1, x2);

    function Kind$Error$show$(_error$1, _defs$2) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13338 = self.expected;
                var $13339 = self.detected;
                var $13340 = self.context;
                var self = $13338;
                switch (self._) {
                    case 'Either.left':
                        var $13342 = self.value;
                        var $13343 = $13342;
                        var _expected$7 = $13343;
                        break;
                    case 'Either.right':
                        var $13344 = self.value;
                        var $13345 = Kind$Term$show$(Kind$Term$normalize$($13344, BitsMap$new));
                        var _expected$7 = $13345;
                        break;
                };
                var self = $13339;
                switch (self._) {
                    case 'Either.left':
                        var $13346 = self.value;
                        var $13347 = $13346;
                        var _detected$8 = $13347;
                        break;
                    case 'Either.right':
                        var $13348 = self.value;
                        var $13349 = Kind$Term$show$(Kind$Term$normalize$($13348, BitsMap$new));
                        var _detected$8 = $13349;
                        break;
                };
                var $13341 = ("Type mismatch.\u{a}" + ("- Expected: " + (_expected$7 + ("\u{a}" + ("- Detected: " + (_detected$8 + ("\u{a}" + (() => {
                    var self = $13340;
                    switch (self._) {
                        case 'List.nil':
                            var $13350 = "";
                            return $13350;
                        case 'List.cons':
                            var $13351 = ("With context:\u{a}" + Kind$Context$show$($13340));
                            return $13351;
                    };
                })())))))));
                var $13337 = $13341;
                break;
            case 'Kind.Error.show_goal':
                var $13352 = self.name;
                var $13353 = self.dref;
                var $13354 = self.verb;
                var $13355 = self.goal;
                var $13356 = self.context;
                var _goal_name$8 = ("Goal ?" + (Kind$Name$show$($13352) + ":\u{a}"));
                var self = $13355;
                switch (self._) {
                    case 'Maybe.some':
                        var $13358 = self.value;
                        var _goal$10 = Kind$Term$expand$($13353, $13358, _defs$2);
                        var $13359 = ("With type: " + ((() => {
                            var self = $13354;
                            if (self) {
                                var $13360 = Kind$Term$show$go$(_goal$10, Maybe$some$((_x$11 => {
                                    var $13361 = _x$11;
                                    return $13361;
                                })));
                                return $13360;
                            } else {
                                var $13362 = Kind$Term$show$(_goal$10);
                                return $13362;
                            };
                        })() + "\u{a}"));
                        var _with_type$9 = $13359;
                        break;
                    case 'Maybe.none':
                        var $13363 = "";
                        var _with_type$9 = $13363;
                        break;
                };
                var self = $13356;
                switch (self._) {
                    case 'List.nil':
                        var $13364 = "";
                        var _with_ctxt$10 = $13364;
                        break;
                    case 'List.cons':
                        var $13365 = ("With context:\u{a}" + Kind$Context$show$($13356));
                        var _with_ctxt$10 = $13365;
                        break;
                };
                var $13357 = String$flatten$(List$cons$(_goal_name$8, List$cons$(_with_type$9, List$cons$(_with_ctxt$10, List$nil))));
                var $13337 = $13357;
                break;
            case 'Kind.Error.waiting':
                var $13366 = self.name;
                var $13367 = ("Waiting for \'" + ($13366 + "\'."));
                var $13337 = $13367;
                break;
            case 'Kind.Error.indirect':
                var $13368 = self.name;
                var $13369 = ("Error on dependency \'" + ($13368 + "\'."));
                var $13337 = $13369;
                break;
            case 'Kind.Error.patch':
                var $13370 = self.term;
                var $13371 = ("Patching: " + Kind$Term$show$($13370));
                var $13337 = $13371;
                break;
            case 'Kind.Error.undefined_reference':
                var $13372 = self.name;
                var $13373 = ("Undefined reference: " + (Kind$Name$show$($13372) + "\u{a}"));
                var $13337 = $13373;
                break;
            case 'Kind.Error.cant_infer':
                var $13374 = self.term;
                var $13375 = self.context;
                var _term$6 = Kind$Term$show$($13374);
                var _context$7 = Kind$Context$show$($13375);
                var $13376 = ("Can\'t infer type of: " + (_term$6 + ("\u{a}" + ("With context:\u{a}" + _context$7))));
                var $13337 = $13376;
                break;
        };
        return $13337;
    };
    const Kind$Error$show = x0 => x1 => Kind$Error$show$(x0, x1);

    function Kind$Error$origin$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13378 = self.origin;
                var $13379 = $13378;
                var $13377 = $13379;
                break;
            case 'Kind.Error.undefined_reference':
                var $13380 = self.origin;
                var $13381 = $13380;
                var $13377 = $13381;
                break;
            case 'Kind.Error.cant_infer':
                var $13382 = self.origin;
                var $13383 = $13382;
                var $13377 = $13383;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
                var $13384 = Maybe$none;
                var $13377 = $13384;
                break;
        };
        return $13377;
    };
    const Kind$Error$origin = x0 => Kind$Error$origin$(x0);

    function Kind$Defs$report$errors$(_defs$1) {
        var _errors$2 = "";
        var _errors$3 = (() => {
            var $13387 = _errors$2;
            var $13388 = BitsMap$keys$(_defs$1);
            let _errors$4 = $13387;
            let _key$3;
            while ($13388._ === 'List.cons') {
                _key$3 = $13388.head;
                var _name$5 = Kind$Name$from_bits$(_key$3);
                var _defn$6 = Kind$Map$get$(_name$5, _defs$1);
                var self = _defn$6;
                switch (self._) {
                    case 'Maybe.some':
                        var $13389 = self.value;
                        var self = $13389;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13391 = self.file;
                                var $13392 = self.code;
                                var $13393 = self.name;
                                var $13394 = self.stat;
                                var self = $13394;
                                switch (self._) {
                                    case 'Kind.Status.fail':
                                        var $13396 = self.errors;
                                        var self = $13396;
                                        switch (self._) {
                                            case 'List.nil':
                                                var $13398 = _errors$4;
                                                var $13397 = $13398;
                                                break;
                                            case 'List.cons':
                                                var _name_str$20 = $13393;
                                                var _rel_errs$21 = Kind$Error$relevant$($13396);
                                                var _errors$22 = (() => {
                                                    var $13401 = _errors$4;
                                                    var $13402 = _rel_errs$21;
                                                    let _errors$23 = $13401;
                                                    let _err$22;
                                                    while ($13402._ === 'List.cons') {
                                                        _err$22 = $13402.head;
                                                        var _err_msg$24 = Kind$Error$show$(_err$22, _defs$1);
                                                        var _ori_val$25 = Kind$Error$origin$(_err$22);
                                                        var self = _ori_val$25;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $13403 = self.value;
                                                                var self = $13403;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $13405 = self.fst;
                                                                        var $13406 = self.snd;
                                                                        var _inside$29 = ("Inside \'" + ($13391 + "\':\u{a}"));
                                                                        var _source$30 = Kind$Code$highlight$($13392, $13405, $13405, $13406);
                                                                        var $13407 = (_errors$23 + (_err_msg$24 + (_inside$29 + (_source$30 + ("\u{a}" + "\u{a}")))));
                                                                        var $13404 = $13407;
                                                                        break;
                                                                };
                                                                var $13401 = $13404;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $13408 = (_errors$23 + (_err_msg$24 + "\u{a}"));
                                                                var $13401 = $13408;
                                                                break;
                                                        };
                                                        _errors$23 = $13401;
                                                        $13402 = $13402.tail;
                                                    }
                                                    return _errors$23;
                                                })();
                                                var $13399 = _errors$22;
                                                var $13397 = $13399;
                                                break;
                                        };
                                        var $13395 = $13397;
                                        break;
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $13409 = _errors$4;
                                        var $13395 = $13409;
                                        break;
                                };
                                var $13390 = $13395;
                                break;
                        };
                        var $13387 = $13390;
                        break;
                    case 'Maybe.none':
                        var $13410 = _errors$4;
                        var $13387 = $13410;
                        break;
                };
                _errors$4 = $13387;
                $13388 = $13388.tail;
            }
            return _errors$4;
        })();
        var $13385 = _errors$3;
        return $13385;
    };
    const Kind$Defs$report$errors = x0 => Kind$Defs$report$errors$(x0);

    function Kind$Defs$report$(_defs$1, _names$2) {
        var _types$3 = Kind$Defs$report$types$(_defs$1, _names$2);
        var _errors$4 = Kind$Defs$report$errors$(_defs$1);
        var self = _errors$4;
        if (self.length === 0) {
            var $13412 = "All terms check.";
            var _errors$5 = $13412;
        } else {
            var $13413 = self.charCodeAt(0);
            var $13414 = self.slice(1);
            var $13415 = _errors$4;
            var _errors$5 = $13415;
        };
        var $13411 = (_types$3 + ("\u{a}" + _errors$5));
        return $13411;
    };
    const Kind$Defs$report = x0 => x1 => Kind$Defs$report$(x0, x1);

    function IO$set_file$(_name$1, _content$2) {
        var $13416 = IO$ask$("set_file", (_name$1 + ("=" + _content$2)), (_ok$3 => {
            var $13417 = IO$end$(Unit$new);
            return $13417;
        }));
        return $13416;
    };
    const IO$set_file = x0 => x1 => IO$set_file$(x0, x1);

    function Kind$Synth$load$cached$set_file$(_name$1, _value$2) {
        var $13418 = IO$set_file$(Kind$Synth$load$cached$name$(_name$1), _value$2);
        return $13418;
    };
    const Kind$Synth$load$cached$set_file = x0 => x1 => Kind$Synth$load$cached$set_file$(x0, x1);

    function Bool$show$(_b$1) {
        var self = _b$1;
        if (self) {
            var $13420 = "Bool.true";
            var $13419 = $13420;
        } else {
            var $13421 = "Bool.false";
            var $13419 = $13421;
        };
        return $13419;
    };
    const Bool$show = x0 => Bool$show$(x0);

    function Kind$Defs$cache$go$(_kvs$1) {
        var self = _kvs$1;
        switch (self._) {
            case 'List.cons':
                var $13423 = self.head;
                var $13424 = self.tail;
                var self = $13423;
                switch (self._) {
                    case 'Pair.new':
                        var $13426 = self.fst;
                        var $13427 = self.snd;
                        var self = $13427;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13429 = self.file;
                                var $13430 = self.term;
                                var $13431 = self.type;
                                var $13432 = self.isct;
                                var $13433 = self.arit;
                                var $13434 = self.stat;
                                var self = $13434;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.fail':
                                        var $13436 = Kind$Defs$cache$go$($13424);
                                        var $13435 = $13436;
                                        break;
                                    case 'Kind.Status.done':
                                        var $13437 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                            var $13438 = _m$bind$16;
                                            return $13438;
                                        }))(IO$get_file_mtime$($13429))((_time$16 => {
                                            var $13439 = IO$monad$((_m$bind$17 => _m$pure$18 => {
                                                var $13440 = _m$bind$17;
                                                return $13440;
                                            }))(Kind$Synth$load$cached$set_file$(($13426 + ".term"), Kind$Core$show$($13430)))((_$17 => {
                                                var $13441 = IO$monad$((_m$bind$18 => _m$pure$19 => {
                                                    var $13442 = _m$bind$18;
                                                    return $13442;
                                                }))(Kind$Synth$load$cached$set_file$(($13426 + ".type"), Kind$Core$show$($13431)))((_$18 => {
                                                    var $13443 = IO$monad$((_m$bind$19 => _m$pure$20 => {
                                                        var $13444 = _m$bind$19;
                                                        return $13444;
                                                    }))(Kind$Synth$load$cached$set_file$(($13426 + ".isct"), Bool$show$($13432)))((_$19 => {
                                                        var $13445 = IO$monad$((_m$bind$20 => _m$pure$21 => {
                                                            var $13446 = _m$bind$20;
                                                            return $13446;
                                                        }))(Kind$Synth$load$cached$set_file$(($13426 + ".arit"), Nat$show$($13433)))((_$20 => {
                                                            var $13447 = IO$monad$((_m$bind$21 => _m$pure$22 => {
                                                                var $13448 = _m$bind$21;
                                                                return $13448;
                                                            }))(Kind$Synth$load$cached$set_file$(($13426 + ".file"), $13429))((_$21 => {
                                                                var $13449 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                                                    var $13450 = _m$bind$22;
                                                                    return $13450;
                                                                }))(Kind$Synth$load$cached$set_file$(($13426 + ".time"), _time$16))((_$22 => {
                                                                    var $13451 = Kind$Defs$cache$go$($13424);
                                                                    return $13451;
                                                                }));
                                                                return $13449;
                                                            }));
                                                            return $13447;
                                                        }));
                                                        return $13445;
                                                    }));
                                                    return $13443;
                                                }));
                                                return $13441;
                                            }));
                                            return $13439;
                                        }));
                                        var $13435 = $13437;
                                        break;
                                };
                                var $13428 = $13435;
                                break;
                        };
                        var $13425 = $13428;
                        break;
                };
                var $13422 = $13425;
                break;
            case 'List.nil':
                var $13452 = IO$monad$((_m$bind$2 => _m$pure$3 => {
                    var $13453 = _m$pure$3;
                    return $13453;
                }))(Unit$new);
                var $13422 = $13452;
                break;
        };
        return $13422;
    };
    const Kind$Defs$cache$go = x0 => Kind$Defs$cache$go$(x0);

    function Kind$Defs$cache$(_defs$1) {
        var $13454 = Kind$Defs$cache$go$(Kind$Map$to_list$(_defs$1));
        return $13454;
    };
    const Kind$Defs$cache = x0 => Kind$Defs$cache$(x0);

    function Kind$api$io$check_file$(_file$1) {
        var $13455 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13456 = _m$bind$2;
            return $13456;
        }))(Kind$Synth$file$(_file$1, Kind$Map$new))((_loaded$2 => {
            var self = _loaded$2;
            switch (self._) {
                case 'Either.left':
                    var $13458 = self.value;
                    var $13459 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13460 = _m$bind$4;
                        return $13460;
                    }))(IO$print$(String$flatten$(List$cons$("On \'", List$cons$(_file$1, List$cons$("\':", List$nil))))))((_$4 => {
                        var $13461 = IO$print$($13458);
                        return $13461;
                    }));
                    var $13457 = $13459;
                    break;
                case 'Either.right':
                    var $13462 = self.value;
                    var self = $13462;
                    switch (self._) {
                        case 'Pair.new':
                            var $13464 = self.fst;
                            var $13465 = self.snd;
                            var _nams$6 = $13464;
                            var _defs$7 = $13465;
                            var self = _nams$6;
                            switch (self._) {
                                case 'List.nil':
                                    var $13467 = IO$print$(("File not found or empty: \'" + (_file$1 + "\'.")));
                                    var $13466 = $13467;
                                    break;
                                case 'List.cons':
                                    var $13468 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $13469 = _m$bind$10;
                                        return $13469;
                                    }))(IO$print$(Kind$Defs$report$(_defs$7, _nams$6)))((_$10 => {
                                        var $13470 = Kind$Defs$cache$(_defs$7);
                                        return $13470;
                                    }));
                                    var $13466 = $13468;
                                    break;
                            };
                            var $13463 = $13466;
                            break;
                    };
                    var $13457 = $13463;
                    break;
            };
            return $13457;
        }));
        return $13455;
    };
    const Kind$api$io$check_file = x0 => Kind$api$io$check_file$(x0);

    function Kind$Synth$files$go$(_files$1, _defs$2) {
        var self = _files$1;
        switch (self._) {
            case 'List.cons':
                var $13472 = self.head;
                var $13473 = self.tail;
                var $13474 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13475 = _m$bind$5;
                    return $13475;
                }))(Kind$Synth$file$($13472, _defs$2))((_file_synth$5 => {
                    var self = _file_synth$5;
                    switch (self._) {
                        case 'Either.right':
                            var $13477 = self.value;
                            var _nams$7 = Pair$fst$($13477);
                            var _defs$8 = Pair$snd$($13477);
                            var $13478 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                var $13479 = _m$bind$9;
                                return $13479;
                            }))(Kind$Synth$files$go$($13473, _defs$8))((_rest$9 => {
                                var _nams$10 = List$concat$(_nams$7, Pair$fst$(_rest$9));
                                var _defs$11 = Pair$snd$(_rest$9);
                                var $13480 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                                    var $13481 = _m$pure$13;
                                    return $13481;
                                }))(Pair$new$(_nams$10, _defs$11));
                                return $13480;
                            }));
                            var $13476 = $13478;
                            break;
                        case 'Either.left':
                            var $13482 = Kind$Synth$files$go$($13473, _defs$2);
                            var $13476 = $13482;
                            break;
                    };
                    return $13476;
                }));
                var $13471 = $13474;
                break;
            case 'List.nil':
                var $13483 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13484 = _m$pure$4;
                    return $13484;
                }))(Pair$new$(List$nil, _defs$2));
                var $13471 = $13483;
                break;
        };
        return $13471;
    };
    const Kind$Synth$files$go = x0 => x1 => Kind$Synth$files$go$(x0, x1);

    function Kind$Synth$remove_duplicate_names$(_names$1) {
        var _map$2 = List$fold$(_names$1, Kind$Map$new, (_name$2 => {
            var $13486 = Kind$Map$set(_name$2)(Unit$new);
            return $13486;
        }));
        var $13485 = List$mapped$(BitsMap$keys$(_map$2), Kind$Name$from_bits);
        return $13485;
    };
    const Kind$Synth$remove_duplicate_names = x0 => Kind$Synth$remove_duplicate_names$(x0);

    function Kind$Synth$files$(_files$1, _defs$2) {
        var $13487 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13488 = _m$bind$3;
            return $13488;
        }))(Kind$Synth$files$go$(_files$1, _defs$2))((_got$3 => {
            var _nams$4 = Kind$Synth$remove_duplicate_names$(Pair$fst$(_got$3));
            var _defs$5 = Pair$snd$(_got$3);
            var $13489 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13490 = _m$pure$7;
                return $13490;
            }))(Pair$new$(_nams$4, _defs$5));
            return $13489;
        }));
        return $13487;
    };
    const Kind$Synth$files = x0 => x1 => Kind$Synth$files$(x0, x1);

    function Kind$api$io$check_files$(_files$1) {
        var $13491 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13492 = _m$bind$2;
            return $13492;
        }))(Kind$Synth$files$(_files$1, Kind$Map$new))((_loaded$2 => {
            var _nams$3 = Pair$fst$(_loaded$2);
            var _defs$4 = Pair$snd$(_loaded$2);
            var self = _nams$3;
            switch (self._) {
                case 'List.nil':
                    var $13494 = IO$print$("No valid Kind file found.");
                    var $13493 = $13494;
                    break;
                case 'List.cons':
                    var $13495 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                        var $13496 = _m$bind$7;
                        return $13496;
                    }))(IO$print$(Kind$Defs$report$(_defs$4, _nams$3)))((_$7 => {
                        var $13497 = Kind$Defs$cache$(_defs$4);
                        return $13497;
                    }));
                    var $13493 = $13495;
                    break;
            };
            return $13493;
        }));
        return $13491;
    };
    const Kind$api$io$check_files = x0 => Kind$api$io$check_files$(x0);

    function Kind$api$io$check_term$(_name$1) {
        var $13498 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13499 = _m$bind$2;
            return $13499;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var self = _defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $13501 = self.value;
                    var $13502 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13503 = _m$bind$4;
                        return $13503;
                    }))(IO$print$(Kind$Defs$report$($13501, List$cons$(_name$1, List$nil))))((_$4 => {
                        var $13504 = Kind$Defs$cache$($13501);
                        return $13504;
                    }));
                    var $13500 = $13502;
                    break;
                case 'Maybe.none':
                    var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                    var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                        var $13506 = ("\'" + (_x$4 + "\'"));
                        return $13506;
                    }));
                    var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                    var $13505 = IO$print$((_notfound$3 + ("\u{a}" + _searched$5)));
                    var $13500 = $13505;
                    break;
            };
            return $13500;
        }));
        return $13498;
    };
    const Kind$api$io$check_term = x0 => Kind$api$io$check_term$(x0);

    function Kind$api$io$show_term$(_name$1) {
        var $13507 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13508 = _m$bind$2;
            return $13508;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13509 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13510 = self.value;
                        var _defs$4 = $13510;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13512 = self.value;
                                var self = $13512;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13514 = self.term;
                                        var _term$16 = $13514;
                                        var $13515 = Kind$Term$show$(_term$16);
                                        var $13513 = $13515;
                                        break;
                                };
                                var $13511 = $13513;
                                break;
                            case 'Maybe.none':
                                var $13516 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13511 = $13516;
                                break;
                        };
                        return $13511;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13518 = ("\'" + (_x$4 + "\'"));
                            return $13518;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13517 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13517;
                };
            })());
            return $13509;
        }));
        return $13507;
    };
    const Kind$api$io$show_term = x0 => Kind$api$io$show_term$(x0);

    function Kind$api$io$show_term_normal$(_name$1) {
        var $13519 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13520 = _m$bind$2;
            return $13520;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13521 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13522 = self.value;
                        var _defs$4 = $13522;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13524 = self.value;
                                var self = $13524;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13526 = self.term;
                                        var _term$16 = $13526;
                                        var _norm$17 = Kind$Term$normalize$(_term$16, _defs$4);
                                        var $13527 = Kind$Term$show$(_norm$17);
                                        var $13525 = $13527;
                                        break;
                                };
                                var $13523 = $13525;
                                break;
                            case 'Maybe.none':
                                var $13528 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13523 = $13528;
                                break;
                        };
                        return $13523;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13530 = ("\'" + (_x$4 + "\'"));
                            return $13530;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13529 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13529;
                };
            })());
            return $13521;
        }));
        return $13519;
    };
    const Kind$api$io$show_term_normal = x0 => Kind$api$io$show_term_normal$(x0);

    function IO$purify$(_io$2) {
        var IO$purify$ = (_io$2) => ({
            ctr: 'TCO',
            arg: [_io$2]
        });
        var IO$purify = _io$2 => IO$purify$(_io$2);
        var arg = [_io$2];
        while (true) {
            let [_io$2] = arg;
            var R = (() => {
                var self = _io$2;
                switch (self._) {
                    case 'IO.end':
                        var $13531 = self.value;
                        var $13532 = $13531;
                        return $13532;
                    case 'IO.ask':
                        var $13533 = self.then;
                        var $13534 = IO$purify$($13533(""));
                        return $13534;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const IO$purify = x0 => IO$purify$(x0);

    function Kind$api$check_code$(_code$1) {
        var self = Kind$Defs$read$("Main.kind", _code$1, Kind$Map$new);
        switch (self._) {
            case 'Either.left':
                var $13536 = self.value;
                var $13537 = $13536;
                var $13535 = $13537;
                break;
            case 'Either.right':
                var $13538 = self.value;
                var $13539 = IO$purify$((() => {
                    var _defs$3 = $13538;
                    var _nams$4 = List$mapped$(BitsMap$keys$(_defs$3), Kind$Name$from_bits);
                    var $13540 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $13541 = _m$bind$5;
                        return $13541;
                    }))(Kind$Synth$many$(_nams$4, _defs$3))((_defs$5 => {
                        var $13542 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                            var $13543 = _m$pure$7;
                            return $13543;
                        }))(Kind$Defs$report$(_defs$5, _nams$4));
                        return $13542;
                    }));
                    return $13540;
                })());
                var $13535 = $13539;
                break;
        };
        return $13535;
    };
    const Kind$api$check_code = x0 => Kind$api$check_code$(x0);

    function Kind$Term$read$(_code$1) {
        var self = Kind$Parser$term(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$1));
        switch (self._) {
            case 'Parser.Reply.value':
                var $13545 = self.val;
                var $13546 = Maybe$some$($13545);
                var $13544 = $13546;
                break;
            case 'Parser.Reply.error':
                var $13547 = Maybe$none;
                var $13544 = $13547;
                break;
        };
        return $13544;
    };
    const Kind$Term$read = x0 => Kind$Term$read$(x0);
    const Kind$api$export = (() => {
        var _e$1 = Kind$api$io$term_to_core;
        var _e$2 = Kind$api$io$term_to_scheme;
        var _e$3 = Kind$api$io$terms_to_scheme_lib;
        var _e$4 = Kind$api$io$check_file;
        var _e$5 = Kind$api$io$check_files;
        var _e$6 = Kind$api$io$check_term;
        var _e$7 = Kind$api$io$show_term;
        var _e$8 = Kind$api$io$show_term_normal;
        var _e$9 = Kind$api$check_code;
        var _e$10 = Kind$Term$read;
        var $13548 = IO$monad$((_m$bind$11 => _m$pure$12 => {
            var $13549 = _m$pure$12;
            return $13549;
        }))(Unit$new);
        return $13548;
    })();
    return {
        '$main$': () => run(Kind$api$export),
        'run': run,
        'IO': IO,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'Maybe': Maybe,
        'BitsMap': BitsMap,
        'Maybe.none': Maybe$none,
        'BitsMap.get': BitsMap$get,
        'Bits.o': Bits$o,
        'Bits.i': Bits$i,
        'Bool.true': Bool$true,
        'Bool.false': Bool$false,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.ltn': Word$ltn,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.ltn': U16$ltn,
        'U16.new': U16$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Name.to_bits.go': Kind$Name$to_bits$go,
        'Bits.e': Bits$e,
        'Kind.Name.to_bits': Kind$Name$to_bits,
        'Kind.Map.get': Kind$Map$get,
        'Maybe.default': Maybe$default,
        'Parser.State.new': Parser$State$new,
        'Maybe.some': Maybe$some,
        'Parser.run': Parser$run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.Reply.value': Parser$Reply$value,
        'List.nil': List$nil,
        'List.cons': List$cons,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.many1': Parser$many1,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Cmp.as_eql': Cmp$as_eql,
        'Word.eql': Word$eql,
        'U16.eql': U16$eql,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'List.reverse.go': List$reverse$go,
        'List.reverse': List$reverse,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.read': Nat$read,
        'IO.get_time': IO$get_time,
        'Kind.Synth.load.cached.is_loop': Kind$Synth$load$cached$is_loop,
        'IO.get_file': IO$get_file,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Bits.hex.encode': Bits$hex$encode,
        'Kind.Synth.load.cached.name': Kind$Synth$load$cached$name,
        'Kind.Synth.load.cached.get_file': Kind$Synth$load$cached$get_file,
        'Bool.not': Bool$not,
        'String.is_empty': String$is_empty,
        'IO.get_file_mtime': IO$get_file_mtime,
        'Bool.and': Bool$and,
        'String.eql': String$eql,
        'Pair.new': Pair$new,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'Pair': Pair,
        'Unit.new': Unit$new,
        'Bool.or': Bool$or,
        'Kind.Core.read.spaces': Kind$Core$read$spaces,
        'Kind.Term.ref': Kind$Term$ref,
        'Char.eql': Char$eql,
        'Kind.Term.typ': Kind$Term$typ,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'U16.gte': U16$gte,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'Kind.Core.read.is_name': Kind$Core$read$is_name,
        'Kind.Core.read.name': Kind$Core$read$name,
        'Kind.Core.read.char': Kind$Core$read$char,
        'Kind.Term.all': Kind$Term$all,
        'Kind.Term.lam': Kind$Term$lam,
        'Kind.Term.app': Kind$Term$app,
        'Kind.Term.let': Kind$Term$let,
        'Kind.Term.def': Kind$Term$def,
        'Kind.Term.ann': Kind$Term$ann,
        'String.starts_with': String$starts_with,
        'String.nil': String$nil,
        'String.drop': String$drop,
        'Char.is_hex': Char$is_hex,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U16.mul': U16$mul,
        'U16.inc': U16$inc,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'U16.zero': U16$zero,
        'Char.hex_value16': Char$hex_value16,
        'Kind.Core.read.u16': Kind$Core$read$u16,
        'Kind.Core.read.chrx': Kind$Core$read$chrx,
        'Kind.Term.chr': Kind$Term$chr,
        'Kind.Core.read.strx': Kind$Core$read$strx,
        'Kind.Term.str': Kind$Term$str,
        'Char.dec_value': Char$dec_value,
        'Kind.Core.read.natx': Kind$Core$read$natx,
        'Kind.Term.nat': Kind$Term$nat,
        'Pair.fst': Pair$fst,
        'Nat.eql': Nat$eql,
        'Nat.pred': Nat$pred,
        'Kind.Core.read.find': Kind$Core$read$find,
        'Pair.snd': Pair$snd,
        'Kind.Core.read.term': Kind$Core$read$term,
        'Kind.Core.read': Kind$Core$read,
        'Bool.read': Bool$read,
        'Kind.Status.done': Kind$Status$done,
        'Kind.Def.new': Kind$Def$new,
        'Kind.Synth.load.cached.def': Kind$Synth$load$cached$def,
        'BitsMap.tie': BitsMap$tie,
        'BitsMap.new': BitsMap$new,
        'BitsMap.set': BitsMap$set,
        'Kind.Map.set': Kind$Map$set,
        'Kind.Map.new': Kind$Map$new,
        'Kind.Map': Kind$Map,
        'Kind.Core.dependencies.go': Kind$Core$dependencies$go,
        'List.mapped': List$mapped,
        'Bits.reverse.tco': Bits$reverse$tco,
        'Bits.reverse': Bits$reverse,
        'BitsMap.to_list.go': BitsMap$to_list$go,
        'Kind.Name.from_bits': Kind$Name$from_bits,
        'Kind.Map.to_list': Kind$Map$to_list,
        'Kind.Map.keys': Kind$Map$keys,
        'Kind.Synth.load.cached': Kind$Synth$load$cached,
        'IO.request': IO$request,
        'Kind.Synth.get_kind_code': Kind$Synth$get_kind_code,
        'Parser.is_eof': Parser$is_eof,
        'Parser': Parser,
        'Parser.choice': Parser$choice,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.one': Parser$one,
        'Kind.Parser.comment': Kind$Parser$comment,
        'Kind.Parser.spaces': Kind$Parser$spaces,
        'Parser.get_idx': Parser$get_idx,
        'U16.btw': U16$btw,
        'Kind.Name.is_letter': Kind$Name$is_letter,
        'Kind.Parser.letter': Kind$Parser$letter,
        'List.fold': List$fold,
        'Parser.fail': Parser$fail,
        'String.head': String$head,
        'Kind.Parser.name1': Kind$Parser$name1,
        'Parser.until1': Parser$until1,
        'Parser.wrap1': Parser$wrap1,
        'Kind.Parser.text': Kind$Parser$text,
        'Parser.maybe': Parser$maybe,
        'Kind.Parser.items1': Kind$Parser$items1,
        'Kind.Parser.name': Kind$Parser$name,
        'Kind.Term.ori': Kind$Term$ori,
        'Kind.Parser.block': Kind$Parser$block,
        'Kind.Parser.dom.prop': Kind$Parser$dom$prop,
        'Kind.Term.hol': Kind$Term$hol,
        'Kind.Parser.dom.gen_prop.go': Kind$Parser$dom$gen_prop$go,
        'Kind.Parser.dom.gen_prop': Kind$Parser$dom$gen_prop,
        'Kind.Parser.dom.for': Kind$Parser$dom$for,
        'Kind.Parser.dom.dynamic': Kind$Parser$dom$dynamic,
        'Kind.Parser.dom.text': Kind$Parser$dom$text,
        'Kind.Parser.dom.leaf': Kind$Parser$dom$leaf,
        'Kind.Parser.dom.transform_children': Kind$Parser$dom$transform_children,
        'Kind.Parser.dom.node': Kind$Parser$dom$node,
        'Kind.Parser.dom': Kind$Parser$dom,
        'Kind.Parser.forall': Kind$Parser$forall,
        'Parser.wrap': Parser$wrap,
        'Kind.Parser.items': Kind$Parser$items,
        'Kind.Parser.lambda.make': Kind$Parser$lambda$make,
        'Kind.Parser.lambda.make.start': Kind$Parser$lambda$make$start,
        'Kind.Parser.lambda': Kind$Parser$lambda,
        'Kind.Parser.lambda.erased': Kind$Parser$lambda$erased,
        'Kind.Parser.parenthesis': Kind$Parser$parenthesis,
        'Kind.Parser.letforrange': Kind$Parser$letforrange,
        'Kind.Parser.letforrange.u32': Kind$Parser$letforrange$u32,
        'Kind.Parser.letforrange.with': Kind$Parser$letforrange$with,
        'Kind.Parser.letforrange.u32.with': Kind$Parser$letforrange$u32$with,
        'Kind.Parser.letforrange.i32': Kind$Parser$letforrange$i32,
        'Kind.Parser.letforrange.i32.with': Kind$Parser$letforrange$i32$with,
        'Kind.Parser.letforrange.nat': Kind$Parser$letforrange$nat,
        'Kind.Parser.letforrange.nat.with': Kind$Parser$letforrange$nat$with,
        'Kind.Parser.letforin': Kind$Parser$letforin,
        'Kind.Parser.letforin.with': Kind$Parser$letforin$with,
        'Kind.Parser.letwhile': Kind$Parser$letwhile,
        'Kind.Parser.letwhile.with': Kind$Parser$letwhile$with,
        'Kind.Parser.let': Kind$Parser$let,
        'Kind.Parser.let.omit': Kind$Parser$let$omit,
        'Kind.Parser.getwhile': Kind$Parser$getwhile,
        'Kind.Parser.getwhile.with': Kind$Parser$getwhile$with,
        'Kind.Parser.get': Kind$Parser$get,
        'Kind.Parser.get.omit': Kind$Parser$get$omit,
        'Kind.Parser.def': Kind$Parser$def,
        'Kind.Parser.goal_rewrite': Kind$Parser$goal_rewrite,
        'Kind.Parser.if': Kind$Parser$if,
        'Kind.Code.backslash': Kind$Code$backslash,
        'Kind.Code.escapes': Kind$Code$escapes,
        'Kind.Parser.char.single': Kind$Parser$char$single,
        'Kind.Parser.char': Kind$Parser$char,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'Kind.Parser.string.go': Kind$Parser$string$go,
        'Kind.Parser.string': Kind$Parser$string,
        'Kind.Term.new': Kind$Term$new,
        'Kind.Parser.new': Kind$Parser$new,
        'Kind.Parser.sigma.type': Kind$Parser$sigma$type,
        'Kind.Parser.some': Kind$Parser$some,
        'Kind.Parser.not': Kind$Parser$not,
        'Kind.Parser.left': Kind$Parser$left,
        'Kind.Parser.right': Kind$Parser$right,
        'Kind.Parser.apply': Kind$Parser$apply,
        'Kind.Parser.chain': Kind$Parser$chain,
        'Kind.Parser.mirror': Kind$Parser$mirror,
        'Kind.Name.read': Kind$Name$read,
        'Kind.Parser.list': Kind$Parser$list,
        'Kind.Parser.map': Kind$Parser$map,
        'Kind.Parser.log': Kind$Parser$log,
        'String.map': String$map,
        'Char.to_upper': Char$to_upper,
        'String.to_upper': String$to_upper,
        'String.is_upper': String$is_upper,
        'String.take': String$take,
        'Nat.sub': Nat$sub,
        'String.slice': String$slice,
        'Kind.Term.unroll_nat': Kind$Term$unroll_nat,
        'Word.to_bits': Word$to_bits,
        'U16.to_bits': U16$to_bits,
        'Kind.Term.unroll_chr.bits': Kind$Term$unroll_chr$bits,
        'Kind.Term.unroll_chr': Kind$Term$unroll_chr,
        'Kind.Term.unroll_str': Kind$Term$unroll_str,
        'Kind.Term.reduce': Kind$Term$reduce,
        'Kind.Term.cse': Kind$Term$cse,
        'Kind.Parser.open': Kind$Parser$open,
        'Kind.Parser.do.statements': Kind$Parser$do$statements,
        'Kind.Parser.do': Kind$Parser$do,
        'Parser.try': Parser$try,
        'Parser.avoiding': Parser$avoiding,
        'Kind.Term.extract_name': Kind$Term$extract_name,
        'Kind.Ann.new': Kind$Ann$new,
        'Kind.Parser.case.with': Kind$Parser$case$with,
        'Kind.Parser.case.case': Kind$Parser$case$case,
        'Parser.append_error': Parser$append_error,
        'Kind.Parser.case.group': Kind$Parser$case$group,
        'BitsMap.map': BitsMap$map,
        'Kind.Map.map': Kind$Map$map,
        'Kind.Parser.case.build': Kind$Parser$case$build,
        'Kind.Parser.case': Kind$Parser$case,
        'Kind.Parser.without': Kind$Parser$without,
        'Kind.Parser.switch.case': Kind$Parser$switch$case,
        'Kind.Parser.switch': Kind$Parser$switch,
        'Bits.tail': Bits$tail,
        'Bits.inc': Bits$inc,
        'Nat.to_bits': Nat$to_bits,
        'Maybe.is_some': Maybe$is_some,
        'Kind.Term.gol': Kind$Term$gol,
        'Kind.Parser.goal': Kind$Parser$goal,
        'Kind.Parser.hole': Kind$Parser$hole,
        'Kind.Parser.float.sign': Kind$Parser$float$sign,
        'List.any': List$any,
        'Kind.Parser.float.str_digit': Kind$Parser$float$str_digit,
        'String.from_list': String$from_list,
        'Kind.Parser.float.64': Kind$Parser$float$64,
        'Kind.Parser.float.32': Kind$Parser$float$32,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Kind.Parser.int_pos': Kind$Parser$int_pos,
        'Kind.Parser.int_neg': Kind$Parser$int_neg,
        'Kind.Parser.machine_integer.signed': Kind$Parser$machine_integer$signed,
        'Parser.hex_digit': Parser$hex_digit,
        'Parser.hex_nat': Parser$hex_nat,
        'Kind.Parser.nat': Kind$Parser$nat,
        'Kind.Parser.machine_integer.unsigned': Kind$Parser$machine_integer$unsigned,
        'Kind.Parser.u64': Kind$Parser$u64,
        'Kind.Parser.u32': Kind$Parser$u32,
        'Kind.Parser.u16': Kind$Parser$u16,
        'Kind.Parser.u8': Kind$Parser$u8,
        'Parser.Number.new': Parser$Number$new,
        'Parser.num': Parser$num,
        'Kind.Term.num': Kind$Term$num,
        'Kind.Parser.num': Kind$Parser$num,
        'Kind.Parser.reference': Kind$Parser$reference,
        'Kind.Parser.text_now': Kind$Parser$text_now,
        'Kind.Parser.items_now': Kind$Parser$items_now,
        'List.for': List$for,
        'Kind.Parser.application': Kind$Parser$application,
        'Kind.Parser.application.erased': Kind$Parser$application$erased,
        'Kind.Parser.list_set': Kind$Parser$list_set,
        'Kind.Parser.list_get': Kind$Parser$list_get,
        'Kind.Parser.map_set': Kind$Parser$map_set,
        'Kind.Parser.map_get': Kind$Parser$map_get,
        'Kind.Term.set': Kind$Term$set,
        'Kind.Parser.field_set': Kind$Parser$field_set,
        'Kind.Term.get': Kind$Term$get,
        'Kind.Parser.field_get': Kind$Parser$field_get,
        'Kind.Parser.arrow': Kind$Parser$arrow,
        'Kind.Parser.concat': Kind$Parser$concat,
        'Kind.Parser.equality': Kind$Parser$equality,
        'Kind.Term.ope': Kind$Term$ope,
        'Kind.Parser.op': Kind$Parser$op,
        'Kind.Parser.add': Kind$Parser$add,
        'Kind.Parser.sub': Kind$Parser$sub,
        'Kind.Parser.mul': Kind$Parser$mul,
        'Kind.Parser.div': Kind$Parser$div,
        'Kind.Parser.mod': Kind$Parser$mod,
        'Kind.Parser.ltn': Kind$Parser$ltn,
        'Kind.Parser.lte': Kind$Parser$lte,
        'Kind.Parser.eql': Kind$Parser$eql,
        'Kind.Parser.gte': Kind$Parser$gte,
        'Kind.Parser.gtn': Kind$Parser$gtn,
        'Kind.Parser.and': Kind$Parser$and,
        'Kind.Parser.or': Kind$Parser$or,
        'Kind.Parser.default': Kind$Parser$default,
        'Kind.Parser.cons': Kind$Parser$cons,
        'Kind.Parser.string_concat': Kind$Parser$string_concat,
        'Kind.Parser.sigma': Kind$Parser$sigma,
        'Kind.Parser.inequality': Kind$Parser$inequality,
        'Kind.Parser.rewrite': Kind$Parser$rewrite,
        'Kind.Parser.annotation': Kind$Parser$annotation,
        'Kind.Parser.application.hole': Kind$Parser$application$hole,
        'Kind.Parser.term.suffix': Kind$Parser$term$suffix,
        'Kind.Parser.term': Kind$Parser$term,
        'Kind.Parser.name_term': Kind$Parser$name_term,
        'Kind.Binder.new': Kind$Binder$new,
        'Kind.Parser.binder.homo': Kind$Parser$binder$homo,
        'List.concat': List$concat,
        'List.flatten': List$flatten,
        'Kind.Parser.binder': Kind$Parser$binder,
        'List.length': List$length,
        'Kind.Parser.forall.make': Kind$Parser$forall$make,
        'List.at_last': List$at_last,
        'Kind.Term.var': Kind$Term$var,
        'Kind.Context.get_name_skips': Kind$Context$get_name_skips,
        'Kind.Name.eql': Kind$Name$eql,
        'Kind.Context.find.go': Kind$Context$find$go,
        'Kind.Context.find': Kind$Context$find,
        'Kind.Path.Builder.o': Kind$Path$Builder$o,
        'Kind.Path.Builder.i': Kind$Path$Builder$i,
        'Kind.Path.Builder.to_bits': Kind$Path$Builder$to_bits,
        'List.imapped': List$imapped,
        'Kind.Path.Builder.nat': Kind$Path$Builder$nat,
        'Kind.Term.bind': Kind$Term$bind,
        'Trampoline.call': Trampoline$call,
        'Trampoline': Trampoline,
        'Trampoline.wrap': Trampoline$wrap,
        'BitsMap.set_if_empty.cps.go': BitsMap$set_if_empty$cps$go,
        'Trampoline.done': Trampoline$done,
        'BitsMap.set_if_empty.cps': BitsMap$set_if_empty$cps,
        'BitsMap.set_if_empty': BitsMap$set_if_empty,
        'Kind.Map.set_if_empty': Kind$Map$set_if_empty,
        'Kind.Status.init': Kind$Status$init,
        'Kind.Map.def': Kind$Map$def,
        'Kind.Parser.file.def': Kind$Parser$file$def,
        'Kind.Parser.ADT.Constructor.new': Kind$Parser$ADT$Constructor$new,
        'Kind.Parser.ADT.ctor': Kind$Parser$ADT$ctor,
        'Kind.Parser.ADT.Datatype.new': Kind$Parser$ADT$Datatype$new,
        'Kind.Parser.ADT.adt': Kind$Parser$ADT$adt,
        'Kind.Parser.ADT.Datatype.build_term.motive.go': Kind$Parser$ADT$Datatype$build_term$motive$go,
        'Kind.Parser.ADT.Datatype.build_term.motive': Kind$Parser$ADT$Datatype$build_term$motive,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'Kind.Parser.ADT.Datatype.build_term.constructor.go': Kind$Parser$ADT$Datatype$build_term$constructor$go,
        'Kind.Parser.ADT.Datatype.build_term.constructor': Kind$Parser$ADT$Datatype$build_term$constructor,
        'Kind.Parser.ADT.Datatype.build_term.constructors.go': Kind$Parser$ADT$Datatype$build_term$constructors$go,
        'Kind.Parser.ADT.Datatype.build_term.constructors': Kind$Parser$ADT$Datatype$build_term$constructors,
        'Kind.Parser.ADT.Datatype.build_term.go': Kind$Parser$ADT$Datatype$build_term$go,
        'Kind.Parser.ADT.Datatype.build_term': Kind$Parser$ADT$Datatype$build_term,
        'Kind.Parser.ADT.Datatype.build_type.go': Kind$Parser$ADT$Datatype$build_type$go,
        'Kind.Parser.ADT.Datatype.build_type': Kind$Parser$ADT$Datatype$build_type,
        'Kind.Parser.ADT.Constructor.build_term.opt.go': Kind$Parser$ADT$Constructor$build_term$opt$go,
        'Kind.Parser.ADT.Constructor.build_term.opt': Kind$Parser$ADT$Constructor$build_term$opt,
        'Kind.Parser.ADT.Constructor.build_term.go': Kind$Parser$ADT$Constructor$build_term$go,
        'Kind.Parser.ADT.Constructor.build_term': Kind$Parser$ADT$Constructor$build_term,
        'Kind.Parser.ADT.Constructor.build_type.go': Kind$Parser$ADT$Constructor$build_type$go,
        'Kind.Parser.ADT.Constructor.build_type': Kind$Parser$ADT$Constructor$build_type,
        'List.is_empty': List$is_empty,
        'Kind.Term.get_args.go': Kind$Term$get_args$go,
        'Kind.Term.get_args': Kind$Term$get_args,
        'Kind.Parser.ADT.Derive.stringifier.term.cont': Kind$Parser$ADT$Derive$stringifier$term$cont,
        'Kind.Parser.ADT.Derive.stringifier.term.args': Kind$Parser$ADT$Derive$stringifier$term$args,
        'Kind.Parser.ADT.Derive.stringifier.ctr': Kind$Parser$ADT$Derive$stringifier$ctr,
        'Kind.Parser.ADT.Derive.stringifier.term.ctrs': Kind$Parser$ADT$Derive$stringifier$term$ctrs,
        'Kind.Parser.ADT.Derive.stringifier.term': Kind$Parser$ADT$Derive$stringifier$term,
        'Kind.Parser.ADT.Derive.stringifier.type': Kind$Parser$ADT$Derive$stringifier$type,
        'Kind.Parser.ADT.Derived.new': Kind$Parser$ADT$Derived$new,
        'Kind.Parser.ADT.Derive.parser.term.cont': Kind$Parser$ADT$Derive$parser$term$cont,
        'Kind.Parser.ADT.Derive.parser.term.args': Kind$Parser$ADT$Derive$parser$term$args,
        'Kind.Parser.ADT.Derive.parser.term.cses': Kind$Parser$ADT$Derive$parser$term$cses,
        'Kind.Parser.ADT.Derive.parser.term': Kind$Parser$ADT$Derive$parser$term,
        'Kind.Parser.ADT.Derive.parser.type': Kind$Parser$ADT$Derive$parser$type,
        'Kind.Parser.ADT.Derive.serializer.term.cont': Kind$Parser$ADT$Derive$serializer$term$cont,
        'Kind.Parser.ADT.Derive.serializer.term.args': Kind$Parser$ADT$Derive$serializer$term$args,
        'Kind.Parser.ADT.Derive.serializer.ctr.bits': Kind$Parser$ADT$Derive$serializer$ctr$bits,
        'Kind.Parser.ADT.Derive.serializer.ctr': Kind$Parser$ADT$Derive$serializer$ctr,
        'Kind.Parser.ADT.Derive.serializer.term.ctrs': Kind$Parser$ADT$Derive$serializer$term$ctrs,
        'Bits.zeros': Bits$zeros,
        'Nat.div': Nat$div,
        'Nat.bitlen': Nat$bitlen,
        'Kind.Parser.ADT.Derive.serializer.term': Kind$Parser$ADT$Derive$serializer$term,
        'Kind.Parser.ADT.Derive.serializer.type': Kind$Parser$ADT$Derive$serializer$type,
        'Kind.Parser.ADT.Derive.serializer.term.bits': Kind$Parser$ADT$Derive$serializer$term$bits,
        'Kind.Parser.ADT.Derive.deserializer.term.cont': Kind$Parser$ADT$Derive$deserializer$term$cont,
        'Kind.Parser.ADT.Derive.deserializer.term.args': Kind$Parser$ADT$Derive$deserializer$term$args,
        'Kind.Parser.ADT.Derive.deserializer.term.cses': Kind$Parser$ADT$Derive$deserializer$term$cses,
        'Kind.Parser.ADT.Derive.deserializer.term': Kind$Parser$ADT$Derive$deserializer$term,
        'Kind.Parser.ADT.Derive.deserializer.type': Kind$Parser$ADT$Derive$deserializer$type,
        'Kind.Parser.ADT.Derive.by_name': Kind$Parser$ADT$Derive$by_name,
        'Kind.Parser.file.adt': Kind$Parser$file$adt,
        'Kind.Parser.file.end': Kind$Parser$file$end,
        'Kind.Parser.file': Kind$Parser$file,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Kind.Code.color': Kind$Code$color,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'Kind.Defs.read': Kind$Defs$read,
        'Kind.Synth.load.go': Kind$Synth$load$go,
        'Kind.Synth.files_of.make': Kind$Synth$files_of$make,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.split.go': String$split$go,
        'String.split': String$split,
        'Kind.Synth.files_of': Kind$Synth$files_of,
        'Kind.Synth.load': Kind$Synth$load,
        'Kind.Status.wait': Kind$Status$wait,
        'Kind.Check': Kind$Check,
        'Kind.Check.result': Kind$Check$result,
        'Kind.Error.undefined_reference': Kind$Error$undefined_reference,
        'Kind.Error.waiting': Kind$Error$waiting,
        'Kind.Error.indirect': Kind$Error$indirect,
        'Maybe.mapped': Maybe$mapped,
        'Kind.Path.Maybe.Builder.o': Kind$Path$Maybe$Builder$o,
        'Kind.Path.Maybe.Builder.i': Kind$Path$Maybe$Builder$i,
        'Kind.Error.patch': Kind$Error$patch,
        'Kind.Path.Maybe.Builder.to_bits': Kind$Path$Maybe$Builder$to_bits,
        'Kind.Term.check.patch': Kind$Term$check$patch,
        'Kind.Error.type_mismatch': Kind$Error$type_mismatch,
        'Kind.Error.show_goal': Kind$Error$show_goal,
        'Kind.Path.Builder.nil': Kind$Path$Builder$nil,
        'Kind.Path.Maybe.Builder.nil': Kind$Path$Maybe$Builder$nil,
        'Kind.Term.check.direct': Kind$Term$check$direct,
        'Kind.Term.check.get_name_of_self_type.slice': Kind$Term$check$get_name_of_self_type$slice,
        'Kind.Term.check.get_name_of_self_type': Kind$Term$check$get_name_of_self_type,
        'Kind.Term.check.expand.num.nat': Kind$Term$check$expand$num$nat,
        'Kind.Term.check.expand.num.int': Kind$Term$check$expand$num$int,
        'Kind.Term.check.expand.num.other': Kind$Term$check$expand$num$other,
        'Kind.Term.check.expand.num': Kind$Term$check$expand$num,
        'Kind.Term.check.infer_types_of_with': Kind$Term$check$infer_types_of_with,
        'Kind.Term.normalize': Kind$Term$normalize,
        'Kind.Term.check.expand.cse.motive.go': Kind$Term$check$expand$cse$motive$go,
        'List.tail': List$tail,
        'Kind.Term.SmartMotive.vals.cont': Kind$Term$SmartMotive$vals$cont,
        'Kind.Term.SmartMotive.vals': Kind$Term$SmartMotive$vals,
        'Kind.Term.SmartMotive.nams.cont': Kind$Term$SmartMotive$nams$cont,
        'Kind.Term.SmartMotive.nams': Kind$Term$SmartMotive$nams,
        'List.zip': List$zip,
        'Nat.gte': Nat$gte,
        'Bits.concat': Bits$concat,
        'Kind.Term.serialize.go': Kind$Term$serialize$go,
        'Kind.Term.serialize': Kind$Term$serialize,
        'Bits.eql': Bits$eql,
        'Kind.Term.identical': Kind$Term$identical,
        'Kind.Term.SmartMotive.replace': Kind$Term$SmartMotive$replace,
        'Kind.Term.SmartMotive.make': Kind$Term$SmartMotive$make,
        'Kind.Term.check.expand.cse.motive': Kind$Term$check$expand$cse$motive,
        'Kind.Term.check.expand.cse.argument': Kind$Term$check$expand$cse$argument,
        'Maybe.or': Maybe$or,
        'Kind.Term.check.expand.cse.cases': Kind$Term$check$expand$cse$cases,
        'Kind.Term.check.expand.cse': Kind$Term$check$expand$cse,
        'Kind.Error.cant_infer': Kind$Error$cant_infer,
        'Kind.Term.check.cant_infer': Kind$Term$check$cant_infer,
        'Kind.Term.get_bnds': Kind$Term$get_bnds,
        'List.last.go': List$last$go,
        'List.last': List$last,
        'Kind.Term.check.expand.set.count_params': Kind$Term$check$expand$set$count_params,
        'Nat.for': Nat$for,
        'List.get': List$get,
        'Kind.Term.check.expand.new.pair': Kind$Term$check$expand$new$pair,
        'Kind.Term.check.expand.new': Kind$Term$check$expand$new,
        'Kind.Term.check.expand.get.selector': Kind$Term$check$expand$get$selector,
        'Kind.Term.check.expand.get': Kind$Term$check$expand$get,
        'Kind.Term.check.expand.set.selector': Kind$Term$check$expand$set$selector,
        'Kind.Term.check.expand.set': Kind$Term$check$expand$set,
        'String.at': String$at,
        'String.last': String$last,
        'Kind.Term.check.expand.ope': Kind$Term$check$expand$ope,
        'BitsSet.has': BitsSet$has,
        'BitsSet.mut.has': BitsSet$mut$has,
        'Kind.Term.equal.extra_holes.funari': Kind$Term$equal$extra_holes$funari,
        'Kind.Term.has_holes': Kind$Term$has_holes,
        'Kind.Term.equal.hole': Kind$Term$equal$hole,
        'Kind.Term.equal.extra_holes.filler': Kind$Term$equal$extra_holes$filler,
        'Kind.Term.equal.extra_holes': Kind$Term$equal$extra_holes,
        'BitsSet.set': BitsSet$set,
        'BitsSet.mut.set': BitsSet$mut$set,
        'Bool.eql': Bool$eql,
        'Kind.Term.equal.go': Kind$Term$equal$go,
        'BitsSet.new': BitsSet$new,
        'BitsSet.mut.new': BitsSet$mut$new,
        'Kind.Term.check': Kind$Term$check,
        'Kind.Path.patch_at.list': Kind$Path$patch_at$list,
        'Kind.Term.patch_at': Kind$Term$patch_at,
        'Kind.Synth.fix': Kind$Synth$fix,
        'Kind.Status.fail': Kind$Status$fail,
        'Kind.Synth.one': Kind$Synth$one,
        'BitsMap.from_list': BitsMap$from_list,
        'Kind.Term.inline.names': Kind$Term$inline$names,
        'Kind.Term.inline.reduce': Kind$Term$inline$reduce,
        'Kind.Term.inline': Kind$Term$inline,
        'BitsMap.values.go': BitsMap$values$go,
        'BitsMap.values': BitsMap$values,
        'Kind.Core.var_name': Kind$Core$var_name,
        'Kind.Name.show': Kind$Name$show,
        'Bits.to_nat': Bits$to_nat,
        'U16.show_hex': U16$show_hex,
        'Kind.Code.escape.char': Kind$Code$escape$char,
        'Kind.Code.escape.go': Kind$Code$escape$go,
        'Kind.Code.escape': Kind$Code$escape,
        'Kind.Core.show.go': Kind$Core$show$go,
        'Kind.Core.show': Kind$Core$show,
        'Kind.Defs.core': Kind$Defs$core,
        'Kind.api.io.term_to_core': Kind$api$io$term_to_core,
        'Kind.Comp.Defs.compile.defn.adjust': Kind$Comp$Defs$compile$defn$adjust,
        'Kind.Comp.var': Kind$Comp$var,
        'Kind.Comp.nil': Kind$Comp$nil,
        'Kind.Comp.ref': Kind$Comp$ref,
        'Kind.Comp.Prim.bool': Kind$Comp$Prim$bool,
        'Kind.Comp.Prim.nat': Kind$Comp$Prim$nat,
        'Kind.Comp.Prim.bits': Kind$Comp$Prim$bits,
        'Kind.Comp.Prim.u16': Kind$Comp$Prim$u16,
        'Kind.Comp.Prim.u32': Kind$Comp$Prim$u32,
        'Kind.Comp.Prim.string': Kind$Comp$Prim$string,
        'Kind.Comp.Prim.natives': Kind$Comp$Prim$natives,
        'Kind.Term.equal': Kind$Term$equal,
        'Kind.Comp.compile.prim_of': Kind$Comp$compile$prim_of,
        'String.ends_with': String$ends_with,
        'Kind.Comp.compile.adt.get_fields': Kind$Comp$compile$adt$get_fields,
        'Kind.Comp.compile.adt.get_constructors': Kind$Comp$compile$adt$get_constructors,
        'Kind.Comp.Prim.data': Kind$Comp$Prim$data,
        'Kind.Comp.compile.adt': Kind$Comp$compile$adt,
        'Kind.Comp.eli': Kind$Comp$eli,
        'Kind.Comp.app': Kind$Comp$app,
        'Kind.Comp.let': Kind$Comp$let,
        'Kind.Comp.nat': Kind$Comp$nat,
        'Kind.Comp.chr': Kind$Comp$chr,
        'Kind.Comp.str': Kind$Comp$str,
        'Kind.Comp.lam': Kind$Comp$lam,
        'Kind.Comp.ins': Kind$Comp$ins,
        'Kind.Comp.compile': Kind$Comp$compile,
        'Kind.Comp.Defs.compile.defn': Kind$Comp$Defs$compile$defn,
        'Kind.Comp.Defs.compile': Kind$Comp$Defs$compile,
        'Kind.Comp.dependency_sort.go': Kind$Comp$dependency_sort$go,
        'Kind.Comp.dependency_sort': Kind$Comp$dependency_sort,
        'String.take_while': String$take_while,
        'String.drop_while': String$drop_while,
        'Kind.Comp.replace': Kind$Comp$replace,
        'List.create.go': List$create$go,
        'List.create': List$create,
        'Kind.Comp.Prim.instantiator.go': Kind$Comp$Prim$instantiator$go,
        'Kind.Comp.Prim.instantiator': Kind$Comp$Prim$instantiator,
        'Kind.Comp.get_args.go': Kind$Comp$get_args$go,
        'Kind.Comp.get_args': Kind$Comp$get_args,
        'Kind.Comp.get_arity': Kind$Comp$get_arity,
        'Kind.Comp.get_vars': Kind$Comp$get_vars,
        'Kind.Comp.Prim.inst.go': Kind$Comp$Prim$inst$go,
        'Kind.Comp.Prim.inst': Kind$Comp$Prim$inst,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Kind.Comp.transpile.term': Kind$Comp$transpile$term,
        'List.map': List$map,
        'List.seq.go': List$seq$go,
        'List.seq': List$seq,
        'Kind.Comp.txt': Kind$Comp$txt,
        'Kind.Comp.subst': Kind$Comp$subst,
        'Kind.Comp.apply': Kind$Comp$apply,
        'Kind.Comp.Prim.elim': Kind$Comp$Prim$elim,
        'Kind.Comp.Prim.eliminator': Kind$Comp$Prim$eliminator,
        'BBT.lookup': BBT$lookup,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'BBT': BBT,
        'Map': Map,
        'Kind.Comp.transpile.global_definitions': Kind$Comp$transpile$global_definitions,
        'Kind.Comp.transpile': Kind$Comp$transpile,
        'Kind.Comp.Language.new': Kind$Comp$Language$new,
        'Kind.Comp.Grammar.new': Kind$Comp$Grammar$new,
        'Kind.Comp.Target.Scheme.null': Kind$Comp$Target$Scheme$null,
        'Kind.Comp.Target.Scheme.name': Kind$Comp$Target$Scheme$name,
        'Kind.Comp.Target.Scheme.inst_name': Kind$Comp$Target$Scheme$inst_name,
        'Kind.Comp.Target.Scheme.elim_name': Kind$Comp$Target$Scheme$elim_name,
        'Kind.Comp.Target.Scheme.lambda': Kind$Comp$Target$Scheme$lambda,
        'Kind.Comp.Target.Scheme.application': Kind$Comp$Target$Scheme$application,
        'Kind.Comp.Target.Scheme.local_definition': Kind$Comp$Target$Scheme$local_definition,
        'Kind.Comp.Target.Scheme.global_application': Kind$Comp$Target$Scheme$global_application,
        'Kind.Comp.Target.Scheme.nest_lambdas.aux': Kind$Comp$Target$Scheme$nest_lambdas$aux,
        'Kind.Comp.Target.Scheme.nest_lambdas': Kind$Comp$Target$Scheme$nest_lambdas,
        'Kind.Comp.Target.Scheme.global_function': Kind$Comp$Target$Scheme$global_function,
        'Kind.Comp.Target.Scheme.select': Kind$Comp$Target$Scheme$select,
        'Char.to_string': Char$to_string,
        'Kind.Comp.Target.Scheme.string_literal': Kind$Comp$Target$Scheme$string_literal,
        'Kind.Comp.Target.Scheme.nat': Kind$Comp$Target$Scheme$nat,
        'Kind.Comp.Target.Scheme.exports': Kind$Comp$Target$Scheme$exports,
        'Kind.Comp.Target.Scheme.module': Kind$Comp$Target$Scheme$module,
        'Kind.Comp.Target.Scheme.program': Kind$Comp$Target$Scheme$program,
        'Kind.Comp.Target.Scheme.grammar': Kind$Comp$Target$Scheme$grammar,
        'Kind.Comp.Native.new': Kind$Comp$Native$new,
        'Kind.Comp.Target.Scheme.natives': Kind$Comp$Target$Scheme$natives,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kind.Comp.Target.Scheme.optimizeds': Kind$Comp$Target$Scheme$optimizeds,
        'Kind.Comp.Target.Scheme.basics': Kind$Comp$Target$Scheme$basics,
        'Kind.Comp.Target.Scheme.Language': Kind$Comp$Target$Scheme$Language,
        'Kind.api.io.term_to_scheme': Kind$api$io$term_to_scheme,
        'Kind.Synth.many': Kind$Synth$many,
        'Kind.Comp.dependency_sort.module': Kind$Comp$dependency_sort$module,
        'Kind.Comp.transpile.module': Kind$Comp$transpile$module,
        'Kind.api.io.terms_to_scheme_lib': Kind$api$io$terms_to_scheme_lib,
        'BitsMap.keys.go': BitsMap$keys$go,
        'BitsMap.keys': BitsMap$keys,
        'Kind.Synth.file': Kind$Synth$file,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Kind.Term.show.as_nat.go': Kind$Term$show$as_nat$go,
        'Kind.Term.show.as_nat': Kind$Term$show$as_nat,
        'Kind.Term.show.is_ref': Kind$Term$show$is_ref,
        'Kind.Term.show.app.done': Kind$Term$show$app$done,
        'Kind.Term.show.app': Kind$Term$show$app,
        'BitsMap.to_list': BitsMap$to_list,
        'Kind.Term.show.go': Kind$Term$show$go,
        'Kind.Term.show': Kind$Term$show,
        'Kind.Defs.report.types': Kind$Defs$report$types,
        'List.filter': List$filter,
        'Kind.Error.is_undef': Kind$Error$is_undef,
        'Kind.Error.is_mistake': Kind$Error$is_mistake,
        'Kind.Error.is_goal': Kind$Error$is_goal,
        'Kind.Error.relevant': Kind$Error$relevant,
        'Kind.Context.show': Kind$Context$show,
        'Kind.Term.expand_at': Kind$Term$expand_at,
        'Kind.Term.expand_ct': Kind$Term$expand_ct,
        'Kind.Term.expand': Kind$Term$expand,
        'Kind.Error.show': Kind$Error$show,
        'Kind.Error.origin': Kind$Error$origin,
        'Kind.Defs.report.errors': Kind$Defs$report$errors,
        'Kind.Defs.report': Kind$Defs$report,
        'IO.set_file': IO$set_file,
        'Kind.Synth.load.cached.set_file': Kind$Synth$load$cached$set_file,
        'Bool.show': Bool$show,
        'Kind.Defs.cache.go': Kind$Defs$cache$go,
        'Kind.Defs.cache': Kind$Defs$cache,
        'Kind.api.io.check_file': Kind$api$io$check_file,
        'Kind.Synth.files.go': Kind$Synth$files$go,
        'Kind.Synth.remove_duplicate_names': Kind$Synth$remove_duplicate_names,
        'Kind.Synth.files': Kind$Synth$files,
        'Kind.api.io.check_files': Kind$api$io$check_files,
        'Kind.api.io.check_term': Kind$api$io$check_term,
        'Kind.api.io.show_term': Kind$api$io$show_term,
        'Kind.api.io.show_term_normal': Kind$api$io$show_term_normal,
        'IO.purify': IO$purify,
        'Kind.api.check_code': Kind$api$check_code,
        'Kind.Term.read': Kind$Term$read,
        'Kind.api.export': Kind$api$export,
    };
})();