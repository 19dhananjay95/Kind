#term #defs (((((((((((((((((term #term Kind.Term) #term.name #term.indx term) #term.name ((((((Kind.Map.get Kind.Def) term.name) defs) #got Kind.Term) (Kind.Term.ref term.name)) #got.value ((got.value #got.value Kind.Term) #got.value.file #got.value.code #got.value.orig #got.value.name #got.value.term #got.value.type #got.value.isct #got.value.arit #got.value.stat ((Kind.Term.reduce got.value.term) defs)))) term) #term.eras #term.self #term.name #term.xtyp #term.body term) #term.name #term.body term) #term.func #term.argm !func = ((Kind.Term.reduce term.func) defs); (((((((((((((((((func #func Kind.Term) #func.name #func.indx term) #func.name term) term) #func.eras #func.self #func.name #func.xtyp #func.body term) #func.name #func.body ((Kind.Term.reduce (func.body term.argm)) defs)) #func.func #func.argm term) #func.name #func.expr #func.body term) #func.name #func.expr #func.body term) #func.done #func.term #func.type term) #func.name #func.dref #func.verb term) #func.path term) #func.natx term) #func.chrx term) #func.strx term) #func.path #func.expr #func.name #func.with #func.cses #func.moti term) #func.orig #func.expr term)) #term.name #term.expr #term.body ((Kind.Term.reduce (term.body term.expr)) defs)) #term.name #term.expr #term.body ((Kind.Term.reduce (term.body term.expr)) defs)) #term.done #term.term #term.type ((Kind.Term.reduce term.term) defs)) #term.name #term.dref #term.verb term) #term.path term) #term.natx ((Kind.Term.reduce (Kind.Term.unroll_nat term.natx)) defs)) #term.chrx ((Kind.Term.reduce (Kind.Term.unroll_chr term.chrx)) defs)) #term.strx ((Kind.Term.reduce (Kind.Term.unroll_str term.strx)) defs)) #term.path #term.expr #term.name #term.with #term.cses #term.moti term) #term.orig #term.expr ((Kind.Term.reduce term.expr) defs))