Parser.many.go<V: Type>(parse: Parser(V), values: List<V> -> List<V>, err: Maybe<Parser.ErrorAt>, idx: Nat, code: String): Parser.Reply<List<V>>
  case parse(err, idx, code) as reply {
    error:
      new_long = Parser.ErrorAt.maybe_combine(err, some(reply.err))
      Parser.Reply.value<List<V>>(new_long, idx, code, values([])),
    value: Parser.many.go<V>(parse, (xs) values(List.cons!(reply.val, xs)), err, reply.idx, reply.code),
  }
