List.commute_cons_map<A: Type, B: Type>(a :A, ls: List(A), f: A -> B)
  : Equal(List(B),
          List.cons<B>(f(a), List.map<A, B>(f, ls)),
          List.map<A, B>(f, List.cons<A>(a, ls)))
  case ls {
    nil : Equal.refl<_,_>
    cons: Equal.refl<_,_>
  } : Equal(_, List.cons<_>(f(a), List.map<_,_>(f, ls)), List.map<_,_>(f, List.cons<_>(a, ls)))