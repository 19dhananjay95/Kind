#len #bits #need #chunk ((((bits #bits (List Bits)) (((List.cons Bits) (Bits.reverse chunk)) (List.nil Bits))) #bits.pred (((need #need (List Bits)) !head = (Bits.reverse chunk); !tail = ((((Bits.chunks_of.go len) bits) len) Bits.e); (((List.cons Bits) head) tail)) #need.pred !chunk = (Bits.o chunk); ((((Bits.chunks_of.go len) bits.pred) need.pred) chunk))) #bits.pred (((need #need (List Bits)) !head = (Bits.reverse chunk); !tail = ((((Bits.chunks_of.go len) bits) len) Bits.e); (((List.cons Bits) head) tail)) #need.pred !chunk = (Bits.i chunk); ((((Bits.chunks_of.go len) bits.pred) need.pred) chunk)))