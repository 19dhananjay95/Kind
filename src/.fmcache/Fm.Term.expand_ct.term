#term #defs #arity (((((((((((((((((term #term Fm.Term) #term.name #term.indx ((Fm.Term.var term.name) term.indx)) #term.name ((((((Fm.get Fm.Def) term.name) defs) #got Fm.Term) (Fm.Term.ref term.name)) #got.value ((got.value #got.value Fm.Term) #got.value.file #got.value.code #got.value.orig #got.value.name #got.value.term #got.value.type #got.value.isct #got.value.stat (((got.value.isct # Fm.Term) (Fm.Term.ref term.name)) got.value.term)))) Fm.Term.typ) #term.eras #term.self #term.name #term.xtyp #term.body $xtyp = (((Fm.Term.expand_ct term.xtyp) defs) +0); $body = {#s #x (((Fm.Term.expand_ct ((term.body s) x)) defs) +0):@(:Fm.Term) @(:Fm.Term) Fm.Term}; (((((Fm.Term.all term.eras) term.self) term.name) xtyp) body)) #term.name #term.body $body = {#x (((Fm.Term.expand_ct (term.body x)) defs) +0):@(:Fm.Term) Fm.Term}; ((Fm.Term.lam term.name) body)) #term.func #term.argm $func = (((Fm.Term.expand_ct term.func) defs) (Nat.succ arity)); $argm = (((Fm.Term.expand_ct term.argm) defs) +0); ((Fm.Term.app func) argm)) #term.name #term.expr #term.body $expr = (((Fm.Term.expand_ct term.expr) defs) +0); $body = {#x (((Fm.Term.expand_ct (term.body x)) defs) +0):@(:Fm.Term) Fm.Term}; (((Fm.Term.let term.name) expr) body)) #term.name #term.expr #term.body $expr = (((Fm.Term.expand_ct term.expr) defs) +0); $body = {#x (((Fm.Term.expand_ct (term.body x)) defs) +0):@(:Fm.Term) Fm.Term}; (((Fm.Term.def term.name) expr) body)) #term.done #term.term #term.type $term = (((Fm.Term.expand_ct term.term) defs) +0); $type = (((Fm.Term.expand_ct term.type) defs) +0); (((Fm.Term.ann term.done) term) type)) #term.name #term.dref #term.verb (((Fm.Term.gol term.name) term.dref) term.verb)) #term.path (Fm.Term.hol term.path)) #term.natx (Fm.Term.nat term.natx)) #term.chrx (Fm.Term.chr term.chrx)) #term.strx (Fm.Term.str term.strx)) #term.path #term.expr #term.name #term.with #term.cses #term.moti term) #term.orig #term.expr $expr = (((Fm.Term.expand_ct term.expr) defs) +0); ((Fm.Term.ori term.orig) term.expr))