((((((Monad.bind Parser) Parser.monad) Nat) Fm.Term) Fm.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "let ")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "{")) # ((((((Monad.bind Parser) Parser.monad) Fm.Name) Fm.Term) Fm.Parser.name) #nam0 ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text ",")) # ((((((Monad.bind Parser) Parser.monad) Fm.Name) Fm.Term) Fm.Parser.name) #nam1 ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "}")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "=")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #expr ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) Fm.Term) ((Parser.maybe Unit) (Fm.Parser.text ";"))) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #body ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Fm.Term) (Fm.Parser.stop init)) #orig !term = expr; !term = ((Fm.Term.app term) ((Fm.Term.lam "x") #x (Fm.Term.hol Bits.e))); !term = ((Fm.Term.app term) ((Fm.Term.lam nam0) #x ((Fm.Term.lam nam1) #y body))); ((((Monad.pure Parser) Parser.monad) Fm.Term) ((Fm.Term.ori orig) term))))))))))))))