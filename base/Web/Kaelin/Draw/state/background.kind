Web.Kaelin.Draw.state.background(map: Web.Kaelin.Map, cast_info: Web.Kaelin.CastInfo, env_info: App.EnvInfo, img:VoxBox): VoxBox
open cast_info as cast
open env_info as info
let list = NatMap.to_list!(map)
let range = Web.Kaelin.Coord.range(cast.hero_pos, cast.range) // creates a list for all tiles inside cast range // It should be moved to cast_info
let target_coord = Web.Kaelin.Coord.to_axial(info.mouse_pos) 
let area = Web.Kaelin.Skill.indicator(cast.ability, cast.hero_pos, target_coord) // Should be created inside ability/cast_info??

  for pair in list with img:
    open pair
    let coord = Web.Kaelin.Coord.Convert.nat_to_axial(pair.fst)
    let {i, j} = Web.Kaelin.Draw.support.centralize(coord)
    let hex_effect = Web.Kaelin.Draw.support.which_effect(coord,cast_info,range) // Returns the cast affecting a tile
    let area = Web.Kaelin.Draw.support.area_of_effect(cast.hex_effect, target_coord, coord, area, range) // 
    let sprite = Web.Kaelin.Terrain.Sprite.new(hex_effect, area) // Function to return the image for the tile
    let tile = Web.Kaelin.Map.get(coord,map) <> []
      for entity in tile with img:
        case entity {
          background: open entity.terrain
            VoxBox.Draw.image(i, j, 0#32, entity.terrain.draw(sprite), img)
          creature: img
        }
    img  
img
