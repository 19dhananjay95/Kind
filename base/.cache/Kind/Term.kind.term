%Kind.Term.Self(P:@(:Kind.Term) *) @(var:@(name:Kind.Name) @(indx:Nat) (P ((Kind.Term.var name) indx))) @(ref:@(name:Kind.Name) (P (Kind.Term.ref name))) @(typ:(P Kind.Term.typ)) @(all:@(eras:Bool) @(self:Kind.Name) @(name:Kind.Name) @(xtyp:Kind.Term) @(body:@(:Kind.Term) @(:Kind.Term) Kind.Term) (P (((((Kind.Term.all eras) self) name) xtyp) body))) @(lam:@(name:Kind.Name) @(body:@(:Kind.Term) Kind.Term) (P ((Kind.Term.lam name) body))) @(app:@(func:Kind.Term) @(argm:Kind.Term) (P ((Kind.Term.app func) argm))) @(let:@(name:Kind.Name) @(expr:Kind.Term) @(body:@(:Kind.Term) Kind.Term) (P (((Kind.Term.let name) expr) body))) @(def:@(name:Kind.Name) @(expr:Kind.Term) @(body:@(:Kind.Term) Kind.Term) (P (((Kind.Term.def name) expr) body))) @(ann:@(done:Bool) @(term:Kind.Term) @(type:Kind.Term) (P (((Kind.Term.ann done) term) type))) @(gol:@(name:Kind.Name) @(dref:(List Bits)) @(verb:Bool) (P (((Kind.Term.gol name) dref) verb))) @(hol:@(path:Bits) (P (Kind.Term.hol path))) @(nat:@(natx:Nat) (P (Kind.Term.nat natx))) @(chr:@(chrx:Char) (P (Kind.Term.chr chrx))) @(str:@(strx:String) (P (Kind.Term.str strx))) @(cse:@(path:Bits) @(expr:Kind.Term) @(name:Kind.Name) @(with:(List Kind.Ann)) @(cses:(BitsMap Kind.Term)) @(moti:(Maybe Kind.Term)) (P ((((((Kind.Term.cse path) expr) name) with) cses) moti))) @(ori:@(orig:((Pair Nat) Nat)) @(expr:Kind.Term) (P ((Kind.Term.ori orig) expr))) (P Kind.Term.Self)