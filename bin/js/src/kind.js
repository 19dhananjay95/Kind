module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };
    var bitsmap_new = {
        _: 'BitsMap.new'
    };
    var bitsmap_tie = function(val, lft, rgt) {
        return {
            _: 'BitsMap.tip',
            val,
            lft,
            rgt
        };
    }
    var maybe_none = {
        _: 'Maybe.none'
    };
    var maybe_some = function(value) {
        return {
            _: 'Maybe.some',
            value
        };
    }
    var bitsmap_get = function(bits, map) {
        for (var i = bits.length - 1; i >= 0; --i) {
            if (map._ !== 'BitsMap.new') {
                map = bits[i] === '0' ? map.lft : map.rgt;
            }
        }
        return map._ === 'BitsMap.new' ? maybe_none : map.val;
    }
    var bitsmap_set = function(bits, val, map, mode) {
        var res = {
            value: map
        };
        var key = 'value';
        var obj = res;
        for (var i = bits.length - 1; i >= 0; --i) {
            var map = obj[key];
            if (map._ === 'BitsMap.new') {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: maybe_none,
                    lft: bitsmap_new,
                    rgt: bitsmap_new
                };
            } else {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: map.val,
                    lft: map.lft,
                    rgt: map.rgt
                };
            }
            obj = obj[key];
            key = bits[i] === '0' ? 'lft' : 'rgt';
        }
        var map = obj[key];
        if (map._ === 'BitsMap.new') {
            var x = mode === 'del' ? maybe_none : {
                _: 'Maybe.some',
                value: val
            };
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: bitsmap_new,
                rgt: bitsmap_new
            };
        } else {
            var x = mode === 'set' ? {
                _: 'Maybe.some',
                value: val
            } : mode === 'del' ? maybe_none : map.val;
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: map.lft,
                rgt: map.rgt
            };
        }
        return res.value;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    var nat_to_bits = n => {
        return n === 0n ? '' : n.toString(2);
    };
    var kind_name_to_bits = name => {
        const TABLE = {
            'A': '000000',
            'B': '100000',
            'C': '010000',
            'D': '110000',
            'E': '001000',
            'F': '101000',
            'G': '011000',
            'H': '111000',
            'I': '000100',
            'J': '100100',
            'K': '010100',
            'L': '110100',
            'M': '001100',
            'N': '101100',
            'O': '011100',
            'P': '111100',
            'Q': '000010',
            'R': '100010',
            'S': '010010',
            'T': '110010',
            'U': '001010',
            'V': '101010',
            'W': '011010',
            'X': '111010',
            'Y': '000110',
            'Z': '100110',
            'a': '010110',
            'b': '110110',
            'c': '001110',
            'd': '101110',
            'e': '011110',
            'f': '111110',
            'g': '000001',
            'h': '100001',
            'i': '010001',
            'j': '110001',
            'k': '001001',
            'l': '101001',
            'm': '011001',
            'n': '111001',
            'o': '000101',
            'p': '100101',
            'q': '010101',
            'r': '110101',
            's': '001101',
            't': '101101',
            'u': '011101',
            'v': '111101',
            'w': '000011',
            'x': '100011',
            'y': '010011',
            'z': '110011',
            '0': '001011',
            '1': '101011',
            '2': '011011',
            '3': '111011',
            '4': '000111',
            '5': '100111',
            '6': '010111',
            '7': '110111',
            '8': '001111',
            '9': '101111',
            '.': '011111',
            '_': '111111',
        }
        var a = '';
        for (var i = name.length - 1; i >= 0; --i) {
            a += TABLE[name[i]];
        }
        return a;
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $25 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $21 = c0;
                return $21;
            } else {
                var $22 = self.charCodeAt(0);
                var $23 = self.slice(1);
                var $24 = c1($22)($23);
                return $24;
            };
        })();
        return $25;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
        };
        return run_io({
            rl,
            fs,
            pc,
            ht,
            hs
        }, p).then((x) => {
            rl.close();
            return x;
        }).catch((e) => {
            rl.close();
            throw e;
        });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function IO$(_A$1) {
        var $26 = null;
        return $26;
    };
    const IO = x0 => IO$(x0);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $27 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $27;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $29 = self.value;
                var $30 = _f$4($29);
                var $28 = $30;
                break;
            case 'IO.ask':
                var $31 = self.query;
                var $32 = self.param;
                var $33 = self.then;
                var $34 = IO$ask$($31, $32, (_x$8 => {
                    var $35 = IO$bind$($33(_x$8), _f$4);
                    return $35;
                }));
                var $28 = $34;
                break;
        };
        return $28;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $36 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $36;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $37 = _new$2(IO$bind)(IO$end);
        return $37;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function Maybe$(_A$1) {
        var $38 = null;
        return $38;
    };
    const Maybe = x0 => Maybe$(x0);

    function BitsMap$(_A$1) {
        var $39 = null;
        return $39;
    };
    const BitsMap = x0 => BitsMap$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });
    const BitsMap$get = a0 => a1 => (bitsmap_get(a0, a1));
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');
    const Bits$i = a0 => (a0 + '1');
    const Bool$true = true;
    const Bool$false = false;

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $41 = Bool$true;
                var $40 = $41;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $42 = Bool$false;
                var $40 = $42;
                break;
        };
        return $40;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $44 = self.pred;
                var $45 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $47 = self.pred;
                            var $48 = (_a$pred$10 => {
                                var $49 = Word$cmp$go$(_a$pred$10, $47, _c$4);
                                return $49;
                            });
                            var $46 = $48;
                            break;
                        case 'Word.i':
                            var $50 = self.pred;
                            var $51 = (_a$pred$10 => {
                                var $52 = Word$cmp$go$(_a$pred$10, $50, Cmp$ltn);
                                return $52;
                            });
                            var $46 = $51;
                            break;
                        case 'Word.e':
                            var $53 = (_a$pred$8 => {
                                var $54 = _c$4;
                                return $54;
                            });
                            var $46 = $53;
                            break;
                    };
                    var $46 = $46($44);
                    return $46;
                });
                var $43 = $45;
                break;
            case 'Word.i':
                var $55 = self.pred;
                var $56 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $58 = self.pred;
                            var $59 = (_a$pred$10 => {
                                var $60 = Word$cmp$go$(_a$pred$10, $58, Cmp$gtn);
                                return $60;
                            });
                            var $57 = $59;
                            break;
                        case 'Word.i':
                            var $61 = self.pred;
                            var $62 = (_a$pred$10 => {
                                var $63 = Word$cmp$go$(_a$pred$10, $61, _c$4);
                                return $63;
                            });
                            var $57 = $62;
                            break;
                        case 'Word.e':
                            var $64 = (_a$pred$8 => {
                                var $65 = _c$4;
                                return $65;
                            });
                            var $57 = $64;
                            break;
                    };
                    var $57 = $57($55);
                    return $57;
                });
                var $43 = $56;
                break;
            case 'Word.e':
                var $66 = (_b$5 => {
                    var $67 = _c$4;
                    return $67;
                });
                var $43 = $66;
                break;
        };
        var $43 = $43(_b$3);
        return $43;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $68 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $68;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$ltn$(_a$2, _b$3) {
        var $69 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $69;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $70 = 1n + _pred$1;
        return $70;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$new$(_value$1) {
        var $71 = word_to_u16(_value$1);
        return $71;
    };
    const U16$new = x0 => U16$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $72 = _x$4;
                    return $72;
                } else {
                    var $73 = (self - 1n);
                    var $74 = Nat$apply$($73, _f$3, _f$3(_x$4));
                    return $74;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $75 = null;
        return $75;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $76 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $76;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $77 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $77;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $79 = self.pred;
                var $80 = Word$i$($79);
                var $78 = $80;
                break;
            case 'Word.i':
                var $81 = self.pred;
                var $82 = Word$o$(Word$inc$($81));
                var $78 = $82;
                break;
            case 'Word.e':
                var $83 = Word$e;
                var $78 = $83;
                break;
        };
        return $78;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $85 = Word$e;
            var $84 = $85;
        } else {
            var $86 = (self - 1n);
            var $87 = Word$o$(Word$zero$($86));
            var $84 = $87;
        };
        return $84;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $88 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $88;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);
    const Kind$Name$to_bits = a0 => (kind_name_to_bits(a0));

    function Kind$Map$get$(_name$2, _map$3) {
        var $89 = (bitsmap_get((kind_name_to_bits(_name$2)), _map$3));
        return $89;
    };
    const Kind$Map$get = x0 => x1 => Kind$Map$get$(x0, x1);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $91 = self.value;
                var $92 = $91;
                var $90 = $92;
                break;
            case 'Maybe.none':
                var $93 = _a$3;
                var $90 = $93;
                break;
        };
        return $90;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $94 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $94;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Maybe$some$(_value$2) {
        var $95 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $95;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Parser$run$(_parser$2, _code$3) {
        var self = _parser$2(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        switch (self._) {
            case 'Parser.Reply.value':
                var $97 = self.val;
                var $98 = Maybe$some$($97);
                var $96 = $98;
                break;
            case 'Parser.Reply.error':
                var $99 = Maybe$none;
                var $96 = $99;
                break;
        };
        return $96;
    };
    const Parser$run = x0 => x1 => Parser$run$(x0, x1);

    function Parser$Reply$(_V$1) {
        var $100 = null;
        return $100;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $101 = null;
        return $101;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $102 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $102;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $104 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $106 = self.idx;
                        var self = ($104 > $106);
                        if (self) {
                            var $108 = _a$1;
                            var $107 = $108;
                        } else {
                            var $109 = _b$2;
                            var $107 = $109;
                        };
                        var $105 = $107;
                        break;
                };
                var $103 = $105;
                break;
        };
        return $103;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $111 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $113 = self.value;
                        var $114 = Maybe$some$(Parser$Error$combine$($111, $113));
                        var $112 = $114;
                        break;
                    case 'Maybe.none':
                        var $115 = _a$1;
                        var $112 = $115;
                        break;
                };
                var $110 = $112;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $117 = Maybe$none;
                        var $116 = $117;
                        break;
                    case 'Maybe.some':
                        var $118 = _b$2;
                        var $116 = $118;
                        break;
                };
                var $110 = $116;
                break;
        };
        return $110;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $119 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $119;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$cons$(_head$2, _tail$3) {
        var $120 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $120;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $122 = self.pst;
                                var $123 = self.val;
                                var $124 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $125 = _values$3(List$cons$($123, _xs$12));
                                    return $125;
                                }), $122);
                                var $121 = $124;
                                break;
                            case 'Parser.Reply.error':
                                var $126 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $121 = $126;
                                break;
                        };
                        return $121;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $127 = Parser$many$go(_parser$2)((_x$3 => {
            var $128 = _x$3;
            return $128;
        }));
        return $127;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $130 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $132 = self.err;
                        var self = $130;
                        switch (self._) {
                            case 'Maybe.some':
                                var $134 = self.value;
                                var $135 = Parser$Reply$error$(Parser$Error$combine$($134, $132));
                                var $133 = $135;
                                break;
                            case 'Maybe.none':
                                var $136 = Parser$Reply$error$($132);
                                var $133 = $136;
                                break;
                        };
                        var $131 = $133;
                        break;
                    case 'Parser.Reply.value':
                        var $137 = self.pst;
                        var $138 = self.val;
                        var self = $137;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $140 = self.err;
                                var $141 = self.nam;
                                var $142 = self.ini;
                                var $143 = self.idx;
                                var $144 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($130, $140), $141, $142, $143, $144);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $146 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $148 = self.err;
                                                var self = $146;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $150 = self.value;
                                                        var $151 = Parser$Reply$error$(Parser$Error$combine$($150, $148));
                                                        var $149 = $151;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $152 = Parser$Reply$error$($148);
                                                        var $149 = $152;
                                                        break;
                                                };
                                                var $147 = $149;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $153 = self.pst;
                                                var $154 = self.val;
                                                var self = $153;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $156 = self.err;
                                                        var $157 = self.nam;
                                                        var $158 = self.ini;
                                                        var $159 = self.idx;
                                                        var $160 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($146, $156), $157, $158, $159, $160);
                                                        var $161 = Parser$Reply$value$(_reply$pst$31, List$cons$($138, $154));
                                                        var $155 = $161;
                                                        break;
                                                };
                                                var $147 = $155;
                                                break;
                                        };
                                        var $145 = $147;
                                        break;
                                };
                                var $139 = $145;
                                break;
                        };
                        var $131 = $139;
                        break;
                };
                var $129 = $131;
                break;
        };
        return $129;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $162 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $162;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $163 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $163;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $165 = Bool$false;
                var $164 = $165;
                break;
            case 'Cmp.eql':
                var $166 = Bool$true;
                var $164 = $166;
                break;
        };
        return $164;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);

    function Word$eql$(_a$2, _b$3) {
        var $167 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $167;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);
    const U16$eql = a0 => a1 => (a0 === a1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $169 = self.err;
                var $170 = self.nam;
                var $171 = self.ini;
                var $172 = self.idx;
                var $173 = self.str;
                var self = $173;
                if (self.length === 0) {
                    var $175 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                    var $174 = $175;
                } else {
                    var $176 = self.charCodeAt(0);
                    var $177 = self.slice(1);
                    var _pst$9 = Parser$State$new$($169, $170, $171, Nat$succ$($172), $177);
                    var self = ($176 === 48);
                    if (self) {
                        var $179 = Parser$Reply$value$(_pst$9, 0n);
                        var $178 = $179;
                    } else {
                        var self = ($176 === 49);
                        if (self) {
                            var $181 = Parser$Reply$value$(_pst$9, 1n);
                            var $180 = $181;
                        } else {
                            var self = ($176 === 50);
                            if (self) {
                                var $183 = Parser$Reply$value$(_pst$9, 2n);
                                var $182 = $183;
                            } else {
                                var self = ($176 === 51);
                                if (self) {
                                    var $185 = Parser$Reply$value$(_pst$9, 3n);
                                    var $184 = $185;
                                } else {
                                    var self = ($176 === 52);
                                    if (self) {
                                        var $187 = Parser$Reply$value$(_pst$9, 4n);
                                        var $186 = $187;
                                    } else {
                                        var self = ($176 === 53);
                                        if (self) {
                                            var $189 = Parser$Reply$value$(_pst$9, 5n);
                                            var $188 = $189;
                                        } else {
                                            var self = ($176 === 54);
                                            if (self) {
                                                var $191 = Parser$Reply$value$(_pst$9, 6n);
                                                var $190 = $191;
                                            } else {
                                                var self = ($176 === 55);
                                                if (self) {
                                                    var $193 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $192 = $193;
                                                } else {
                                                    var self = ($176 === 56);
                                                    if (self) {
                                                        var $195 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $194 = $195;
                                                    } else {
                                                        var self = ($176 === 57);
                                                        if (self) {
                                                            var $197 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $196 = $197;
                                                        } else {
                                                            var $198 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                                                            var $196 = $198;
                                                        };
                                                        var $194 = $196;
                                                    };
                                                    var $192 = $194;
                                                };
                                                var $190 = $192;
                                            };
                                            var $188 = $190;
                                        };
                                        var $186 = $188;
                                    };
                                    var $184 = $186;
                                };
                                var $182 = $184;
                            };
                            var $180 = $182;
                        };
                        var $178 = $180;
                    };
                    var $174 = $178;
                };
                var $168 = $174;
                break;
        };
        return $168;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $199 = self.head;
                        var $200 = self.tail;
                        var $201 = Nat$from_base$go$(_b$1, $200, (_b$1 * _p$3), (($199 * _p$3) + _res$4));
                        return $201;
                    case 'List.nil':
                        var $202 = _res$4;
                        return $202;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $203 = self.head;
                        var $204 = self.tail;
                        var $205 = List$reverse$go$($204, List$cons$($203, _res$3));
                        return $205;
                    case 'List.nil':
                        var $206 = _res$3;
                        return $206;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);

    function List$reverse$(_xs$2) {
        var $207 = List$reverse$go$(_xs$2, List$nil);
        return $207;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Nat$from_base$(_base$1, _ds$2) {
        var $208 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $208;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $210 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $212 = self.err;
                        var self = $210;
                        switch (self._) {
                            case 'Maybe.some':
                                var $214 = self.value;
                                var $215 = Parser$Reply$error$(Parser$Error$combine$($214, $212));
                                var $213 = $215;
                                break;
                            case 'Maybe.none':
                                var $216 = Parser$Reply$error$($212);
                                var $213 = $216;
                                break;
                        };
                        var $211 = $213;
                        break;
                    case 'Parser.Reply.value':
                        var $217 = self.pst;
                        var $218 = self.val;
                        var self = $217;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $220 = self.err;
                                var $221 = self.nam;
                                var $222 = self.ini;
                                var $223 = self.idx;
                                var $224 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($210, $220), $221, $222, $223, $224);
                                var $225 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $218));
                                var $219 = $225;
                                break;
                        };
                        var $211 = $219;
                        break;
                };
                var $209 = $211;
                break;
        };
        return $209;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$read = a0 => (BigInt(a0));
    const IO$get_time = IO$ask$("get_time", "", (_time$1 => {
        var $226 = IO$end$((BigInt(_time$1)));
        return $226;
    }));

    function Kind$Synth$load$cached$is_loop$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $228 = self.value;
                var self = $228;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $230 = self.stat;
                        var self = $230;
                        switch (self._) {
                            case 'Kind.Status.done':
                                var $232 = self.cached;
                                var $233 = $232;
                                var $231 = $233;
                                break;
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $234 = Bool$false;
                                var $231 = $234;
                                break;
                        };
                        var $229 = $231;
                        break;
                };
                var $227 = $229;
                break;
            case 'Maybe.none':
                var $235 = Bool$false;
                var $227 = $235;
                break;
        };
        return $227;
    };
    const Kind$Synth$load$cached$is_loop = x0 => x1 => Kind$Synth$load$cached$is_loop$(x0, x1);

    function IO$get_file$(_name$1) {
        var $236 = IO$ask$("get_file", _name$1, (_file$2 => {
            var $237 = IO$end$(_file$2);
            return $237;
        }));
        return $236;
    };
    const IO$get_file = x0 => IO$get_file$(x0);

    function String$cons$(_head$1, _tail$2) {
        var $238 = (String.fromCharCode(_head$1) + _tail$2);
        return $238;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $240 = self.slice(0, -1);
                var self = $240;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $242 = self.slice(0, -1);
                        var self = $242;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $244 = self.slice(0, -1);
                                var self = $244;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $246 = self.slice(0, -1);
                                        var $247 = ("0" + Bits$hex$encode$($246));
                                        var $245 = $247;
                                        break;
                                    case 'i':
                                        var $248 = self.slice(0, -1);
                                        var $249 = ("8" + Bits$hex$encode$($248));
                                        var $245 = $249;
                                        break;
                                    case 'e':
                                        var $250 = "0";
                                        var $245 = $250;
                                        break;
                                };
                                var $243 = $245;
                                break;
                            case 'i':
                                var $251 = self.slice(0, -1);
                                var self = $251;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $253 = self.slice(0, -1);
                                        var $254 = ("4" + Bits$hex$encode$($253));
                                        var $252 = $254;
                                        break;
                                    case 'i':
                                        var $255 = self.slice(0, -1);
                                        var $256 = ("c" + Bits$hex$encode$($255));
                                        var $252 = $256;
                                        break;
                                    case 'e':
                                        var $257 = "4";
                                        var $252 = $257;
                                        break;
                                };
                                var $243 = $252;
                                break;
                            case 'e':
                                var $258 = "0";
                                var $243 = $258;
                                break;
                        };
                        var $241 = $243;
                        break;
                    case 'i':
                        var $259 = self.slice(0, -1);
                        var self = $259;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $261 = self.slice(0, -1);
                                var self = $261;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $263 = self.slice(0, -1);
                                        var $264 = ("2" + Bits$hex$encode$($263));
                                        var $262 = $264;
                                        break;
                                    case 'i':
                                        var $265 = self.slice(0, -1);
                                        var $266 = ("a" + Bits$hex$encode$($265));
                                        var $262 = $266;
                                        break;
                                    case 'e':
                                        var $267 = "2";
                                        var $262 = $267;
                                        break;
                                };
                                var $260 = $262;
                                break;
                            case 'i':
                                var $268 = self.slice(0, -1);
                                var self = $268;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $270 = self.slice(0, -1);
                                        var $271 = ("6" + Bits$hex$encode$($270));
                                        var $269 = $271;
                                        break;
                                    case 'i':
                                        var $272 = self.slice(0, -1);
                                        var $273 = ("e" + Bits$hex$encode$($272));
                                        var $269 = $273;
                                        break;
                                    case 'e':
                                        var $274 = "6";
                                        var $269 = $274;
                                        break;
                                };
                                var $260 = $269;
                                break;
                            case 'e':
                                var $275 = "2";
                                var $260 = $275;
                                break;
                        };
                        var $241 = $260;
                        break;
                    case 'e':
                        var $276 = "0";
                        var $241 = $276;
                        break;
                };
                var $239 = $241;
                break;
            case 'i':
                var $277 = self.slice(0, -1);
                var self = $277;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $279 = self.slice(0, -1);
                        var self = $279;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $281 = self.slice(0, -1);
                                var self = $281;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $283 = self.slice(0, -1);
                                        var $284 = ("1" + Bits$hex$encode$($283));
                                        var $282 = $284;
                                        break;
                                    case 'i':
                                        var $285 = self.slice(0, -1);
                                        var $286 = ("9" + Bits$hex$encode$($285));
                                        var $282 = $286;
                                        break;
                                    case 'e':
                                        var $287 = "1";
                                        var $282 = $287;
                                        break;
                                };
                                var $280 = $282;
                                break;
                            case 'i':
                                var $288 = self.slice(0, -1);
                                var self = $288;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $290 = self.slice(0, -1);
                                        var $291 = ("5" + Bits$hex$encode$($290));
                                        var $289 = $291;
                                        break;
                                    case 'i':
                                        var $292 = self.slice(0, -1);
                                        var $293 = ("d" + Bits$hex$encode$($292));
                                        var $289 = $293;
                                        break;
                                    case 'e':
                                        var $294 = "5";
                                        var $289 = $294;
                                        break;
                                };
                                var $280 = $289;
                                break;
                            case 'e':
                                var $295 = "1";
                                var $280 = $295;
                                break;
                        };
                        var $278 = $280;
                        break;
                    case 'i':
                        var $296 = self.slice(0, -1);
                        var self = $296;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $298 = self.slice(0, -1);
                                var self = $298;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $300 = self.slice(0, -1);
                                        var $301 = ("3" + Bits$hex$encode$($300));
                                        var $299 = $301;
                                        break;
                                    case 'i':
                                        var $302 = self.slice(0, -1);
                                        var $303 = ("b" + Bits$hex$encode$($302));
                                        var $299 = $303;
                                        break;
                                    case 'e':
                                        var $304 = "3";
                                        var $299 = $304;
                                        break;
                                };
                                var $297 = $299;
                                break;
                            case 'i':
                                var $305 = self.slice(0, -1);
                                var self = $305;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $307 = self.slice(0, -1);
                                        var $308 = ("7" + Bits$hex$encode$($307));
                                        var $306 = $308;
                                        break;
                                    case 'i':
                                        var $309 = self.slice(0, -1);
                                        var $310 = ("f" + Bits$hex$encode$($309));
                                        var $306 = $310;
                                        break;
                                    case 'e':
                                        var $311 = "7";
                                        var $306 = $311;
                                        break;
                                };
                                var $297 = $306;
                                break;
                            case 'e':
                                var $312 = "3";
                                var $297 = $312;
                                break;
                        };
                        var $278 = $297;
                        break;
                    case 'e':
                        var $313 = "1";
                        var $278 = $313;
                        break;
                };
                var $239 = $278;
                break;
            case 'e':
                var $314 = "";
                var $239 = $314;
                break;
        };
        return $239;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);

    function Kind$Synth$load$cached$name$(_name$1) {
        var $315 = (".cache/" + Bits$hex$encode$((kind_name_to_bits(_name$1))));
        return $315;
    };
    const Kind$Synth$load$cached$name = x0 => Kind$Synth$load$cached$name$(x0);

    function Kind$Synth$load$cached$get_file$(_name$1) {
        var $316 = IO$get_file$(Kind$Synth$load$cached$name$(_name$1));
        return $316;
    };
    const Kind$Synth$load$cached$get_file = x0 => Kind$Synth$load$cached$get_file$(x0);
    const Bool$not = a0 => (!a0);

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $318 = Bool$true;
            var $317 = $318;
        } else {
            var $319 = self.charCodeAt(0);
            var $320 = self.slice(1);
            var $321 = Bool$false;
            var $317 = $321;
        };
        return $317;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function IO$get_file_mtime$(_name$1) {
        var $322 = IO$ask$("get_file_mtime", _name$1, (_file$2 => {
            var $323 = IO$end$(_file$2);
            return $323;
        }));
        return $322;
    };
    const IO$get_file_mtime = x0 => IO$get_file_mtime$(x0);
    const Bool$and = a0 => a1 => (a0 && a1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Pair$new$(_fst$3, _snd$4) {
        var $324 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $324;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $326 = self.value;
                var $327 = _f$4($326);
                var $325 = $327;
                break;
            case 'Maybe.none':
                var $328 = Maybe$none;
                var $325 = $328;
                break;
        };
        return $325;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $329 = _new$2(Maybe$bind)(Maybe$some);
        return $329;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function Pair$(_A$1, _B$2) {
        var $330 = null;
        return $330;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);
    const Unit$new = null;
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kind$Core$read$spaces$(_code$1) {
        var Kind$Core$read$spaces$ = (_code$1) => ({
            ctr: 'TCO',
            arg: [_code$1]
        });
        var Kind$Core$read$spaces = _code$1 => Kind$Core$read$spaces$(_code$1);
        var arg = [_code$1];
        while (true) {
            let [_code$1] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $331 = Pair$new$(_code$1, Unit$new);
                    return $331;
                } else {
                    var $332 = self.charCodeAt(0);
                    var $333 = self.slice(1);
                    var _is_space$4 = (($332 === 32) || (($332 === 10) || (($332 === 13) || (($332 === 9) || (($332 === 11) || (($332 === 12) || Bool$false))))));
                    var self = _is_space$4;
                    if (self) {
                        var $335 = Kind$Core$read$spaces$($333);
                        var $334 = $335;
                    } else {
                        var $336 = Pair$new$(_code$1, Unit$new);
                        var $334 = $336;
                    };
                    return $334;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$spaces = x0 => Kind$Core$read$spaces$(x0);

    function Kind$Term$ref$(_name$1) {
        var $337 = ({
            _: 'Kind.Term.ref',
            'name': _name$1
        });
        return $337;
    };
    const Kind$Term$ref = x0 => Kind$Term$ref$(x0);

    function Char$eql$(_a$1, _b$2) {
        var $338 = (_a$1 === _b$2);
        return $338;
    };
    const Char$eql = x0 => x1 => Char$eql$(x0, x1);
    const Kind$Term$typ = ({
        _: 'Kind.Term.typ'
    });

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $340 = Bool$false;
                var $339 = $340;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $341 = Bool$true;
                var $339 = $341;
                break;
        };
        return $339;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $342 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $342;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);
    const U16$gte = a0 => a1 => (a0 >= a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $344 = Bool$true;
                var $343 = $344;
                break;
            case 'Cmp.gtn':
                var $345 = Bool$false;
                var $343 = $345;
                break;
        };
        return $343;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $346 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $346;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function Kind$Core$read$is_name$(_chr$1) {
        var $347 = (((_chr$1 >= 46) && (_chr$1 <= 47)) || (((_chr$1 >= 48) && (_chr$1 < 58)) || (((_chr$1 >= 65) && (_chr$1 < 91)) || (((_chr$1 >= 95) && (_chr$1 < 96)) || (((_chr$1 >= 97) && (_chr$1 < 123)) || Bool$false)))));
        return $347;
    };
    const Kind$Core$read$is_name = x0 => Kind$Core$read$is_name$(x0);

    function Kind$Core$read$name$(_code$1) {
        var self = _code$1;
        if (self.length === 0) {
            var $349 = Pair$new$(_code$1, "");
            var $348 = $349;
        } else {
            var $350 = self.charCodeAt(0);
            var $351 = self.slice(1);
            var self = Kind$Core$read$is_name$($350);
            if (self) {
                var self = Kind$Core$read$name$($351);
                switch (self._) {
                    case 'Pair.new':
                        var $354 = self.fst;
                        var $355 = self.snd;
                        var $356 = Pair$new$($354, String$cons$($350, $355));
                        var $353 = $356;
                        break;
                };
                var $352 = $353;
            } else {
                var $357 = Pair$new$(_code$1, "");
                var $352 = $357;
            };
            var $348 = $352;
        };
        return $348;
    };
    const Kind$Core$read$name = x0 => Kind$Core$read$name$(x0);

    function Kind$Core$read$char$(_code$1, _chr$2) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $359 = self.fst;
                var self = $359;
                if (self.length === 0) {
                    var $361 = Pair$new$("", Unit$new);
                    var $360 = $361;
                } else {
                    var $362 = self.charCodeAt(0);
                    var $363 = self.slice(1);
                    var self = ($362 === _chr$2);
                    if (self) {
                        var $365 = Pair$new$($363, Unit$new);
                        var $364 = $365;
                    } else {
                        var $366 = Pair$new$("", Unit$new);
                        var $364 = $366;
                    };
                    var $360 = $364;
                };
                var $358 = $360;
                break;
        };
        return $358;
    };
    const Kind$Core$read$char = x0 => x1 => Kind$Core$read$char$(x0, x1);

    function Kind$Term$all$(_eras$1, _self$2, _name$3, _xtyp$4, _body$5) {
        var $367 = ({
            _: 'Kind.Term.all',
            'eras': _eras$1,
            'self': _self$2,
            'name': _name$3,
            'xtyp': _xtyp$4,
            'body': _body$5
        });
        return $367;
    };
    const Kind$Term$all = x0 => x1 => x2 => x3 => x4 => Kind$Term$all$(x0, x1, x2, x3, x4);

    function Kind$Term$lam$(_name$1, _body$2) {
        var $368 = ({
            _: 'Kind.Term.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $368;
    };
    const Kind$Term$lam = x0 => x1 => Kind$Term$lam$(x0, x1);

    function Kind$Term$app$(_func$1, _argm$2) {
        var $369 = ({
            _: 'Kind.Term.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $369;
    };
    const Kind$Term$app = x0 => x1 => Kind$Term$app$(x0, x1);

    function Kind$Term$let$(_name$1, _expr$2, _body$3) {
        var $370 = ({
            _: 'Kind.Term.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $370;
    };
    const Kind$Term$let = x0 => x1 => x2 => Kind$Term$let$(x0, x1, x2);

    function Kind$Term$def$(_name$1, _expr$2, _body$3) {
        var $371 = ({
            _: 'Kind.Term.def',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $371;
    };
    const Kind$Term$def = x0 => x1 => x2 => Kind$Term$def$(x0, x1, x2);

    function Kind$Term$ann$(_done$1, _term$2, _type$3) {
        var $372 = ({
            _: 'Kind.Term.ann',
            'done': _done$1,
            'term': _term$2,
            'type': _type$3
        });
        return $372;
    };
    const Kind$Term$ann = x0 => x1 => x2 => Kind$Term$ann$(x0, x1, x2);

    function String$starts_with$(_xs$1, _match$2) {
        var String$starts_with$ = (_xs$1, _match$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _match$2]
        });
        var String$starts_with = _xs$1 => _match$2 => String$starts_with$(_xs$1, _match$2);
        var arg = [_xs$1, _match$2];
        while (true) {
            let [_xs$1, _match$2] = arg;
            var R = (() => {
                var self = _match$2;
                if (self.length === 0) {
                    var $373 = Bool$true;
                    return $373;
                } else {
                    var $374 = self.charCodeAt(0);
                    var $375 = self.slice(1);
                    var self = _xs$1;
                    if (self.length === 0) {
                        var $377 = Bool$false;
                        var $376 = $377;
                    } else {
                        var $378 = self.charCodeAt(0);
                        var $379 = self.slice(1);
                        var self = Char$eql$($374, $378);
                        if (self) {
                            var $381 = String$starts_with$($379, $375);
                            var $380 = $381;
                        } else {
                            var $382 = Bool$false;
                            var $380 = $382;
                        };
                        var $376 = $380;
                    };
                    return $376;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$starts_with = x0 => x1 => String$starts_with$(x0, x1);
    const String$nil = '';

    function String$drop$(_n$1, _xs$2) {
        var String$drop$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var String$drop = _n$1 => _xs$2 => String$drop$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $383 = _xs$2;
                    return $383;
                } else {
                    var $384 = (self - 1n);
                    var self = _xs$2;
                    if (self.length === 0) {
                        var $386 = String$nil;
                        var $385 = $386;
                    } else {
                        var $387 = self.charCodeAt(0);
                        var $388 = self.slice(1);
                        var $389 = String$drop$($384, $388);
                        var $385 = $389;
                    };
                    return $385;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop = x0 => x1 => String$drop$(x0, x1);

    function Char$is_hex$(_chr$1) {
        var $390 = (((_chr$1 >= 48) && (_chr$1 <= 57)) || (((_chr$1 >= 97) && (_chr$1 <= 102)) || (((_chr$1 >= 65) && (_chr$1 <= 70)) || Bool$false)));
        return $390;
    };
    const Char$is_hex = x0 => Char$is_hex$(x0);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $392 = self.pred;
                var $393 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $395 = self.pred;
                            var $396 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $398 = Word$i$(Word$adder$(_a$pred$10, $395, Bool$false));
                                    var $397 = $398;
                                } else {
                                    var $399 = Word$o$(Word$adder$(_a$pred$10, $395, Bool$false));
                                    var $397 = $399;
                                };
                                return $397;
                            });
                            var $394 = $396;
                            break;
                        case 'Word.i':
                            var $400 = self.pred;
                            var $401 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $403 = Word$o$(Word$adder$(_a$pred$10, $400, Bool$true));
                                    var $402 = $403;
                                } else {
                                    var $404 = Word$i$(Word$adder$(_a$pred$10, $400, Bool$false));
                                    var $402 = $404;
                                };
                                return $402;
                            });
                            var $394 = $401;
                            break;
                        case 'Word.e':
                            var $405 = (_a$pred$8 => {
                                var $406 = Word$e;
                                return $406;
                            });
                            var $394 = $405;
                            break;
                    };
                    var $394 = $394($392);
                    return $394;
                });
                var $391 = $393;
                break;
            case 'Word.i':
                var $407 = self.pred;
                var $408 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $410 = self.pred;
                            var $411 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $413 = Word$o$(Word$adder$(_a$pred$10, $410, Bool$true));
                                    var $412 = $413;
                                } else {
                                    var $414 = Word$i$(Word$adder$(_a$pred$10, $410, Bool$false));
                                    var $412 = $414;
                                };
                                return $412;
                            });
                            var $409 = $411;
                            break;
                        case 'Word.i':
                            var $415 = self.pred;
                            var $416 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $418 = Word$i$(Word$adder$(_a$pred$10, $415, Bool$true));
                                    var $417 = $418;
                                } else {
                                    var $419 = Word$o$(Word$adder$(_a$pred$10, $415, Bool$true));
                                    var $417 = $419;
                                };
                                return $417;
                            });
                            var $409 = $416;
                            break;
                        case 'Word.e':
                            var $420 = (_a$pred$8 => {
                                var $421 = Word$e;
                                return $421;
                            });
                            var $409 = $420;
                            break;
                    };
                    var $409 = $409($407);
                    return $409;
                });
                var $391 = $408;
                break;
            case 'Word.e':
                var $422 = (_b$5 => {
                    var $423 = Word$e;
                    return $423;
                });
                var $391 = $422;
                break;
        };
        var $391 = $391(_b$3);
        return $391;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $424 = Word$adder$(_a$2, _b$3, Bool$false);
        return $424;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $426 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $428 = Word$i$(Word$shift_left$one$go$($426, Bool$false));
                    var $427 = $428;
                } else {
                    var $429 = Word$o$(Word$shift_left$one$go$($426, Bool$false));
                    var $427 = $429;
                };
                var $425 = $427;
                break;
            case 'Word.i':
                var $430 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $432 = Word$i$(Word$shift_left$one$go$($430, Bool$true));
                    var $431 = $432;
                } else {
                    var $433 = Word$o$(Word$shift_left$one$go$($430, Bool$true));
                    var $431 = $433;
                };
                var $425 = $431;
                break;
            case 'Word.e':
                var $434 = Word$e;
                var $425 = $434;
                break;
        };
        return $425;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $436 = self.pred;
                var $437 = Word$o$(Word$shift_left$one$go$($436, Bool$false));
                var $435 = $437;
                break;
            case 'Word.i':
                var $438 = self.pred;
                var $439 = Word$o$(Word$shift_left$one$go$($438, Bool$true));
                var $435 = $439;
                break;
            case 'Word.e':
                var $440 = Word$e;
                var $435 = $440;
                break;
        };
        return $435;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_n$2, _value$3) {
        var Word$shift_left$ = (_n$2, _value$3) => ({
            ctr: 'TCO',
            arg: [_n$2, _value$3]
        });
        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);
        var arg = [_n$2, _value$3];
        while (true) {
            let [_n$2, _value$3] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $441 = _value$3;
                    return $441;
                } else {
                    var $442 = (self - 1n);
                    var $443 = Word$shift_left$($442, Word$shift_left$one$(_value$3));
                    return $443;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $444 = self.pred;
                        var $445 = Word$mul$go$($444, Word$shift_left$(1n, _b$4), _acc$5);
                        return $445;
                    case 'Word.i':
                        var $446 = self.pred;
                        var $447 = Word$mul$go$($446, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));
                        return $447;
                    case 'Word.e':
                        var $448 = _acc$5;
                        return $448;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $450 = self.pred;
                var $451 = Word$o$(Word$to_zero$($450));
                var $449 = $451;
                break;
            case 'Word.i':
                var $452 = self.pred;
                var $453 = Word$o$(Word$to_zero$($452));
                var $449 = $453;
                break;
            case 'Word.e':
                var $454 = Word$e;
                var $449 = $454;
                break;
        };
        return $449;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $455 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $455;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U16$mul = a0 => a1 => ((a0 * a1) & 0xFFFF);
    const U16$inc = a0 => ((a0 + 1) & 0xFFFF);

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $457 = self.pred;
                var $458 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $460 = self.pred;
                            var $461 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $463 = Word$i$(Word$subber$(_a$pred$10, $460, Bool$true));
                                    var $462 = $463;
                                } else {
                                    var $464 = Word$o$(Word$subber$(_a$pred$10, $460, Bool$false));
                                    var $462 = $464;
                                };
                                return $462;
                            });
                            var $459 = $461;
                            break;
                        case 'Word.i':
                            var $465 = self.pred;
                            var $466 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $468 = Word$o$(Word$subber$(_a$pred$10, $465, Bool$true));
                                    var $467 = $468;
                                } else {
                                    var $469 = Word$i$(Word$subber$(_a$pred$10, $465, Bool$true));
                                    var $467 = $469;
                                };
                                return $467;
                            });
                            var $459 = $466;
                            break;
                        case 'Word.e':
                            var $470 = (_a$pred$8 => {
                                var $471 = Word$e;
                                return $471;
                            });
                            var $459 = $470;
                            break;
                    };
                    var $459 = $459($457);
                    return $459;
                });
                var $456 = $458;
                break;
            case 'Word.i':
                var $472 = self.pred;
                var $473 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $475 = self.pred;
                            var $476 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $478 = Word$o$(Word$subber$(_a$pred$10, $475, Bool$false));
                                    var $477 = $478;
                                } else {
                                    var $479 = Word$i$(Word$subber$(_a$pred$10, $475, Bool$false));
                                    var $477 = $479;
                                };
                                return $477;
                            });
                            var $474 = $476;
                            break;
                        case 'Word.i':
                            var $480 = self.pred;
                            var $481 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $483 = Word$i$(Word$subber$(_a$pred$10, $480, Bool$true));
                                    var $482 = $483;
                                } else {
                                    var $484 = Word$o$(Word$subber$(_a$pred$10, $480, Bool$false));
                                    var $482 = $484;
                                };
                                return $482;
                            });
                            var $474 = $481;
                            break;
                        case 'Word.e':
                            var $485 = (_a$pred$8 => {
                                var $486 = Word$e;
                                return $486;
                            });
                            var $474 = $485;
                            break;
                    };
                    var $474 = $474($472);
                    return $474;
                });
                var $456 = $473;
                break;
            case 'Word.e':
                var $487 = (_b$5 => {
                    var $488 = Word$e;
                    return $488;
                });
                var $456 = $487;
                break;
        };
        var $456 = $456(_b$3);
        return $456;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $489 = Word$subber$(_a$2, _b$3, Bool$false);
        return $489;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);
    const U16$zero = U16$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))));

    function Char$hex_value16$(_chr$1) {
        var self = ((_chr$1 >= 48) && (_chr$1 <= 57));
        if (self) {
            var $491 = ((_chr$1 - 48) & 0xFFFF);
            var $490 = $491;
        } else {
            var self = ((_chr$1 >= 97) && (_chr$1 <= 102));
            if (self) {
                var $493 = (_x0$2 => {
                    var $494 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                    return $494;
                })(((_chr$1 - 97) & 0xFFFF));
                var $492 = $493;
            } else {
                var self = ((_chr$1 >= 65) && (_chr$1 <= 70));
                if (self) {
                    var $496 = (_x0$2 => {
                        var $497 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                        return $497;
                    })(((_chr$1 - 65) & 0xFFFF));
                    var $495 = $496;
                } else {
                    var $498 = U16$zero;
                    var $495 = $498;
                };
                var $492 = $495;
            };
            var $490 = $492;
        };
        return $490;
    };
    const Char$hex_value16 = x0 => Char$hex_value16$(x0);

    function Kind$Core$read$u16$(_code$1, _u16$2) {
        var Kind$Core$read$u16$ = (_code$1, _u16$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _u16$2]
        });
        var Kind$Core$read$u16 = _code$1 => _u16$2 => Kind$Core$read$u16$(_code$1, _u16$2);
        var arg = [_code$1, _u16$2];
        while (true) {
            let [_code$1, _u16$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $499 = Pair$new$(_code$1, _u16$2);
                    return $499;
                } else {
                    var $500 = self.charCodeAt(0);
                    var $501 = self.slice(1);
                    var self = Char$is_hex$($500);
                    if (self) {
                        var _u16$5 = ((((_u16$2 * 16) & 0xFFFF) + Char$hex_value16$($500)) & 0xFFFF);
                        var $503 = Kind$Core$read$u16$($501, _u16$5);
                        var $502 = $503;
                    } else {
                        var $504 = Pair$new$(_code$1, _u16$2);
                        var $502 = $504;
                    };
                    return $502;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$u16 = x0 => x1 => Kind$Core$read$u16$(x0, x1);

    function Kind$Core$read$chrx$(_code$1) {
        var self = String$starts_with$(_code$1, "\\u{");
        if (self) {
            var _code$2 = String$drop$(3n, _code$1);
            var self = Kind$Core$read$u16$(_code$2, 0);
            switch (self._) {
                case 'Pair.new':
                    var $507 = self.fst;
                    var $508 = self.snd;
                    var self = String$starts_with$($507, "}");
                    if (self) {
                        var $510 = Pair$new$(String$drop$(1n, $507), $508);
                        var $509 = $510;
                    } else {
                        var $511 = Pair$new$("", 63);
                        var $509 = $511;
                    };
                    var $506 = $509;
                    break;
            };
            var $505 = $506;
        } else {
            var self = String$starts_with$(_code$1, "\\\'");
            if (self) {
                var $513 = Pair$new$(String$drop$(2n, _code$1), 39);
                var $512 = $513;
            } else {
                var self = String$starts_with$(_code$1, "\\\"");
                if (self) {
                    var $515 = Pair$new$(String$drop$(2n, _code$1), 34);
                    var $514 = $515;
                } else {
                    var self = String$starts_with$(_code$1, "\\\\");
                    if (self) {
                        var $517 = Pair$new$(String$drop$(2n, _code$1), 92);
                        var $516 = $517;
                    } else {
                        var self = _code$1;
                        if (self.length === 0) {
                            var $519 = Pair$new$("", 63);
                            var $518 = $519;
                        } else {
                            var $520 = self.charCodeAt(0);
                            var $521 = self.slice(1);
                            var $522 = Pair$new$($521, $520);
                            var $518 = $522;
                        };
                        var $516 = $518;
                    };
                    var $514 = $516;
                };
                var $512 = $514;
            };
            var $505 = $512;
        };
        return $505;
    };
    const Kind$Core$read$chrx = x0 => Kind$Core$read$chrx$(x0);

    function Kind$Term$chr$(_chrx$1) {
        var $523 = ({
            _: 'Kind.Term.chr',
            'chrx': _chrx$1
        });
        return $523;
    };
    const Kind$Term$chr = x0 => Kind$Term$chr$(x0);

    function Kind$Core$read$strx$(_code$1) {
        var self = String$starts_with$(_code$1, "\"");
        if (self) {
            var $525 = Pair$new$(_code$1, "");
            var $524 = $525;
        } else {
            var self = Kind$Core$read$chrx$(_code$1);
            switch (self._) {
                case 'Pair.new':
                    var $527 = self.fst;
                    var $528 = self.snd;
                    var self = Kind$Core$read$strx$($527);
                    switch (self._) {
                        case 'Pair.new':
                            var $530 = self.fst;
                            var $531 = self.snd;
                            var $532 = Pair$new$($530, String$cons$($528, $531));
                            var $529 = $532;
                            break;
                    };
                    var $526 = $529;
                    break;
            };
            var $524 = $526;
        };
        return $524;
    };
    const Kind$Core$read$strx = x0 => Kind$Core$read$strx$(x0);

    function Kind$Term$str$(_strx$1) {
        var $533 = ({
            _: 'Kind.Term.str',
            'strx': _strx$1
        });
        return $533;
    };
    const Kind$Term$str = x0 => Kind$Term$str$(x0);

    function Char$dec_value$(_chr$1) {
        var self = (_chr$1 === 48);
        if (self) {
            var $535 = 0n;
            var $534 = $535;
        } else {
            var self = (_chr$1 === 49);
            if (self) {
                var $537 = 1n;
                var $536 = $537;
            } else {
                var self = (_chr$1 === 50);
                if (self) {
                    var $539 = 2n;
                    var $538 = $539;
                } else {
                    var self = (_chr$1 === 51);
                    if (self) {
                        var $541 = 3n;
                        var $540 = $541;
                    } else {
                        var self = (_chr$1 === 52);
                        if (self) {
                            var $543 = 4n;
                            var $542 = $543;
                        } else {
                            var self = (_chr$1 === 53);
                            if (self) {
                                var $545 = 5n;
                                var $544 = $545;
                            } else {
                                var self = (_chr$1 === 54);
                                if (self) {
                                    var $547 = 6n;
                                    var $546 = $547;
                                } else {
                                    var self = (_chr$1 === 55);
                                    if (self) {
                                        var $549 = 7n;
                                        var $548 = $549;
                                    } else {
                                        var self = (_chr$1 === 56);
                                        if (self) {
                                            var $551 = 8n;
                                            var $550 = $551;
                                        } else {
                                            var self = (_chr$1 === 57);
                                            if (self) {
                                                var $553 = 9n;
                                                var $552 = $553;
                                            } else {
                                                var $554 = 0n;
                                                var $552 = $554;
                                            };
                                            var $550 = $552;
                                        };
                                        var $548 = $550;
                                    };
                                    var $546 = $548;
                                };
                                var $544 = $546;
                            };
                            var $542 = $544;
                        };
                        var $540 = $542;
                    };
                    var $538 = $540;
                };
                var $536 = $538;
            };
            var $534 = $536;
        };
        return $534;
    };
    const Char$dec_value = x0 => Char$dec_value$(x0);

    function Kind$Core$read$natx$(_code$1, _nat$2) {
        var Kind$Core$read$natx$ = (_code$1, _nat$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _nat$2]
        });
        var Kind$Core$read$natx = _code$1 => _nat$2 => Kind$Core$read$natx$(_code$1, _nat$2);
        var arg = [_code$1, _nat$2];
        while (true) {
            let [_code$1, _nat$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $555 = Pair$new$(_code$1, _nat$2);
                    return $555;
                } else {
                    var $556 = self.charCodeAt(0);
                    var $557 = self.slice(1);
                    var self = Char$is_hex$($556);
                    if (self) {
                        var _nat$5 = ((_nat$2 * 10n) + Char$dec_value$($556));
                        var $559 = Kind$Core$read$natx$($557, _nat$5);
                        var $558 = $559;
                    } else {
                        var $560 = Pair$new$(_code$1, _nat$2);
                        var $558 = $560;
                    };
                    return $558;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$natx = x0 => x1 => Kind$Core$read$natx$(x0, x1);

    function Kind$Term$nat$(_natx$1) {
        var $561 = ({
            _: 'Kind.Term.nat',
            'natx': _natx$1
        });
        return $561;
    };
    const Kind$Term$nat = x0 => Kind$Term$nat$(x0);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $563 = self.fst;
                var $564 = $563;
                var $562 = $564;
                break;
        };
        return $562;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $566 = Nat$zero;
            var $565 = $566;
        } else {
            var $567 = (self - 1n);
            var $568 = $567;
            var $565 = $568;
        };
        return $565;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5) {
        var Kind$Core$read$find$ = (_list$2, _cond$3, _indx$4, _skip$5) => ({
            ctr: 'TCO',
            arg: [_list$2, _cond$3, _indx$4, _skip$5]
        });
        var Kind$Core$read$find = _list$2 => _cond$3 => _indx$4 => _skip$5 => Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5);
        var arg = [_list$2, _cond$3, _indx$4, _skip$5];
        while (true) {
            let [_list$2, _cond$3, _indx$4, _skip$5] = arg;
            var R = (() => {
                var self = _list$2;
                switch (self._) {
                    case 'List.cons':
                        var $569 = self.head;
                        var $570 = self.tail;
                        var self = _cond$3($569)(_indx$4);
                        if (self) {
                            var self = (_skip$5 === 0n);
                            if (self) {
                                var $573 = Maybe$some$(Pair$new$($569, _indx$4));
                                var $572 = $573;
                            } else {
                                var $574 = Kind$Core$read$find$($570, _cond$3, Nat$succ$(_indx$4), Nat$pred$(_skip$5));
                                var $572 = $574;
                            };
                            var $571 = $572;
                        } else {
                            var $575 = Kind$Core$read$find$($570, _cond$3, Nat$succ$(_indx$4), _skip$5);
                            var $571 = $575;
                        };
                        return $571;
                    case 'List.nil':
                        var $576 = Maybe$none;
                        return $576;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$find = x0 => x1 => x2 => x3 => Kind$Core$read$find$(x0, x1, x2, x3);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $578 = self.snd;
                var $579 = $578;
                var $577 = $579;
                break;
        };
        return $577;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function Kind$Core$read$term$(_code$1) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $581 = self.fst;
                var self = $581;
                if (self.length === 0) {
                    var $583 = Pair$new$("", (_ctx$4 => {
                        var $584 = Kind$Term$ref$("error");
                        return $584;
                    }));
                    var $582 = $583;
                } else {
                    var $585 = self.charCodeAt(0);
                    var $586 = self.slice(1);
                    var _head$6 = $585;
                    var _code$7 = $586;
                    var self = Char$eql$(_head$6, 42);
                    if (self) {
                        var $588 = Pair$new$(_code$7, (_ctx$8 => {
                            var $589 = Kind$Term$typ;
                            return $589;
                        }));
                        var $587 = $588;
                    } else {
                        var self = (_head$6 === 64);
                        if (self) {
                            var self = Kind$Core$read$name$(_code$7);
                            switch (self._) {
                                case 'Pair.new':
                                    var $592 = self.fst;
                                    var $593 = self.snd;
                                    var self = Kind$Core$read$char$($592, 40);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $595 = self.fst;
                                            var self = Kind$Core$read$name$($595);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $597 = self.fst;
                                                    var $598 = self.snd;
                                                    var self = Kind$Core$read$char$($597, 58);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $600 = self.fst;
                                                            var self = Kind$Core$read$term$($600);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $602 = self.fst;
                                                                    var $603 = self.snd;
                                                                    var self = Kind$Core$read$char$($602, 41);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $605 = self.fst;
                                                                            var self = Kind$Core$read$term$($605);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $607 = self.fst;
                                                                                    var $608 = self.snd;
                                                                                    var $609 = Pair$new$($607, (_ctx$22 => {
                                                                                        var $610 = Kind$Term$all$(Bool$false, $593, $598, $603(_ctx$22), (_s$23 => _x$24 => {
                                                                                            var $611 = $608(List$cons$(Pair$new$($598, _x$24), List$cons$(Pair$new$($593, _s$23), _ctx$22)));
                                                                                            return $611;
                                                                                        }));
                                                                                        return $610;
                                                                                    }));
                                                                                    var $606 = $609;
                                                                                    break;
                                                                            };
                                                                            var $604 = $606;
                                                                            break;
                                                                    };
                                                                    var $601 = $604;
                                                                    break;
                                                            };
                                                            var $599 = $601;
                                                            break;
                                                    };
                                                    var $596 = $599;
                                                    break;
                                            };
                                            var $594 = $596;
                                            break;
                                    };
                                    var $591 = $594;
                                    break;
                            };
                            var $590 = $591;
                        } else {
                            var self = (_head$6 === 37);
                            if (self) {
                                var self = Kind$Core$read$name$(_code$7);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $614 = self.fst;
                                        var $615 = self.snd;
                                        var self = Kind$Core$read$char$($614, 40);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $617 = self.fst;
                                                var self = Kind$Core$read$name$($617);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $619 = self.fst;
                                                        var $620 = self.snd;
                                                        var self = Kind$Core$read$char$($619, 58);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $622 = self.fst;
                                                                var self = Kind$Core$read$term$($622);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $624 = self.fst;
                                                                        var $625 = self.snd;
                                                                        var self = Kind$Core$read$char$($624, 41);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $627 = self.fst;
                                                                                var self = Kind$Core$read$term$($627);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $629 = self.fst;
                                                                                        var $630 = self.snd;
                                                                                        var $631 = Pair$new$($629, (_ctx$22 => {
                                                                                            var $632 = Kind$Term$all$(Bool$true, $615, $620, $625(_ctx$22), (_s$23 => _x$24 => {
                                                                                                var $633 = $630(List$cons$(Pair$new$($620, _x$24), List$cons$(Pair$new$($615, _s$23), _ctx$22)));
                                                                                                return $633;
                                                                                            }));
                                                                                            return $632;
                                                                                        }));
                                                                                        var $628 = $631;
                                                                                        break;
                                                                                };
                                                                                var $626 = $628;
                                                                                break;
                                                                        };
                                                                        var $623 = $626;
                                                                        break;
                                                                };
                                                                var $621 = $623;
                                                                break;
                                                        };
                                                        var $618 = $621;
                                                        break;
                                                };
                                                var $616 = $618;
                                                break;
                                        };
                                        var $613 = $616;
                                        break;
                                };
                                var $612 = $613;
                            } else {
                                var self = (_head$6 === 35);
                                if (self) {
                                    var self = Kind$Core$read$name$(_code$7);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $636 = self.fst;
                                            var $637 = self.snd;
                                            var self = Kind$Core$read$term$($636);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $639 = self.fst;
                                                    var $640 = self.snd;
                                                    var $641 = Pair$new$($639, (_ctx$12 => {
                                                        var $642 = Kind$Term$lam$($637, (_x$13 => {
                                                            var $643 = $640(List$cons$(Pair$new$($637, _x$13), _ctx$12));
                                                            return $643;
                                                        }));
                                                        return $642;
                                                    }));
                                                    var $638 = $641;
                                                    break;
                                            };
                                            var $635 = $638;
                                            break;
                                    };
                                    var $634 = $635;
                                } else {
                                    var self = (_head$6 === 40);
                                    if (self) {
                                        var self = Kind$Core$read$term$(_code$7);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $646 = self.fst;
                                                var $647 = self.snd;
                                                var self = Kind$Core$read$term$($646);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $649 = self.fst;
                                                        var $650 = self.snd;
                                                        var self = Kind$Core$read$char$($649, 41);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $652 = self.fst;
                                                                var $653 = Pair$new$($652, (_ctx$14 => {
                                                                    var $654 = Kind$Term$app$($647(_ctx$14), $650(_ctx$14));
                                                                    return $654;
                                                                }));
                                                                var $651 = $653;
                                                                break;
                                                        };
                                                        var $648 = $651;
                                                        break;
                                                };
                                                var $645 = $648;
                                                break;
                                        };
                                        var $644 = $645;
                                    } else {
                                        var self = (_head$6 === 33);
                                        if (self) {
                                            var self = Kind$Core$read$name$(_code$7);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $657 = self.fst;
                                                    var $658 = self.snd;
                                                    var self = Kind$Core$read$char$($657, 61);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $660 = self.fst;
                                                            var self = Kind$Core$read$term$($660);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $662 = self.fst;
                                                                    var $663 = self.snd;
                                                                    var self = Kind$Core$read$char$($662, 59);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $665 = self.fst;
                                                                            var self = Kind$Core$read$term$($665);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $667 = self.fst;
                                                                                    var $668 = self.snd;
                                                                                    var $669 = Pair$new$($667, (_ctx$18 => {
                                                                                        var $670 = Kind$Term$let$($658, $663(_ctx$18), (_x$19 => {
                                                                                            var $671 = $668(List$cons$(Pair$new$($658, _x$19), _ctx$18));
                                                                                            return $671;
                                                                                        }));
                                                                                        return $670;
                                                                                    }));
                                                                                    var $666 = $669;
                                                                                    break;
                                                                            };
                                                                            var $664 = $666;
                                                                            break;
                                                                    };
                                                                    var $661 = $664;
                                                                    break;
                                                            };
                                                            var $659 = $661;
                                                            break;
                                                    };
                                                    var $656 = $659;
                                                    break;
                                            };
                                            var $655 = $656;
                                        } else {
                                            var self = (_head$6 === 36);
                                            if (self) {
                                                var self = Kind$Core$read$name$(_code$7);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $674 = self.fst;
                                                        var $675 = self.snd;
                                                        var self = Kind$Core$read$char$($674, 61);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $677 = self.fst;
                                                                var self = Kind$Core$read$term$($677);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $679 = self.fst;
                                                                        var $680 = self.snd;
                                                                        var self = Kind$Core$read$char$($679, 59);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $682 = self.fst;
                                                                                var self = Kind$Core$read$term$($682);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $684 = self.fst;
                                                                                        var $685 = self.snd;
                                                                                        var $686 = Pair$new$($684, (_ctx$18 => {
                                                                                            var $687 = Kind$Term$def$($675, $680(_ctx$18), (_x$19 => {
                                                                                                var $688 = $685(List$cons$(Pair$new$($675, _x$19), _ctx$18));
                                                                                                return $688;
                                                                                            }));
                                                                                            return $687;
                                                                                        }));
                                                                                        var $683 = $686;
                                                                                        break;
                                                                                };
                                                                                var $681 = $683;
                                                                                break;
                                                                        };
                                                                        var $678 = $681;
                                                                        break;
                                                                };
                                                                var $676 = $678;
                                                                break;
                                                        };
                                                        var $673 = $676;
                                                        break;
                                                };
                                                var $672 = $673;
                                            } else {
                                                var self = (_head$6 === 123);
                                                if (self) {
                                                    var self = Kind$Core$read$term$(_code$7);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $691 = self.fst;
                                                            var $692 = self.snd;
                                                            var self = Kind$Core$read$char$($691, 58);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $694 = self.fst;
                                                                    var self = Kind$Core$read$term$($694);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $696 = self.fst;
                                                                            var $697 = self.snd;
                                                                            var self = Kind$Core$read$char$($696, 125);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $699 = self.fst;
                                                                                    var $700 = Pair$new$($699, (_ctx$16 => {
                                                                                        var $701 = Kind$Term$ann$(Bool$false, $692(_ctx$16), $697(_ctx$16));
                                                                                        return $701;
                                                                                    }));
                                                                                    var $698 = $700;
                                                                                    break;
                                                                            };
                                                                            var $695 = $698;
                                                                            break;
                                                                    };
                                                                    var $693 = $695;
                                                                    break;
                                                            };
                                                            var $690 = $693;
                                                            break;
                                                    };
                                                    var $689 = $690;
                                                } else {
                                                    var self = (_head$6 === 39);
                                                    if (self) {
                                                        var self = Kind$Core$read$chrx$(_code$7);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $704 = self.fst;
                                                                var $705 = self.snd;
                                                                var self = Kind$Core$read$char$($704, 39);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $707 = self.fst;
                                                                        var $708 = Pair$new$($707, (_ctx$12 => {
                                                                            var $709 = Kind$Term$chr$($705);
                                                                            return $709;
                                                                        }));
                                                                        var $706 = $708;
                                                                        break;
                                                                };
                                                                var $703 = $706;
                                                                break;
                                                        };
                                                        var $702 = $703;
                                                    } else {
                                                        var self = (_head$6 === 34);
                                                        if (self) {
                                                            var self = Kind$Core$read$strx$(_code$7);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $712 = self.fst;
                                                                    var $713 = self.snd;
                                                                    var self = Kind$Core$read$char$($712, 34);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $715 = self.fst;
                                                                            var $716 = Pair$new$($715, (_ctx$12 => {
                                                                                var $717 = Kind$Term$str$($713);
                                                                                return $717;
                                                                            }));
                                                                            var $714 = $716;
                                                                            break;
                                                                    };
                                                                    var $711 = $714;
                                                                    break;
                                                            };
                                                            var $710 = $711;
                                                        } else {
                                                            var self = (_head$6 === 43);
                                                            if (self) {
                                                                var self = Kind$Core$read$natx$(_code$7, 0n);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $720 = self.fst;
                                                                        var $721 = self.snd;
                                                                        var $722 = Pair$new$($720, (_ctx$10 => {
                                                                            var $723 = Kind$Term$nat$($721);
                                                                            return $723;
                                                                        }));
                                                                        var $719 = $722;
                                                                        break;
                                                                };
                                                                var $718 = $719;
                                                            } else {
                                                                var self = Kind$Core$read$is_name$(_head$6);
                                                                if (self) {
                                                                    var self = Kind$Core$read$name$(_code$7);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $726 = self.fst;
                                                                            var $727 = self.snd;
                                                                            var _name$10 = String$cons$(_head$6, $727);
                                                                            var self = $726;
                                                                            if (self.length === 0) {
                                                                                var $729 = Pair$new$("", 0n);
                                                                                var self = $729;
                                                                            } else {
                                                                                var $730 = self.charCodeAt(0);
                                                                                var $731 = self.slice(1);
                                                                                var self = ($730 === 94);
                                                                                if (self) {
                                                                                    var $733 = Kind$Core$read$natx$($731, 0n);
                                                                                    var $732 = $733;
                                                                                } else {
                                                                                    var $734 = Pair$new$($726, 0n);
                                                                                    var $732 = $734;
                                                                                };
                                                                                var self = $732;
                                                                            };
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $735 = self.fst;
                                                                                    var $736 = self.snd;
                                                                                    var $737 = Pair$new$($735, (_ctx$13 => {
                                                                                        var _got$14 = Kind$Core$read$find$(_ctx$13, (_x$14 => _i$15 => {
                                                                                            var $739 = (Pair$fst$(_x$14) === _name$10);
                                                                                            return $739;
                                                                                        }), 0n, $736);
                                                                                        var self = _got$14;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $740 = self.value;
                                                                                                var $741 = Pair$snd$(Pair$fst$($740));
                                                                                                var $738 = $741;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $742 = Kind$Term$ref$(_name$10);
                                                                                                var $738 = $742;
                                                                                                break;
                                                                                        };
                                                                                        return $738;
                                                                                    }));
                                                                                    var $728 = $737;
                                                                                    break;
                                                                            };
                                                                            var $725 = $728;
                                                                            break;
                                                                    };
                                                                    var $724 = $725;
                                                                } else {
                                                                    var $743 = Pair$new$("", (_ctx$8 => {
                                                                        var $744 = Kind$Term$ref$("error");
                                                                        return $744;
                                                                    }));
                                                                    var $724 = $743;
                                                                };
                                                                var $718 = $724;
                                                            };
                                                            var $710 = $718;
                                                        };
                                                        var $702 = $710;
                                                    };
                                                    var $689 = $702;
                                                };
                                                var $672 = $689;
                                            };
                                            var $655 = $672;
                                        };
                                        var $644 = $655;
                                    };
                                    var $634 = $644;
                                };
                                var $612 = $634;
                            };
                            var $590 = $612;
                        };
                        var $587 = $590;
                    };
                    var $582 = $587;
                };
                var $580 = $582;
                break;
        };
        return $580;
    };
    const Kind$Core$read$term = x0 => Kind$Core$read$term$(x0);

    function Kind$Core$read$(_code$1) {
        var self = Kind$Core$read$term$((_code$1 + ";"));
        switch (self._) {
            case 'Pair.new':
                var $746 = self.fst;
                var $747 = self.snd;
                var self = $746;
                if (self.length === 0) {
                    var $749 = Maybe$none;
                    var $748 = $749;
                } else {
                    var $750 = self.charCodeAt(0);
                    var $751 = self.slice(1);
                    var $752 = Maybe$some$($747(List$nil));
                    var $748 = $752;
                };
                var $745 = $748;
                break;
        };
        return $745;
    };
    const Kind$Core$read = x0 => Kind$Core$read$(x0);

    function Bool$read$(_code$1) {
        var self = (_code$1 === "Bool.true");
        if (self) {
            var $754 = Maybe$some$(Bool$true);
            var $753 = $754;
        } else {
            var self = (_code$1 === "Bool.false");
            if (self) {
                var $756 = Maybe$some$(Bool$false);
                var $755 = $756;
            } else {
                var $757 = Maybe$none;
                var $755 = $757;
            };
            var $753 = $755;
        };
        return $753;
    };
    const Bool$read = x0 => Bool$read$(x0);

    function Kind$Status$done$(_cached$1) {
        var $758 = ({
            _: 'Kind.Status.done',
            'cached': _cached$1
        });
        return $758;
    };
    const Kind$Status$done = x0 => Kind$Status$done$(x0);

    function Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _stat$9) {
        var $759 = ({
            _: 'Kind.Def.new',
            'file': _file$1,
            'code': _code$2,
            'orig': _orig$3,
            'name': _name$4,
            'term': _term$5,
            'type': _type$6,
            'isct': _isct$7,
            'arit': _arit$8,
            'stat': _stat$9
        });
        return $759;
    };
    const Kind$Def$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Def$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Synth$load$cached$def$(_name$1) {
        var $760 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $761 = _m$bind$2;
            return $761;
        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".file")))((_cache_file$2 => {
            var self = (!String$is_empty$(_cache_file$2));
            if (self) {
                var $763 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $764 = _m$bind$3;
                    return $764;
                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".time")))((_cache_time$3 => {
                    var $765 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $766 = _m$bind$4;
                        return $766;
                    }))(IO$get_file_mtime$(_cache_file$2))((_cache_file_time$4 => {
                        var self = (_cache_time$3 === _cache_file_time$4);
                        if (self) {
                            var $768 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $769 = _m$bind$5;
                                return $769;
                            }))(Kind$Synth$load$cached$get_file$((_name$1 + ".term")))((_cache_term$5 => {
                                var $770 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $771 = _m$bind$6;
                                    return $771;
                                }))(Kind$Synth$load$cached$get_file$((_name$1 + ".type")))((_cache_type$6 => {
                                    var $772 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $773 = _m$bind$7;
                                        return $773;
                                    }))(Kind$Synth$load$cached$get_file$((_name$1 + ".isct")))((_cache_isct$7 => {
                                        var $774 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $775 = _m$bind$8;
                                            return $775;
                                        }))(Kind$Synth$load$cached$get_file$((_name$1 + ".arit")))((_cache_arit$8 => {
                                            var $776 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $777 = _m$pure$10;
                                                return $777;
                                            }))((() => {
                                                var _file$9 = _cache_file$2;
                                                var _code$10 = "<cached>";
                                                var _orig$11 = Pair$new$(0n, 0n);
                                                var $778 = Maybe$monad$((_m$bind$12 => _m$pure$13 => {
                                                    var $779 = _m$bind$12;
                                                    return $779;
                                                }))(Kind$Core$read$(_cache_term$5))((_term$12 => {
                                                    var $780 = Maybe$monad$((_m$bind$13 => _m$pure$14 => {
                                                        var $781 = _m$bind$13;
                                                        return $781;
                                                    }))(Kind$Core$read$(_cache_type$6))((_type$13 => {
                                                        var $782 = Maybe$monad$((_m$bind$14 => _m$pure$15 => {
                                                            var $783 = _m$bind$14;
                                                            return $783;
                                                        }))(Bool$read$(_cache_isct$7))((_isct$14 => {
                                                            var $784 = Maybe$monad$((_m$bind$15 => _m$pure$16 => {
                                                                var $785 = _m$bind$15;
                                                                return $785;
                                                            }))(Maybe$some$((BigInt(_cache_arit$8))))((_arit$15 => {
                                                                var _stat$16 = Kind$Status$done$(Bool$true);
                                                                var $786 = Maybe$monad$((_m$bind$17 => _m$pure$18 => {
                                                                    var $787 = _m$pure$18;
                                                                    return $787;
                                                                }))(Kind$Def$new$(_file$9, _code$10, _orig$11, _name$1, _term$12, _type$13, _isct$14, _arit$15, _stat$16));
                                                                return $786;
                                                            }));
                                                            return $784;
                                                        }));
                                                        return $782;
                                                    }));
                                                    return $780;
                                                }));
                                                return $778;
                                            })());
                                            return $776;
                                        }));
                                        return $774;
                                    }));
                                    return $772;
                                }));
                                return $770;
                            }));
                            var $767 = $768;
                        } else {
                            var $788 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $789 = _m$pure$6;
                                return $789;
                            }))(Maybe$none);
                            var $767 = $788;
                        };
                        return $767;
                    }));
                    return $765;
                }));
                var $762 = $763;
            } else {
                var $790 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $791 = _m$pure$4;
                    return $791;
                }))(Maybe$none);
                var $762 = $790;
            };
            return $762;
        }));
        return $760;
    };
    const Kind$Synth$load$cached$def = x0 => Kind$Synth$load$cached$def$(x0);

    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {
        var $792 = ({
            _: 'BitsMap.tie',
            'val': _val$2,
            'lft': _lft$3,
            'rgt': _rgt$4
        });
        return $792;
    };
    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);
    const BitsMap$new = ({
        _: 'BitsMap.new'
    });
    const BitsMap$set = a0 => a1 => a2 => (bitsmap_set(a0, a1, a2, 'set'));

    function Kind$Map$set$(_name$2, _val$3, _map$4) {
        var $793 = (bitsmap_set((kind_name_to_bits(_name$2)), _val$3, _map$4, 'set'));
        return $793;
    };
    const Kind$Map$set = x0 => x1 => x2 => Kind$Map$set$(x0, x1, x2);
    const Kind$Map$new = BitsMap$new;
    const Kind$Map = null;

    function Kind$Core$dependencies$go$(_term$1, _deps$2) {
        var _nil$3 = Kind$Term$typ;
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $795 = self.name;
                var $796 = Kind$Map$set$($795, Unit$new, _deps$2);
                var $794 = $796;
                break;
            case 'Kind.Term.all':
                var $797 = self.xtyp;
                var $798 = self.body;
                var _deps$9 = Kind$Core$dependencies$go$($797, _deps$2);
                var _deps$10 = Kind$Core$dependencies$go$($798(_nil$3)(_nil$3), _deps$9);
                var $799 = _deps$10;
                var $794 = $799;
                break;
            case 'Kind.Term.lam':
                var $800 = self.body;
                var _deps$6 = Kind$Core$dependencies$go$($800(_nil$3), _deps$2);
                var $801 = _deps$6;
                var $794 = $801;
                break;
            case 'Kind.Term.app':
                var $802 = self.func;
                var $803 = self.argm;
                var _deps$6 = Kind$Core$dependencies$go$($802, _deps$2);
                var _deps$7 = Kind$Core$dependencies$go$($803, _deps$6);
                var $804 = _deps$7;
                var $794 = $804;
                break;
            case 'Kind.Term.let':
                var $805 = self.expr;
                var $806 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($805, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($806(_nil$3), _deps$7);
                var $807 = _deps$8;
                var $794 = $807;
                break;
            case 'Kind.Term.def':
                var $808 = self.expr;
                var $809 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($808, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($809(_nil$3), _deps$7);
                var $810 = _deps$8;
                var $794 = $810;
                break;
            case 'Kind.Term.ann':
                var $811 = self.term;
                var $812 = self.type;
                var _deps$7 = Kind$Core$dependencies$go$($811, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($812, _deps$7);
                var $813 = _deps$8;
                var $794 = $813;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $814 = _deps$2;
                var $794 = $814;
                break;
        };
        return $794;
    };
    const Kind$Core$dependencies$go = x0 => x1 => Kind$Core$dependencies$go$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $816 = self.head;
                var $817 = self.tail;
                var $818 = List$cons$(_f$4($816), List$mapped$($817, _f$4));
                var $815 = $818;
                break;
            case 'List.nil':
                var $819 = List$nil;
                var $815 = $819;
                break;
        };
        return $815;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Bits$reverse$tco$(_a$1, _r$2) {
        var Bits$reverse$tco$ = (_a$1, _r$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _r$2]
        });
        var Bits$reverse$tco = _a$1 => _r$2 => Bits$reverse$tco$(_a$1, _r$2);
        var arg = [_a$1, _r$2];
        while (true) {
            let [_a$1, _r$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $820 = self.slice(0, -1);
                        var $821 = Bits$reverse$tco$($820, (_r$2 + '0'));
                        return $821;
                    case 'i':
                        var $822 = self.slice(0, -1);
                        var $823 = Bits$reverse$tco$($822, (_r$2 + '1'));
                        return $823;
                    case 'e':
                        var $824 = _r$2;
                        return $824;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Bits$reverse$tco = x0 => x1 => Bits$reverse$tco$(x0, x1);

    function Bits$reverse$(_a$1) {
        var $825 = Bits$reverse$tco$(_a$1, Bits$e);
        return $825;
    };
    const Bits$reverse = x0 => Bits$reverse$(x0);

    function BitsMap$to_list$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $827 = self.val;
                var $828 = self.lft;
                var $829 = self.rgt;
                var self = $827;
                switch (self._) {
                    case 'Maybe.some':
                        var $831 = self.value;
                        var $832 = List$cons$(Pair$new$(Bits$reverse$(_key$3), $831), _list$4);
                        var _list0$8 = $832;
                        break;
                    case 'Maybe.none':
                        var $833 = _list$4;
                        var _list0$8 = $833;
                        break;
                };
                var _list1$9 = BitsMap$to_list$go$($828, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$to_list$go$($829, (_key$3 + '1'), _list1$9);
                var $830 = _list2$10;
                var $826 = $830;
                break;
            case 'BitsMap.new':
                var $834 = _list$4;
                var $826 = $834;
                break;
        };
        return $826;
    };
    const BitsMap$to_list$go = x0 => x1 => x2 => BitsMap$to_list$go$(x0, x1, x2);

    function Kind$Name$from_bits$(_bs$1) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $836 = self.slice(0, -1);
                var _bs$3 = $836;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $838 = self.slice(0, -1);
                        var _bs$5 = $838;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $840 = self.slice(0, -1);
                                var _bs$7 = $840;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $842 = self.slice(0, -1);
                                        var _bs$9 = $842;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $844 = self.slice(0, -1);
                                                var _bs$11 = $844;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $846 = self.slice(0, -1);
                                                        var _bs$13 = $846;
                                                        var $847 = String$cons$(65, Kind$Name$from_bits$(_bs$13));
                                                        var $845 = $847;
                                                        break;
                                                    case 'i':
                                                        var $848 = self.slice(0, -1);
                                                        var _bs$13 = $848;
                                                        var $849 = String$cons$(66, Kind$Name$from_bits$(_bs$13));
                                                        var $845 = $849;
                                                        break;
                                                    case 'e':
                                                        var $850 = String$nil;
                                                        var $845 = $850;
                                                        break;
                                                };
                                                var $843 = $845;
                                                break;
                                            case 'i':
                                                var $851 = self.slice(0, -1);
                                                var _bs$11 = $851;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $853 = self.slice(0, -1);
                                                        var _bs$13 = $853;
                                                        var $854 = String$cons$(67, Kind$Name$from_bits$(_bs$13));
                                                        var $852 = $854;
                                                        break;
                                                    case 'i':
                                                        var $855 = self.slice(0, -1);
                                                        var _bs$13 = $855;
                                                        var $856 = String$cons$(68, Kind$Name$from_bits$(_bs$13));
                                                        var $852 = $856;
                                                        break;
                                                    case 'e':
                                                        var $857 = String$nil;
                                                        var $852 = $857;
                                                        break;
                                                };
                                                var $843 = $852;
                                                break;
                                            case 'e':
                                                var $858 = String$nil;
                                                var $843 = $858;
                                                break;
                                        };
                                        var $841 = $843;
                                        break;
                                    case 'i':
                                        var $859 = self.slice(0, -1);
                                        var _bs$9 = $859;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $861 = self.slice(0, -1);
                                                var _bs$11 = $861;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $863 = self.slice(0, -1);
                                                        var _bs$13 = $863;
                                                        var $864 = String$cons$(69, Kind$Name$from_bits$(_bs$13));
                                                        var $862 = $864;
                                                        break;
                                                    case 'i':
                                                        var $865 = self.slice(0, -1);
                                                        var _bs$13 = $865;
                                                        var $866 = String$cons$(70, Kind$Name$from_bits$(_bs$13));
                                                        var $862 = $866;
                                                        break;
                                                    case 'e':
                                                        var $867 = String$nil;
                                                        var $862 = $867;
                                                        break;
                                                };
                                                var $860 = $862;
                                                break;
                                            case 'i':
                                                var $868 = self.slice(0, -1);
                                                var _bs$11 = $868;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $870 = self.slice(0, -1);
                                                        var _bs$13 = $870;
                                                        var $871 = String$cons$(71, Kind$Name$from_bits$(_bs$13));
                                                        var $869 = $871;
                                                        break;
                                                    case 'i':
                                                        var $872 = self.slice(0, -1);
                                                        var _bs$13 = $872;
                                                        var $873 = String$cons$(72, Kind$Name$from_bits$(_bs$13));
                                                        var $869 = $873;
                                                        break;
                                                    case 'e':
                                                        var $874 = String$nil;
                                                        var $869 = $874;
                                                        break;
                                                };
                                                var $860 = $869;
                                                break;
                                            case 'e':
                                                var $875 = String$nil;
                                                var $860 = $875;
                                                break;
                                        };
                                        var $841 = $860;
                                        break;
                                    case 'e':
                                        var $876 = String$nil;
                                        var $841 = $876;
                                        break;
                                };
                                var $839 = $841;
                                break;
                            case 'i':
                                var $877 = self.slice(0, -1);
                                var _bs$7 = $877;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $879 = self.slice(0, -1);
                                        var _bs$9 = $879;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $881 = self.slice(0, -1);
                                                var _bs$11 = $881;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $883 = self.slice(0, -1);
                                                        var _bs$13 = $883;
                                                        var $884 = String$cons$(73, Kind$Name$from_bits$(_bs$13));
                                                        var $882 = $884;
                                                        break;
                                                    case 'i':
                                                        var $885 = self.slice(0, -1);
                                                        var _bs$13 = $885;
                                                        var $886 = String$cons$(74, Kind$Name$from_bits$(_bs$13));
                                                        var $882 = $886;
                                                        break;
                                                    case 'e':
                                                        var $887 = String$nil;
                                                        var $882 = $887;
                                                        break;
                                                };
                                                var $880 = $882;
                                                break;
                                            case 'i':
                                                var $888 = self.slice(0, -1);
                                                var _bs$11 = $888;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $890 = self.slice(0, -1);
                                                        var _bs$13 = $890;
                                                        var $891 = String$cons$(75, Kind$Name$from_bits$(_bs$13));
                                                        var $889 = $891;
                                                        break;
                                                    case 'i':
                                                        var $892 = self.slice(0, -1);
                                                        var _bs$13 = $892;
                                                        var $893 = String$cons$(76, Kind$Name$from_bits$(_bs$13));
                                                        var $889 = $893;
                                                        break;
                                                    case 'e':
                                                        var $894 = String$nil;
                                                        var $889 = $894;
                                                        break;
                                                };
                                                var $880 = $889;
                                                break;
                                            case 'e':
                                                var $895 = String$nil;
                                                var $880 = $895;
                                                break;
                                        };
                                        var $878 = $880;
                                        break;
                                    case 'i':
                                        var $896 = self.slice(0, -1);
                                        var _bs$9 = $896;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $898 = self.slice(0, -1);
                                                var _bs$11 = $898;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $900 = self.slice(0, -1);
                                                        var _bs$13 = $900;
                                                        var $901 = String$cons$(77, Kind$Name$from_bits$(_bs$13));
                                                        var $899 = $901;
                                                        break;
                                                    case 'i':
                                                        var $902 = self.slice(0, -1);
                                                        var _bs$13 = $902;
                                                        var $903 = String$cons$(78, Kind$Name$from_bits$(_bs$13));
                                                        var $899 = $903;
                                                        break;
                                                    case 'e':
                                                        var $904 = String$nil;
                                                        var $899 = $904;
                                                        break;
                                                };
                                                var $897 = $899;
                                                break;
                                            case 'i':
                                                var $905 = self.slice(0, -1);
                                                var _bs$11 = $905;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $907 = self.slice(0, -1);
                                                        var _bs$13 = $907;
                                                        var $908 = String$cons$(79, Kind$Name$from_bits$(_bs$13));
                                                        var $906 = $908;
                                                        break;
                                                    case 'i':
                                                        var $909 = self.slice(0, -1);
                                                        var _bs$13 = $909;
                                                        var $910 = String$cons$(80, Kind$Name$from_bits$(_bs$13));
                                                        var $906 = $910;
                                                        break;
                                                    case 'e':
                                                        var $911 = String$nil;
                                                        var $906 = $911;
                                                        break;
                                                };
                                                var $897 = $906;
                                                break;
                                            case 'e':
                                                var $912 = String$nil;
                                                var $897 = $912;
                                                break;
                                        };
                                        var $878 = $897;
                                        break;
                                    case 'e':
                                        var $913 = String$nil;
                                        var $878 = $913;
                                        break;
                                };
                                var $839 = $878;
                                break;
                            case 'e':
                                var $914 = String$nil;
                                var $839 = $914;
                                break;
                        };
                        var $837 = $839;
                        break;
                    case 'i':
                        var $915 = self.slice(0, -1);
                        var _bs$5 = $915;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $917 = self.slice(0, -1);
                                var _bs$7 = $917;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $919 = self.slice(0, -1);
                                        var _bs$9 = $919;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $921 = self.slice(0, -1);
                                                var _bs$11 = $921;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $923 = self.slice(0, -1);
                                                        var _bs$13 = $923;
                                                        var $924 = String$cons$(81, Kind$Name$from_bits$(_bs$13));
                                                        var $922 = $924;
                                                        break;
                                                    case 'i':
                                                        var $925 = self.slice(0, -1);
                                                        var _bs$13 = $925;
                                                        var $926 = String$cons$(82, Kind$Name$from_bits$(_bs$13));
                                                        var $922 = $926;
                                                        break;
                                                    case 'e':
                                                        var $927 = String$nil;
                                                        var $922 = $927;
                                                        break;
                                                };
                                                var $920 = $922;
                                                break;
                                            case 'i':
                                                var $928 = self.slice(0, -1);
                                                var _bs$11 = $928;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $930 = self.slice(0, -1);
                                                        var _bs$13 = $930;
                                                        var $931 = String$cons$(83, Kind$Name$from_bits$(_bs$13));
                                                        var $929 = $931;
                                                        break;
                                                    case 'i':
                                                        var $932 = self.slice(0, -1);
                                                        var _bs$13 = $932;
                                                        var $933 = String$cons$(84, Kind$Name$from_bits$(_bs$13));
                                                        var $929 = $933;
                                                        break;
                                                    case 'e':
                                                        var $934 = String$nil;
                                                        var $929 = $934;
                                                        break;
                                                };
                                                var $920 = $929;
                                                break;
                                            case 'e':
                                                var $935 = String$nil;
                                                var $920 = $935;
                                                break;
                                        };
                                        var $918 = $920;
                                        break;
                                    case 'i':
                                        var $936 = self.slice(0, -1);
                                        var _bs$9 = $936;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $938 = self.slice(0, -1);
                                                var _bs$11 = $938;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $940 = self.slice(0, -1);
                                                        var _bs$13 = $940;
                                                        var $941 = String$cons$(85, Kind$Name$from_bits$(_bs$13));
                                                        var $939 = $941;
                                                        break;
                                                    case 'i':
                                                        var $942 = self.slice(0, -1);
                                                        var _bs$13 = $942;
                                                        var $943 = String$cons$(86, Kind$Name$from_bits$(_bs$13));
                                                        var $939 = $943;
                                                        break;
                                                    case 'e':
                                                        var $944 = String$nil;
                                                        var $939 = $944;
                                                        break;
                                                };
                                                var $937 = $939;
                                                break;
                                            case 'i':
                                                var $945 = self.slice(0, -1);
                                                var _bs$11 = $945;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $947 = self.slice(0, -1);
                                                        var _bs$13 = $947;
                                                        var $948 = String$cons$(87, Kind$Name$from_bits$(_bs$13));
                                                        var $946 = $948;
                                                        break;
                                                    case 'i':
                                                        var $949 = self.slice(0, -1);
                                                        var _bs$13 = $949;
                                                        var $950 = String$cons$(88, Kind$Name$from_bits$(_bs$13));
                                                        var $946 = $950;
                                                        break;
                                                    case 'e':
                                                        var $951 = String$nil;
                                                        var $946 = $951;
                                                        break;
                                                };
                                                var $937 = $946;
                                                break;
                                            case 'e':
                                                var $952 = String$nil;
                                                var $937 = $952;
                                                break;
                                        };
                                        var $918 = $937;
                                        break;
                                    case 'e':
                                        var $953 = String$nil;
                                        var $918 = $953;
                                        break;
                                };
                                var $916 = $918;
                                break;
                            case 'i':
                                var $954 = self.slice(0, -1);
                                var _bs$7 = $954;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $956 = self.slice(0, -1);
                                        var _bs$9 = $956;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $958 = self.slice(0, -1);
                                                var _bs$11 = $958;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $960 = self.slice(0, -1);
                                                        var _bs$13 = $960;
                                                        var $961 = String$cons$(89, Kind$Name$from_bits$(_bs$13));
                                                        var $959 = $961;
                                                        break;
                                                    case 'i':
                                                        var $962 = self.slice(0, -1);
                                                        var _bs$13 = $962;
                                                        var $963 = String$cons$(90, Kind$Name$from_bits$(_bs$13));
                                                        var $959 = $963;
                                                        break;
                                                    case 'e':
                                                        var $964 = String$nil;
                                                        var $959 = $964;
                                                        break;
                                                };
                                                var $957 = $959;
                                                break;
                                            case 'i':
                                                var $965 = self.slice(0, -1);
                                                var _bs$11 = $965;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $967 = self.slice(0, -1);
                                                        var _bs$13 = $967;
                                                        var $968 = String$cons$(97, Kind$Name$from_bits$(_bs$13));
                                                        var $966 = $968;
                                                        break;
                                                    case 'i':
                                                        var $969 = self.slice(0, -1);
                                                        var _bs$13 = $969;
                                                        var $970 = String$cons$(98, Kind$Name$from_bits$(_bs$13));
                                                        var $966 = $970;
                                                        break;
                                                    case 'e':
                                                        var $971 = String$nil;
                                                        var $966 = $971;
                                                        break;
                                                };
                                                var $957 = $966;
                                                break;
                                            case 'e':
                                                var $972 = String$nil;
                                                var $957 = $972;
                                                break;
                                        };
                                        var $955 = $957;
                                        break;
                                    case 'i':
                                        var $973 = self.slice(0, -1);
                                        var _bs$9 = $973;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $975 = self.slice(0, -1);
                                                var _bs$11 = $975;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $977 = self.slice(0, -1);
                                                        var _bs$13 = $977;
                                                        var $978 = String$cons$(99, Kind$Name$from_bits$(_bs$13));
                                                        var $976 = $978;
                                                        break;
                                                    case 'i':
                                                        var $979 = self.slice(0, -1);
                                                        var _bs$13 = $979;
                                                        var $980 = String$cons$(100, Kind$Name$from_bits$(_bs$13));
                                                        var $976 = $980;
                                                        break;
                                                    case 'e':
                                                        var $981 = String$nil;
                                                        var $976 = $981;
                                                        break;
                                                };
                                                var $974 = $976;
                                                break;
                                            case 'i':
                                                var $982 = self.slice(0, -1);
                                                var _bs$11 = $982;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $984 = self.slice(0, -1);
                                                        var _bs$13 = $984;
                                                        var $985 = String$cons$(101, Kind$Name$from_bits$(_bs$13));
                                                        var $983 = $985;
                                                        break;
                                                    case 'i':
                                                        var $986 = self.slice(0, -1);
                                                        var _bs$13 = $986;
                                                        var $987 = String$cons$(102, Kind$Name$from_bits$(_bs$13));
                                                        var $983 = $987;
                                                        break;
                                                    case 'e':
                                                        var $988 = String$nil;
                                                        var $983 = $988;
                                                        break;
                                                };
                                                var $974 = $983;
                                                break;
                                            case 'e':
                                                var $989 = String$nil;
                                                var $974 = $989;
                                                break;
                                        };
                                        var $955 = $974;
                                        break;
                                    case 'e':
                                        var $990 = String$nil;
                                        var $955 = $990;
                                        break;
                                };
                                var $916 = $955;
                                break;
                            case 'e':
                                var $991 = String$nil;
                                var $916 = $991;
                                break;
                        };
                        var $837 = $916;
                        break;
                    case 'e':
                        var $992 = String$nil;
                        var $837 = $992;
                        break;
                };
                var $835 = $837;
                break;
            case 'i':
                var $993 = self.slice(0, -1);
                var _bs$3 = $993;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $995 = self.slice(0, -1);
                        var _bs$5 = $995;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $997 = self.slice(0, -1);
                                var _bs$7 = $997;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $999 = self.slice(0, -1);
                                        var _bs$9 = $999;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1001 = self.slice(0, -1);
                                                var _bs$11 = $1001;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1003 = self.slice(0, -1);
                                                        var _bs$13 = $1003;
                                                        var $1004 = String$cons$(103, Kind$Name$from_bits$(_bs$13));
                                                        var $1002 = $1004;
                                                        break;
                                                    case 'i':
                                                        var $1005 = self.slice(0, -1);
                                                        var _bs$13 = $1005;
                                                        var $1006 = String$cons$(104, Kind$Name$from_bits$(_bs$13));
                                                        var $1002 = $1006;
                                                        break;
                                                    case 'e':
                                                        var $1007 = String$nil;
                                                        var $1002 = $1007;
                                                        break;
                                                };
                                                var $1000 = $1002;
                                                break;
                                            case 'i':
                                                var $1008 = self.slice(0, -1);
                                                var _bs$11 = $1008;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1010 = self.slice(0, -1);
                                                        var _bs$13 = $1010;
                                                        var $1011 = String$cons$(105, Kind$Name$from_bits$(_bs$13));
                                                        var $1009 = $1011;
                                                        break;
                                                    case 'i':
                                                        var $1012 = self.slice(0, -1);
                                                        var _bs$13 = $1012;
                                                        var $1013 = String$cons$(106, Kind$Name$from_bits$(_bs$13));
                                                        var $1009 = $1013;
                                                        break;
                                                    case 'e':
                                                        var $1014 = String$nil;
                                                        var $1009 = $1014;
                                                        break;
                                                };
                                                var $1000 = $1009;
                                                break;
                                            case 'e':
                                                var $1015 = String$nil;
                                                var $1000 = $1015;
                                                break;
                                        };
                                        var $998 = $1000;
                                        break;
                                    case 'i':
                                        var $1016 = self.slice(0, -1);
                                        var _bs$9 = $1016;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1018 = self.slice(0, -1);
                                                var _bs$11 = $1018;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1020 = self.slice(0, -1);
                                                        var _bs$13 = $1020;
                                                        var $1021 = String$cons$(107, Kind$Name$from_bits$(_bs$13));
                                                        var $1019 = $1021;
                                                        break;
                                                    case 'i':
                                                        var $1022 = self.slice(0, -1);
                                                        var _bs$13 = $1022;
                                                        var $1023 = String$cons$(108, Kind$Name$from_bits$(_bs$13));
                                                        var $1019 = $1023;
                                                        break;
                                                    case 'e':
                                                        var $1024 = String$nil;
                                                        var $1019 = $1024;
                                                        break;
                                                };
                                                var $1017 = $1019;
                                                break;
                                            case 'i':
                                                var $1025 = self.slice(0, -1);
                                                var _bs$11 = $1025;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1027 = self.slice(0, -1);
                                                        var _bs$13 = $1027;
                                                        var $1028 = String$cons$(109, Kind$Name$from_bits$(_bs$13));
                                                        var $1026 = $1028;
                                                        break;
                                                    case 'i':
                                                        var $1029 = self.slice(0, -1);
                                                        var _bs$13 = $1029;
                                                        var $1030 = String$cons$(110, Kind$Name$from_bits$(_bs$13));
                                                        var $1026 = $1030;
                                                        break;
                                                    case 'e':
                                                        var $1031 = String$nil;
                                                        var $1026 = $1031;
                                                        break;
                                                };
                                                var $1017 = $1026;
                                                break;
                                            case 'e':
                                                var $1032 = String$nil;
                                                var $1017 = $1032;
                                                break;
                                        };
                                        var $998 = $1017;
                                        break;
                                    case 'e':
                                        var $1033 = String$nil;
                                        var $998 = $1033;
                                        break;
                                };
                                var $996 = $998;
                                break;
                            case 'i':
                                var $1034 = self.slice(0, -1);
                                var _bs$7 = $1034;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1036 = self.slice(0, -1);
                                        var _bs$9 = $1036;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1038 = self.slice(0, -1);
                                                var _bs$11 = $1038;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1040 = self.slice(0, -1);
                                                        var _bs$13 = $1040;
                                                        var $1041 = String$cons$(111, Kind$Name$from_bits$(_bs$13));
                                                        var $1039 = $1041;
                                                        break;
                                                    case 'i':
                                                        var $1042 = self.slice(0, -1);
                                                        var _bs$13 = $1042;
                                                        var $1043 = String$cons$(112, Kind$Name$from_bits$(_bs$13));
                                                        var $1039 = $1043;
                                                        break;
                                                    case 'e':
                                                        var $1044 = String$nil;
                                                        var $1039 = $1044;
                                                        break;
                                                };
                                                var $1037 = $1039;
                                                break;
                                            case 'i':
                                                var $1045 = self.slice(0, -1);
                                                var _bs$11 = $1045;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1047 = self.slice(0, -1);
                                                        var _bs$13 = $1047;
                                                        var $1048 = String$cons$(113, Kind$Name$from_bits$(_bs$13));
                                                        var $1046 = $1048;
                                                        break;
                                                    case 'i':
                                                        var $1049 = self.slice(0, -1);
                                                        var _bs$13 = $1049;
                                                        var $1050 = String$cons$(114, Kind$Name$from_bits$(_bs$13));
                                                        var $1046 = $1050;
                                                        break;
                                                    case 'e':
                                                        var $1051 = String$nil;
                                                        var $1046 = $1051;
                                                        break;
                                                };
                                                var $1037 = $1046;
                                                break;
                                            case 'e':
                                                var $1052 = String$nil;
                                                var $1037 = $1052;
                                                break;
                                        };
                                        var $1035 = $1037;
                                        break;
                                    case 'i':
                                        var $1053 = self.slice(0, -1);
                                        var _bs$9 = $1053;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1055 = self.slice(0, -1);
                                                var _bs$11 = $1055;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1057 = self.slice(0, -1);
                                                        var _bs$13 = $1057;
                                                        var $1058 = String$cons$(115, Kind$Name$from_bits$(_bs$13));
                                                        var $1056 = $1058;
                                                        break;
                                                    case 'i':
                                                        var $1059 = self.slice(0, -1);
                                                        var _bs$13 = $1059;
                                                        var $1060 = String$cons$(116, Kind$Name$from_bits$(_bs$13));
                                                        var $1056 = $1060;
                                                        break;
                                                    case 'e':
                                                        var $1061 = String$nil;
                                                        var $1056 = $1061;
                                                        break;
                                                };
                                                var $1054 = $1056;
                                                break;
                                            case 'i':
                                                var $1062 = self.slice(0, -1);
                                                var _bs$11 = $1062;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1064 = self.slice(0, -1);
                                                        var _bs$13 = $1064;
                                                        var $1065 = String$cons$(117, Kind$Name$from_bits$(_bs$13));
                                                        var $1063 = $1065;
                                                        break;
                                                    case 'i':
                                                        var $1066 = self.slice(0, -1);
                                                        var _bs$13 = $1066;
                                                        var $1067 = String$cons$(118, Kind$Name$from_bits$(_bs$13));
                                                        var $1063 = $1067;
                                                        break;
                                                    case 'e':
                                                        var $1068 = String$nil;
                                                        var $1063 = $1068;
                                                        break;
                                                };
                                                var $1054 = $1063;
                                                break;
                                            case 'e':
                                                var $1069 = String$nil;
                                                var $1054 = $1069;
                                                break;
                                        };
                                        var $1035 = $1054;
                                        break;
                                    case 'e':
                                        var $1070 = String$nil;
                                        var $1035 = $1070;
                                        break;
                                };
                                var $996 = $1035;
                                break;
                            case 'e':
                                var $1071 = String$nil;
                                var $996 = $1071;
                                break;
                        };
                        var $994 = $996;
                        break;
                    case 'i':
                        var $1072 = self.slice(0, -1);
                        var _bs$5 = $1072;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1074 = self.slice(0, -1);
                                var _bs$7 = $1074;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1076 = self.slice(0, -1);
                                        var _bs$9 = $1076;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1078 = self.slice(0, -1);
                                                var _bs$11 = $1078;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1080 = self.slice(0, -1);
                                                        var _bs$13 = $1080;
                                                        var $1081 = String$cons$(119, Kind$Name$from_bits$(_bs$13));
                                                        var $1079 = $1081;
                                                        break;
                                                    case 'i':
                                                        var $1082 = self.slice(0, -1);
                                                        var _bs$13 = $1082;
                                                        var $1083 = String$cons$(120, Kind$Name$from_bits$(_bs$13));
                                                        var $1079 = $1083;
                                                        break;
                                                    case 'e':
                                                        var $1084 = String$nil;
                                                        var $1079 = $1084;
                                                        break;
                                                };
                                                var $1077 = $1079;
                                                break;
                                            case 'i':
                                                var $1085 = self.slice(0, -1);
                                                var _bs$11 = $1085;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1087 = self.slice(0, -1);
                                                        var _bs$13 = $1087;
                                                        var $1088 = String$cons$(121, Kind$Name$from_bits$(_bs$13));
                                                        var $1086 = $1088;
                                                        break;
                                                    case 'i':
                                                        var $1089 = self.slice(0, -1);
                                                        var _bs$13 = $1089;
                                                        var $1090 = String$cons$(122, Kind$Name$from_bits$(_bs$13));
                                                        var $1086 = $1090;
                                                        break;
                                                    case 'e':
                                                        var $1091 = String$nil;
                                                        var $1086 = $1091;
                                                        break;
                                                };
                                                var $1077 = $1086;
                                                break;
                                            case 'e':
                                                var $1092 = String$nil;
                                                var $1077 = $1092;
                                                break;
                                        };
                                        var $1075 = $1077;
                                        break;
                                    case 'i':
                                        var $1093 = self.slice(0, -1);
                                        var _bs$9 = $1093;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1095 = self.slice(0, -1);
                                                var _bs$11 = $1095;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1097 = self.slice(0, -1);
                                                        var _bs$13 = $1097;
                                                        var $1098 = String$cons$(48, Kind$Name$from_bits$(_bs$13));
                                                        var $1096 = $1098;
                                                        break;
                                                    case 'i':
                                                        var $1099 = self.slice(0, -1);
                                                        var _bs$13 = $1099;
                                                        var $1100 = String$cons$(49, Kind$Name$from_bits$(_bs$13));
                                                        var $1096 = $1100;
                                                        break;
                                                    case 'e':
                                                        var $1101 = String$nil;
                                                        var $1096 = $1101;
                                                        break;
                                                };
                                                var $1094 = $1096;
                                                break;
                                            case 'i':
                                                var $1102 = self.slice(0, -1);
                                                var _bs$11 = $1102;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1104 = self.slice(0, -1);
                                                        var _bs$13 = $1104;
                                                        var $1105 = String$cons$(50, Kind$Name$from_bits$(_bs$13));
                                                        var $1103 = $1105;
                                                        break;
                                                    case 'i':
                                                        var $1106 = self.slice(0, -1);
                                                        var _bs$13 = $1106;
                                                        var $1107 = String$cons$(51, Kind$Name$from_bits$(_bs$13));
                                                        var $1103 = $1107;
                                                        break;
                                                    case 'e':
                                                        var $1108 = String$nil;
                                                        var $1103 = $1108;
                                                        break;
                                                };
                                                var $1094 = $1103;
                                                break;
                                            case 'e':
                                                var $1109 = String$nil;
                                                var $1094 = $1109;
                                                break;
                                        };
                                        var $1075 = $1094;
                                        break;
                                    case 'e':
                                        var $1110 = String$nil;
                                        var $1075 = $1110;
                                        break;
                                };
                                var $1073 = $1075;
                                break;
                            case 'i':
                                var $1111 = self.slice(0, -1);
                                var _bs$7 = $1111;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1113 = self.slice(0, -1);
                                        var _bs$9 = $1113;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1115 = self.slice(0, -1);
                                                var _bs$11 = $1115;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1117 = self.slice(0, -1);
                                                        var _bs$13 = $1117;
                                                        var $1118 = String$cons$(52, Kind$Name$from_bits$(_bs$13));
                                                        var $1116 = $1118;
                                                        break;
                                                    case 'i':
                                                        var $1119 = self.slice(0, -1);
                                                        var _bs$13 = $1119;
                                                        var $1120 = String$cons$(53, Kind$Name$from_bits$(_bs$13));
                                                        var $1116 = $1120;
                                                        break;
                                                    case 'e':
                                                        var $1121 = String$nil;
                                                        var $1116 = $1121;
                                                        break;
                                                };
                                                var $1114 = $1116;
                                                break;
                                            case 'i':
                                                var $1122 = self.slice(0, -1);
                                                var _bs$11 = $1122;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1124 = self.slice(0, -1);
                                                        var _bs$13 = $1124;
                                                        var $1125 = String$cons$(54, Kind$Name$from_bits$(_bs$13));
                                                        var $1123 = $1125;
                                                        break;
                                                    case 'i':
                                                        var $1126 = self.slice(0, -1);
                                                        var _bs$13 = $1126;
                                                        var $1127 = String$cons$(55, Kind$Name$from_bits$(_bs$13));
                                                        var $1123 = $1127;
                                                        break;
                                                    case 'e':
                                                        var $1128 = String$nil;
                                                        var $1123 = $1128;
                                                        break;
                                                };
                                                var $1114 = $1123;
                                                break;
                                            case 'e':
                                                var $1129 = String$nil;
                                                var $1114 = $1129;
                                                break;
                                        };
                                        var $1112 = $1114;
                                        break;
                                    case 'i':
                                        var $1130 = self.slice(0, -1);
                                        var _bs$9 = $1130;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1132 = self.slice(0, -1);
                                                var _bs$11 = $1132;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1134 = self.slice(0, -1);
                                                        var _bs$13 = $1134;
                                                        var $1135 = String$cons$(56, Kind$Name$from_bits$(_bs$13));
                                                        var $1133 = $1135;
                                                        break;
                                                    case 'i':
                                                        var $1136 = self.slice(0, -1);
                                                        var _bs$13 = $1136;
                                                        var $1137 = String$cons$(57, Kind$Name$from_bits$(_bs$13));
                                                        var $1133 = $1137;
                                                        break;
                                                    case 'e':
                                                        var $1138 = String$nil;
                                                        var $1133 = $1138;
                                                        break;
                                                };
                                                var $1131 = $1133;
                                                break;
                                            case 'i':
                                                var $1139 = self.slice(0, -1);
                                                var _bs$11 = $1139;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1141 = self.slice(0, -1);
                                                        var _bs$13 = $1141;
                                                        var $1142 = String$cons$(46, Kind$Name$from_bits$(_bs$13));
                                                        var $1140 = $1142;
                                                        break;
                                                    case 'i':
                                                        var $1143 = self.slice(0, -1);
                                                        var _bs$13 = $1143;
                                                        var $1144 = String$cons$(95, Kind$Name$from_bits$(_bs$13));
                                                        var $1140 = $1144;
                                                        break;
                                                    case 'e':
                                                        var $1145 = String$nil;
                                                        var $1140 = $1145;
                                                        break;
                                                };
                                                var $1131 = $1140;
                                                break;
                                            case 'e':
                                                var $1146 = String$nil;
                                                var $1131 = $1146;
                                                break;
                                        };
                                        var $1112 = $1131;
                                        break;
                                    case 'e':
                                        var $1147 = String$nil;
                                        var $1112 = $1147;
                                        break;
                                };
                                var $1073 = $1112;
                                break;
                            case 'e':
                                var $1148 = String$nil;
                                var $1073 = $1148;
                                break;
                        };
                        var $994 = $1073;
                        break;
                    case 'e':
                        var $1149 = String$nil;
                        var $994 = $1149;
                        break;
                };
                var $835 = $994;
                break;
            case 'e':
                var $1150 = String$nil;
                var $835 = $1150;
                break;
        };
        return $835;
    };
    const Kind$Name$from_bits = x0 => Kind$Name$from_bits$(x0);

    function Kind$Map$to_list$(_xs$2) {
        var _kvs$3 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        var $1151 = List$mapped$(_kvs$3, (_kv$4 => {
            var self = _kv$4;
            switch (self._) {
                case 'Pair.new':
                    var $1153 = self.fst;
                    var $1154 = self.snd;
                    var $1155 = Pair$new$(Kind$Name$from_bits$($1153), $1154);
                    var $1152 = $1155;
                    break;
            };
            return $1152;
        }));
        return $1151;
    };
    const Kind$Map$to_list = x0 => Kind$Map$to_list$(x0);

    function Kind$Map$keys$(_xs$2) {
        var $1156 = List$mapped$(Kind$Map$to_list$(_xs$2), Pair$fst);
        return $1156;
    };
    const Kind$Map$keys = x0 => Kind$Map$keys$(x0);

    function Kind$Synth$load$cached$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $1158 = self.head;
                var $1159 = self.tail;
                var self = Kind$Synth$load$cached$is_loop$($1158, _defs$2);
                if (self) {
                    var $1161 = Kind$Synth$load$cached$($1159, _defs$2);
                    var $1160 = $1161;
                } else {
                    var _name$5 = $1158;
                    var $1162 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $1163 = _m$bind$6;
                        return $1163;
                    }))(Kind$Synth$load$cached$def$(_name$5))((_defn$6 => {
                        var self = _defn$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1165 = self.value;
                                var self = $1165;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $1167 = self.term;
                                        var $1168 = self.type;
                                        var _defs$17 = Kind$Map$set$(_name$5, $1165, _defs$2);
                                        var _deps$18 = Kind$Map$new;
                                        var _deps$19 = Kind$Core$dependencies$go$($1167, _deps$18);
                                        var _deps$20 = Kind$Core$dependencies$go$($1168, _deps$19);
                                        var _deps$21 = Kind$Map$keys$(_deps$20);
                                        var $1169 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                            var $1170 = _m$bind$22;
                                            return $1170;
                                        }))(Kind$Synth$load$cached$(_deps$21, _defs$17))((_defs$22 => {
                                            var self = _defs$22;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $1172 = self.value;
                                                    var $1173 = Kind$Synth$load$cached$($1159, $1172);
                                                    var $1171 = $1173;
                                                    break;
                                                case 'Maybe.none':
                                                    var $1174 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                                        var $1175 = _m$pure$24;
                                                        return $1175;
                                                    }))(Maybe$none);
                                                    var $1171 = $1174;
                                                    break;
                                            };
                                            return $1171;
                                        }));
                                        var $1166 = $1169;
                                        break;
                                };
                                var $1164 = $1166;
                                break;
                            case 'Maybe.none':
                                var $1176 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                    var $1177 = _m$pure$8;
                                    return $1177;
                                }))(Maybe$none);
                                var $1164 = $1176;
                                break;
                        };
                        return $1164;
                    }));
                    var $1160 = $1162;
                };
                var $1157 = $1160;
                break;
            case 'List.nil':
                var $1178 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1179 = _m$pure$4;
                    return $1179;
                }))(Maybe$some$(_defs$2));
                var $1157 = $1178;
                break;
        };
        return $1157;
    };
    const Kind$Synth$load$cached = x0 => x1 => Kind$Synth$load$cached$(x0, x1);

    function IO$request$(_url$1) {
        var $1180 = IO$ask$("request", _url$1, (_text$2 => {
            var $1181 = IO$end$(_text$2);
            return $1181;
        }));
        return $1180;
    };
    const IO$request = x0 => IO$request$(x0);

    function Kind$Synth$get_kind_code$(_file$1) {
        var $1182 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $1183 = _m$bind$2;
            return $1183;
        }))(IO$get_file$(_file$1))((_code$2 => {
            var self = (_code$2 === "");
            if (self) {
                var $1185 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1186 = _m$bind$3;
                    return $1186;
                }))(IO$request$(("http://uwu.tech:7172/" + _file$1)))((_code$3 => {
                    var $1187 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $1188 = _m$pure$5;
                        return $1188;
                    }))(_code$3);
                    return $1187;
                }));
                var $1184 = $1185;
            } else {
                var $1189 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1190 = _m$pure$4;
                    return $1190;
                }))(_code$2);
                var $1184 = $1189;
            };
            return $1184;
        }));
        return $1182;
    };
    const Kind$Synth$get_kind_code = x0 => Kind$Synth$get_kind_code$(x0);

    function Parser$is_eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1192 = self.str;
                var self = $1192;
                if (self.length === 0) {
                    var $1194 = Parser$Reply$value$(_pst$1, Bool$true);
                    var $1193 = $1194;
                } else {
                    var $1195 = self.charCodeAt(0);
                    var $1196 = self.slice(1);
                    var $1197 = Parser$Reply$value$(_pst$1, Bool$false);
                    var $1193 = $1197;
                };
                var $1191 = $1193;
                break;
        };
        return $1191;
    };
    const Parser$is_eof = x0 => Parser$is_eof$(x0);

    function Parser$(_V$1) {
        var $1198 = null;
        return $1198;
    };
    const Parser = x0 => Parser$(x0);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1199 = self.err;
                        var $1200 = self.nam;
                        var $1201 = self.ini;
                        var $1202 = self.idx;
                        var $1203 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $1205 = self.head;
                                var $1206 = self.tail;
                                var _parsed$11 = $1205(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1208 = self.err;
                                        var _cur_err$13 = Maybe$some$($1208);
                                        var _far_err$14 = Parser$Error$maybe_combine$($1199, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $1200, $1201, $1202, $1203);
                                        var $1209 = Parser$choice$($1206, _new_pst$15);
                                        var $1207 = $1209;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1210 = self.pst;
                                        var $1211 = self.val;
                                        var $1212 = Parser$Reply$value$($1210, $1211);
                                        var $1207 = $1212;
                                        break;
                                };
                                var $1204 = $1207;
                                break;
                            case 'List.nil':
                                var self = $1199;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1214 = self.value;
                                        var $1215 = Parser$Reply$error$($1214);
                                        var $1213 = $1215;
                                        break;
                                    case 'Maybe.none':
                                        var $1216 = Parser$Reply$fail$($1200, $1201, $1202, "No parse.");
                                        var $1213 = $1216;
                                        break;
                                };
                                var $1204 = $1213;
                                break;
                        };
                        return $1204;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1217 = self.err;
                        var $1218 = self.nam;
                        var $1219 = self.ini;
                        var $1220 = self.idx;
                        var $1221 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $1223 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $1222 = $1223;
                        } else {
                            var $1224 = self.charCodeAt(0);
                            var $1225 = self.slice(1);
                            var self = $1221;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $1227 = Parser$Reply$fail$($1218, $1219, _ini_idx$1, _error_msg$12);
                                var $1226 = $1227;
                            } else {
                                var $1228 = self.charCodeAt(0);
                                var $1229 = self.slice(1);
                                var self = ($1224 === $1228);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($1217, $1218, $1219, Nat$succ$($1220), $1229);
                                    var $1231 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $1225, _pst$14);
                                    var $1230 = $1231;
                                } else {
                                    var _chr$14 = String$cons$($1228, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $1232 = Parser$Reply$fail$($1218, $1219, _ini_idx$1, _err$15);
                                    var $1230 = $1232;
                                };
                                var $1226 = $1230;
                            };
                            var $1222 = $1226;
                        };
                        return $1222;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1234 = self.idx;
                var self = Parser$text$go$($1234, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1236 = self.err;
                        var $1237 = Parser$Reply$error$($1236);
                        var $1235 = $1237;
                        break;
                    case 'Parser.Reply.value':
                        var $1238 = self.pst;
                        var $1239 = self.val;
                        var $1240 = Parser$Reply$value$($1238, $1239);
                        var $1235 = $1240;
                        break;
                };
                var $1233 = $1235;
                break;
        };
        return $1233;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1242 = self.nam;
                var $1243 = self.ini;
                var $1244 = self.idx;
                var $1245 = self.str;
                var self = $1245;
                if (self.length === 0) {
                    var $1247 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $1246 = $1247;
                } else {
                    var $1248 = self.charCodeAt(0);
                    var $1249 = self.slice(1);
                    var $1250 = Parser$Reply$fail$($1242, $1243, $1244, "Expected end-of-file.");
                    var $1246 = $1250;
                };
                var $1241 = $1246;
                break;
        };
        return $1241;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1252 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $1254 = self.err;
                                var $1255 = Parser$Reply$error$(Parser$Error$combine$($1254, $1252));
                                var $1253 = $1255;
                                break;
                            case 'Parser.Reply.value':
                                var $1256 = self.pst;
                                var $1257 = self.val;
                                var $1258 = Parser$until$go$(_until$2, _parse$3, List$cons$($1257, _values$4), $1256);
                                var $1253 = $1258;
                                break;
                        };
                        var $1251 = $1253;
                        break;
                    case 'Parser.Reply.value':
                        var $1259 = self.pst;
                        var $1260 = Parser$Reply$value$($1259, List$reverse$(_values$4));
                        var $1251 = $1260;
                        break;
                };
                return $1251;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $1261 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $1261;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1263 = self.err;
                var $1264 = self.nam;
                var $1265 = self.ini;
                var $1266 = self.idx;
                var $1267 = self.str;
                var self = $1267;
                if (self.length === 0) {
                    var $1269 = Parser$Reply$fail$($1264, $1265, $1266, "Unexpected end of file.");
                    var $1268 = $1269;
                } else {
                    var $1270 = self.charCodeAt(0);
                    var $1271 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1263, $1264, $1265, Nat$succ$($1266), $1271);
                    var $1272 = Parser$Reply$value$(_pst$9, $1270);
                    var $1268 = $1272;
                };
                var $1262 = $1268;
                break;
        };
        return $1262;
    };
    const Parser$one = x0 => Parser$one$(x0);

    function Kind$Parser$comment$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1274 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1276 = self.err;
                        var self = $1274;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1278 = self.value;
                                var $1279 = Parser$Reply$error$(Parser$Error$combine$($1278, $1276));
                                var $1277 = $1279;
                                break;
                            case 'Maybe.none':
                                var $1280 = Parser$Reply$error$($1276);
                                var $1277 = $1280;
                                break;
                        };
                        var $1275 = $1277;
                        break;
                    case 'Parser.Reply.value':
                        var $1281 = self.pst;
                        var self = $1281;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1283 = self.err;
                                var $1284 = self.nam;
                                var $1285 = self.ini;
                                var $1286 = self.idx;
                                var $1287 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1274, $1283), $1284, $1285, $1286, $1287);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1289 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1291 = self.err;
                                                var self = $1289;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1293 = self.value;
                                                        var $1294 = Parser$Reply$error$(Parser$Error$combine$($1293, $1291));
                                                        var $1292 = $1294;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1295 = Parser$Reply$error$($1291);
                                                        var $1292 = $1295;
                                                        break;
                                                };
                                                var $1290 = $1292;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1296 = self.pst;
                                                var self = $1296;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1298 = self.err;
                                                        var $1299 = self.nam;
                                                        var $1300 = self.ini;
                                                        var $1301 = self.idx;
                                                        var $1302 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1289, $1298), $1299, $1300, $1301, $1302);
                                                        var $1303 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $1297 = $1303;
                                                        break;
                                                };
                                                var $1290 = $1297;
                                                break;
                                        };
                                        var $1288 = $1290;
                                        break;
                                };
                                var $1282 = $1288;
                                break;
                        };
                        var $1275 = $1282;
                        break;
                };
                var $1273 = $1275;
                break;
        };
        return $1273;
    };
    const Kind$Parser$comment = x0 => Kind$Parser$comment$(x0);
    const Kind$Parser$spaces = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$(Kind$Parser$comment, List$nil)))))));

    function Parser$get_idx$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1305 = self.idx;
                var $1306 = Parser$Reply$value$(_pst$1, $1305);
                var $1304 = $1306;
                break;
        };
        return $1304;
    };
    const Parser$get_idx = x0 => Parser$get_idx$(x0);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $1307 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $1307;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);

    function Kind$Name$is_letter$(_chr$1) {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $1309 = Bool$true;
            var $1308 = $1309;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $1311 = Bool$true;
                var $1310 = $1311;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $1313 = Bool$true;
                    var $1312 = $1313;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $1315 = Bool$true;
                        var $1314 = $1315;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $1317 = Bool$true;
                            var $1316 = $1317;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $1319 = Bool$true;
                                var $1318 = $1319;
                            } else {
                                var $1320 = Bool$false;
                                var $1318 = $1320;
                            };
                            var $1316 = $1318;
                        };
                        var $1314 = $1316;
                    };
                    var $1312 = $1314;
                };
                var $1310 = $1312;
            };
            var $1308 = $1310;
        };
        return $1308;
    };
    const Kind$Name$is_letter = x0 => Kind$Name$is_letter$(x0);

    function Kind$Parser$letter$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1322 = self.err;
                var $1323 = self.nam;
                var $1324 = self.ini;
                var $1325 = self.idx;
                var $1326 = self.str;
                var self = $1326;
                if (self.length === 0) {
                    var $1328 = Parser$Reply$fail$($1323, $1324, $1325, "Unexpected eof.");
                    var $1327 = $1328;
                } else {
                    var $1329 = self.charCodeAt(0);
                    var $1330 = self.slice(1);
                    var self = Kind$Name$is_letter$($1329);
                    if (self) {
                        var _pst$9 = Parser$State$new$($1322, $1323, $1324, Nat$succ$($1325), $1330);
                        var $1332 = Parser$Reply$value$(_pst$9, $1329);
                        var $1331 = $1332;
                    } else {
                        var $1333 = Parser$Reply$fail$($1323, $1324, $1325, "Expected name.");
                        var $1331 = $1333;
                    };
                    var $1327 = $1331;
                };
                var $1321 = $1327;
                break;
        };
        return $1321;
    };
    const Kind$Parser$letter = x0 => Kind$Parser$letter$(x0);

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $1335 = self.head;
                var $1336 = self.tail;
                var $1337 = _cons$5($1335)(List$fold$($1336, _nil$4, _cons$5));
                var $1334 = $1337;
                break;
            case 'List.nil':
                var $1338 = _nil$4;
                var $1334 = $1338;
                break;
        };
        return $1334;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1340 = self.nam;
                var $1341 = self.ini;
                var $1342 = self.idx;
                var $1343 = Parser$Reply$fail$($1340, $1341, $1342, _error$2);
                var $1339 = $1343;
                break;
        };
        return $1339;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function String$head$(_xs$1) {
        var self = _xs$1;
        if (self.length === 0) {
            var $1345 = Maybe$none;
            var $1344 = $1345;
        } else {
            var $1346 = self.charCodeAt(0);
            var $1347 = self.slice(1);
            var $1348 = Maybe$some$($1346);
            var $1344 = $1348;
        };
        return $1344;
    };
    const String$head = x0 => String$head$(x0);

    function Kind$Parser$name1$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1350 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1352 = self.err;
                        var self = $1350;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1354 = self.value;
                                var $1355 = Parser$Reply$error$(Parser$Error$combine$($1354, $1352));
                                var $1353 = $1355;
                                break;
                            case 'Maybe.none':
                                var $1356 = Parser$Reply$error$($1352);
                                var $1353 = $1356;
                                break;
                        };
                        var $1351 = $1353;
                        break;
                    case 'Parser.Reply.value':
                        var $1357 = self.pst;
                        var self = $1357;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1359 = self.err;
                                var $1360 = self.nam;
                                var $1361 = self.ini;
                                var $1362 = self.idx;
                                var $1363 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1350, $1359), $1360, $1361, $1362, $1363);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1365 = self.err;
                                        var _reply$21 = Parser$many1$(Kind$Parser$letter, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1367 = self.err;
                                                var self = $1365;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1369 = self.value;
                                                        var $1370 = Parser$Reply$error$(Parser$Error$combine$($1369, $1367));
                                                        var $1368 = $1370;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1371 = Parser$Reply$error$($1367);
                                                        var $1368 = $1371;
                                                        break;
                                                };
                                                var $1366 = $1368;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1372 = self.pst;
                                                var $1373 = self.val;
                                                var self = $1372;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1375 = self.err;
                                                        var $1376 = self.nam;
                                                        var $1377 = self.ini;
                                                        var $1378 = self.idx;
                                                        var $1379 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1365, $1375), $1376, $1377, $1378, $1379);
                                                        var _name$30 = List$fold$($1373, String$nil, String$cons);
                                                        var _reserved$31 = Parser$fail("Reserved keyword.");
                                                        var _numeric$32 = Parser$fail("Name can\'t start with number or sign.");
                                                        var self = (_name$30 === "case");
                                                        if (self) {
                                                            var $1381 = _reserved$31;
                                                            var $1380 = $1381;
                                                        } else {
                                                            var self = (_name$30 === "do");
                                                            if (self) {
                                                                var $1383 = _reserved$31;
                                                                var $1382 = $1383;
                                                            } else {
                                                                var self = (_name$30 === "if");
                                                                if (self) {
                                                                    var $1385 = _reserved$31;
                                                                    var $1384 = $1385;
                                                                } else {
                                                                    var self = (_name$30 === "with");
                                                                    if (self) {
                                                                        var $1387 = _reserved$31;
                                                                        var $1386 = $1387;
                                                                    } else {
                                                                        var self = (_name$30 === "for");
                                                                        if (self) {
                                                                            var $1389 = _reserved$31;
                                                                            var $1388 = $1389;
                                                                        } else {
                                                                            var self = (_name$30 === "else");
                                                                            if (self) {
                                                                                var $1391 = _reserved$31;
                                                                                var $1390 = $1391;
                                                                            } else {
                                                                                var self = (_name$30 === "switch");
                                                                                if (self) {
                                                                                    var $1393 = _reserved$31;
                                                                                    var $1392 = $1393;
                                                                                } else {
                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 43);
                                                                                    if (self) {
                                                                                        var $1395 = _numeric$32;
                                                                                        var $1394 = $1395;
                                                                                    } else {
                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 45);
                                                                                        if (self) {
                                                                                            var $1397 = _numeric$32;
                                                                                            var $1396 = $1397;
                                                                                        } else {
                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 48);
                                                                                            if (self) {
                                                                                                var $1399 = _numeric$32;
                                                                                                var $1398 = $1399;
                                                                                            } else {
                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 49);
                                                                                                if (self) {
                                                                                                    var $1401 = _numeric$32;
                                                                                                    var $1400 = $1401;
                                                                                                } else {
                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 50);
                                                                                                    if (self) {
                                                                                                        var $1403 = _numeric$32;
                                                                                                        var $1402 = $1403;
                                                                                                    } else {
                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 51);
                                                                                                        if (self) {
                                                                                                            var $1405 = _numeric$32;
                                                                                                            var $1404 = $1405;
                                                                                                        } else {
                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 52);
                                                                                                            if (self) {
                                                                                                                var $1407 = _numeric$32;
                                                                                                                var $1406 = $1407;
                                                                                                            } else {
                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 53);
                                                                                                                if (self) {
                                                                                                                    var $1409 = _numeric$32;
                                                                                                                    var $1408 = $1409;
                                                                                                                } else {
                                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 54);
                                                                                                                    if (self) {
                                                                                                                        var $1411 = _numeric$32;
                                                                                                                        var $1410 = $1411;
                                                                                                                    } else {
                                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 55);
                                                                                                                        if (self) {
                                                                                                                            var $1413 = _numeric$32;
                                                                                                                            var $1412 = $1413;
                                                                                                                        } else {
                                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 56);
                                                                                                                            if (self) {
                                                                                                                                var $1415 = _numeric$32;
                                                                                                                                var $1414 = $1415;
                                                                                                                            } else {
                                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 57);
                                                                                                                                if (self) {
                                                                                                                                    var $1417 = _numeric$32;
                                                                                                                                    var $1416 = $1417;
                                                                                                                                } else {
                                                                                                                                    var $1418 = (_pst$33 => {
                                                                                                                                        var $1419 = Parser$Reply$value$(_pst$33, _name$30);
                                                                                                                                        return $1419;
                                                                                                                                    });
                                                                                                                                    var $1416 = $1418;
                                                                                                                                };
                                                                                                                                var $1414 = $1416;
                                                                                                                            };
                                                                                                                            var $1412 = $1414;
                                                                                                                        };
                                                                                                                        var $1410 = $1412;
                                                                                                                    };
                                                                                                                    var $1408 = $1410;
                                                                                                                };
                                                                                                                var $1406 = $1408;
                                                                                                            };
                                                                                                            var $1404 = $1406;
                                                                                                        };
                                                                                                        var $1402 = $1404;
                                                                                                    };
                                                                                                    var $1400 = $1402;
                                                                                                };
                                                                                                var $1398 = $1400;
                                                                                            };
                                                                                            var $1396 = $1398;
                                                                                        };
                                                                                        var $1394 = $1396;
                                                                                    };
                                                                                    var $1392 = $1394;
                                                                                };
                                                                                var $1390 = $1392;
                                                                            };
                                                                            var $1388 = $1390;
                                                                        };
                                                                        var $1386 = $1388;
                                                                    };
                                                                    var $1384 = $1386;
                                                                };
                                                                var $1382 = $1384;
                                                            };
                                                            var $1380 = $1382;
                                                        };
                                                        var $1380 = $1380(_reply$pst$29);
                                                        var $1374 = $1380;
                                                        break;
                                                };
                                                var $1366 = $1374;
                                                break;
                                        };
                                        var $1364 = $1366;
                                        break;
                                };
                                var $1358 = $1364;
                                break;
                        };
                        var $1351 = $1358;
                        break;
                };
                var $1349 = $1351;
                break;
        };
        return $1349;
    };
    const Kind$Parser$name1 = x0 => Kind$Parser$name1$(x0);

    function Parser$until1$(_cond$2, _parser$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $1421 = self.err;
                var _reply$10 = _parser$3(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1423 = self.err;
                        var self = $1421;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1425 = self.value;
                                var $1426 = Parser$Reply$error$(Parser$Error$combine$($1425, $1423));
                                var $1424 = $1426;
                                break;
                            case 'Maybe.none':
                                var $1427 = Parser$Reply$error$($1423);
                                var $1424 = $1427;
                                break;
                        };
                        var $1422 = $1424;
                        break;
                    case 'Parser.Reply.value':
                        var $1428 = self.pst;
                        var $1429 = self.val;
                        var self = $1428;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1431 = self.err;
                                var $1432 = self.nam;
                                var $1433 = self.ini;
                                var $1434 = self.idx;
                                var $1435 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($1421, $1431), $1432, $1433, $1434, $1435);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1437 = self.err;
                                        var _reply$24 = Parser$until$(_cond$2, _parser$3)(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1439 = self.err;
                                                var self = $1437;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1441 = self.value;
                                                        var $1442 = Parser$Reply$error$(Parser$Error$combine$($1441, $1439));
                                                        var $1440 = $1442;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1443 = Parser$Reply$error$($1439);
                                                        var $1440 = $1443;
                                                        break;
                                                };
                                                var $1438 = $1440;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1444 = self.pst;
                                                var $1445 = self.val;
                                                var self = $1444;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1447 = self.err;
                                                        var $1448 = self.nam;
                                                        var $1449 = self.ini;
                                                        var $1450 = self.idx;
                                                        var $1451 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1437, $1447), $1448, $1449, $1450, $1451);
                                                        var $1452 = Parser$Reply$value$(_reply$pst$32, List$cons$($1429, $1445));
                                                        var $1446 = $1452;
                                                        break;
                                                };
                                                var $1438 = $1446;
                                                break;
                                        };
                                        var $1436 = $1438;
                                        break;
                                };
                                var $1430 = $1436;
                                break;
                        };
                        var $1422 = $1430;
                        break;
                };
                var $1420 = $1422;
                break;
        };
        return $1420;
    };
    const Parser$until1 = x0 => x1 => x2 => Parser$until1$(x0, x1, x2);

    function Parser$wrap1$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1454 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1456 = self.err;
                        var self = $1454;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1458 = self.value;
                                var $1459 = Parser$Reply$error$(Parser$Error$combine$($1458, $1456));
                                var $1457 = $1459;
                                break;
                            case 'Maybe.none':
                                var $1460 = Parser$Reply$error$($1456);
                                var $1457 = $1460;
                                break;
                        };
                        var $1455 = $1457;
                        break;
                    case 'Parser.Reply.value':
                        var $1461 = self.pst;
                        var self = $1461;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1463 = self.err;
                                var $1464 = self.nam;
                                var $1465 = self.ini;
                                var $1466 = self.idx;
                                var $1467 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1454, $1463), $1464, $1465, $1466, $1467);
                                var $1468 = Parser$until1$(_close$4, _parse$3, _reply$pst$19);
                                var $1462 = $1468;
                                break;
                        };
                        var $1455 = $1462;
                        break;
                };
                var $1453 = $1455;
                break;
        };
        return $1453;
    };
    const Parser$wrap1 = x0 => x1 => x2 => x3 => Parser$wrap1$(x0, x1, x2, x3);

    function Kind$Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1470 = self.err;
                var _reply$8 = Kind$Parser$spaces(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1472 = self.err;
                        var self = $1470;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1474 = self.value;
                                var $1475 = Parser$Reply$error$(Parser$Error$combine$($1474, $1472));
                                var $1473 = $1475;
                                break;
                            case 'Maybe.none':
                                var $1476 = Parser$Reply$error$($1472);
                                var $1473 = $1476;
                                break;
                        };
                        var $1471 = $1473;
                        break;
                    case 'Parser.Reply.value':
                        var $1477 = self.pst;
                        var self = $1477;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1479 = self.err;
                                var $1480 = self.nam;
                                var $1481 = self.ini;
                                var $1482 = self.idx;
                                var $1483 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1470, $1479), $1480, $1481, $1482, $1483);
                                var $1484 = Parser$text$(_text$1, _reply$pst$16);
                                var $1478 = $1484;
                                break;
                        };
                        var $1471 = $1478;
                        break;
                };
                var $1469 = $1471;
                break;
        };
        return $1469;
    };
    const Kind$Parser$text = x0 => x1 => Kind$Parser$text$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $1487 = self.pst;
                        var $1488 = self.val;
                        var $1489 = Parser$Reply$value$($1487, Maybe$some$($1488));
                        var $1486 = $1489;
                        break;
                    case 'Parser.Reply.error':
                        var $1490 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $1486 = $1490;
                        break;
                };
                var $1485 = $1486;
                break;
        };
        return $1485;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kind$Parser$items1$(_ini$2, _parser$3, _end$4) {
        var $1491 = Parser$wrap1(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1493 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1495 = self.err;
                            var self = $1493;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1497 = self.value;
                                    var $1498 = Parser$Reply$error$(Parser$Error$combine$($1497, $1495));
                                    var $1496 = $1498;
                                    break;
                                case 'Maybe.none':
                                    var $1499 = Parser$Reply$error$($1495);
                                    var $1496 = $1499;
                                    break;
                            };
                            var $1494 = $1496;
                            break;
                        case 'Parser.Reply.value':
                            var $1500 = self.pst;
                            var self = $1500;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1502 = self.err;
                                    var $1503 = self.nam;
                                    var $1504 = self.ini;
                                    var $1505 = self.idx;
                                    var $1506 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1493, $1502), $1503, $1504, $1505, $1506);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1508 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1510 = self.err;
                                                    var self = $1508;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1512 = self.value;
                                                            var $1513 = Parser$Reply$error$(Parser$Error$combine$($1512, $1510));
                                                            var $1511 = $1513;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1514 = Parser$Reply$error$($1510);
                                                            var $1511 = $1514;
                                                            break;
                                                    };
                                                    var $1509 = $1511;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1515 = self.pst;
                                                    var $1516 = self.val;
                                                    var self = $1515;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1518 = self.err;
                                                            var $1519 = self.nam;
                                                            var $1520 = self.ini;
                                                            var $1521 = self.idx;
                                                            var $1522 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1508, $1518), $1519, $1520, $1521, $1522);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1524 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1526 = self.err;
                                                                            var self = $1524;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1528 = self.value;
                                                                                    var $1529 = Parser$Reply$error$(Parser$Error$combine$($1528, $1526));
                                                                                    var $1527 = $1529;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1530 = Parser$Reply$error$($1526);
                                                                                    var $1527 = $1530;
                                                                                    break;
                                                                            };
                                                                            var $1525 = $1527;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1531 = self.pst;
                                                                            var self = $1531;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1533 = self.err;
                                                                                    var $1534 = self.nam;
                                                                                    var $1535 = self.ini;
                                                                                    var $1536 = self.idx;
                                                                                    var $1537 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1524, $1533), $1534, $1535, $1536, $1537);
                                                                                    var $1538 = Parser$Reply$value$(_reply$pst$47, $1516);
                                                                                    var $1532 = $1538;
                                                                                    break;
                                                                            };
                                                                            var $1525 = $1532;
                                                                            break;
                                                                    };
                                                                    var $1523 = $1525;
                                                                    break;
                                                            };
                                                            var $1517 = $1523;
                                                            break;
                                                    };
                                                    var $1509 = $1517;
                                                    break;
                                            };
                                            var $1507 = $1509;
                                            break;
                                    };
                                    var $1501 = $1507;
                                    break;
                            };
                            var $1494 = $1501;
                            break;
                    };
                    var $1492 = $1494;
                    break;
            };
            return $1492;
        }))(Kind$Parser$text(_end$4));
        return $1491;
    };
    const Kind$Parser$items1 = x0 => x1 => x2 => Kind$Parser$items1$(x0, x1, x2);

    function Kind$Parser$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1540 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1542 = self.err;
                        var self = $1540;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1544 = self.value;
                                var $1545 = Parser$Reply$error$(Parser$Error$combine$($1544, $1542));
                                var $1543 = $1545;
                                break;
                            case 'Maybe.none':
                                var $1546 = Parser$Reply$error$($1542);
                                var $1543 = $1546;
                                break;
                        };
                        var $1541 = $1543;
                        break;
                    case 'Parser.Reply.value':
                        var $1547 = self.pst;
                        var self = $1547;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1549 = self.err;
                                var $1550 = self.nam;
                                var $1551 = self.ini;
                                var $1552 = self.idx;
                                var $1553 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1540, $1549), $1550, $1551, $1552, $1553);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1555 = self.err;
                                        var _reply$21 = Parser$many$(Kind$Parser$letter)(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1557 = self.err;
                                                var self = $1555;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1559 = self.value;
                                                        var $1560 = Parser$Reply$error$(Parser$Error$combine$($1559, $1557));
                                                        var $1558 = $1560;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1561 = Parser$Reply$error$($1557);
                                                        var $1558 = $1561;
                                                        break;
                                                };
                                                var $1556 = $1558;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1562 = self.pst;
                                                var $1563 = self.val;
                                                var self = $1562;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1565 = self.err;
                                                        var $1566 = self.nam;
                                                        var $1567 = self.ini;
                                                        var $1568 = self.idx;
                                                        var $1569 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1555, $1565), $1566, $1567, $1568, $1569);
                                                        var $1570 = Parser$Reply$value$(_reply$pst$29, List$fold$($1563, String$nil, String$cons));
                                                        var $1564 = $1570;
                                                        break;
                                                };
                                                var $1556 = $1564;
                                                break;
                                        };
                                        var $1554 = $1556;
                                        break;
                                };
                                var $1548 = $1554;
                                break;
                        };
                        var $1541 = $1548;
                        break;
                };
                var $1539 = $1541;
                break;
        };
        return $1539;
    };
    const Kind$Parser$name = x0 => Kind$Parser$name$(x0);

    function Kind$Term$ori$(_orig$1, _expr$2) {
        var $1571 = ({
            _: 'Kind.Term.ori',
            'orig': _orig$1,
            'expr': _expr$2
        });
        return $1571;
    };
    const Kind$Term$ori = x0 => x1 => Kind$Term$ori$(x0, x1);

    function Kind$Parser$block$(_name$1, _parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var _reply$9 = Kind$Parser$spaces(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1574 = self.err;
                        var $1575 = Parser$Reply$error$($1574);
                        var $1573 = $1575;
                        break;
                    case 'Parser.Reply.value':
                        var $1576 = self.pst;
                        var _pst$12 = $1576;
                        var self = _pst$12;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1578 = self.err;
                                var $1579 = self.nam;
                                var $1580 = self.ini;
                                var $1581 = self.idx;
                                var $1582 = self.str;
                                var _reply$18 = _parse$2(Parser$State$new$($1578, _name$1, $1581, $1581, $1582));
                                var self = _reply$18;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1584 = self.err;
                                        var $1585 = Parser$Reply$error$($1584);
                                        var $1583 = $1585;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1586 = self.pst;
                                        var $1587 = self.val;
                                        var self = $1586;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1589 = self.err;
                                                var $1590 = self.idx;
                                                var $1591 = self.str;
                                                var _new_pst$26 = Parser$State$new$($1589, $1579, $1580, $1590, $1591);
                                                var $1592 = Parser$Reply$value$(_new_pst$26, Kind$Term$ori$(Pair$new$($1581, $1590), $1587));
                                                var $1588 = $1592;
                                                break;
                                        };
                                        var $1583 = $1588;
                                        break;
                                };
                                var $1577 = $1583;
                                break;
                        };
                        var $1573 = $1577;
                        break;
                };
                var $1572 = $1573;
                break;
        };
        return $1572;
    };
    const Kind$Parser$block = x0 => x1 => x2 => Kind$Parser$block$(x0, x1, x2);

    function Kind$Parser$dom$prop$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1594 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1596 = self.err;
                        var self = $1594;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1598 = self.value;
                                var $1599 = Parser$Reply$error$(Parser$Error$combine$($1598, $1596));
                                var $1597 = $1599;
                                break;
                            case 'Maybe.none':
                                var $1600 = Parser$Reply$error$($1596);
                                var $1597 = $1600;
                                break;
                        };
                        var $1595 = $1597;
                        break;
                    case 'Parser.Reply.value':
                        var $1601 = self.pst;
                        var $1602 = self.val;
                        var self = $1601;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1604 = self.err;
                                var $1605 = self.nam;
                                var $1606 = self.ini;
                                var $1607 = self.idx;
                                var $1608 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1594, $1604), $1605, $1606, $1607, $1608);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1610 = self.err;
                                        var _reply$21 = Kind$Parser$text$("=", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1612 = self.err;
                                                var self = $1610;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1614 = self.value;
                                                        var $1615 = Parser$Reply$error$(Parser$Error$combine$($1614, $1612));
                                                        var $1613 = $1615;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1616 = Parser$Reply$error$($1612);
                                                        var $1613 = $1616;
                                                        break;
                                                };
                                                var $1611 = $1613;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1617 = self.pst;
                                                var self = $1617;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1619 = self.err;
                                                        var $1620 = self.nam;
                                                        var $1621 = self.ini;
                                                        var $1622 = self.idx;
                                                        var $1623 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1610, $1619), $1620, $1621, $1622, $1623);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1625 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1627 = self.err;
                                                                        var self = $1625;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1629 = self.value;
                                                                                var $1630 = Parser$Reply$error$(Parser$Error$combine$($1629, $1627));
                                                                                var $1628 = $1630;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1631 = Parser$Reply$error$($1627);
                                                                                var $1628 = $1631;
                                                                                break;
                                                                        };
                                                                        var $1626 = $1628;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1632 = self.pst;
                                                                        var $1633 = self.val;
                                                                        var self = $1632;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1635 = self.err;
                                                                                var $1636 = self.nam;
                                                                                var $1637 = self.ini;
                                                                                var $1638 = self.idx;
                                                                                var $1639 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1625, $1635), $1636, $1637, $1638, $1639);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1641 = self.err;
                                                                                        var _reply$49 = Kind$Parser$spaces(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1643 = self.err;
                                                                                                var self = $1641;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1645 = self.value;
                                                                                                        var $1646 = Parser$Reply$error$(Parser$Error$combine$($1645, $1643));
                                                                                                        var $1644 = $1646;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1647 = Parser$Reply$error$($1643);
                                                                                                        var $1644 = $1647;
                                                                                                        break;
                                                                                                };
                                                                                                var $1642 = $1644;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1648 = self.pst;
                                                                                                var self = $1648;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1650 = self.err;
                                                                                                        var $1651 = self.nam;
                                                                                                        var $1652 = self.ini;
                                                                                                        var $1653 = self.idx;
                                                                                                        var $1654 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1641, $1650), $1651, $1652, $1653, $1654);
                                                                                                        var $1655 = Parser$Reply$value$(_reply$pst$57, Pair$new$($1602, $1633));
                                                                                                        var $1649 = $1655;
                                                                                                        break;
                                                                                                };
                                                                                                var $1642 = $1649;
                                                                                                break;
                                                                                        };
                                                                                        var $1640 = $1642;
                                                                                        break;
                                                                                };
                                                                                var $1634 = $1640;
                                                                                break;
                                                                        };
                                                                        var $1626 = $1634;
                                                                        break;
                                                                };
                                                                var $1624 = $1626;
                                                                break;
                                                        };
                                                        var $1618 = $1624;
                                                        break;
                                                };
                                                var $1611 = $1618;
                                                break;
                                        };
                                        var $1609 = $1611;
                                        break;
                                };
                                var $1603 = $1609;
                                break;
                        };
                        var $1595 = $1603;
                        break;
                };
                var $1593 = $1595;
                break;
        };
        return $1593;
    };
    const Kind$Parser$dom$prop = x0 => Kind$Parser$dom$prop$(x0);

    function Kind$Term$hol$(_path$1) {
        var $1656 = ({
            _: 'Kind.Term.hol',
            'path': _path$1
        });
        return $1656;
    };
    const Kind$Term$hol = x0 => Kind$Term$hol$(x0);

    function Kind$Parser$dom$gen_prop$go$(_values$1, _result$2) {
        var Kind$Parser$dom$gen_prop$go$ = (_values$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_values$1, _result$2]
        });
        var Kind$Parser$dom$gen_prop$go = _values$1 => _result$2 => Kind$Parser$dom$gen_prop$go$(_values$1, _result$2);
        var arg = [_values$1, _result$2];
        while (true) {
            let [_values$1, _result$2] = arg;
            var R = (() => {
                var self = _values$1;
                switch (self._) {
                    case 'List.cons':
                        var $1657 = self.head;
                        var $1658 = self.tail;
                        var self = $1657;
                        switch (self._) {
                            case 'Pair.new':
                                var $1660 = self.fst;
                                var $1661 = self.snd;
                                var self = ($1660 === "style");
                                if (self) {
                                    var $1663 = Kind$Parser$dom$gen_prop$go$($1658, Pair$new$((() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1664 = self.fst;
                                                var $1665 = $1664;
                                                return $1665;
                                        };
                                    })(), $1661));
                                    var $1662 = $1663;
                                } else {
                                    var _pair$7 = Kind$Term$ref$("Pair.new");
                                    var _pair$8 = Kind$Term$app$(_pair$7, Kind$Term$hol$(Bits$e));
                                    var _pair$9 = Kind$Term$app$(_pair$8, Kind$Term$hol$(Bits$e));
                                    var _pair$10 = Kind$Term$app$(_pair$9, Kind$Term$str$($1660));
                                    var _pair$11 = Kind$Term$app$(_pair$10, $1661);
                                    var _term$12 = Kind$Term$ref$("List.cons");
                                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                                    var _term$14 = Kind$Term$app$(_term$13, _pair$11);
                                    var _term$15 = Kind$Term$app$(_term$14, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1667 = self.fst;
                                                var $1668 = $1667;
                                                return $1668;
                                        };
                                    })());
                                    var $1666 = Kind$Parser$dom$gen_prop$go$($1658, Pair$new$(_term$15, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1669 = self.snd;
                                                var $1670 = $1669;
                                                return $1670;
                                        };
                                    })()));
                                    var $1662 = $1666;
                                };
                                var $1659 = $1662;
                                break;
                        };
                        return $1659;
                    case 'List.nil':
                        var $1671 = _result$2;
                        return $1671;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$dom$gen_prop$go = x0 => x1 => Kind$Parser$dom$gen_prop$go$(x0, x1);

    function Kind$Parser$dom$gen_prop$(_values$1) {
        var _empty_list$2 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
        var _empty_map$3 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
        var self = Kind$Parser$dom$gen_prop$go$(_values$1, Pair$new$(_empty_list$2, _empty_map$3));
        switch (self._) {
            case 'Pair.new':
                var $1673 = self.fst;
                var $1674 = self.snd;
                var _term_prop$6 = Kind$Term$ref$("Map.from_list");
                var _term_prop$7 = Kind$Term$app$(_term_prop$6, Kind$Term$hol$(Bits$e));
                var _term_prop$8 = Kind$Term$app$(_term_prop$7, $1673);
                var $1675 = Pair$new$(_term_prop$8, $1674);
                var $1672 = $1675;
                break;
        };
        return $1672;
    };
    const Kind$Parser$dom$gen_prop = x0 => Kind$Parser$dom$gen_prop$(x0);
    const Kind$Parser$dom$for = Kind$Parser$block("for_dom")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1677 = self.err;
                var _reply$7 = Kind$Parser$text$("for ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1679 = self.err;
                        var self = $1677;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1681 = self.value;
                                var $1682 = Parser$Reply$error$(Parser$Error$combine$($1681, $1679));
                                var $1680 = $1682;
                                break;
                            case 'Maybe.none':
                                var $1683 = Parser$Reply$error$($1679);
                                var $1680 = $1683;
                                break;
                        };
                        var $1678 = $1680;
                        break;
                    case 'Parser.Reply.value':
                        var $1684 = self.pst;
                        var self = $1684;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1686 = self.err;
                                var $1687 = self.nam;
                                var $1688 = self.ini;
                                var $1689 = self.idx;
                                var $1690 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1677, $1686), $1687, $1688, $1689, $1690);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1692 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1694 = self.err;
                                                var self = $1692;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1696 = self.value;
                                                        var $1697 = Parser$Reply$error$(Parser$Error$combine$($1696, $1694));
                                                        var $1695 = $1697;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1698 = Parser$Reply$error$($1694);
                                                        var $1695 = $1698;
                                                        break;
                                                };
                                                var $1693 = $1695;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1699 = self.pst;
                                                var $1700 = self.val;
                                                var self = $1699;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1702 = self.err;
                                                        var $1703 = self.nam;
                                                        var $1704 = self.ini;
                                                        var $1705 = self.idx;
                                                        var $1706 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1692, $1702), $1703, $1704, $1705, $1706);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1708 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1710 = self.err;
                                                                        var self = $1708;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1712 = self.value;
                                                                                var $1713 = Parser$Reply$error$(Parser$Error$combine$($1712, $1710));
                                                                                var $1711 = $1713;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1714 = Parser$Reply$error$($1710);
                                                                                var $1711 = $1714;
                                                                                break;
                                                                        };
                                                                        var $1709 = $1711;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1715 = self.pst;
                                                                        var self = $1715;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1717 = self.err;
                                                                                var $1718 = self.nam;
                                                                                var $1719 = self.ini;
                                                                                var $1720 = self.idx;
                                                                                var $1721 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1708, $1717), $1718, $1719, $1720, $1721);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1723 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1725 = self.err;
                                                                                                var self = $1723;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1727 = self.value;
                                                                                                        var $1728 = Parser$Reply$error$(Parser$Error$combine$($1727, $1725));
                                                                                                        var $1726 = $1728;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1729 = Parser$Reply$error$($1725);
                                                                                                        var $1726 = $1729;
                                                                                                        break;
                                                                                                };
                                                                                                var $1724 = $1726;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1730 = self.pst;
                                                                                                var $1731 = self.val;
                                                                                                var self = $1730;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1733 = self.err;
                                                                                                        var $1734 = self.nam;
                                                                                                        var $1735 = self.ini;
                                                                                                        var $1736 = self.idx;
                                                                                                        var $1737 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1723, $1733), $1734, $1735, $1736, $1737);
                                                                                                        var _empty_list$58 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                                                                                                        var _list_cons$59 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                                                                                                        var _empty_map$60 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1739 = self.err;
                                                                                                                var _reply$66 = Kind$Parser$text$(":", _reply$pst$57);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1741 = self.err;
                                                                                                                        var self = $1739;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1743 = self.value;
                                                                                                                                var $1744 = Parser$Reply$error$(Parser$Error$combine$($1743, $1741));
                                                                                                                                var $1742 = $1744;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1745 = Parser$Reply$error$($1741);
                                                                                                                                var $1742 = $1745;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1740 = $1742;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1746 = self.pst;
                                                                                                                        var self = $1746;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1748 = self.err;
                                                                                                                                var $1749 = self.nam;
                                                                                                                                var $1750 = self.ini;
                                                                                                                                var $1751 = self.idx;
                                                                                                                                var $1752 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1739, $1748), $1749, $1750, $1751, $1752);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1754 = self.err;
                                                                                                                                        var _reply$80 = Kind$Parser$term(_reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1756 = self.err;
                                                                                                                                                var self = $1754;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1758 = self.value;
                                                                                                                                                        var $1759 = Parser$Reply$error$(Parser$Error$combine$($1758, $1756));
                                                                                                                                                        var $1757 = $1759;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1760 = Parser$Reply$error$($1756);
                                                                                                                                                        var $1757 = $1760;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1755 = $1757;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1761 = self.pst;
                                                                                                                                                var $1762 = self.val;
                                                                                                                                                var self = $1761;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1764 = self.err;
                                                                                                                                                        var $1765 = self.nam;
                                                                                                                                                        var $1766 = self.ini;
                                                                                                                                                        var $1767 = self.idx;
                                                                                                                                                        var $1768 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1754, $1764), $1765, $1766, $1767, $1768);
                                                                                                                                                        var _term$89 = Kind$Term$ref$("List.fold");
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, $1731);
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$93 = Kind$Term$app$(_term$92, _empty_list$58);
                                                                                                                                                        var _lamb$94 = Kind$Term$lam$($1700, (_i$94 => {
                                                                                                                                                            var $1770 = Kind$Term$lam$("placeholder", (_b$95 => {
                                                                                                                                                                var $1771 = Kind$Term$app$(Kind$Term$app$(_list_cons$59, $1762), _b$95);
                                                                                                                                                                return $1771;
                                                                                                                                                            }));
                                                                                                                                                            return $1770;
                                                                                                                                                        }));
                                                                                                                                                        var _term$95 = Kind$Term$app$(_term$93, _lamb$94);
                                                                                                                                                        var _display_content$96 = Kind$Term$app$(Kind$Term$ref$("Map.set"), Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _display_content$97 = Kind$Term$app$(_display_content$96, Kind$Term$str$("display"));
                                                                                                                                                        var _display_content$98 = Kind$Term$app$(_display_content$97, Kind$Term$str$("contents"));
                                                                                                                                                        var _display_content$99 = Kind$Term$app$(_display_content$98, _empty_map$60);
                                                                                                                                                        var _root$100 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _root$101 = Kind$Term$app$(_root$100, Kind$Term$str$("div"));
                                                                                                                                                        var _root$102 = Kind$Term$app$(_root$101, _empty_map$60);
                                                                                                                                                        var _root$103 = Kind$Term$app$(_root$102, _display_content$99);
                                                                                                                                                        var _root$104 = Kind$Term$app$(_root$103, _term$95);
                                                                                                                                                        var $1769 = Parser$Reply$value$(_reply$pst$88, _root$104);
                                                                                                                                                        var $1763 = $1769;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1755 = $1763;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1753 = $1755;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1747 = $1753;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1740 = $1747;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1738 = $1740;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1732 = $1738;
                                                                                                        break;
                                                                                                };
                                                                                                var $1724 = $1732;
                                                                                                break;
                                                                                        };
                                                                                        var $1722 = $1724;
                                                                                        break;
                                                                                };
                                                                                var $1716 = $1722;
                                                                                break;
                                                                        };
                                                                        var $1709 = $1716;
                                                                        break;
                                                                };
                                                                var $1707 = $1709;
                                                                break;
                                                        };
                                                        var $1701 = $1707;
                                                        break;
                                                };
                                                var $1693 = $1701;
                                                break;
                                        };
                                        var $1691 = $1693;
                                        break;
                                };
                                var $1685 = $1691;
                                break;
                        };
                        var $1678 = $1685;
                        break;
                };
                var $1676 = $1678;
                break;
        };
        return $1676;
    }));
    const Kind$Parser$dom$dynamic = Kind$Parser$block("DOM_dynamic")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1773 = self.err;
                var _reply$7 = Kind$Parser$text$("{", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1775 = self.err;
                        var self = $1773;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1777 = self.value;
                                var $1778 = Parser$Reply$error$(Parser$Error$combine$($1777, $1775));
                                var $1776 = $1778;
                                break;
                            case 'Maybe.none':
                                var $1779 = Parser$Reply$error$($1775);
                                var $1776 = $1779;
                                break;
                        };
                        var $1774 = $1776;
                        break;
                    case 'Parser.Reply.value':
                        var $1780 = self.pst;
                        var self = $1780;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1782 = self.err;
                                var $1783 = self.nam;
                                var $1784 = self.ini;
                                var $1785 = self.idx;
                                var $1786 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1773, $1782), $1783, $1784, $1785, $1786);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1788 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Kind$Parser$term, List$nil), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1790 = self.err;
                                                var self = $1788;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1792 = self.value;
                                                        var $1793 = Parser$Reply$error$(Parser$Error$combine$($1792, $1790));
                                                        var $1791 = $1793;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1794 = Parser$Reply$error$($1790);
                                                        var $1791 = $1794;
                                                        break;
                                                };
                                                var $1789 = $1791;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1795 = self.pst;
                                                var $1796 = self.val;
                                                var self = $1795;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1798 = self.err;
                                                        var $1799 = self.nam;
                                                        var $1800 = self.ini;
                                                        var $1801 = self.idx;
                                                        var $1802 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1788, $1798), $1799, $1800, $1801, $1802);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1804 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("}", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1806 = self.err;
                                                                        var self = $1804;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1808 = self.value;
                                                                                var $1809 = Parser$Reply$error$(Parser$Error$combine$($1808, $1806));
                                                                                var $1807 = $1809;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1810 = Parser$Reply$error$($1806);
                                                                                var $1807 = $1810;
                                                                                break;
                                                                        };
                                                                        var $1805 = $1807;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1811 = self.pst;
                                                                        var self = $1811;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1813 = self.err;
                                                                                var $1814 = self.nam;
                                                                                var $1815 = self.ini;
                                                                                var $1816 = self.idx;
                                                                                var $1817 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1804, $1813), $1814, $1815, $1816, $1817);
                                                                                var $1818 = Parser$Reply$value$(_reply$pst$43, $1796);
                                                                                var $1812 = $1818;
                                                                                break;
                                                                        };
                                                                        var $1805 = $1812;
                                                                        break;
                                                                };
                                                                var $1803 = $1805;
                                                                break;
                                                        };
                                                        var $1797 = $1803;
                                                        break;
                                                };
                                                var $1789 = $1797;
                                                break;
                                        };
                                        var $1787 = $1789;
                                        break;
                                };
                                var $1781 = $1787;
                                break;
                        };
                        var $1774 = $1781;
                        break;
                };
                var $1772 = $1774;
                break;
        };
        return $1772;
    }));
    const Kind$Parser$dom$text = Kind$Parser$block("DOM_text")((() => {
        var _term$1 = Kind$Term$ref$("DOM.text");
        var $1819 = (_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1821 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1823 = self.err;
                            var self = $1821;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1825 = self.value;
                                    var $1826 = Parser$Reply$error$(Parser$Error$combine$($1825, $1823));
                                    var $1824 = $1826;
                                    break;
                                case 'Maybe.none':
                                    var $1827 = Parser$Reply$error$($1823);
                                    var $1824 = $1827;
                                    break;
                            };
                            var $1822 = $1824;
                            break;
                        case 'Parser.Reply.value':
                            var $1828 = self.pst;
                            var $1829 = self.val;
                            var self = $1828;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1831 = self.err;
                                    var $1832 = self.nam;
                                    var $1833 = self.ini;
                                    var $1834 = self.idx;
                                    var $1835 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1821, $1831), $1832, $1833, $1834, $1835);
                                    var _term$17 = Kind$Term$app$(_term$1, $1829);
                                    var $1836 = Parser$Reply$value$(_reply$pst$16, _term$17);
                                    var $1830 = $1836;
                                    break;
                            };
                            var $1822 = $1830;
                            break;
                    };
                    var $1820 = $1822;
                    break;
            };
            return $1820;
        });
        return $1819;
    })());
    const Kind$Parser$dom$leaf = Kind$Parser$block("DOM_leaf")(Parser$choice(List$cons$(Kind$Parser$dom$for, List$cons$(Kind$Parser$dom$dynamic, List$cons$(Kind$Parser$dom$text, List$nil)))));

    function Kind$Parser$dom$transform_children$(_a$1) {
        var self = _a$1;
        switch (self._) {
            case 'List.cons':
                var $1838 = self.head;
                var $1839 = self.tail;
                var _term$4 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                var _term$5 = Kind$Term$app$(_term$4, $1838);
                var _term$6 = Kind$Term$app$(_term$5, Kind$Parser$dom$transform_children$($1839));
                var $1840 = _term$6;
                var $1837 = $1840;
                break;
            case 'List.nil':
                var $1841 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                var $1837 = $1841;
                break;
        };
        return $1837;
    };
    const Kind$Parser$dom$transform_children = x0 => Kind$Parser$dom$transform_children$(x0);
    const Kind$Parser$dom$node = Kind$Parser$block("DOM.node")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1843 = self.err;
                var _reply$7 = Kind$Parser$text$("<", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1845 = self.err;
                        var self = $1843;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1847 = self.value;
                                var $1848 = Parser$Reply$error$(Parser$Error$combine$($1847, $1845));
                                var $1846 = $1848;
                                break;
                            case 'Maybe.none':
                                var $1849 = Parser$Reply$error$($1845);
                                var $1846 = $1849;
                                break;
                        };
                        var $1844 = $1846;
                        break;
                    case 'Parser.Reply.value':
                        var $1850 = self.pst;
                        var self = $1850;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1852 = self.err;
                                var $1853 = self.nam;
                                var $1854 = self.ini;
                                var $1855 = self.idx;
                                var $1856 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1843, $1852), $1853, $1854, $1855, $1856);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1858 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1860 = self.err;
                                                var self = $1858;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1862 = self.value;
                                                        var $1863 = Parser$Reply$error$(Parser$Error$combine$($1862, $1860));
                                                        var $1861 = $1863;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1864 = Parser$Reply$error$($1860);
                                                        var $1861 = $1864;
                                                        break;
                                                };
                                                var $1859 = $1861;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1865 = self.pst;
                                                var $1866 = self.val;
                                                var self = $1865;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1868 = self.err;
                                                        var $1869 = self.nam;
                                                        var $1870 = self.ini;
                                                        var $1871 = self.idx;
                                                        var $1872 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1858, $1868), $1869, $1870, $1871, $1872);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1874 = self.err;
                                                                var _reply$35 = Kind$Parser$spaces(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1876 = self.err;
                                                                        var self = $1874;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1878 = self.value;
                                                                                var $1879 = Parser$Reply$error$(Parser$Error$combine$($1878, $1876));
                                                                                var $1877 = $1879;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1880 = Parser$Reply$error$($1876);
                                                                                var $1877 = $1880;
                                                                                break;
                                                                        };
                                                                        var $1875 = $1877;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1881 = self.pst;
                                                                        var self = $1881;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1883 = self.err;
                                                                                var $1884 = self.nam;
                                                                                var $1885 = self.ini;
                                                                                var $1886 = self.idx;
                                                                                var $1887 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1874, $1883), $1884, $1885, $1886, $1887);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1889 = self.err;
                                                                                        var _reply$49 = Parser$until$(Kind$Parser$text(">"), Kind$Parser$dom$prop)(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1891 = self.err;
                                                                                                var self = $1889;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1893 = self.value;
                                                                                                        var $1894 = Parser$Reply$error$(Parser$Error$combine$($1893, $1891));
                                                                                                        var $1892 = $1894;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1895 = Parser$Reply$error$($1891);
                                                                                                        var $1892 = $1895;
                                                                                                        break;
                                                                                                };
                                                                                                var $1890 = $1892;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1896 = self.pst;
                                                                                                var $1897 = self.val;
                                                                                                var self = $1896;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1899 = self.err;
                                                                                                        var $1900 = self.nam;
                                                                                                        var $1901 = self.ini;
                                                                                                        var $1902 = self.idx;
                                                                                                        var $1903 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1889, $1899), $1900, $1901, $1902, $1903);
                                                                                                        var _props$58 = Kind$Parser$dom$gen_prop$($1897);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1905 = self.err;
                                                                                                                var _reply$64 = Parser$many$(Parser$choice(List$cons$(Kind$Parser$dom$node, List$cons$(Kind$Parser$dom$leaf, List$nil))))(_reply$pst$57);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1907 = self.err;
                                                                                                                        var self = $1905;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1909 = self.value;
                                                                                                                                var $1910 = Parser$Reply$error$(Parser$Error$combine$($1909, $1907));
                                                                                                                                var $1908 = $1910;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1911 = Parser$Reply$error$($1907);
                                                                                                                                var $1908 = $1911;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1906 = $1908;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1912 = self.pst;
                                                                                                                        var $1913 = self.val;
                                                                                                                        var self = $1912;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1915 = self.err;
                                                                                                                                var $1916 = self.nam;
                                                                                                                                var $1917 = self.ini;
                                                                                                                                var $1918 = self.idx;
                                                                                                                                var $1919 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1905, $1915), $1916, $1917, $1918, $1919);
                                                                                                                                var _children$73 = Kind$Parser$dom$transform_children$($1913);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1921 = self.err;
                                                                                                                                        var _reply$79 = Kind$Parser$text$(("</" + ($1866 + ">")), _reply$pst$72);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1923 = self.err;
                                                                                                                                                var self = $1921;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1925 = self.value;
                                                                                                                                                        var $1926 = Parser$Reply$error$(Parser$Error$combine$($1925, $1923));
                                                                                                                                                        var $1924 = $1926;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1927 = Parser$Reply$error$($1923);
                                                                                                                                                        var $1924 = $1927;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1922 = $1924;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1928 = self.pst;
                                                                                                                                                var self = $1928;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1930 = self.err;
                                                                                                                                                        var $1931 = self.nam;
                                                                                                                                                        var $1932 = self.ini;
                                                                                                                                                        var $1933 = self.idx;
                                                                                                                                                        var $1934 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($1921, $1930), $1931, $1932, $1933, $1934);
                                                                                                                                                        var _term$88 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, Kind$Term$str$($1866));
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1936 = self.fst;
                                                                                                                                                                    var $1937 = $1936;
                                                                                                                                                                    return $1937;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1938 = self.snd;
                                                                                                                                                                    var $1939 = $1938;
                                                                                                                                                                    return $1939;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, _children$73);
                                                                                                                                                        var $1935 = Parser$Reply$value$(_reply$pst$87, _term$92);
                                                                                                                                                        var $1929 = $1935;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1922 = $1929;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1920 = $1922;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1914 = $1920;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1906 = $1914;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1904 = $1906;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1898 = $1904;
                                                                                                        break;
                                                                                                };
                                                                                                var $1890 = $1898;
                                                                                                break;
                                                                                        };
                                                                                        var $1888 = $1890;
                                                                                        break;
                                                                                };
                                                                                var $1882 = $1888;
                                                                                break;
                                                                        };
                                                                        var $1875 = $1882;
                                                                        break;
                                                                };
                                                                var $1873 = $1875;
                                                                break;
                                                        };
                                                        var $1867 = $1873;
                                                        break;
                                                };
                                                var $1859 = $1867;
                                                break;
                                        };
                                        var $1857 = $1859;
                                        break;
                                };
                                var $1851 = $1857;
                                break;
                        };
                        var $1844 = $1851;
                        break;
                };
                var $1842 = $1844;
                break;
        };
        return $1842;
    }));
    const Kind$Parser$dom = Kind$Parser$dom$node;
    const Kind$Parser$forall = Kind$Parser$block("forall")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1941 = self.err;
                var _reply$7 = Kind$Parser$name$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1943 = self.err;
                        var self = $1941;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1945 = self.value;
                                var $1946 = Parser$Reply$error$(Parser$Error$combine$($1945, $1943));
                                var $1944 = $1946;
                                break;
                            case 'Maybe.none':
                                var $1947 = Parser$Reply$error$($1943);
                                var $1944 = $1947;
                                break;
                        };
                        var $1942 = $1944;
                        break;
                    case 'Parser.Reply.value':
                        var $1948 = self.pst;
                        var $1949 = self.val;
                        var self = $1948;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1951 = self.err;
                                var $1952 = self.nam;
                                var $1953 = self.ini;
                                var $1954 = self.idx;
                                var $1955 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1941, $1951), $1952, $1953, $1954, $1955);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1957 = self.err;
                                        var _reply$21 = Kind$Parser$binder$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1959 = self.err;
                                                var self = $1957;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1961 = self.value;
                                                        var $1962 = Parser$Reply$error$(Parser$Error$combine$($1961, $1959));
                                                        var $1960 = $1962;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1963 = Parser$Reply$error$($1959);
                                                        var $1960 = $1963;
                                                        break;
                                                };
                                                var $1958 = $1960;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1964 = self.pst;
                                                var $1965 = self.val;
                                                var self = $1964;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1967 = self.err;
                                                        var $1968 = self.nam;
                                                        var $1969 = self.ini;
                                                        var $1970 = self.idx;
                                                        var $1971 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1957, $1967), $1968, $1969, $1970, $1971);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1973 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$text("->"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1975 = self.err;
                                                                        var self = $1973;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1977 = self.value;
                                                                                var $1978 = Parser$Reply$error$(Parser$Error$combine$($1977, $1975));
                                                                                var $1976 = $1978;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1979 = Parser$Reply$error$($1975);
                                                                                var $1976 = $1979;
                                                                                break;
                                                                        };
                                                                        var $1974 = $1976;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1980 = self.pst;
                                                                        var self = $1980;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1982 = self.err;
                                                                                var $1983 = self.nam;
                                                                                var $1984 = self.ini;
                                                                                var $1985 = self.idx;
                                                                                var $1986 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1973, $1982), $1983, $1984, $1985, $1986);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1988 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1990 = self.err;
                                                                                                var self = $1988;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1992 = self.value;
                                                                                                        var $1993 = Parser$Reply$error$(Parser$Error$combine$($1992, $1990));
                                                                                                        var $1991 = $1993;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1994 = Parser$Reply$error$($1990);
                                                                                                        var $1991 = $1994;
                                                                                                        break;
                                                                                                };
                                                                                                var $1989 = $1991;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1995 = self.pst;
                                                                                                var $1996 = self.val;
                                                                                                var self = $1995;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1998 = self.err;
                                                                                                        var $1999 = self.nam;
                                                                                                        var $2000 = self.ini;
                                                                                                        var $2001 = self.idx;
                                                                                                        var $2002 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1988, $1998), $1999, $2000, $2001, $2002);
                                                                                                        var _term$58 = List$fold$($1965, $1996, (_x$58 => _t$59 => {
                                                                                                            var self = _x$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Binder.new':
                                                                                                                    var $2005 = self.eras;
                                                                                                                    var $2006 = self.name;
                                                                                                                    var $2007 = self.term;
                                                                                                                    var $2008 = Kind$Term$all$($2005, "", $2006, $2007, (_s$63 => _x$64 => {
                                                                                                                        var $2009 = _t$59;
                                                                                                                        return $2009;
                                                                                                                    }));
                                                                                                                    var $2004 = $2008;
                                                                                                                    break;
                                                                                                            };
                                                                                                            return $2004;
                                                                                                        }));
                                                                                                        var $2003 = Parser$Reply$value$(_reply$pst$57, (() => {
                                                                                                            var self = _term$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Term.all':
                                                                                                                    var $2010 = self.eras;
                                                                                                                    var $2011 = self.name;
                                                                                                                    var $2012 = self.xtyp;
                                                                                                                    var $2013 = self.body;
                                                                                                                    var $2014 = Kind$Term$all$($2010, $1949, $2011, $2012, $2013);
                                                                                                                    return $2014;
                                                                                                                case 'Kind.Term.var':
                                                                                                                case 'Kind.Term.ref':
                                                                                                                case 'Kind.Term.typ':
                                                                                                                case 'Kind.Term.lam':
                                                                                                                case 'Kind.Term.app':
                                                                                                                case 'Kind.Term.let':
                                                                                                                case 'Kind.Term.def':
                                                                                                                case 'Kind.Term.ann':
                                                                                                                case 'Kind.Term.gol':
                                                                                                                case 'Kind.Term.hol':
                                                                                                                case 'Kind.Term.nat':
                                                                                                                case 'Kind.Term.chr':
                                                                                                                case 'Kind.Term.str':
                                                                                                                case 'Kind.Term.num':
                                                                                                                case 'Kind.Term.cse':
                                                                                                                case 'Kind.Term.new':
                                                                                                                case 'Kind.Term.get':
                                                                                                                case 'Kind.Term.set':
                                                                                                                case 'Kind.Term.ope':
                                                                                                                case 'Kind.Term.ori':
                                                                                                                    var $2015 = _term$58;
                                                                                                                    return $2015;
                                                                                                            };
                                                                                                        })());
                                                                                                        var $1997 = $2003;
                                                                                                        break;
                                                                                                };
                                                                                                var $1989 = $1997;
                                                                                                break;
                                                                                        };
                                                                                        var $1987 = $1989;
                                                                                        break;
                                                                                };
                                                                                var $1981 = $1987;
                                                                                break;
                                                                        };
                                                                        var $1974 = $1981;
                                                                        break;
                                                                };
                                                                var $1972 = $1974;
                                                                break;
                                                        };
                                                        var $1966 = $1972;
                                                        break;
                                                };
                                                var $1958 = $1966;
                                                break;
                                        };
                                        var $1956 = $1958;
                                        break;
                                };
                                var $1950 = $1956;
                                break;
                        };
                        var $1942 = $1950;
                        break;
                };
                var $1940 = $1942;
                break;
        };
        return $1940;
    }));

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $2017 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2019 = self.err;
                        var self = $2017;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2021 = self.value;
                                var $2022 = Parser$Reply$error$(Parser$Error$combine$($2021, $2019));
                                var $2020 = $2022;
                                break;
                            case 'Maybe.none':
                                var $2023 = Parser$Reply$error$($2019);
                                var $2020 = $2023;
                                break;
                        };
                        var $2018 = $2020;
                        break;
                    case 'Parser.Reply.value':
                        var $2024 = self.pst;
                        var self = $2024;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2026 = self.err;
                                var $2027 = self.nam;
                                var $2028 = self.ini;
                                var $2029 = self.idx;
                                var $2030 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2017, $2026), $2027, $2028, $2029, $2030);
                                var $2031 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $2025 = $2031;
                                break;
                        };
                        var $2018 = $2025;
                        break;
                };
                var $2016 = $2018;
                break;
        };
        return $2016;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Kind$Parser$items$(_ini$2, _parser$3, _end$4) {
        var $2032 = Parser$wrap(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $2034 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2036 = self.err;
                            var self = $2034;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2038 = self.value;
                                    var $2039 = Parser$Reply$error$(Parser$Error$combine$($2038, $2036));
                                    var $2037 = $2039;
                                    break;
                                case 'Maybe.none':
                                    var $2040 = Parser$Reply$error$($2036);
                                    var $2037 = $2040;
                                    break;
                            };
                            var $2035 = $2037;
                            break;
                        case 'Parser.Reply.value':
                            var $2041 = self.pst;
                            var self = $2041;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2043 = self.err;
                                    var $2044 = self.nam;
                                    var $2045 = self.ini;
                                    var $2046 = self.idx;
                                    var $2047 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($2034, $2043), $2044, $2045, $2046, $2047);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2049 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2051 = self.err;
                                                    var self = $2049;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2053 = self.value;
                                                            var $2054 = Parser$Reply$error$(Parser$Error$combine$($2053, $2051));
                                                            var $2052 = $2054;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2055 = Parser$Reply$error$($2051);
                                                            var $2052 = $2055;
                                                            break;
                                                    };
                                                    var $2050 = $2052;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2056 = self.pst;
                                                    var $2057 = self.val;
                                                    var self = $2056;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2059 = self.err;
                                                            var $2060 = self.nam;
                                                            var $2061 = self.ini;
                                                            var $2062 = self.idx;
                                                            var $2063 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($2049, $2059), $2060, $2061, $2062, $2063);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2065 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2067 = self.err;
                                                                            var self = $2065;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2069 = self.value;
                                                                                    var $2070 = Parser$Reply$error$(Parser$Error$combine$($2069, $2067));
                                                                                    var $2068 = $2070;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2071 = Parser$Reply$error$($2067);
                                                                                    var $2068 = $2071;
                                                                                    break;
                                                                            };
                                                                            var $2066 = $2068;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2072 = self.pst;
                                                                            var self = $2072;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2074 = self.err;
                                                                                    var $2075 = self.nam;
                                                                                    var $2076 = self.ini;
                                                                                    var $2077 = self.idx;
                                                                                    var $2078 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($2065, $2074), $2075, $2076, $2077, $2078);
                                                                                    var $2079 = Parser$Reply$value$(_reply$pst$47, $2057);
                                                                                    var $2073 = $2079;
                                                                                    break;
                                                                            };
                                                                            var $2066 = $2073;
                                                                            break;
                                                                    };
                                                                    var $2064 = $2066;
                                                                    break;
                                                            };
                                                            var $2058 = $2064;
                                                            break;
                                                    };
                                                    var $2050 = $2058;
                                                    break;
                                            };
                                            var $2048 = $2050;
                                            break;
                                    };
                                    var $2042 = $2048;
                                    break;
                            };
                            var $2035 = $2042;
                            break;
                    };
                    var $2033 = $2035;
                    break;
            };
            return $2033;
        }))(Kind$Parser$text(_end$4));
        return $2032;
    };
    const Kind$Parser$items = x0 => x1 => x2 => Kind$Parser$items$(x0, x1, x2);

    function Kind$Parser$lambda$make$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $2081 = self.head;
                var $2082 = self.tail;
                var $2083 = Kind$Term$lam$($2081, (_x$5 => {
                    var $2084 = Kind$Parser$lambda$make$($2082, _body$2);
                    return $2084;
                }));
                var $2080 = $2083;
                break;
            case 'List.nil':
                var $2085 = _body$2;
                var $2080 = $2085;
                break;
        };
        return $2080;
    };
    const Kind$Parser$lambda$make = x0 => x1 => Kind$Parser$lambda$make$(x0, x1);

    function Kind$Parser$lambda$make$start$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.nil':
                var $2087 = Kind$Term$lam$("", (_x$3 => {
                    var $2088 = _body$2;
                    return $2088;
                }));
                var $2086 = $2087;
                break;
            case 'List.cons':
                var $2089 = Kind$Parser$lambda$make$(_names$1, _body$2);
                var $2086 = $2089;
                break;
        };
        return $2086;
    };
    const Kind$Parser$lambda$make$start = x0 => x1 => Kind$Parser$lambda$make$start$(x0, x1);
    const Kind$Parser$lambda = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2091 = self.err;
                var _reply$7 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2093 = self.err;
                        var self = $2091;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2095 = self.value;
                                var $2096 = Parser$Reply$error$(Parser$Error$combine$($2095, $2093));
                                var $2094 = $2096;
                                break;
                            case 'Maybe.none':
                                var $2097 = Parser$Reply$error$($2093);
                                var $2094 = $2097;
                                break;
                        };
                        var $2092 = $2094;
                        break;
                    case 'Parser.Reply.value':
                        var $2098 = self.pst;
                        var $2099 = self.val;
                        var self = $2098;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2101 = self.err;
                                var $2102 = self.nam;
                                var $2103 = self.ini;
                                var $2104 = self.idx;
                                var $2105 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2091, $2101), $2102, $2103, $2104, $2105);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2107 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2109 = self.err;
                                                var self = $2107;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2111 = self.value;
                                                        var $2112 = Parser$Reply$error$(Parser$Error$combine$($2111, $2109));
                                                        var $2110 = $2112;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2113 = Parser$Reply$error$($2109);
                                                        var $2110 = $2113;
                                                        break;
                                                };
                                                var $2108 = $2110;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2114 = self.pst;
                                                var $2115 = self.val;
                                                var self = $2114;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2117 = self.err;
                                                        var $2118 = self.nam;
                                                        var $2119 = self.ini;
                                                        var $2120 = self.idx;
                                                        var $2121 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2107, $2117), $2118, $2119, $2120, $2121);
                                                        var $2122 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2099, $2115));
                                                        var $2116 = $2122;
                                                        break;
                                                };
                                                var $2108 = $2116;
                                                break;
                                        };
                                        var $2106 = $2108;
                                        break;
                                };
                                var $2100 = $2106;
                                break;
                        };
                        var $2092 = $2100;
                        break;
                };
                var $2090 = $2092;
                break;
        };
        return $2090;
    }));
    const Kind$Parser$lambda$erased = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2124 = self.err;
                var _reply$7 = Kind$Parser$items$("<", Kind$Parser$name1, ">")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2126 = self.err;
                        var self = $2124;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2128 = self.value;
                                var $2129 = Parser$Reply$error$(Parser$Error$combine$($2128, $2126));
                                var $2127 = $2129;
                                break;
                            case 'Maybe.none':
                                var $2130 = Parser$Reply$error$($2126);
                                var $2127 = $2130;
                                break;
                        };
                        var $2125 = $2127;
                        break;
                    case 'Parser.Reply.value':
                        var $2131 = self.pst;
                        var $2132 = self.val;
                        var self = $2131;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2134 = self.err;
                                var $2135 = self.nam;
                                var $2136 = self.ini;
                                var $2137 = self.idx;
                                var $2138 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2124, $2134), $2135, $2136, $2137, $2138);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2140 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2142 = self.err;
                                                var self = $2140;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2144 = self.value;
                                                        var $2145 = Parser$Reply$error$(Parser$Error$combine$($2144, $2142));
                                                        var $2143 = $2145;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2146 = Parser$Reply$error$($2142);
                                                        var $2143 = $2146;
                                                        break;
                                                };
                                                var $2141 = $2143;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2147 = self.pst;
                                                var $2148 = self.val;
                                                var self = $2147;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2150 = self.err;
                                                        var $2151 = self.nam;
                                                        var $2152 = self.ini;
                                                        var $2153 = self.idx;
                                                        var $2154 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2140, $2150), $2151, $2152, $2153, $2154);
                                                        var $2155 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2132, $2148));
                                                        var $2149 = $2155;
                                                        break;
                                                };
                                                var $2141 = $2149;
                                                break;
                                        };
                                        var $2139 = $2141;
                                        break;
                                };
                                var $2133 = $2139;
                                break;
                        };
                        var $2125 = $2133;
                        break;
                };
                var $2123 = $2125;
                break;
        };
        return $2123;
    }));
    const Kind$Parser$parenthesis = Kind$Parser$block("parenthesis")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2157 = self.err;
                var _reply$7 = Kind$Parser$text$("(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2159 = self.err;
                        var self = $2157;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2161 = self.value;
                                var $2162 = Parser$Reply$error$(Parser$Error$combine$($2161, $2159));
                                var $2160 = $2162;
                                break;
                            case 'Maybe.none':
                                var $2163 = Parser$Reply$error$($2159);
                                var $2160 = $2163;
                                break;
                        };
                        var $2158 = $2160;
                        break;
                    case 'Parser.Reply.value':
                        var $2164 = self.pst;
                        var self = $2164;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2166 = self.err;
                                var $2167 = self.nam;
                                var $2168 = self.ini;
                                var $2169 = self.idx;
                                var $2170 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2157, $2166), $2167, $2168, $2169, $2170);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2172 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2174 = self.err;
                                                var self = $2172;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2176 = self.value;
                                                        var $2177 = Parser$Reply$error$(Parser$Error$combine$($2176, $2174));
                                                        var $2175 = $2177;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2178 = Parser$Reply$error$($2174);
                                                        var $2175 = $2178;
                                                        break;
                                                };
                                                var $2173 = $2175;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2179 = self.pst;
                                                var $2180 = self.val;
                                                var self = $2179;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2182 = self.err;
                                                        var $2183 = self.nam;
                                                        var $2184 = self.ini;
                                                        var $2185 = self.idx;
                                                        var $2186 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2172, $2182), $2183, $2184, $2185, $2186);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2188 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2190 = self.err;
                                                                        var self = $2188;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2192 = self.value;
                                                                                var $2193 = Parser$Reply$error$(Parser$Error$combine$($2192, $2190));
                                                                                var $2191 = $2193;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2194 = Parser$Reply$error$($2190);
                                                                                var $2191 = $2194;
                                                                                break;
                                                                        };
                                                                        var $2189 = $2191;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2195 = self.pst;
                                                                        var self = $2195;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2197 = self.err;
                                                                                var $2198 = self.nam;
                                                                                var $2199 = self.ini;
                                                                                var $2200 = self.idx;
                                                                                var $2201 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2188, $2197), $2198, $2199, $2200, $2201);
                                                                                var $2202 = Parser$Reply$value$(_reply$pst$43, $2180);
                                                                                var $2196 = $2202;
                                                                                break;
                                                                        };
                                                                        var $2189 = $2196;
                                                                        break;
                                                                };
                                                                var $2187 = $2189;
                                                                break;
                                                        };
                                                        var $2181 = $2187;
                                                        break;
                                                };
                                                var $2173 = $2181;
                                                break;
                                        };
                                        var $2171 = $2173;
                                        break;
                                };
                                var $2165 = $2171;
                                break;
                        };
                        var $2158 = $2165;
                        break;
                };
                var $2156 = $2158;
                break;
        };
        return $2156;
    }));

    function Kind$Parser$letforrange$(_typename$1, _body$2) {
        var $2203 = Kind$Parser$block("let-for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2205 = self.err;
                    var _reply$9 = Kind$Parser$text$("let ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2207 = self.err;
                            var self = $2205;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2209 = self.value;
                                    var $2210 = Parser$Reply$error$(Parser$Error$combine$($2209, $2207));
                                    var $2208 = $2210;
                                    break;
                                case 'Maybe.none':
                                    var $2211 = Parser$Reply$error$($2207);
                                    var $2208 = $2211;
                                    break;
                            };
                            var $2206 = $2208;
                            break;
                        case 'Parser.Reply.value':
                            var $2212 = self.pst;
                            var self = $2212;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2214 = self.err;
                                    var $2215 = self.nam;
                                    var $2216 = self.ini;
                                    var $2217 = self.idx;
                                    var $2218 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2205, $2214), $2215, $2216, $2217, $2218);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2220 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2222 = self.err;
                                                    var self = $2220;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2224 = self.value;
                                                            var $2225 = Parser$Reply$error$(Parser$Error$combine$($2224, $2222));
                                                            var $2223 = $2225;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2226 = Parser$Reply$error$($2222);
                                                            var $2223 = $2226;
                                                            break;
                                                    };
                                                    var $2221 = $2223;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2227 = self.pst;
                                                    var $2228 = self.val;
                                                    var self = $2227;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2230 = self.err;
                                                            var $2231 = self.nam;
                                                            var $2232 = self.ini;
                                                            var $2233 = self.idx;
                                                            var $2234 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2220, $2230), $2231, $2232, $2233, $2234);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2236 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$("=", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2238 = self.err;
                                                                            var self = $2236;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2240 = self.value;
                                                                                    var $2241 = Parser$Reply$error$(Parser$Error$combine$($2240, $2238));
                                                                                    var $2239 = $2241;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2242 = Parser$Reply$error$($2238);
                                                                                    var $2239 = $2242;
                                                                                    break;
                                                                            };
                                                                            var $2237 = $2239;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2243 = self.pst;
                                                                            var self = $2243;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2245 = self.err;
                                                                                    var $2246 = self.nam;
                                                                                    var $2247 = self.ini;
                                                                                    var $2248 = self.idx;
                                                                                    var $2249 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2236, $2245), $2246, $2247, $2248, $2249);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2251 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$("for ", _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2253 = self.err;
                                                                                                    var self = $2251;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2255 = self.value;
                                                                                                            var $2256 = Parser$Reply$error$(Parser$Error$combine$($2255, $2253));
                                                                                                            var $2254 = $2256;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2257 = Parser$Reply$error$($2253);
                                                                                                            var $2254 = $2257;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2252 = $2254;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2258 = self.pst;
                                                                                                    var self = $2258;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2260 = self.err;
                                                                                                            var $2261 = self.nam;
                                                                                                            var $2262 = self.ini;
                                                                                                            var $2263 = self.idx;
                                                                                                            var $2264 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2251, $2260), $2261, $2262, $2263, $2264);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2266 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$name1$(_reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2268 = self.err;
                                                                                                                            var self = $2266;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2270 = self.value;
                                                                                                                                    var $2271 = Parser$Reply$error$(Parser$Error$combine$($2270, $2268));
                                                                                                                                    var $2269 = $2271;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2272 = Parser$Reply$error$($2268);
                                                                                                                                    var $2269 = $2272;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2267 = $2269;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2273 = self.pst;
                                                                                                                            var $2274 = self.val;
                                                                                                                            var self = $2273;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2276 = self.err;
                                                                                                                                    var $2277 = self.nam;
                                                                                                                                    var $2278 = self.ini;
                                                                                                                                    var $2279 = self.idx;
                                                                                                                                    var $2280 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2266, $2276), $2277, $2278, $2279, $2280);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2282 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$text$(":", _reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2284 = self.err;
                                                                                                                                                    var self = $2282;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2286 = self.value;
                                                                                                                                                            var $2287 = Parser$Reply$error$(Parser$Error$combine$($2286, $2284));
                                                                                                                                                            var $2285 = $2287;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2288 = Parser$Reply$error$($2284);
                                                                                                                                                            var $2285 = $2288;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2283 = $2285;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2289 = self.pst;
                                                                                                                                                    var self = $2289;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2291 = self.err;
                                                                                                                                                            var $2292 = self.nam;
                                                                                                                                                            var $2293 = self.ini;
                                                                                                                                                            var $2294 = self.idx;
                                                                                                                                                            var $2295 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2282, $2291), $2292, $2293, $2294, $2295);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2297 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$(_typename$1, _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2299 = self.err;
                                                                                                                                                                            var self = $2297;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2301 = self.value;
                                                                                                                                                                                    var $2302 = Parser$Reply$error$(Parser$Error$combine$($2301, $2299));
                                                                                                                                                                                    var $2300 = $2302;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2303 = Parser$Reply$error$($2299);
                                                                                                                                                                                    var $2300 = $2303;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2298 = $2300;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2304 = self.pst;
                                                                                                                                                                            var self = $2304;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2306 = self.err;
                                                                                                                                                                                    var $2307 = self.nam;
                                                                                                                                                                                    var $2308 = self.ini;
                                                                                                                                                                                    var $2309 = self.idx;
                                                                                                                                                                                    var $2310 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2297, $2306), $2307, $2308, $2309, $2310);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2312 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$text$("from", _reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2314 = self.err;
                                                                                                                                                                                                    var self = $2312;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2316 = self.value;
                                                                                                                                                                                                            var $2317 = Parser$Reply$error$(Parser$Error$combine$($2316, $2314));
                                                                                                                                                                                                            var $2315 = $2317;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2318 = Parser$Reply$error$($2314);
                                                                                                                                                                                                            var $2315 = $2318;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2313 = $2315;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2319 = self.pst;
                                                                                                                                                                                                    var self = $2319;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2321 = self.err;
                                                                                                                                                                                                            var $2322 = self.nam;
                                                                                                                                                                                                            var $2323 = self.ini;
                                                                                                                                                                                                            var $2324 = self.idx;
                                                                                                                                                                                                            var $2325 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2312, $2321), $2322, $2323, $2324, $2325);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2327 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$term(_reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2329 = self.err;
                                                                                                                                                                                                                            var self = $2327;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2331 = self.value;
                                                                                                                                                                                                                                    var $2332 = Parser$Reply$error$(Parser$Error$combine$($2331, $2329));
                                                                                                                                                                                                                                    var $2330 = $2332;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2333 = Parser$Reply$error$($2329);
                                                                                                                                                                                                                                    var $2330 = $2333;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2328 = $2330;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2334 = self.pst;
                                                                                                                                                                                                                            var $2335 = self.val;
                                                                                                                                                                                                                            var self = $2334;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2337 = self.err;
                                                                                                                                                                                                                                    var $2338 = self.nam;
                                                                                                                                                                                                                                    var $2339 = self.ini;
                                                                                                                                                                                                                                    var $2340 = self.idx;
                                                                                                                                                                                                                                    var $2341 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2327, $2337), $2338, $2339, $2340, $2341);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2343 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$text$("to", _reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2345 = self.err;
                                                                                                                                                                                                                                                    var self = $2343;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2347 = self.value;
                                                                                                                                                                                                                                                            var $2348 = Parser$Reply$error$(Parser$Error$combine$($2347, $2345));
                                                                                                                                                                                                                                                            var $2346 = $2348;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2349 = Parser$Reply$error$($2345);
                                                                                                                                                                                                                                                            var $2346 = $2349;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2344 = $2346;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2350 = self.pst;
                                                                                                                                                                                                                                                    var self = $2350;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2352 = self.err;
                                                                                                                                                                                                                                                            var $2353 = self.nam;
                                                                                                                                                                                                                                                            var $2354 = self.ini;
                                                                                                                                                                                                                                                            var $2355 = self.idx;
                                                                                                                                                                                                                                                            var $2356 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2343, $2352), $2353, $2354, $2355, $2356);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2358 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$term(_reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2360 = self.err;
                                                                                                                                                                                                                                                                            var self = $2358;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2362 = self.value;
                                                                                                                                                                                                                                                                                    var $2363 = Parser$Reply$error$(Parser$Error$combine$($2362, $2360));
                                                                                                                                                                                                                                                                                    var $2361 = $2363;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2364 = Parser$Reply$error$($2360);
                                                                                                                                                                                                                                                                                    var $2361 = $2364;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2359 = $2361;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2365 = self.pst;
                                                                                                                                                                                                                                                                            var $2366 = self.val;
                                                                                                                                                                                                                                                                            var self = $2365;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2368 = self.err;
                                                                                                                                                                                                                                                                                    var $2369 = self.nam;
                                                                                                                                                                                                                                                                                    var $2370 = self.ini;
                                                                                                                                                                                                                                                                                    var $2371 = self.idx;
                                                                                                                                                                                                                                                                                    var $2372 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2358, $2368), $2369, $2370, $2371, $2372);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2374 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$text$(":", _reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2376 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2374;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2378 = self.value;
                                                                                                                                                                                                                                                                                                            var $2379 = Parser$Reply$error$(Parser$Error$combine$($2378, $2376));
                                                                                                                                                                                                                                                                                                            var $2377 = $2379;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2380 = Parser$Reply$error$($2376);
                                                                                                                                                                                                                                                                                                            var $2377 = $2380;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2375 = $2377;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2381 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2381;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2383 = self.err;
                                                                                                                                                                                                                                                                                                            var $2384 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2385 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2386 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2387 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2374, $2383), $2384, $2385, $2386, $2387);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2389 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Kind$Parser$term(_reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2391 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2389;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2393 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2394 = Parser$Reply$error$(Parser$Error$combine$($2393, $2391));
                                                                                                                                                                                                                                                                                                                                    var $2392 = $2394;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2395 = Parser$Reply$error$($2391);
                                                                                                                                                                                                                                                                                                                                    var $2392 = $2395;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2390 = $2392;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2396 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2397 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2396;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2399 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2400 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2401 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2402 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2403 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2389, $2399), $2400, $2401, $2402, $2403);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2405 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2407 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2405;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2409 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2410 = Parser$Reply$error$(Parser$Error$combine$($2409, $2407));
                                                                                                                                                                                                                                                                                                                                                            var $2408 = $2410;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2411 = Parser$Reply$error$($2407);
                                                                                                                                                                                                                                                                                                                                                            var $2408 = $2411;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2406 = $2408;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2412 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var self = $2412;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2414 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2415 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2416 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2417 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2418 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2405, $2414), $2415, $2416, $2417, $2418);
                                                                                                                                                                                                                                                                                                                                                            var self = _reply$pst$199;
                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                    var $2420 = self.err;
                                                                                                                                                                                                                                                                                                                                                                    var _reply$205 = _body$2(Unit$new)(_reply$pst$199);
                                                                                                                                                                                                                                                                                                                                                                    var self = _reply$205;
                                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                                            var $2422 = self.err;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2420;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                                                    var $2424 = self.value;
                                                                                                                                                                                                                                                                                                                                                                                    var $2425 = Parser$Reply$error$(Parser$Error$combine$($2424, $2422));
                                                                                                                                                                                                                                                                                                                                                                                    var $2423 = $2425;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                                                    var $2426 = Parser$Reply$error$($2422);
                                                                                                                                                                                                                                                                                                                                                                                    var $2423 = $2426;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2421 = $2423;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                                            var $2427 = self.pst;
                                                                                                                                                                                                                                                                                                                                                                            var $2428 = self.val;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2427;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                                    var $2430 = self.err;
                                                                                                                                                                                                                                                                                                                                                                                    var $2431 = self.nam;
                                                                                                                                                                                                                                                                                                                                                                                    var $2432 = self.ini;
                                                                                                                                                                                                                                                                                                                                                                                    var $2433 = self.idx;
                                                                                                                                                                                                                                                                                                                                                                                    var $2434 = self.str;
                                                                                                                                                                                                                                                                                                                                                                                    var _reply$pst$213 = Parser$State$new$(Parser$Error$maybe_combine$($2420, $2430), $2431, $2432, $2433, $2434);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$214 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$215 = Kind$Term$app$(_term$214, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$216 = Kind$Term$app$(_term$215, Kind$Term$ref$($2228));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$217 = Kind$Term$app$(_term$216, $2335);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$218 = Kind$Term$app$(_term$217, $2366);
                                                                                                                                                                                                                                                                                                                                                                                    var _lamb$219 = Kind$Term$lam$($2274, (_e$219 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2436 = Kind$Term$lam$($2228, (_s$220 => {
                                                                                                                                                                                                                                                                                                                                                                                            var $2437 = $2397;
                                                                                                                                                                                                                                                                                                                                                                                            return $2437;
                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                        return $2436;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$220 = Kind$Term$app$(_term$218, _lamb$219);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$221 = Kind$Term$let$($2228, _term$220, (_x$221 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2438 = $2428;
                                                                                                                                                                                                                                                                                                                                                                                        return $2438;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var $2435 = Parser$Reply$value$(_reply$pst$213, _term$221);
                                                                                                                                                                                                                                                                                                                                                                                    var $2429 = $2435;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2421 = $2429;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                                    var $2419 = $2421;
                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                            var $2413 = $2419;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2406 = $2413;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2404 = $2406;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2398 = $2404;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2390 = $2398;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2388 = $2390;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2382 = $2388;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2375 = $2382;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2373 = $2375;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2367 = $2373;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2359 = $2367;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2357 = $2359;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2351 = $2357;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2344 = $2351;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2342 = $2344;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2336 = $2342;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2328 = $2336;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2326 = $2328;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2320 = $2326;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2313 = $2320;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2311 = $2313;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2305 = $2311;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2298 = $2305;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2296 = $2298;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2290 = $2296;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2283 = $2290;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2281 = $2283;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2275 = $2281;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2267 = $2275;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2265 = $2267;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2259 = $2265;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2252 = $2259;
                                                                                                    break;
                                                                                            };
                                                                                            var $2250 = $2252;
                                                                                            break;
                                                                                    };
                                                                                    var $2244 = $2250;
                                                                                    break;
                                                                            };
                                                                            var $2237 = $2244;
                                                                            break;
                                                                    };
                                                                    var $2235 = $2237;
                                                                    break;
                                                            };
                                                            var $2229 = $2235;
                                                            break;
                                                    };
                                                    var $2221 = $2229;
                                                    break;
                                            };
                                            var $2219 = $2221;
                                            break;
                                    };
                                    var $2213 = $2219;
                                    break;
                            };
                            var $2206 = $2213;
                            break;
                    };
                    var $2204 = $2206;
                    break;
            };
            return $2204;
        }));
        return $2203;
    };
    const Kind$Parser$letforrange = x0 => x1 => Kind$Parser$letforrange$(x0, x1);

    function Kind$Parser$letforrange$u32$(_body$1) {
        var $2439 = Kind$Parser$letforrange$("U32", _body$1);
        return $2439;
    };
    const Kind$Parser$letforrange$u32 = x0 => Kind$Parser$letforrange$u32$(x0);

    function Kind$Parser$letforrange$with$(_typename$1, _body$2) {
        var $2440 = Kind$Parser$block("for")((_pst$3 => {
            var self = _pst$3;
            switch (self._) {
                case 'Parser.State.new':
                    var $2442 = self.err;
                    var _reply$9 = Kind$Parser$text$("for ", _pst$3);
                    var self = _reply$9;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2444 = self.err;
                            var self = $2442;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2446 = self.value;
                                    var $2447 = Parser$Reply$error$(Parser$Error$combine$($2446, $2444));
                                    var $2445 = $2447;
                                    break;
                                case 'Maybe.none':
                                    var $2448 = Parser$Reply$error$($2444);
                                    var $2445 = $2448;
                                    break;
                            };
                            var $2443 = $2445;
                            break;
                        case 'Parser.Reply.value':
                            var $2449 = self.pst;
                            var self = $2449;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2451 = self.err;
                                    var $2452 = self.nam;
                                    var $2453 = self.ini;
                                    var $2454 = self.idx;
                                    var $2455 = self.str;
                                    var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($2442, $2451), $2452, $2453, $2454, $2455);
                                    var self = _reply$pst$17;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2457 = self.err;
                                            var _reply$23 = Kind$Parser$name1$(_reply$pst$17);
                                            var self = _reply$23;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2459 = self.err;
                                                    var self = $2457;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2461 = self.value;
                                                            var $2462 = Parser$Reply$error$(Parser$Error$combine$($2461, $2459));
                                                            var $2460 = $2462;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2463 = Parser$Reply$error$($2459);
                                                            var $2460 = $2463;
                                                            break;
                                                    };
                                                    var $2458 = $2460;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2464 = self.pst;
                                                    var $2465 = self.val;
                                                    var self = $2464;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2467 = self.err;
                                                            var $2468 = self.nam;
                                                            var $2469 = self.ini;
                                                            var $2470 = self.idx;
                                                            var $2471 = self.str;
                                                            var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($2457, $2467), $2468, $2469, $2470, $2471);
                                                            var self = _reply$pst$31;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2473 = self.err;
                                                                    var _reply$37 = Kind$Parser$text$(":", _reply$pst$31);
                                                                    var self = _reply$37;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2475 = self.err;
                                                                            var self = $2473;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2477 = self.value;
                                                                                    var $2478 = Parser$Reply$error$(Parser$Error$combine$($2477, $2475));
                                                                                    var $2476 = $2478;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2479 = Parser$Reply$error$($2475);
                                                                                    var $2476 = $2479;
                                                                                    break;
                                                                            };
                                                                            var $2474 = $2476;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2480 = self.pst;
                                                                            var self = $2480;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2482 = self.err;
                                                                                    var $2483 = self.nam;
                                                                                    var $2484 = self.ini;
                                                                                    var $2485 = self.idx;
                                                                                    var $2486 = self.str;
                                                                                    var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2473, $2482), $2483, $2484, $2485, $2486);
                                                                                    var self = _reply$pst$45;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2488 = self.err;
                                                                                            var _reply$51 = Kind$Parser$text$(_typename$1, _reply$pst$45);
                                                                                            var self = _reply$51;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2490 = self.err;
                                                                                                    var self = $2488;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2492 = self.value;
                                                                                                            var $2493 = Parser$Reply$error$(Parser$Error$combine$($2492, $2490));
                                                                                                            var $2491 = $2493;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2494 = Parser$Reply$error$($2490);
                                                                                                            var $2491 = $2494;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2489 = $2491;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2495 = self.pst;
                                                                                                    var self = $2495;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2497 = self.err;
                                                                                                            var $2498 = self.nam;
                                                                                                            var $2499 = self.ini;
                                                                                                            var $2500 = self.idx;
                                                                                                            var $2501 = self.str;
                                                                                                            var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2488, $2497), $2498, $2499, $2500, $2501);
                                                                                                            var self = _reply$pst$59;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2503 = self.err;
                                                                                                                    var _reply$65 = Kind$Parser$text$("from", _reply$pst$59);
                                                                                                                    var self = _reply$65;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2505 = self.err;
                                                                                                                            var self = $2503;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2507 = self.value;
                                                                                                                                    var $2508 = Parser$Reply$error$(Parser$Error$combine$($2507, $2505));
                                                                                                                                    var $2506 = $2508;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2509 = Parser$Reply$error$($2505);
                                                                                                                                    var $2506 = $2509;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2504 = $2506;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2510 = self.pst;
                                                                                                                            var self = $2510;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2512 = self.err;
                                                                                                                                    var $2513 = self.nam;
                                                                                                                                    var $2514 = self.ini;
                                                                                                                                    var $2515 = self.idx;
                                                                                                                                    var $2516 = self.str;
                                                                                                                                    var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2503, $2512), $2513, $2514, $2515, $2516);
                                                                                                                                    var self = _reply$pst$73;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2518 = self.err;
                                                                                                                                            var _reply$79 = Kind$Parser$term(_reply$pst$73);
                                                                                                                                            var self = _reply$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2520 = self.err;
                                                                                                                                                    var self = $2518;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2522 = self.value;
                                                                                                                                                            var $2523 = Parser$Reply$error$(Parser$Error$combine$($2522, $2520));
                                                                                                                                                            var $2521 = $2523;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2524 = Parser$Reply$error$($2520);
                                                                                                                                                            var $2521 = $2524;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2519 = $2521;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2525 = self.pst;
                                                                                                                                                    var $2526 = self.val;
                                                                                                                                                    var self = $2525;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2528 = self.err;
                                                                                                                                                            var $2529 = self.nam;
                                                                                                                                                            var $2530 = self.ini;
                                                                                                                                                            var $2531 = self.idx;
                                                                                                                                                            var $2532 = self.str;
                                                                                                                                                            var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2518, $2528), $2529, $2530, $2531, $2532);
                                                                                                                                                            var self = _reply$pst$87;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2534 = self.err;
                                                                                                                                                                    var _reply$93 = Kind$Parser$text$("to", _reply$pst$87);
                                                                                                                                                                    var self = _reply$93;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2536 = self.err;
                                                                                                                                                                            var self = $2534;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2538 = self.value;
                                                                                                                                                                                    var $2539 = Parser$Reply$error$(Parser$Error$combine$($2538, $2536));
                                                                                                                                                                                    var $2537 = $2539;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2540 = Parser$Reply$error$($2536);
                                                                                                                                                                                    var $2537 = $2540;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2535 = $2537;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2541 = self.pst;
                                                                                                                                                                            var self = $2541;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2543 = self.err;
                                                                                                                                                                                    var $2544 = self.nam;
                                                                                                                                                                                    var $2545 = self.ini;
                                                                                                                                                                                    var $2546 = self.idx;
                                                                                                                                                                                    var $2547 = self.str;
                                                                                                                                                                                    var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2534, $2543), $2544, $2545, $2546, $2547);
                                                                                                                                                                                    var self = _reply$pst$101;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2549 = self.err;
                                                                                                                                                                                            var _reply$107 = Kind$Parser$term(_reply$pst$101);
                                                                                                                                                                                            var self = _reply$107;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2551 = self.err;
                                                                                                                                                                                                    var self = $2549;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2553 = self.value;
                                                                                                                                                                                                            var $2554 = Parser$Reply$error$(Parser$Error$combine$($2553, $2551));
                                                                                                                                                                                                            var $2552 = $2554;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2555 = Parser$Reply$error$($2551);
                                                                                                                                                                                                            var $2552 = $2555;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2550 = $2552;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2556 = self.pst;
                                                                                                                                                                                                    var $2557 = self.val;
                                                                                                                                                                                                    var self = $2556;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2559 = self.err;
                                                                                                                                                                                                            var $2560 = self.nam;
                                                                                                                                                                                                            var $2561 = self.ini;
                                                                                                                                                                                                            var $2562 = self.idx;
                                                                                                                                                                                                            var $2563 = self.str;
                                                                                                                                                                                                            var _reply$pst$115 = Parser$State$new$(Parser$Error$maybe_combine$($2549, $2559), $2560, $2561, $2562, $2563);
                                                                                                                                                                                                            var self = _reply$pst$115;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2565 = self.err;
                                                                                                                                                                                                                    var _reply$121 = Kind$Parser$text$("with ", _reply$pst$115);
                                                                                                                                                                                                                    var self = _reply$121;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2567 = self.err;
                                                                                                                                                                                                                            var self = $2565;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2569 = self.value;
                                                                                                                                                                                                                                    var $2570 = Parser$Reply$error$(Parser$Error$combine$($2569, $2567));
                                                                                                                                                                                                                                    var $2568 = $2570;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2571 = Parser$Reply$error$($2567);
                                                                                                                                                                                                                                    var $2568 = $2571;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2566 = $2568;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2572 = self.pst;
                                                                                                                                                                                                                            var self = $2572;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2574 = self.err;
                                                                                                                                                                                                                                    var $2575 = self.nam;
                                                                                                                                                                                                                                    var $2576 = self.ini;
                                                                                                                                                                                                                                    var $2577 = self.idx;
                                                                                                                                                                                                                                    var $2578 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$129 = Parser$State$new$(Parser$Error$maybe_combine$($2565, $2574), $2575, $2576, $2577, $2578);
                                                                                                                                                                                                                                    var self = _reply$pst$129;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2580 = self.err;
                                                                                                                                                                                                                                            var _reply$135 = Kind$Parser$name1$(_reply$pst$129);
                                                                                                                                                                                                                                            var self = _reply$135;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2582 = self.err;
                                                                                                                                                                                                                                                    var self = $2580;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2584 = self.value;
                                                                                                                                                                                                                                                            var $2585 = Parser$Reply$error$(Parser$Error$combine$($2584, $2582));
                                                                                                                                                                                                                                                            var $2583 = $2585;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2586 = Parser$Reply$error$($2582);
                                                                                                                                                                                                                                                            var $2583 = $2586;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2581 = $2583;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2587 = self.pst;
                                                                                                                                                                                                                                                    var $2588 = self.val;
                                                                                                                                                                                                                                                    var self = $2587;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2590 = self.err;
                                                                                                                                                                                                                                                            var $2591 = self.nam;
                                                                                                                                                                                                                                                            var $2592 = self.ini;
                                                                                                                                                                                                                                                            var $2593 = self.idx;
                                                                                                                                                                                                                                                            var $2594 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$143 = Parser$State$new$(Parser$Error$maybe_combine$($2580, $2590), $2591, $2592, $2593, $2594);
                                                                                                                                                                                                                                                            var self = _reply$pst$143;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2596 = self.err;
                                                                                                                                                                                                                                                                    var _reply$149 = Kind$Parser$text$(":", _reply$pst$143);
                                                                                                                                                                                                                                                                    var self = _reply$149;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2598 = self.err;
                                                                                                                                                                                                                                                                            var self = $2596;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2600 = self.value;
                                                                                                                                                                                                                                                                                    var $2601 = Parser$Reply$error$(Parser$Error$combine$($2600, $2598));
                                                                                                                                                                                                                                                                                    var $2599 = $2601;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2602 = Parser$Reply$error$($2598);
                                                                                                                                                                                                                                                                                    var $2599 = $2602;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2597 = $2599;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2603 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2603;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2605 = self.err;
                                                                                                                                                                                                                                                                                    var $2606 = self.nam;
                                                                                                                                                                                                                                                                                    var $2607 = self.ini;
                                                                                                                                                                                                                                                                                    var $2608 = self.idx;
                                                                                                                                                                                                                                                                                    var $2609 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$157 = Parser$State$new$(Parser$Error$maybe_combine$($2596, $2605), $2606, $2607, $2608, $2609);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$157;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2611 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$163 = Kind$Parser$term(_reply$pst$157);
                                                                                                                                                                                                                                                                                            var self = _reply$163;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2613 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2611;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2615 = self.value;
                                                                                                                                                                                                                                                                                                            var $2616 = Parser$Reply$error$(Parser$Error$combine$($2615, $2613));
                                                                                                                                                                                                                                                                                                            var $2614 = $2616;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2617 = Parser$Reply$error$($2613);
                                                                                                                                                                                                                                                                                                            var $2614 = $2617;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2612 = $2614;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2618 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2619 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2618;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2621 = self.err;
                                                                                                                                                                                                                                                                                                            var $2622 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2623 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2624 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2625 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$171 = Parser$State$new$(Parser$Error$maybe_combine$($2611, $2621), $2622, $2623, $2624, $2625);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$171;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2627 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$177 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$171);
                                                                                                                                                                                                                                                                                                                    var self = _reply$177;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2629 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2627;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2631 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2632 = Parser$Reply$error$(Parser$Error$combine$($2631, $2629));
                                                                                                                                                                                                                                                                                                                                    var $2630 = $2632;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2633 = Parser$Reply$error$($2629);
                                                                                                                                                                                                                                                                                                                                    var $2630 = $2633;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2628 = $2630;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2634 = self.pst;
                                                                                                                                                                                                                                                                                                                            var self = $2634;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2636 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2637 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2638 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2639 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2640 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$185 = Parser$State$new$(Parser$Error$maybe_combine$($2627, $2636), $2637, $2638, $2639, $2640);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$185;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2642 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$191 = _body$2(Unit$new)(_reply$pst$185);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$191;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2644 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2642;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2646 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2647 = Parser$Reply$error$(Parser$Error$combine$($2646, $2644));
                                                                                                                                                                                                                                                                                                                                                            var $2645 = $2647;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2648 = Parser$Reply$error$($2644);
                                                                                                                                                                                                                                                                                                                                                            var $2645 = $2648;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2643 = $2645;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2649 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var $2650 = self.val;
                                                                                                                                                                                                                                                                                                                                                    var self = $2649;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2652 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2653 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2654 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2655 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2656 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$199 = Parser$State$new$(Parser$Error$maybe_combine$($2642, $2652), $2653, $2654, $2655, $2656);
                                                                                                                                                                                                                                                                                                                                                            var _term$200 = Kind$Term$ref$((_typename$1 + ".for"));
                                                                                                                                                                                                                                                                                                                                                            var _term$201 = Kind$Term$app$(_term$200, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                            var _term$202 = Kind$Term$app$(_term$201, Kind$Term$ref$($2588));
                                                                                                                                                                                                                                                                                                                                                            var _term$203 = Kind$Term$app$(_term$202, $2526);
                                                                                                                                                                                                                                                                                                                                                            var _term$204 = Kind$Term$app$(_term$203, $2557);
                                                                                                                                                                                                                                                                                                                                                            var _lamb$205 = Kind$Term$lam$($2465, (_e$205 => {
                                                                                                                                                                                                                                                                                                                                                                var $2658 = Kind$Term$lam$($2588, (_s$206 => {
                                                                                                                                                                                                                                                                                                                                                                    var $2659 = $2619;
                                                                                                                                                                                                                                                                                                                                                                    return $2659;
                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                return $2658;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var _term$206 = Kind$Term$app$(_term$204, _lamb$205);
                                                                                                                                                                                                                                                                                                                                                            var _term$207 = Kind$Term$let$($2588, _term$206, (_x$207 => {
                                                                                                                                                                                                                                                                                                                                                                var $2660 = $2650;
                                                                                                                                                                                                                                                                                                                                                                return $2660;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var $2657 = Parser$Reply$value$(_reply$pst$199, _term$207);
                                                                                                                                                                                                                                                                                                                                                            var $2651 = $2657;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2643 = $2651;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2641 = $2643;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2635 = $2641;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2628 = $2635;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2626 = $2628;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2620 = $2626;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2612 = $2620;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2610 = $2612;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2604 = $2610;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2597 = $2604;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2595 = $2597;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2589 = $2595;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2581 = $2589;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2579 = $2581;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2573 = $2579;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2566 = $2573;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2564 = $2566;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2558 = $2564;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2550 = $2558;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2548 = $2550;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2542 = $2548;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2535 = $2542;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2533 = $2535;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2527 = $2533;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2519 = $2527;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2517 = $2519;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2511 = $2517;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2504 = $2511;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2502 = $2504;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2496 = $2502;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2489 = $2496;
                                                                                                    break;
                                                                                            };
                                                                                            var $2487 = $2489;
                                                                                            break;
                                                                                    };
                                                                                    var $2481 = $2487;
                                                                                    break;
                                                                            };
                                                                            var $2474 = $2481;
                                                                            break;
                                                                    };
                                                                    var $2472 = $2474;
                                                                    break;
                                                            };
                                                            var $2466 = $2472;
                                                            break;
                                                    };
                                                    var $2458 = $2466;
                                                    break;
                                            };
                                            var $2456 = $2458;
                                            break;
                                    };
                                    var $2450 = $2456;
                                    break;
                            };
                            var $2443 = $2450;
                            break;
                    };
                    var $2441 = $2443;
                    break;
            };
            return $2441;
        }));
        return $2440;
    };
    const Kind$Parser$letforrange$with = x0 => x1 => Kind$Parser$letforrange$with$(x0, x1);

    function Kind$Parser$letforrange$u32$with$(_body$1) {
        var $2661 = Kind$Parser$letforrange$with$("U32", _body$1);
        return $2661;
    };
    const Kind$Parser$letforrange$u32$with = x0 => Kind$Parser$letforrange$u32$with$(x0);

    function Kind$Parser$letforrange$i32$(_body$1) {
        var $2662 = Kind$Parser$letforrange$("I32", _body$1);
        return $2662;
    };
    const Kind$Parser$letforrange$i32 = x0 => Kind$Parser$letforrange$i32$(x0);

    function Kind$Parser$letforrange$i32$with$(_body$1) {
        var $2663 = Kind$Parser$letforrange$with$("I32", _body$1);
        return $2663;
    };
    const Kind$Parser$letforrange$i32$with = x0 => Kind$Parser$letforrange$i32$with$(x0);

    function Kind$Parser$letforrange$nat$(_body$1) {
        var $2664 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2666 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2668 = self.err;
                            var self = $2666;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2670 = self.value;
                                    var $2671 = Parser$Reply$error$(Parser$Error$combine$($2670, $2668));
                                    var $2669 = $2671;
                                    break;
                                case 'Maybe.none':
                                    var $2672 = Parser$Reply$error$($2668);
                                    var $2669 = $2672;
                                    break;
                            };
                            var $2667 = $2669;
                            break;
                        case 'Parser.Reply.value':
                            var $2673 = self.pst;
                            var self = $2673;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2675 = self.err;
                                    var $2676 = self.nam;
                                    var $2677 = self.ini;
                                    var $2678 = self.idx;
                                    var $2679 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2666, $2675), $2676, $2677, $2678, $2679);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2681 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2683 = self.err;
                                                    var self = $2681;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2685 = self.value;
                                                            var $2686 = Parser$Reply$error$(Parser$Error$combine$($2685, $2683));
                                                            var $2684 = $2686;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2687 = Parser$Reply$error$($2683);
                                                            var $2684 = $2687;
                                                            break;
                                                    };
                                                    var $2682 = $2684;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2688 = self.pst;
                                                    var $2689 = self.val;
                                                    var self = $2688;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2691 = self.err;
                                                            var $2692 = self.nam;
                                                            var $2693 = self.ini;
                                                            var $2694 = self.idx;
                                                            var $2695 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2681, $2691), $2692, $2693, $2694, $2695);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2697 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2699 = self.err;
                                                                            var self = $2697;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2701 = self.value;
                                                                                    var $2702 = Parser$Reply$error$(Parser$Error$combine$($2701, $2699));
                                                                                    var $2700 = $2702;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2703 = Parser$Reply$error$($2699);
                                                                                    var $2700 = $2703;
                                                                                    break;
                                                                            };
                                                                            var $2698 = $2700;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2704 = self.pst;
                                                                            var self = $2704;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2706 = self.err;
                                                                                    var $2707 = self.nam;
                                                                                    var $2708 = self.ini;
                                                                                    var $2709 = self.idx;
                                                                                    var $2710 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2697, $2706), $2707, $2708, $2709, $2710);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2712 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2714 = self.err;
                                                                                                    var self = $2712;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2716 = self.value;
                                                                                                            var $2717 = Parser$Reply$error$(Parser$Error$combine$($2716, $2714));
                                                                                                            var $2715 = $2717;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2718 = Parser$Reply$error$($2714);
                                                                                                            var $2715 = $2718;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2713 = $2715;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2719 = self.pst;
                                                                                                    var self = $2719;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2721 = self.err;
                                                                                                            var $2722 = self.nam;
                                                                                                            var $2723 = self.ini;
                                                                                                            var $2724 = self.idx;
                                                                                                            var $2725 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2712, $2721), $2722, $2723, $2724, $2725);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2727 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2729 = self.err;
                                                                                                                            var self = $2727;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2731 = self.value;
                                                                                                                                    var $2732 = Parser$Reply$error$(Parser$Error$combine$($2731, $2729));
                                                                                                                                    var $2730 = $2732;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2733 = Parser$Reply$error$($2729);
                                                                                                                                    var $2730 = $2733;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2728 = $2730;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2734 = self.pst;
                                                                                                                            var $2735 = self.val;
                                                                                                                            var self = $2734;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2737 = self.err;
                                                                                                                                    var $2738 = self.nam;
                                                                                                                                    var $2739 = self.ini;
                                                                                                                                    var $2740 = self.idx;
                                                                                                                                    var $2741 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2727, $2737), $2738, $2739, $2740, $2741);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2743 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("from", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2745 = self.err;
                                                                                                                                                    var self = $2743;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2747 = self.value;
                                                                                                                                                            var $2748 = Parser$Reply$error$(Parser$Error$combine$($2747, $2745));
                                                                                                                                                            var $2746 = $2748;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2749 = Parser$Reply$error$($2745);
                                                                                                                                                            var $2746 = $2749;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2744 = $2746;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2750 = self.pst;
                                                                                                                                                    var self = $2750;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2752 = self.err;
                                                                                                                                                            var $2753 = self.nam;
                                                                                                                                                            var $2754 = self.ini;
                                                                                                                                                            var $2755 = self.idx;
                                                                                                                                                            var $2756 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2743, $2752), $2753, $2754, $2755, $2756);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2758 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2760 = self.err;
                                                                                                                                                                            var self = $2758;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2762 = self.value;
                                                                                                                                                                                    var $2763 = Parser$Reply$error$(Parser$Error$combine$($2762, $2760));
                                                                                                                                                                                    var $2761 = $2763;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2764 = Parser$Reply$error$($2760);
                                                                                                                                                                                    var $2761 = $2764;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2759 = $2761;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2765 = self.pst;
                                                                                                                                                                            var $2766 = self.val;
                                                                                                                                                                            var self = $2765;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2768 = self.err;
                                                                                                                                                                                    var $2769 = self.nam;
                                                                                                                                                                                    var $2770 = self.ini;
                                                                                                                                                                                    var $2771 = self.idx;
                                                                                                                                                                                    var $2772 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2758, $2768), $2769, $2770, $2771, $2772);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2774 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("to", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2776 = self.err;
                                                                                                                                                                                                    var self = $2774;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2778 = self.value;
                                                                                                                                                                                                            var $2779 = Parser$Reply$error$(Parser$Error$combine$($2778, $2776));
                                                                                                                                                                                                            var $2777 = $2779;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2780 = Parser$Reply$error$($2776);
                                                                                                                                                                                                            var $2777 = $2780;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2775 = $2777;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2781 = self.pst;
                                                                                                                                                                                                    var self = $2781;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2783 = self.err;
                                                                                                                                                                                                            var $2784 = self.nam;
                                                                                                                                                                                                            var $2785 = self.ini;
                                                                                                                                                                                                            var $2786 = self.idx;
                                                                                                                                                                                                            var $2787 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2774, $2783), $2784, $2785, $2786, $2787);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2789 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2791 = self.err;
                                                                                                                                                                                                                            var self = $2789;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2793 = self.value;
                                                                                                                                                                                                                                    var $2794 = Parser$Reply$error$(Parser$Error$combine$($2793, $2791));
                                                                                                                                                                                                                                    var $2792 = $2794;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2795 = Parser$Reply$error$($2791);
                                                                                                                                                                                                                                    var $2792 = $2795;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2790 = $2792;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2796 = self.pst;
                                                                                                                                                                                                                            var $2797 = self.val;
                                                                                                                                                                                                                            var self = $2796;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2799 = self.err;
                                                                                                                                                                                                                                    var $2800 = self.nam;
                                                                                                                                                                                                                                    var $2801 = self.ini;
                                                                                                                                                                                                                                    var $2802 = self.idx;
                                                                                                                                                                                                                                    var $2803 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2789, $2799), $2800, $2801, $2802, $2803);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2805 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2807 = self.err;
                                                                                                                                                                                                                                                    var self = $2805;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2809 = self.value;
                                                                                                                                                                                                                                                            var $2810 = Parser$Reply$error$(Parser$Error$combine$($2809, $2807));
                                                                                                                                                                                                                                                            var $2808 = $2810;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2811 = Parser$Reply$error$($2807);
                                                                                                                                                                                                                                                            var $2808 = $2811;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2806 = $2808;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2812 = self.pst;
                                                                                                                                                                                                                                                    var self = $2812;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2814 = self.err;
                                                                                                                                                                                                                                                            var $2815 = self.nam;
                                                                                                                                                                                                                                                            var $2816 = self.ini;
                                                                                                                                                                                                                                                            var $2817 = self.idx;
                                                                                                                                                                                                                                                            var $2818 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2805, $2814), $2815, $2816, $2817, $2818);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2820 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2822 = self.err;
                                                                                                                                                                                                                                                                            var self = $2820;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2824 = self.value;
                                                                                                                                                                                                                                                                                    var $2825 = Parser$Reply$error$(Parser$Error$combine$($2824, $2822));
                                                                                                                                                                                                                                                                                    var $2823 = $2825;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2826 = Parser$Reply$error$($2822);
                                                                                                                                                                                                                                                                                    var $2823 = $2826;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2821 = $2823;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2827 = self.pst;
                                                                                                                                                                                                                                                                            var $2828 = self.val;
                                                                                                                                                                                                                                                                            var self = $2827;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2830 = self.err;
                                                                                                                                                                                                                                                                                    var $2831 = self.nam;
                                                                                                                                                                                                                                                                                    var $2832 = self.ini;
                                                                                                                                                                                                                                                                                    var $2833 = self.idx;
                                                                                                                                                                                                                                                                                    var $2834 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2820, $2830), $2831, $2832, $2833, $2834);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2836 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2838 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2836;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2840 = self.value;
                                                                                                                                                                                                                                                                                                            var $2841 = Parser$Reply$error$(Parser$Error$combine$($2840, $2838));
                                                                                                                                                                                                                                                                                                            var $2839 = $2841;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2842 = Parser$Reply$error$($2838);
                                                                                                                                                                                                                                                                                                            var $2839 = $2842;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2837 = $2839;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2843 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2843;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2845 = self.err;
                                                                                                                                                                                                                                                                                                            var $2846 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2847 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2848 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2849 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2836, $2845), $2846, $2847, $2848, $2849);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2851 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2853 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2851;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2855 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2856 = Parser$Reply$error$(Parser$Error$combine$($2855, $2853));
                                                                                                                                                                                                                                                                                                                                    var $2854 = $2856;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2857 = Parser$Reply$error$($2853);
                                                                                                                                                                                                                                                                                                                                    var $2854 = $2857;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2852 = $2854;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2858 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2859 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2858;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2861 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2862 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2863 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2864 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2865 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2851, $2861), $2862, $2863, $2864, $2865);
                                                                                                                                                                                                                                                                                                                                    var _term$185 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$app$(_term$185, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$ref$($2689));
                                                                                                                                                                                                                                                                                                                                    var _term$188 = Kind$Term$app$(_term$187, $2766);
                                                                                                                                                                                                                                                                                                                                    var _term$189 = Kind$Term$app$(_term$188, $2797);
                                                                                                                                                                                                                                                                                                                                    var _lamb$190 = Kind$Term$lam$($2735, (_e$190 => {
                                                                                                                                                                                                                                                                                                                                        var $2867 = Kind$Term$lam$($2689, (_s$191 => {
                                                                                                                                                                                                                                                                                                                                            var $2868 = $2828;
                                                                                                                                                                                                                                                                                                                                            return $2868;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $2867;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$191 = Kind$Term$app$(_term$189, _lamb$190);
                                                                                                                                                                                                                                                                                                                                    var _term$192 = Kind$Term$let$($2689, _term$191, (_x$192 => {
                                                                                                                                                                                                                                                                                                                                        var $2869 = $2859;
                                                                                                                                                                                                                                                                                                                                        return $2869;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var $2866 = Parser$Reply$value$(_reply$pst$184, _term$192);
                                                                                                                                                                                                                                                                                                                                    var $2860 = $2866;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2852 = $2860;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2850 = $2852;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2844 = $2850;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2837 = $2844;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2835 = $2837;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2829 = $2835;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2821 = $2829;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2819 = $2821;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2813 = $2819;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2806 = $2813;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2804 = $2806;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2798 = $2804;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2790 = $2798;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2788 = $2790;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2782 = $2788;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2775 = $2782;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2773 = $2775;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2767 = $2773;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2759 = $2767;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2757 = $2759;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2751 = $2757;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2744 = $2751;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2742 = $2744;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2736 = $2742;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2728 = $2736;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2726 = $2728;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2720 = $2726;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2713 = $2720;
                                                                                                    break;
                                                                                            };
                                                                                            var $2711 = $2713;
                                                                                            break;
                                                                                    };
                                                                                    var $2705 = $2711;
                                                                                    break;
                                                                            };
                                                                            var $2698 = $2705;
                                                                            break;
                                                                    };
                                                                    var $2696 = $2698;
                                                                    break;
                                                            };
                                                            var $2690 = $2696;
                                                            break;
                                                    };
                                                    var $2682 = $2690;
                                                    break;
                                            };
                                            var $2680 = $2682;
                                            break;
                                    };
                                    var $2674 = $2680;
                                    break;
                            };
                            var $2667 = $2674;
                            break;
                    };
                    var $2665 = $2667;
                    break;
            };
            return $2665;
        }));
        return $2664;
    };
    const Kind$Parser$letforrange$nat = x0 => Kind$Parser$letforrange$nat$(x0);

    function Kind$Parser$letforrange$nat$with$(_body$1) {
        var $2870 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2872 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2874 = self.err;
                            var self = $2872;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2876 = self.value;
                                    var $2877 = Parser$Reply$error$(Parser$Error$combine$($2876, $2874));
                                    var $2875 = $2877;
                                    break;
                                case 'Maybe.none':
                                    var $2878 = Parser$Reply$error$($2874);
                                    var $2875 = $2878;
                                    break;
                            };
                            var $2873 = $2875;
                            break;
                        case 'Parser.Reply.value':
                            var $2879 = self.pst;
                            var self = $2879;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2881 = self.err;
                                    var $2882 = self.nam;
                                    var $2883 = self.ini;
                                    var $2884 = self.idx;
                                    var $2885 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2872, $2881), $2882, $2883, $2884, $2885);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2887 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2889 = self.err;
                                                    var self = $2887;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2891 = self.value;
                                                            var $2892 = Parser$Reply$error$(Parser$Error$combine$($2891, $2889));
                                                            var $2890 = $2892;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2893 = Parser$Reply$error$($2889);
                                                            var $2890 = $2893;
                                                            break;
                                                    };
                                                    var $2888 = $2890;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2894 = self.pst;
                                                    var $2895 = self.val;
                                                    var self = $2894;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2897 = self.err;
                                                            var $2898 = self.nam;
                                                            var $2899 = self.ini;
                                                            var $2900 = self.idx;
                                                            var $2901 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2887, $2897), $2898, $2899, $2900, $2901);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2903 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2905 = self.err;
                                                                            var self = $2903;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2907 = self.value;
                                                                                    var $2908 = Parser$Reply$error$(Parser$Error$combine$($2907, $2905));
                                                                                    var $2906 = $2908;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2909 = Parser$Reply$error$($2905);
                                                                                    var $2906 = $2909;
                                                                                    break;
                                                                            };
                                                                            var $2904 = $2906;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2910 = self.pst;
                                                                            var self = $2910;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2912 = self.err;
                                                                                    var $2913 = self.nam;
                                                                                    var $2914 = self.ini;
                                                                                    var $2915 = self.idx;
                                                                                    var $2916 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2903, $2912), $2913, $2914, $2915, $2916);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2918 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2920 = self.err;
                                                                                                    var self = $2918;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2922 = self.value;
                                                                                                            var $2923 = Parser$Reply$error$(Parser$Error$combine$($2922, $2920));
                                                                                                            var $2921 = $2923;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2924 = Parser$Reply$error$($2920);
                                                                                                            var $2921 = $2924;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2919 = $2921;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2925 = self.pst;
                                                                                                    var $2926 = self.val;
                                                                                                    var self = $2925;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2928 = self.err;
                                                                                                            var $2929 = self.nam;
                                                                                                            var $2930 = self.ini;
                                                                                                            var $2931 = self.idx;
                                                                                                            var $2932 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2918, $2928), $2929, $2930, $2931, $2932);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2934 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2936 = self.err;
                                                                                                                            var self = $2934;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2938 = self.value;
                                                                                                                                    var $2939 = Parser$Reply$error$(Parser$Error$combine$($2938, $2936));
                                                                                                                                    var $2937 = $2939;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2940 = Parser$Reply$error$($2936);
                                                                                                                                    var $2937 = $2940;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2935 = $2937;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2941 = self.pst;
                                                                                                                            var self = $2941;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2943 = self.err;
                                                                                                                                    var $2944 = self.nam;
                                                                                                                                    var $2945 = self.ini;
                                                                                                                                    var $2946 = self.idx;
                                                                                                                                    var $2947 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2934, $2943), $2944, $2945, $2946, $2947);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2949 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2951 = self.err;
                                                                                                                                                    var self = $2949;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2953 = self.value;
                                                                                                                                                            var $2954 = Parser$Reply$error$(Parser$Error$combine$($2953, $2951));
                                                                                                                                                            var $2952 = $2954;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2955 = Parser$Reply$error$($2951);
                                                                                                                                                            var $2952 = $2955;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2950 = $2952;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2956 = self.pst;
                                                                                                                                                    var $2957 = self.val;
                                                                                                                                                    var self = $2956;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2959 = self.err;
                                                                                                                                                            var $2960 = self.nam;
                                                                                                                                                            var $2961 = self.ini;
                                                                                                                                                            var $2962 = self.idx;
                                                                                                                                                            var $2963 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2949, $2959), $2960, $2961, $2962, $2963);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2965 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("with ", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2967 = self.err;
                                                                                                                                                                            var self = $2965;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2969 = self.value;
                                                                                                                                                                                    var $2970 = Parser$Reply$error$(Parser$Error$combine$($2969, $2967));
                                                                                                                                                                                    var $2968 = $2970;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2971 = Parser$Reply$error$($2967);
                                                                                                                                                                                    var $2968 = $2971;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2966 = $2968;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2972 = self.pst;
                                                                                                                                                                            var self = $2972;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2974 = self.err;
                                                                                                                                                                                    var $2975 = self.nam;
                                                                                                                                                                                    var $2976 = self.ini;
                                                                                                                                                                                    var $2977 = self.idx;
                                                                                                                                                                                    var $2978 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2965, $2974), $2975, $2976, $2977, $2978);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2980 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$name1$(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2982 = self.err;
                                                                                                                                                                                                    var self = $2980;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2984 = self.value;
                                                                                                                                                                                                            var $2985 = Parser$Reply$error$(Parser$Error$combine$($2984, $2982));
                                                                                                                                                                                                            var $2983 = $2985;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2986 = Parser$Reply$error$($2982);
                                                                                                                                                                                                            var $2983 = $2986;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2981 = $2983;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2987 = self.pst;
                                                                                                                                                                                                    var $2988 = self.val;
                                                                                                                                                                                                    var self = $2987;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2990 = self.err;
                                                                                                                                                                                                            var $2991 = self.nam;
                                                                                                                                                                                                            var $2992 = self.ini;
                                                                                                                                                                                                            var $2993 = self.idx;
                                                                                                                                                                                                            var $2994 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2980, $2990), $2991, $2992, $2993, $2994);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2996 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2998 = self.err;
                                                                                                                                                                                                                            var self = $2996;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3000 = self.value;
                                                                                                                                                                                                                                    var $3001 = Parser$Reply$error$(Parser$Error$combine$($3000, $2998));
                                                                                                                                                                                                                                    var $2999 = $3001;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3002 = Parser$Reply$error$($2998);
                                                                                                                                                                                                                                    var $2999 = $3002;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2997 = $2999;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3003 = self.pst;
                                                                                                                                                                                                                            var self = $3003;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3005 = self.err;
                                                                                                                                                                                                                                    var $3006 = self.nam;
                                                                                                                                                                                                                                    var $3007 = self.ini;
                                                                                                                                                                                                                                    var $3008 = self.idx;
                                                                                                                                                                                                                                    var $3009 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2996, $3005), $3006, $3007, $3008, $3009);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3011 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3013 = self.err;
                                                                                                                                                                                                                                                    var self = $3011;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3015 = self.value;
                                                                                                                                                                                                                                                            var $3016 = Parser$Reply$error$(Parser$Error$combine$($3015, $3013));
                                                                                                                                                                                                                                                            var $3014 = $3016;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3017 = Parser$Reply$error$($3013);
                                                                                                                                                                                                                                                            var $3014 = $3017;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3012 = $3014;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3018 = self.pst;
                                                                                                                                                                                                                                                    var $3019 = self.val;
                                                                                                                                                                                                                                                    var self = $3018;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3021 = self.err;
                                                                                                                                                                                                                                                            var $3022 = self.nam;
                                                                                                                                                                                                                                                            var $3023 = self.ini;
                                                                                                                                                                                                                                                            var $3024 = self.idx;
                                                                                                                                                                                                                                                            var $3025 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3011, $3021), $3022, $3023, $3024, $3025);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3027 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3029 = self.err;
                                                                                                                                                                                                                                                                            var self = $3027;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3031 = self.value;
                                                                                                                                                                                                                                                                                    var $3032 = Parser$Reply$error$(Parser$Error$combine$($3031, $3029));
                                                                                                                                                                                                                                                                                    var $3030 = $3032;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3033 = Parser$Reply$error$($3029);
                                                                                                                                                                                                                                                                                    var $3030 = $3033;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3028 = $3030;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3034 = self.pst;
                                                                                                                                                                                                                                                                            var self = $3034;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3036 = self.err;
                                                                                                                                                                                                                                                                                    var $3037 = self.nam;
                                                                                                                                                                                                                                                                                    var $3038 = self.ini;
                                                                                                                                                                                                                                                                                    var $3039 = self.idx;
                                                                                                                                                                                                                                                                                    var $3040 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3027, $3036), $3037, $3038, $3039, $3040);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $3042 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $3044 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $3042;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $3046 = self.value;
                                                                                                                                                                                                                                                                                                            var $3047 = Parser$Reply$error$(Parser$Error$combine$($3046, $3044));
                                                                                                                                                                                                                                                                                                            var $3045 = $3047;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $3048 = Parser$Reply$error$($3044);
                                                                                                                                                                                                                                                                                                            var $3045 = $3048;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3043 = $3045;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $3049 = self.pst;
                                                                                                                                                                                                                                                                                                    var $3050 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $3049;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $3052 = self.err;
                                                                                                                                                                                                                                                                                                            var $3053 = self.nam;
                                                                                                                                                                                                                                                                                                            var $3054 = self.ini;
                                                                                                                                                                                                                                                                                                            var $3055 = self.idx;
                                                                                                                                                                                                                                                                                                            var $3056 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($3042, $3052), $3053, $3054, $3055, $3056);
                                                                                                                                                                                                                                                                                                            var _term$171 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                            var _term$172 = Kind$Term$app$(_term$171, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                            var _term$173 = Kind$Term$app$(_term$172, Kind$Term$ref$($2988));
                                                                                                                                                                                                                                                                                                            var _term$174 = Kind$Term$app$(_term$173, $2926);
                                                                                                                                                                                                                                                                                                            var _term$175 = Kind$Term$app$(_term$174, $2957);
                                                                                                                                                                                                                                                                                                            var _lamb$176 = Kind$Term$lam$($2895, (_e$176 => {
                                                                                                                                                                                                                                                                                                                var $3058 = Kind$Term$lam$($2988, (_s$177 => {
                                                                                                                                                                                                                                                                                                                    var $3059 = $3019;
                                                                                                                                                                                                                                                                                                                    return $3059;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $3058;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var _term$177 = Kind$Term$app$(_term$175, _lamb$176);
                                                                                                                                                                                                                                                                                                            var _term$178 = Kind$Term$let$($2988, _term$177, (_x$178 => {
                                                                                                                                                                                                                                                                                                                var $3060 = $3050;
                                                                                                                                                                                                                                                                                                                return $3060;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var $3057 = Parser$Reply$value$(_reply$pst$170, _term$178);
                                                                                                                                                                                                                                                                                                            var $3051 = $3057;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3043 = $3051;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $3041 = $3043;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $3035 = $3041;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3028 = $3035;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3026 = $3028;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3020 = $3026;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3012 = $3020;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3010 = $3012;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3004 = $3010;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2997 = $3004;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2995 = $2997;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2989 = $2995;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2981 = $2989;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2979 = $2981;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2973 = $2979;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2966 = $2973;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2964 = $2966;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2958 = $2964;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2950 = $2958;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2948 = $2950;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2942 = $2948;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2935 = $2942;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2933 = $2935;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2927 = $2933;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2919 = $2927;
                                                                                                    break;
                                                                                            };
                                                                                            var $2917 = $2919;
                                                                                            break;
                                                                                    };
                                                                                    var $2911 = $2917;
                                                                                    break;
                                                                            };
                                                                            var $2904 = $2911;
                                                                            break;
                                                                    };
                                                                    var $2902 = $2904;
                                                                    break;
                                                            };
                                                            var $2896 = $2902;
                                                            break;
                                                    };
                                                    var $2888 = $2896;
                                                    break;
                                            };
                                            var $2886 = $2888;
                                            break;
                                    };
                                    var $2880 = $2886;
                                    break;
                            };
                            var $2873 = $2880;
                            break;
                    };
                    var $2871 = $2873;
                    break;
            };
            return $2871;
        }));
        return $2870;
    };
    const Kind$Parser$letforrange$nat$with = x0 => Kind$Parser$letforrange$nat$with$(x0);

    function Kind$Parser$letforin$(_body$1) {
        var $3061 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3063 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3065 = self.err;
                            var self = $3063;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3067 = self.value;
                                    var $3068 = Parser$Reply$error$(Parser$Error$combine$($3067, $3065));
                                    var $3066 = $3068;
                                    break;
                                case 'Maybe.none':
                                    var $3069 = Parser$Reply$error$($3065);
                                    var $3066 = $3069;
                                    break;
                            };
                            var $3064 = $3066;
                            break;
                        case 'Parser.Reply.value':
                            var $3070 = self.pst;
                            var self = $3070;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3072 = self.err;
                                    var $3073 = self.nam;
                                    var $3074 = self.ini;
                                    var $3075 = self.idx;
                                    var $3076 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3063, $3072), $3073, $3074, $3075, $3076);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3078 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3080 = self.err;
                                                    var self = $3078;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3082 = self.value;
                                                            var $3083 = Parser$Reply$error$(Parser$Error$combine$($3082, $3080));
                                                            var $3081 = $3083;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3084 = Parser$Reply$error$($3080);
                                                            var $3081 = $3084;
                                                            break;
                                                    };
                                                    var $3079 = $3081;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3085 = self.pst;
                                                    var $3086 = self.val;
                                                    var self = $3085;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3088 = self.err;
                                                            var $3089 = self.nam;
                                                            var $3090 = self.ini;
                                                            var $3091 = self.idx;
                                                            var $3092 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3078, $3088), $3089, $3090, $3091, $3092);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3094 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3096 = self.err;
                                                                            var self = $3094;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3098 = self.value;
                                                                                    var $3099 = Parser$Reply$error$(Parser$Error$combine$($3098, $3096));
                                                                                    var $3097 = $3099;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3100 = Parser$Reply$error$($3096);
                                                                                    var $3097 = $3100;
                                                                                    break;
                                                                            };
                                                                            var $3095 = $3097;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3101 = self.pst;
                                                                            var self = $3101;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3103 = self.err;
                                                                                    var $3104 = self.nam;
                                                                                    var $3105 = self.ini;
                                                                                    var $3106 = self.idx;
                                                                                    var $3107 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3094, $3103), $3104, $3105, $3106, $3107);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3109 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3111 = self.err;
                                                                                                    var self = $3109;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3113 = self.value;
                                                                                                            var $3114 = Parser$Reply$error$(Parser$Error$combine$($3113, $3111));
                                                                                                            var $3112 = $3114;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3115 = Parser$Reply$error$($3111);
                                                                                                            var $3112 = $3115;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3110 = $3112;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3116 = self.pst;
                                                                                                    var self = $3116;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3118 = self.err;
                                                                                                            var $3119 = self.nam;
                                                                                                            var $3120 = self.ini;
                                                                                                            var $3121 = self.idx;
                                                                                                            var $3122 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3109, $3118), $3119, $3120, $3121, $3122);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3124 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3126 = self.err;
                                                                                                                            var self = $3124;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3128 = self.value;
                                                                                                                                    var $3129 = Parser$Reply$error$(Parser$Error$combine$($3128, $3126));
                                                                                                                                    var $3127 = $3129;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3130 = Parser$Reply$error$($3126);
                                                                                                                                    var $3127 = $3130;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3125 = $3127;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3131 = self.pst;
                                                                                                                            var $3132 = self.val;
                                                                                                                            var self = $3131;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3134 = self.err;
                                                                                                                                    var $3135 = self.nam;
                                                                                                                                    var $3136 = self.ini;
                                                                                                                                    var $3137 = self.idx;
                                                                                                                                    var $3138 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3124, $3134), $3135, $3136, $3137, $3138);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3140 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("in", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3142 = self.err;
                                                                                                                                                    var self = $3140;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3144 = self.value;
                                                                                                                                                            var $3145 = Parser$Reply$error$(Parser$Error$combine$($3144, $3142));
                                                                                                                                                            var $3143 = $3145;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3146 = Parser$Reply$error$($3142);
                                                                                                                                                            var $3143 = $3146;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3141 = $3143;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3147 = self.pst;
                                                                                                                                                    var self = $3147;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3149 = self.err;
                                                                                                                                                            var $3150 = self.nam;
                                                                                                                                                            var $3151 = self.ini;
                                                                                                                                                            var $3152 = self.idx;
                                                                                                                                                            var $3153 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3140, $3149), $3150, $3151, $3152, $3153);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3155 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3157 = self.err;
                                                                                                                                                                            var self = $3155;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3159 = self.value;
                                                                                                                                                                                    var $3160 = Parser$Reply$error$(Parser$Error$combine$($3159, $3157));
                                                                                                                                                                                    var $3158 = $3160;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3161 = Parser$Reply$error$($3157);
                                                                                                                                                                                    var $3158 = $3161;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3156 = $3158;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3162 = self.pst;
                                                                                                                                                                            var $3163 = self.val;
                                                                                                                                                                            var self = $3162;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3165 = self.err;
                                                                                                                                                                                    var $3166 = self.nam;
                                                                                                                                                                                    var $3167 = self.ini;
                                                                                                                                                                                    var $3168 = self.idx;
                                                                                                                                                                                    var $3169 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3155, $3165), $3166, $3167, $3168, $3169);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3171 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$(":", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3173 = self.err;
                                                                                                                                                                                                    var self = $3171;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3175 = self.value;
                                                                                                                                                                                                            var $3176 = Parser$Reply$error$(Parser$Error$combine$($3175, $3173));
                                                                                                                                                                                                            var $3174 = $3176;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3177 = Parser$Reply$error$($3173);
                                                                                                                                                                                                            var $3174 = $3177;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3172 = $3174;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3178 = self.pst;
                                                                                                                                                                                                    var self = $3178;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3180 = self.err;
                                                                                                                                                                                                            var $3181 = self.nam;
                                                                                                                                                                                                            var $3182 = self.ini;
                                                                                                                                                                                                            var $3183 = self.idx;
                                                                                                                                                                                                            var $3184 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3171, $3180), $3181, $3182, $3183, $3184);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3186 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3188 = self.err;
                                                                                                                                                                                                                            var self = $3186;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3190 = self.value;
                                                                                                                                                                                                                                    var $3191 = Parser$Reply$error$(Parser$Error$combine$($3190, $3188));
                                                                                                                                                                                                                                    var $3189 = $3191;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3192 = Parser$Reply$error$($3188);
                                                                                                                                                                                                                                    var $3189 = $3192;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3187 = $3189;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3193 = self.pst;
                                                                                                                                                                                                                            var $3194 = self.val;
                                                                                                                                                                                                                            var self = $3193;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3196 = self.err;
                                                                                                                                                                                                                                    var $3197 = self.nam;
                                                                                                                                                                                                                                    var $3198 = self.ini;
                                                                                                                                                                                                                                    var $3199 = self.idx;
                                                                                                                                                                                                                                    var $3200 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3186, $3196), $3197, $3198, $3199, $3200);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3202 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3204 = self.err;
                                                                                                                                                                                                                                                    var self = $3202;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3206 = self.value;
                                                                                                                                                                                                                                                            var $3207 = Parser$Reply$error$(Parser$Error$combine$($3206, $3204));
                                                                                                                                                                                                                                                            var $3205 = $3207;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3208 = Parser$Reply$error$($3204);
                                                                                                                                                                                                                                                            var $3205 = $3208;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3203 = $3205;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3209 = self.pst;
                                                                                                                                                                                                                                                    var self = $3209;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3211 = self.err;
                                                                                                                                                                                                                                                            var $3212 = self.nam;
                                                                                                                                                                                                                                                            var $3213 = self.ini;
                                                                                                                                                                                                                                                            var $3214 = self.idx;
                                                                                                                                                                                                                                                            var $3215 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3202, $3211), $3212, $3213, $3214, $3215);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3217 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = _body$1(Unit$new)(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3219 = self.err;
                                                                                                                                                                                                                                                                            var self = $3217;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3221 = self.value;
                                                                                                                                                                                                                                                                                    var $3222 = Parser$Reply$error$(Parser$Error$combine$($3221, $3219));
                                                                                                                                                                                                                                                                                    var $3220 = $3222;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3223 = Parser$Reply$error$($3219);
                                                                                                                                                                                                                                                                                    var $3220 = $3223;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3218 = $3220;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3224 = self.pst;
                                                                                                                                                                                                                                                                            var $3225 = self.val;
                                                                                                                                                                                                                                                                            var self = $3224;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3227 = self.err;
                                                                                                                                                                                                                                                                                    var $3228 = self.nam;
                                                                                                                                                                                                                                                                                    var $3229 = self.ini;
                                                                                                                                                                                                                                                                                    var $3230 = self.idx;
                                                                                                                                                                                                                                                                                    var $3231 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3217, $3227), $3228, $3229, $3230, $3231);
                                                                                                                                                                                                                                                                                    var _term$157 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                                                    var _term$158 = Kind$Term$app$(_term$157, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$159 = Kind$Term$app$(_term$158, $3163);
                                                                                                                                                                                                                                                                                    var _term$160 = Kind$Term$app$(_term$159, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$161 = Kind$Term$app$(_term$160, Kind$Term$ref$($3086));
                                                                                                                                                                                                                                                                                    var _lamb$162 = Kind$Term$lam$($3132, (_i$162 => {
                                                                                                                                                                                                                                                                                        var $3233 = Kind$Term$lam$($3086, (_x$163 => {
                                                                                                                                                                                                                                                                                            var $3234 = $3194;
                                                                                                                                                                                                                                                                                            return $3234;
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                        return $3233;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var _term$163 = Kind$Term$app$(_term$161, _lamb$162);
                                                                                                                                                                                                                                                                                    var _term$164 = Kind$Term$let$($3086, _term$163, (_x$164 => {
                                                                                                                                                                                                                                                                                        var $3235 = $3225;
                                                                                                                                                                                                                                                                                        return $3235;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var $3232 = Parser$Reply$value$(_reply$pst$156, _term$164);
                                                                                                                                                                                                                                                                                    var $3226 = $3232;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3218 = $3226;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3216 = $3218;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3210 = $3216;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3203 = $3210;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3201 = $3203;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3195 = $3201;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3187 = $3195;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3185 = $3187;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3179 = $3185;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3172 = $3179;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3170 = $3172;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3164 = $3170;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3156 = $3164;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3154 = $3156;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3148 = $3154;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3141 = $3148;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3139 = $3141;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3133 = $3139;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3125 = $3133;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3123 = $3125;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3117 = $3123;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3110 = $3117;
                                                                                                    break;
                                                                                            };
                                                                                            var $3108 = $3110;
                                                                                            break;
                                                                                    };
                                                                                    var $3102 = $3108;
                                                                                    break;
                                                                            };
                                                                            var $3095 = $3102;
                                                                            break;
                                                                    };
                                                                    var $3093 = $3095;
                                                                    break;
                                                            };
                                                            var $3087 = $3093;
                                                            break;
                                                    };
                                                    var $3079 = $3087;
                                                    break;
                                            };
                                            var $3077 = $3079;
                                            break;
                                    };
                                    var $3071 = $3077;
                                    break;
                            };
                            var $3064 = $3071;
                            break;
                    };
                    var $3062 = $3064;
                    break;
            };
            return $3062;
        }));
        return $3061;
    };
    const Kind$Parser$letforin = x0 => Kind$Parser$letforin$(x0);

    function Kind$Parser$letforin$with$(_body$1) {
        var $3236 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3238 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3240 = self.err;
                            var self = $3238;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3242 = self.value;
                                    var $3243 = Parser$Reply$error$(Parser$Error$combine$($3242, $3240));
                                    var $3241 = $3243;
                                    break;
                                case 'Maybe.none':
                                    var $3244 = Parser$Reply$error$($3240);
                                    var $3241 = $3244;
                                    break;
                            };
                            var $3239 = $3241;
                            break;
                        case 'Parser.Reply.value':
                            var $3245 = self.pst;
                            var self = $3245;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3247 = self.err;
                                    var $3248 = self.nam;
                                    var $3249 = self.ini;
                                    var $3250 = self.idx;
                                    var $3251 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3238, $3247), $3248, $3249, $3250, $3251);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3253 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3255 = self.err;
                                                    var self = $3253;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3257 = self.value;
                                                            var $3258 = Parser$Reply$error$(Parser$Error$combine$($3257, $3255));
                                                            var $3256 = $3258;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3259 = Parser$Reply$error$($3255);
                                                            var $3256 = $3259;
                                                            break;
                                                    };
                                                    var $3254 = $3256;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3260 = self.pst;
                                                    var $3261 = self.val;
                                                    var self = $3260;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3263 = self.err;
                                                            var $3264 = self.nam;
                                                            var $3265 = self.ini;
                                                            var $3266 = self.idx;
                                                            var $3267 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3253, $3263), $3264, $3265, $3266, $3267);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3269 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("in", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3271 = self.err;
                                                                            var self = $3269;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3273 = self.value;
                                                                                    var $3274 = Parser$Reply$error$(Parser$Error$combine$($3273, $3271));
                                                                                    var $3272 = $3274;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3275 = Parser$Reply$error$($3271);
                                                                                    var $3272 = $3275;
                                                                                    break;
                                                                            };
                                                                            var $3270 = $3272;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3276 = self.pst;
                                                                            var self = $3276;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3278 = self.err;
                                                                                    var $3279 = self.nam;
                                                                                    var $3280 = self.ini;
                                                                                    var $3281 = self.idx;
                                                                                    var $3282 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3269, $3278), $3279, $3280, $3281, $3282);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3284 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3286 = self.err;
                                                                                                    var self = $3284;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3288 = self.value;
                                                                                                            var $3289 = Parser$Reply$error$(Parser$Error$combine$($3288, $3286));
                                                                                                            var $3287 = $3289;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3290 = Parser$Reply$error$($3286);
                                                                                                            var $3287 = $3290;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3285 = $3287;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3291 = self.pst;
                                                                                                    var $3292 = self.val;
                                                                                                    var self = $3291;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3294 = self.err;
                                                                                                            var $3295 = self.nam;
                                                                                                            var $3296 = self.ini;
                                                                                                            var $3297 = self.idx;
                                                                                                            var $3298 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3284, $3294), $3295, $3296, $3297, $3298);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3300 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("with", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3302 = self.err;
                                                                                                                            var self = $3300;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3304 = self.value;
                                                                                                                                    var $3305 = Parser$Reply$error$(Parser$Error$combine$($3304, $3302));
                                                                                                                                    var $3303 = $3305;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3306 = Parser$Reply$error$($3302);
                                                                                                                                    var $3303 = $3306;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3301 = $3303;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3307 = self.pst;
                                                                                                                            var self = $3307;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3309 = self.err;
                                                                                                                                    var $3310 = self.nam;
                                                                                                                                    var $3311 = self.ini;
                                                                                                                                    var $3312 = self.idx;
                                                                                                                                    var $3313 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3300, $3309), $3310, $3311, $3312, $3313);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3315 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$name1$(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3317 = self.err;
                                                                                                                                                    var self = $3315;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3319 = self.value;
                                                                                                                                                            var $3320 = Parser$Reply$error$(Parser$Error$combine$($3319, $3317));
                                                                                                                                                            var $3318 = $3320;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3321 = Parser$Reply$error$($3317);
                                                                                                                                                            var $3318 = $3321;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3316 = $3318;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3322 = self.pst;
                                                                                                                                                    var $3323 = self.val;
                                                                                                                                                    var self = $3322;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3325 = self.err;
                                                                                                                                                            var $3326 = self.nam;
                                                                                                                                                            var $3327 = self.ini;
                                                                                                                                                            var $3328 = self.idx;
                                                                                                                                                            var $3329 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3315, $3325), $3326, $3327, $3328, $3329);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3331 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3333 = self.err;
                                                                                                                                                                            var self = $3331;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3335 = self.value;
                                                                                                                                                                                    var $3336 = Parser$Reply$error$(Parser$Error$combine$($3335, $3333));
                                                                                                                                                                                    var $3334 = $3336;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3337 = Parser$Reply$error$($3333);
                                                                                                                                                                                    var $3334 = $3337;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3332 = $3334;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3338 = self.pst;
                                                                                                                                                                            var self = $3338;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3340 = self.err;
                                                                                                                                                                                    var $3341 = self.nam;
                                                                                                                                                                                    var $3342 = self.ini;
                                                                                                                                                                                    var $3343 = self.idx;
                                                                                                                                                                                    var $3344 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3331, $3340), $3341, $3342, $3343, $3344);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3346 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3348 = self.err;
                                                                                                                                                                                                    var self = $3346;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3350 = self.value;
                                                                                                                                                                                                            var $3351 = Parser$Reply$error$(Parser$Error$combine$($3350, $3348));
                                                                                                                                                                                                            var $3349 = $3351;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3352 = Parser$Reply$error$($3348);
                                                                                                                                                                                                            var $3349 = $3352;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3347 = $3349;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3353 = self.pst;
                                                                                                                                                                                                    var $3354 = self.val;
                                                                                                                                                                                                    var self = $3353;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3356 = self.err;
                                                                                                                                                                                                            var $3357 = self.nam;
                                                                                                                                                                                                            var $3358 = self.ini;
                                                                                                                                                                                                            var $3359 = self.idx;
                                                                                                                                                                                                            var $3360 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3346, $3356), $3357, $3358, $3359, $3360);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3362 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3364 = self.err;
                                                                                                                                                                                                                            var self = $3362;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3366 = self.value;
                                                                                                                                                                                                                                    var $3367 = Parser$Reply$error$(Parser$Error$combine$($3366, $3364));
                                                                                                                                                                                                                                    var $3365 = $3367;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3368 = Parser$Reply$error$($3364);
                                                                                                                                                                                                                                    var $3365 = $3368;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3363 = $3365;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3369 = self.pst;
                                                                                                                                                                                                                            var self = $3369;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3371 = self.err;
                                                                                                                                                                                                                                    var $3372 = self.nam;
                                                                                                                                                                                                                                    var $3373 = self.ini;
                                                                                                                                                                                                                                    var $3374 = self.idx;
                                                                                                                                                                                                                                    var $3375 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3362, $3371), $3372, $3373, $3374, $3375);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3377 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3379 = self.err;
                                                                                                                                                                                                                                                    var self = $3377;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3381 = self.value;
                                                                                                                                                                                                                                                            var $3382 = Parser$Reply$error$(Parser$Error$combine$($3381, $3379));
                                                                                                                                                                                                                                                            var $3380 = $3382;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3383 = Parser$Reply$error$($3379);
                                                                                                                                                                                                                                                            var $3380 = $3383;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3378 = $3380;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3384 = self.pst;
                                                                                                                                                                                                                                                    var $3385 = self.val;
                                                                                                                                                                                                                                                    var self = $3384;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3387 = self.err;
                                                                                                                                                                                                                                                            var $3388 = self.nam;
                                                                                                                                                                                                                                                            var $3389 = self.ini;
                                                                                                                                                                                                                                                            var $3390 = self.idx;
                                                                                                                                                                                                                                                            var $3391 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3377, $3387), $3388, $3389, $3390, $3391);
                                                                                                                                                                                                                                                            var _term$143 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, $3292);
                                                                                                                                                                                                                                                            var _term$146 = Kind$Term$app$(_term$145, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$147 = Kind$Term$app$(_term$146, Kind$Term$ref$($3323));
                                                                                                                                                                                                                                                            var _lamb$148 = Kind$Term$lam$($3261, (_i$148 => {
                                                                                                                                                                                                                                                                var $3393 = Kind$Term$lam$($3323, (_x$149 => {
                                                                                                                                                                                                                                                                    var $3394 = $3354;
                                                                                                                                                                                                                                                                    return $3394;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $3393;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var _term$149 = Kind$Term$app$(_term$147, _lamb$148);
                                                                                                                                                                                                                                                            var _term$150 = Kind$Term$let$($3323, _term$149, (_x$150 => {
                                                                                                                                                                                                                                                                var $3395 = $3385;
                                                                                                                                                                                                                                                                return $3395;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var $3392 = Parser$Reply$value$(_reply$pst$142, _term$150);
                                                                                                                                                                                                                                                            var $3386 = $3392;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3378 = $3386;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3376 = $3378;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3370 = $3376;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3363 = $3370;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3361 = $3363;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3355 = $3361;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3347 = $3355;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3345 = $3347;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3339 = $3345;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3332 = $3339;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3330 = $3332;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3324 = $3330;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3316 = $3324;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3314 = $3316;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3308 = $3314;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3301 = $3308;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3299 = $3301;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3293 = $3299;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3285 = $3293;
                                                                                                    break;
                                                                                            };
                                                                                            var $3283 = $3285;
                                                                                            break;
                                                                                    };
                                                                                    var $3277 = $3283;
                                                                                    break;
                                                                            };
                                                                            var $3270 = $3277;
                                                                            break;
                                                                    };
                                                                    var $3268 = $3270;
                                                                    break;
                                                            };
                                                            var $3262 = $3268;
                                                            break;
                                                    };
                                                    var $3254 = $3262;
                                                    break;
                                            };
                                            var $3252 = $3254;
                                            break;
                                    };
                                    var $3246 = $3252;
                                    break;
                            };
                            var $3239 = $3246;
                            break;
                    };
                    var $3237 = $3239;
                    break;
            };
            return $3237;
        }));
        return $3236;
    };
    const Kind$Parser$letforin$with = x0 => Kind$Parser$letforin$with$(x0);

    function Kind$Parser$letwhile$(_body$1) {
        var $3396 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3398 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3400 = self.err;
                            var self = $3398;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3402 = self.value;
                                    var $3403 = Parser$Reply$error$(Parser$Error$combine$($3402, $3400));
                                    var $3401 = $3403;
                                    break;
                                case 'Maybe.none':
                                    var $3404 = Parser$Reply$error$($3400);
                                    var $3401 = $3404;
                                    break;
                            };
                            var $3399 = $3401;
                            break;
                        case 'Parser.Reply.value':
                            var $3405 = self.pst;
                            var self = $3405;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3407 = self.err;
                                    var $3408 = self.nam;
                                    var $3409 = self.ini;
                                    var $3410 = self.idx;
                                    var $3411 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3398, $3407), $3408, $3409, $3410, $3411);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3413 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3415 = self.err;
                                                    var self = $3413;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3417 = self.value;
                                                            var $3418 = Parser$Reply$error$(Parser$Error$combine$($3417, $3415));
                                                            var $3416 = $3418;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3419 = Parser$Reply$error$($3415);
                                                            var $3416 = $3419;
                                                            break;
                                                    };
                                                    var $3414 = $3416;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3420 = self.pst;
                                                    var $3421 = self.val;
                                                    var self = $3420;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3423 = self.err;
                                                            var $3424 = self.nam;
                                                            var $3425 = self.ini;
                                                            var $3426 = self.idx;
                                                            var $3427 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3413, $3423), $3424, $3425, $3426, $3427);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3429 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3431 = self.err;
                                                                            var self = $3429;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3433 = self.value;
                                                                                    var $3434 = Parser$Reply$error$(Parser$Error$combine$($3433, $3431));
                                                                                    var $3432 = $3434;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3435 = Parser$Reply$error$($3431);
                                                                                    var $3432 = $3435;
                                                                                    break;
                                                                            };
                                                                            var $3430 = $3432;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3436 = self.pst;
                                                                            var self = $3436;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3438 = self.err;
                                                                                    var $3439 = self.nam;
                                                                                    var $3440 = self.ini;
                                                                                    var $3441 = self.idx;
                                                                                    var $3442 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3429, $3438), $3439, $3440, $3441, $3442);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3444 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("while ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3446 = self.err;
                                                                                                    var self = $3444;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3448 = self.value;
                                                                                                            var $3449 = Parser$Reply$error$(Parser$Error$combine$($3448, $3446));
                                                                                                            var $3447 = $3449;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3450 = Parser$Reply$error$($3446);
                                                                                                            var $3447 = $3450;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3445 = $3447;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3451 = self.pst;
                                                                                                    var self = $3451;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3453 = self.err;
                                                                                                            var $3454 = self.nam;
                                                                                                            var $3455 = self.ini;
                                                                                                            var $3456 = self.idx;
                                                                                                            var $3457 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3444, $3453), $3454, $3455, $3456, $3457);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3459 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3461 = self.err;
                                                                                                                            var self = $3459;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3463 = self.value;
                                                                                                                                    var $3464 = Parser$Reply$error$(Parser$Error$combine$($3463, $3461));
                                                                                                                                    var $3462 = $3464;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3465 = Parser$Reply$error$($3461);
                                                                                                                                    var $3462 = $3465;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3460 = $3462;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3466 = self.pst;
                                                                                                                            var $3467 = self.val;
                                                                                                                            var self = $3466;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3469 = self.err;
                                                                                                                                    var $3470 = self.nam;
                                                                                                                                    var $3471 = self.ini;
                                                                                                                                    var $3472 = self.idx;
                                                                                                                                    var $3473 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3459, $3469), $3470, $3471, $3472, $3473);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3475 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3477 = self.err;
                                                                                                                                                    var self = $3475;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3479 = self.value;
                                                                                                                                                            var $3480 = Parser$Reply$error$(Parser$Error$combine$($3479, $3477));
                                                                                                                                                            var $3478 = $3480;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3481 = Parser$Reply$error$($3477);
                                                                                                                                                            var $3478 = $3481;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3476 = $3478;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3482 = self.pst;
                                                                                                                                                    var self = $3482;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3484 = self.err;
                                                                                                                                                            var $3485 = self.nam;
                                                                                                                                                            var $3486 = self.ini;
                                                                                                                                                            var $3487 = self.idx;
                                                                                                                                                            var $3488 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3475, $3484), $3485, $3486, $3487, $3488);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3490 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3492 = self.err;
                                                                                                                                                                            var self = $3490;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3494 = self.value;
                                                                                                                                                                                    var $3495 = Parser$Reply$error$(Parser$Error$combine$($3494, $3492));
                                                                                                                                                                                    var $3493 = $3495;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3496 = Parser$Reply$error$($3492);
                                                                                                                                                                                    var $3493 = $3496;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3491 = $3493;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3497 = self.pst;
                                                                                                                                                                            var $3498 = self.val;
                                                                                                                                                                            var self = $3497;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3500 = self.err;
                                                                                                                                                                                    var $3501 = self.nam;
                                                                                                                                                                                    var $3502 = self.ini;
                                                                                                                                                                                    var $3503 = self.idx;
                                                                                                                                                                                    var $3504 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3490, $3500), $3501, $3502, $3503, $3504);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3506 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3508 = self.err;
                                                                                                                                                                                                    var self = $3506;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3510 = self.value;
                                                                                                                                                                                                            var $3511 = Parser$Reply$error$(Parser$Error$combine$($3510, $3508));
                                                                                                                                                                                                            var $3509 = $3511;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3512 = Parser$Reply$error$($3508);
                                                                                                                                                                                                            var $3509 = $3512;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3507 = $3509;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3513 = self.pst;
                                                                                                                                                                                                    var self = $3513;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3515 = self.err;
                                                                                                                                                                                                            var $3516 = self.nam;
                                                                                                                                                                                                            var $3517 = self.ini;
                                                                                                                                                                                                            var $3518 = self.idx;
                                                                                                                                                                                                            var $3519 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3506, $3515), $3516, $3517, $3518, $3519);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3521 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3523 = self.err;
                                                                                                                                                                                                                            var self = $3521;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3525 = self.value;
                                                                                                                                                                                                                                    var $3526 = Parser$Reply$error$(Parser$Error$combine$($3525, $3523));
                                                                                                                                                                                                                                    var $3524 = $3526;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3527 = Parser$Reply$error$($3523);
                                                                                                                                                                                                                                    var $3524 = $3527;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3522 = $3524;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3528 = self.pst;
                                                                                                                                                                                                                            var $3529 = self.val;
                                                                                                                                                                                                                            var self = $3528;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3531 = self.err;
                                                                                                                                                                                                                                    var $3532 = self.nam;
                                                                                                                                                                                                                                    var $3533 = self.ini;
                                                                                                                                                                                                                                    var $3534 = self.idx;
                                                                                                                                                                                                                                    var $3535 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3521, $3531), $3532, $3533, $3534, $3535);
                                                                                                                                                                                                                                    var _term$129 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$ref$($3421));
                                                                                                                                                                                                                                    var _term$132 = Kind$Term$app$(_term$131, Kind$Term$lam$($3421, (_s$132 => {
                                                                                                                                                                                                                                        var $3537 = $3467;
                                                                                                                                                                                                                                        return $3537;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$133 = Kind$Term$app$(_term$132, Kind$Term$lam$($3421, (_s$133 => {
                                                                                                                                                                                                                                        var $3538 = $3498;
                                                                                                                                                                                                                                        return $3538;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$134 = Kind$Term$let$($3421, _term$133, (_x$134 => {
                                                                                                                                                                                                                                        var $3539 = $3529;
                                                                                                                                                                                                                                        return $3539;
                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                    var $3536 = Parser$Reply$value$(_reply$pst$128, _term$134);
                                                                                                                                                                                                                                    var $3530 = $3536;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3522 = $3530;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3520 = $3522;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3514 = $3520;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3507 = $3514;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3505 = $3507;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3499 = $3505;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3491 = $3499;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3489 = $3491;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3483 = $3489;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3476 = $3483;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3474 = $3476;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3468 = $3474;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3460 = $3468;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3458 = $3460;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3452 = $3458;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3445 = $3452;
                                                                                                    break;
                                                                                            };
                                                                                            var $3443 = $3445;
                                                                                            break;
                                                                                    };
                                                                                    var $3437 = $3443;
                                                                                    break;
                                                                            };
                                                                            var $3430 = $3437;
                                                                            break;
                                                                    };
                                                                    var $3428 = $3430;
                                                                    break;
                                                            };
                                                            var $3422 = $3428;
                                                            break;
                                                    };
                                                    var $3414 = $3422;
                                                    break;
                                            };
                                            var $3412 = $3414;
                                            break;
                                    };
                                    var $3406 = $3412;
                                    break;
                            };
                            var $3399 = $3406;
                            break;
                    };
                    var $3397 = $3399;
                    break;
            };
            return $3397;
        }));
        return $3396;
    };
    const Kind$Parser$letwhile = x0 => Kind$Parser$letwhile$(x0);

    function Kind$Parser$letwhile$with$(_body$1) {
        var $3540 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3542 = self.err;
                    var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3544 = self.err;
                            var self = $3542;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3546 = self.value;
                                    var $3547 = Parser$Reply$error$(Parser$Error$combine$($3546, $3544));
                                    var $3545 = $3547;
                                    break;
                                case 'Maybe.none':
                                    var $3548 = Parser$Reply$error$($3544);
                                    var $3545 = $3548;
                                    break;
                            };
                            var $3543 = $3545;
                            break;
                        case 'Parser.Reply.value':
                            var $3549 = self.pst;
                            var self = $3549;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3551 = self.err;
                                    var $3552 = self.nam;
                                    var $3553 = self.ini;
                                    var $3554 = self.idx;
                                    var $3555 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3542, $3551), $3552, $3553, $3554, $3555);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3557 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3559 = self.err;
                                                    var self = $3557;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3561 = self.value;
                                                            var $3562 = Parser$Reply$error$(Parser$Error$combine$($3561, $3559));
                                                            var $3560 = $3562;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3563 = Parser$Reply$error$($3559);
                                                            var $3560 = $3563;
                                                            break;
                                                    };
                                                    var $3558 = $3560;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3564 = self.pst;
                                                    var $3565 = self.val;
                                                    var self = $3564;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3567 = self.err;
                                                            var $3568 = self.nam;
                                                            var $3569 = self.ini;
                                                            var $3570 = self.idx;
                                                            var $3571 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3557, $3567), $3568, $3569, $3570, $3571);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3573 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3575 = self.err;
                                                                            var self = $3573;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3577 = self.value;
                                                                                    var $3578 = Parser$Reply$error$(Parser$Error$combine$($3577, $3575));
                                                                                    var $3576 = $3578;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3579 = Parser$Reply$error$($3575);
                                                                                    var $3576 = $3579;
                                                                                    break;
                                                                            };
                                                                            var $3574 = $3576;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3580 = self.pst;
                                                                            var self = $3580;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3582 = self.err;
                                                                                    var $3583 = self.nam;
                                                                                    var $3584 = self.ini;
                                                                                    var $3585 = self.idx;
                                                                                    var $3586 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3573, $3582), $3583, $3584, $3585, $3586);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3588 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3590 = self.err;
                                                                                                    var self = $3588;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3592 = self.value;
                                                                                                            var $3593 = Parser$Reply$error$(Parser$Error$combine$($3592, $3590));
                                                                                                            var $3591 = $3593;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3594 = Parser$Reply$error$($3590);
                                                                                                            var $3591 = $3594;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3589 = $3591;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3595 = self.pst;
                                                                                                    var $3596 = self.val;
                                                                                                    var self = $3595;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3598 = self.err;
                                                                                                            var $3599 = self.nam;
                                                                                                            var $3600 = self.ini;
                                                                                                            var $3601 = self.idx;
                                                                                                            var $3602 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3588, $3598), $3599, $3600, $3601, $3602);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3604 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3606 = self.err;
                                                                                                                            var self = $3604;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3608 = self.value;
                                                                                                                                    var $3609 = Parser$Reply$error$(Parser$Error$combine$($3608, $3606));
                                                                                                                                    var $3607 = $3609;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3610 = Parser$Reply$error$($3606);
                                                                                                                                    var $3607 = $3610;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3605 = $3607;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3611 = self.pst;
                                                                                                                            var self = $3611;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3613 = self.err;
                                                                                                                                    var $3614 = self.nam;
                                                                                                                                    var $3615 = self.ini;
                                                                                                                                    var $3616 = self.idx;
                                                                                                                                    var $3617 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3604, $3613), $3614, $3615, $3616, $3617);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3619 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3621 = self.err;
                                                                                                                                                    var self = $3619;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3623 = self.value;
                                                                                                                                                            var $3624 = Parser$Reply$error$(Parser$Error$combine$($3623, $3621));
                                                                                                                                                            var $3622 = $3624;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3625 = Parser$Reply$error$($3621);
                                                                                                                                                            var $3622 = $3625;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3620 = $3622;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3626 = self.pst;
                                                                                                                                                    var $3627 = self.val;
                                                                                                                                                    var self = $3626;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3629 = self.err;
                                                                                                                                                            var $3630 = self.nam;
                                                                                                                                                            var $3631 = self.ini;
                                                                                                                                                            var $3632 = self.idx;
                                                                                                                                                            var $3633 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3619, $3629), $3630, $3631, $3632, $3633);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3635 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3637 = self.err;
                                                                                                                                                                            var self = $3635;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3639 = self.value;
                                                                                                                                                                                    var $3640 = Parser$Reply$error$(Parser$Error$combine$($3639, $3637));
                                                                                                                                                                                    var $3638 = $3640;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3641 = Parser$Reply$error$($3637);
                                                                                                                                                                                    var $3638 = $3641;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3636 = $3638;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3642 = self.pst;
                                                                                                                                                                            var self = $3642;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3644 = self.err;
                                                                                                                                                                                    var $3645 = self.nam;
                                                                                                                                                                                    var $3646 = self.ini;
                                                                                                                                                                                    var $3647 = self.idx;
                                                                                                                                                                                    var $3648 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3635, $3644), $3645, $3646, $3647, $3648);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3650 = self.err;
                                                                                                                                                                                            var _reply$106 = _body$1(Unit$new)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3652 = self.err;
                                                                                                                                                                                                    var self = $3650;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3654 = self.value;
                                                                                                                                                                                                            var $3655 = Parser$Reply$error$(Parser$Error$combine$($3654, $3652));
                                                                                                                                                                                                            var $3653 = $3655;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3656 = Parser$Reply$error$($3652);
                                                                                                                                                                                                            var $3653 = $3656;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3651 = $3653;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3657 = self.pst;
                                                                                                                                                                                                    var $3658 = self.val;
                                                                                                                                                                                                    var self = $3657;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3660 = self.err;
                                                                                                                                                                                                            var $3661 = self.nam;
                                                                                                                                                                                                            var $3662 = self.ini;
                                                                                                                                                                                                            var $3663 = self.idx;
                                                                                                                                                                                                            var $3664 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3650, $3660), $3661, $3662, $3663, $3664);
                                                                                                                                                                                                            var _term$115 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                            var _term$116 = Kind$Term$app$(_term$115, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                            var _term$117 = Kind$Term$app$(_term$116, Kind$Term$ref$($3596));
                                                                                                                                                                                                            var _term$118 = Kind$Term$app$(_term$117, Kind$Term$lam$($3596, (_s$118 => {
                                                                                                                                                                                                                var $3666 = $3565;
                                                                                                                                                                                                                return $3666;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$119 = Kind$Term$app$(_term$118, Kind$Term$lam$($3596, (_s$119 => {
                                                                                                                                                                                                                var $3667 = $3627;
                                                                                                                                                                                                                return $3667;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$120 = Kind$Term$let$($3596, _term$119, (_x$120 => {
                                                                                                                                                                                                                var $3668 = $3658;
                                                                                                                                                                                                                return $3668;
                                                                                                                                                                                                            }));
                                                                                                                                                                                                            var $3665 = Parser$Reply$value$(_reply$pst$114, _term$120);
                                                                                                                                                                                                            var $3659 = $3665;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3651 = $3659;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3649 = $3651;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3643 = $3649;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3636 = $3643;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3634 = $3636;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3628 = $3634;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3620 = $3628;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3618 = $3620;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3612 = $3618;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3605 = $3612;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3603 = $3605;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3597 = $3603;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3589 = $3597;
                                                                                                    break;
                                                                                            };
                                                                                            var $3587 = $3589;
                                                                                            break;
                                                                                    };
                                                                                    var $3581 = $3587;
                                                                                    break;
                                                                            };
                                                                            var $3574 = $3581;
                                                                            break;
                                                                    };
                                                                    var $3572 = $3574;
                                                                    break;
                                                            };
                                                            var $3566 = $3572;
                                                            break;
                                                    };
                                                    var $3558 = $3566;
                                                    break;
                                            };
                                            var $3556 = $3558;
                                            break;
                                    };
                                    var $3550 = $3556;
                                    break;
                            };
                            var $3543 = $3550;
                            break;
                    };
                    var $3541 = $3543;
                    break;
            };
            return $3541;
        }));
        return $3540;
    };
    const Kind$Parser$letwhile$with = x0 => Kind$Parser$letwhile$with$(x0);

    function Kind$Parser$let$(_body$1) {
        var $3669 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3671 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3673 = self.err;
                            var self = $3671;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3675 = self.value;
                                    var $3676 = Parser$Reply$error$(Parser$Error$combine$($3675, $3673));
                                    var $3674 = $3676;
                                    break;
                                case 'Maybe.none':
                                    var $3677 = Parser$Reply$error$($3673);
                                    var $3674 = $3677;
                                    break;
                            };
                            var $3672 = $3674;
                            break;
                        case 'Parser.Reply.value':
                            var $3678 = self.pst;
                            var self = $3678;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3680 = self.err;
                                    var $3681 = self.nam;
                                    var $3682 = self.ini;
                                    var $3683 = self.idx;
                                    var $3684 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3671, $3680), $3681, $3682, $3683, $3684);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3686 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3688 = self.err;
                                                    var self = $3686;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3690 = self.value;
                                                            var $3691 = Parser$Reply$error$(Parser$Error$combine$($3690, $3688));
                                                            var $3689 = $3691;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3692 = Parser$Reply$error$($3688);
                                                            var $3689 = $3692;
                                                            break;
                                                    };
                                                    var $3687 = $3689;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3693 = self.pst;
                                                    var $3694 = self.val;
                                                    var self = $3693;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3696 = self.err;
                                                            var $3697 = self.nam;
                                                            var $3698 = self.ini;
                                                            var $3699 = self.idx;
                                                            var $3700 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3686, $3696), $3697, $3698, $3699, $3700);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3702 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3704 = self.err;
                                                                            var self = $3702;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3706 = self.value;
                                                                                    var $3707 = Parser$Reply$error$(Parser$Error$combine$($3706, $3704));
                                                                                    var $3705 = $3707;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3708 = Parser$Reply$error$($3704);
                                                                                    var $3705 = $3708;
                                                                                    break;
                                                                            };
                                                                            var $3703 = $3705;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3709 = self.pst;
                                                                            var self = $3709;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3711 = self.err;
                                                                                    var $3712 = self.nam;
                                                                                    var $3713 = self.ini;
                                                                                    var $3714 = self.idx;
                                                                                    var $3715 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3702, $3711), $3712, $3713, $3714, $3715);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3717 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3719 = self.err;
                                                                                                    var self = $3717;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3721 = self.value;
                                                                                                            var $3722 = Parser$Reply$error$(Parser$Error$combine$($3721, $3719));
                                                                                                            var $3720 = $3722;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3723 = Parser$Reply$error$($3719);
                                                                                                            var $3720 = $3723;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3718 = $3720;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3724 = self.pst;
                                                                                                    var $3725 = self.val;
                                                                                                    var self = $3724;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3727 = self.err;
                                                                                                            var $3728 = self.nam;
                                                                                                            var $3729 = self.ini;
                                                                                                            var $3730 = self.idx;
                                                                                                            var $3731 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3717, $3727), $3728, $3729, $3730, $3731);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3733 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3735 = self.err;
                                                                                                                            var self = $3733;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3737 = self.value;
                                                                                                                                    var $3738 = Parser$Reply$error$(Parser$Error$combine$($3737, $3735));
                                                                                                                                    var $3736 = $3738;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3739 = Parser$Reply$error$($3735);
                                                                                                                                    var $3736 = $3739;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3734 = $3736;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3740 = self.pst;
                                                                                                                            var self = $3740;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3742 = self.err;
                                                                                                                                    var $3743 = self.nam;
                                                                                                                                    var $3744 = self.ini;
                                                                                                                                    var $3745 = self.idx;
                                                                                                                                    var $3746 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3733, $3742), $3743, $3744, $3745, $3746);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3748 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3750 = self.err;
                                                                                                                                                    var self = $3748;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3752 = self.value;
                                                                                                                                                            var $3753 = Parser$Reply$error$(Parser$Error$combine$($3752, $3750));
                                                                                                                                                            var $3751 = $3753;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3754 = Parser$Reply$error$($3750);
                                                                                                                                                            var $3751 = $3754;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3749 = $3751;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3755 = self.pst;
                                                                                                                                                    var $3756 = self.val;
                                                                                                                                                    var self = $3755;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3758 = self.err;
                                                                                                                                                            var $3759 = self.nam;
                                                                                                                                                            var $3760 = self.ini;
                                                                                                                                                            var $3761 = self.idx;
                                                                                                                                                            var $3762 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3748, $3758), $3759, $3760, $3761, $3762);
                                                                                                                                                            var $3763 = Parser$Reply$value$(_reply$pst$86, Kind$Term$let$($3694, $3725, (_x$87 => {
                                                                                                                                                                var $3764 = $3756;
                                                                                                                                                                return $3764;
                                                                                                                                                            })));
                                                                                                                                                            var $3757 = $3763;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3749 = $3757;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3747 = $3749;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3741 = $3747;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3734 = $3741;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3732 = $3734;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3726 = $3732;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3718 = $3726;
                                                                                                    break;
                                                                                            };
                                                                                            var $3716 = $3718;
                                                                                            break;
                                                                                    };
                                                                                    var $3710 = $3716;
                                                                                    break;
                                                                            };
                                                                            var $3703 = $3710;
                                                                            break;
                                                                    };
                                                                    var $3701 = $3703;
                                                                    break;
                                                            };
                                                            var $3695 = $3701;
                                                            break;
                                                    };
                                                    var $3687 = $3695;
                                                    break;
                                            };
                                            var $3685 = $3687;
                                            break;
                                    };
                                    var $3679 = $3685;
                                    break;
                            };
                            var $3672 = $3679;
                            break;
                    };
                    var $3670 = $3672;
                    break;
            };
            return $3670;
        }));
        return $3669;
    };
    const Kind$Parser$let = x0 => Kind$Parser$let$(x0);

    function Kind$Parser$let$omit$(_body$1) {
        var $3765 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3767 = self.err;
                    var _reply$8 = Kind$Parser$name1$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3769 = self.err;
                            var self = $3767;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3771 = self.value;
                                    var $3772 = Parser$Reply$error$(Parser$Error$combine$($3771, $3769));
                                    var $3770 = $3772;
                                    break;
                                case 'Maybe.none':
                                    var $3773 = Parser$Reply$error$($3769);
                                    var $3770 = $3773;
                                    break;
                            };
                            var $3768 = $3770;
                            break;
                        case 'Parser.Reply.value':
                            var $3774 = self.pst;
                            var $3775 = self.val;
                            var self = $3774;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3777 = self.err;
                                    var $3778 = self.nam;
                                    var $3779 = self.ini;
                                    var $3780 = self.idx;
                                    var $3781 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3767, $3777), $3778, $3779, $3780, $3781);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3783 = self.err;
                                            var _reply$22 = Kind$Parser$text$("= ", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3785 = self.err;
                                                    var self = $3783;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3787 = self.value;
                                                            var $3788 = Parser$Reply$error$(Parser$Error$combine$($3787, $3785));
                                                            var $3786 = $3788;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3789 = Parser$Reply$error$($3785);
                                                            var $3786 = $3789;
                                                            break;
                                                    };
                                                    var $3784 = $3786;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3790 = self.pst;
                                                    var self = $3790;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3792 = self.err;
                                                            var $3793 = self.nam;
                                                            var $3794 = self.ini;
                                                            var $3795 = self.idx;
                                                            var $3796 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3783, $3792), $3793, $3794, $3795, $3796);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3798 = self.err;
                                                                    var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3800 = self.err;
                                                                            var self = $3798;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3802 = self.value;
                                                                                    var $3803 = Parser$Reply$error$(Parser$Error$combine$($3802, $3800));
                                                                                    var $3801 = $3803;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3804 = Parser$Reply$error$($3800);
                                                                                    var $3801 = $3804;
                                                                                    break;
                                                                            };
                                                                            var $3799 = $3801;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3805 = self.pst;
                                                                            var $3806 = self.val;
                                                                            var self = $3805;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3808 = self.err;
                                                                                    var $3809 = self.nam;
                                                                                    var $3810 = self.ini;
                                                                                    var $3811 = self.idx;
                                                                                    var $3812 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3798, $3808), $3809, $3810, $3811, $3812);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3814 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3816 = self.err;
                                                                                                    var self = $3814;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3818 = self.value;
                                                                                                            var $3819 = Parser$Reply$error$(Parser$Error$combine$($3818, $3816));
                                                                                                            var $3817 = $3819;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3820 = Parser$Reply$error$($3816);
                                                                                                            var $3817 = $3820;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3815 = $3817;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3821 = self.pst;
                                                                                                    var self = $3821;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3823 = self.err;
                                                                                                            var $3824 = self.nam;
                                                                                                            var $3825 = self.ini;
                                                                                                            var $3826 = self.idx;
                                                                                                            var $3827 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3814, $3823), $3824, $3825, $3826, $3827);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3829 = self.err;
                                                                                                                    var _reply$64 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3831 = self.err;
                                                                                                                            var self = $3829;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3833 = self.value;
                                                                                                                                    var $3834 = Parser$Reply$error$(Parser$Error$combine$($3833, $3831));
                                                                                                                                    var $3832 = $3834;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3835 = Parser$Reply$error$($3831);
                                                                                                                                    var $3832 = $3835;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3830 = $3832;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3836 = self.pst;
                                                                                                                            var $3837 = self.val;
                                                                                                                            var self = $3836;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3839 = self.err;
                                                                                                                                    var $3840 = self.nam;
                                                                                                                                    var $3841 = self.ini;
                                                                                                                                    var $3842 = self.idx;
                                                                                                                                    var $3843 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3829, $3839), $3840, $3841, $3842, $3843);
                                                                                                                                    var $3844 = Parser$Reply$value$(_reply$pst$72, Kind$Term$let$($3775, $3806, (_x$73 => {
                                                                                                                                        var $3845 = $3837;
                                                                                                                                        return $3845;
                                                                                                                                    })));
                                                                                                                                    var $3838 = $3844;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3830 = $3838;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3828 = $3830;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3822 = $3828;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3815 = $3822;
                                                                                                    break;
                                                                                            };
                                                                                            var $3813 = $3815;
                                                                                            break;
                                                                                    };
                                                                                    var $3807 = $3813;
                                                                                    break;
                                                                            };
                                                                            var $3799 = $3807;
                                                                            break;
                                                                    };
                                                                    var $3797 = $3799;
                                                                    break;
                                                            };
                                                            var $3791 = $3797;
                                                            break;
                                                    };
                                                    var $3784 = $3791;
                                                    break;
                                            };
                                            var $3782 = $3784;
                                            break;
                                    };
                                    var $3776 = $3782;
                                    break;
                            };
                            var $3768 = $3776;
                            break;
                    };
                    var $3766 = $3768;
                    break;
            };
            return $3766;
        }));
        return $3765;
    };
    const Kind$Parser$let$omit = x0 => Kind$Parser$let$omit$(x0);

    function Kind$Parser$getwhile$(_body$1) {
        var $3846 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3848 = self.err;
                    var _reply$8 = Parser$maybe$(Kind$Parser$text("let "), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3850 = self.err;
                            var self = $3848;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3852 = self.value;
                                    var $3853 = Parser$Reply$error$(Parser$Error$combine$($3852, $3850));
                                    var $3851 = $3853;
                                    break;
                                case 'Maybe.none':
                                    var $3854 = Parser$Reply$error$($3850);
                                    var $3851 = $3854;
                                    break;
                            };
                            var $3849 = $3851;
                            break;
                        case 'Parser.Reply.value':
                            var $3855 = self.pst;
                            var self = $3855;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3857 = self.err;
                                    var $3858 = self.nam;
                                    var $3859 = self.ini;
                                    var $3860 = self.idx;
                                    var $3861 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3848, $3857), $3858, $3859, $3860, $3861);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3863 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3865 = self.err;
                                                    var self = $3863;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3867 = self.value;
                                                            var $3868 = Parser$Reply$error$(Parser$Error$combine$($3867, $3865));
                                                            var $3866 = $3868;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3869 = Parser$Reply$error$($3865);
                                                            var $3866 = $3869;
                                                            break;
                                                    };
                                                    var $3864 = $3866;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3870 = self.pst;
                                                    var self = $3870;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3872 = self.err;
                                                            var $3873 = self.nam;
                                                            var $3874 = self.ini;
                                                            var $3875 = self.idx;
                                                            var $3876 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3863, $3872), $3873, $3874, $3875, $3876);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3878 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3880 = self.err;
                                                                            var self = $3878;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3882 = self.value;
                                                                                    var $3883 = Parser$Reply$error$(Parser$Error$combine$($3882, $3880));
                                                                                    var $3881 = $3883;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3884 = Parser$Reply$error$($3880);
                                                                                    var $3881 = $3884;
                                                                                    break;
                                                                            };
                                                                            var $3879 = $3881;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3885 = self.pst;
                                                                            var $3886 = self.val;
                                                                            var self = $3885;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3888 = self.err;
                                                                                    var $3889 = self.nam;
                                                                                    var $3890 = self.ini;
                                                                                    var $3891 = self.idx;
                                                                                    var $3892 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3878, $3888), $3889, $3890, $3891, $3892);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3894 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3896 = self.err;
                                                                                                    var self = $3894;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3898 = self.value;
                                                                                                            var $3899 = Parser$Reply$error$(Parser$Error$combine$($3898, $3896));
                                                                                                            var $3897 = $3899;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3900 = Parser$Reply$error$($3896);
                                                                                                            var $3897 = $3900;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3895 = $3897;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3901 = self.pst;
                                                                                                    var self = $3901;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3903 = self.err;
                                                                                                            var $3904 = self.nam;
                                                                                                            var $3905 = self.ini;
                                                                                                            var $3906 = self.idx;
                                                                                                            var $3907 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3894, $3903), $3904, $3905, $3906, $3907);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3909 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3911 = self.err;
                                                                                                                            var self = $3909;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3913 = self.value;
                                                                                                                                    var $3914 = Parser$Reply$error$(Parser$Error$combine$($3913, $3911));
                                                                                                                                    var $3912 = $3914;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3915 = Parser$Reply$error$($3911);
                                                                                                                                    var $3912 = $3915;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3910 = $3912;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3916 = self.pst;
                                                                                                                            var $3917 = self.val;
                                                                                                                            var self = $3916;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3919 = self.err;
                                                                                                                                    var $3920 = self.nam;
                                                                                                                                    var $3921 = self.ini;
                                                                                                                                    var $3922 = self.idx;
                                                                                                                                    var $3923 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3909, $3919), $3920, $3921, $3922, $3923);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3925 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3927 = self.err;
                                                                                                                                                    var self = $3925;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3929 = self.value;
                                                                                                                                                            var $3930 = Parser$Reply$error$(Parser$Error$combine$($3929, $3927));
                                                                                                                                                            var $3928 = $3930;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3931 = Parser$Reply$error$($3927);
                                                                                                                                                            var $3928 = $3931;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3926 = $3928;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3932 = self.pst;
                                                                                                                                                    var self = $3932;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3934 = self.err;
                                                                                                                                                            var $3935 = self.nam;
                                                                                                                                                            var $3936 = self.ini;
                                                                                                                                                            var $3937 = self.idx;
                                                                                                                                                            var $3938 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3925, $3934), $3935, $3936, $3937, $3938);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3940 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3942 = self.err;
                                                                                                                                                                            var self = $3940;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3944 = self.value;
                                                                                                                                                                                    var $3945 = Parser$Reply$error$(Parser$Error$combine$($3944, $3942));
                                                                                                                                                                                    var $3943 = $3945;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3946 = Parser$Reply$error$($3942);
                                                                                                                                                                                    var $3943 = $3946;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3941 = $3943;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3947 = self.pst;
                                                                                                                                                                            var self = $3947;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3949 = self.err;
                                                                                                                                                                                    var $3950 = self.nam;
                                                                                                                                                                                    var $3951 = self.ini;
                                                                                                                                                                                    var $3952 = self.idx;
                                                                                                                                                                                    var $3953 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3940, $3949), $3950, $3951, $3952, $3953);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3955 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("while ", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3957 = self.err;
                                                                                                                                                                                                    var self = $3955;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3959 = self.value;
                                                                                                                                                                                                            var $3960 = Parser$Reply$error$(Parser$Error$combine$($3959, $3957));
                                                                                                                                                                                                            var $3958 = $3960;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3961 = Parser$Reply$error$($3957);
                                                                                                                                                                                                            var $3958 = $3961;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3956 = $3958;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3962 = self.pst;
                                                                                                                                                                                                    var self = $3962;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3964 = self.err;
                                                                                                                                                                                                            var $3965 = self.nam;
                                                                                                                                                                                                            var $3966 = self.ini;
                                                                                                                                                                                                            var $3967 = self.idx;
                                                                                                                                                                                                            var $3968 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3955, $3964), $3965, $3966, $3967, $3968);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3970 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3972 = self.err;
                                                                                                                                                                                                                            var self = $3970;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3974 = self.value;
                                                                                                                                                                                                                                    var $3975 = Parser$Reply$error$(Parser$Error$combine$($3974, $3972));
                                                                                                                                                                                                                                    var $3973 = $3975;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3976 = Parser$Reply$error$($3972);
                                                                                                                                                                                                                                    var $3973 = $3976;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3971 = $3973;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3977 = self.pst;
                                                                                                                                                                                                                            var $3978 = self.val;
                                                                                                                                                                                                                            var self = $3977;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3980 = self.err;
                                                                                                                                                                                                                                    var $3981 = self.nam;
                                                                                                                                                                                                                                    var $3982 = self.ini;
                                                                                                                                                                                                                                    var $3983 = self.idx;
                                                                                                                                                                                                                                    var $3984 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3970, $3980), $3981, $3982, $3983, $3984);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3986 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3988 = self.err;
                                                                                                                                                                                                                                                    var self = $3986;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3990 = self.value;
                                                                                                                                                                                                                                                            var $3991 = Parser$Reply$error$(Parser$Error$combine$($3990, $3988));
                                                                                                                                                                                                                                                            var $3989 = $3991;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3992 = Parser$Reply$error$($3988);
                                                                                                                                                                                                                                                            var $3989 = $3992;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3987 = $3989;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3993 = self.pst;
                                                                                                                                                                                                                                                    var self = $3993;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3995 = self.err;
                                                                                                                                                                                                                                                            var $3996 = self.nam;
                                                                                                                                                                                                                                                            var $3997 = self.ini;
                                                                                                                                                                                                                                                            var $3998 = self.idx;
                                                                                                                                                                                                                                                            var $3999 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3986, $3995), $3996, $3997, $3998, $3999);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $4001 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $4003 = self.err;
                                                                                                                                                                                                                                                                            var self = $4001;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $4005 = self.value;
                                                                                                                                                                                                                                                                                    var $4006 = Parser$Reply$error$(Parser$Error$combine$($4005, $4003));
                                                                                                                                                                                                                                                                                    var $4004 = $4006;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $4007 = Parser$Reply$error$($4003);
                                                                                                                                                                                                                                                                                    var $4004 = $4007;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4002 = $4004;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $4008 = self.pst;
                                                                                                                                                                                                                                                                            var $4009 = self.val;
                                                                                                                                                                                                                                                                            var self = $4008;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $4011 = self.err;
                                                                                                                                                                                                                                                                                    var $4012 = self.nam;
                                                                                                                                                                                                                                                                                    var $4013 = self.ini;
                                                                                                                                                                                                                                                                                    var $4014 = self.idx;
                                                                                                                                                                                                                                                                                    var $4015 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4001, $4011), $4012, $4013, $4014, $4015);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $4017 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $4019 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $4017;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $4021 = self.value;
                                                                                                                                                                                                                                                                                                            var $4022 = Parser$Reply$error$(Parser$Error$combine$($4021, $4019));
                                                                                                                                                                                                                                                                                                            var $4020 = $4022;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $4023 = Parser$Reply$error$($4019);
                                                                                                                                                                                                                                                                                                            var $4020 = $4023;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4018 = $4020;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $4024 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $4024;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $4026 = self.err;
                                                                                                                                                                                                                                                                                                            var $4027 = self.nam;
                                                                                                                                                                                                                                                                                                            var $4028 = self.ini;
                                                                                                                                                                                                                                                                                                            var $4029 = self.idx;
                                                                                                                                                                                                                                                                                                            var $4030 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4017, $4026), $4027, $4028, $4029, $4030);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $4032 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $4034 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $4032;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $4036 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $4037 = Parser$Reply$error$(Parser$Error$combine$($4036, $4034));
                                                                                                                                                                                                                                                                                                                                    var $4035 = $4037;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $4038 = Parser$Reply$error$($4034);
                                                                                                                                                                                                                                                                                                                                    var $4035 = $4038;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4033 = $4035;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $4039 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $4040 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $4039;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $4042 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $4043 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $4044 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $4045 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $4046 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($4032, $4042), $4043, $4044, $4045, $4046);
                                                                                                                                                                                                                                                                                                                                    var _moti$185 = Kind$Term$lam$("", (_x$185 => {
                                                                                                                                                                                                                                                                                                                                        var $4048 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                                                        return $4048;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$188 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                                                    var _init$189 = Kind$Term$app$(_init$188, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$190 = Kind$Term$app$(_init$189, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$191 = Kind$Term$app$(_init$190, Kind$Term$ref$($3886));
                                                                                                                                                                                                                                                                                                                                    var _init$192 = Kind$Term$app$(_init$191, Kind$Term$ref$($3917));
                                                                                                                                                                                                                                                                                                                                    var _term$193 = Kind$Term$app$(_term$187, _init$192);
                                                                                                                                                                                                                                                                                                                                    var _term$194 = Kind$Term$app$(_term$193, Kind$Term$lam$("s", (_s$194 => {
                                                                                                                                                                                                                                                                                                                                        var $4049 = Kind$Term$app$(Kind$Term$app$(_s$194, _moti$185), Kind$Term$lam$($3886, (_x$195 => {
                                                                                                                                                                                                                                                                                                                                            var $4050 = Kind$Term$lam$($3917, (_y$196 => {
                                                                                                                                                                                                                                                                                                                                                var $4051 = $3978;
                                                                                                                                                                                                                                                                                                                                                return $4051;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4050;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4049;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$195 = Kind$Term$app$(_term$194, Kind$Term$lam$("s", (_s$195 => {
                                                                                                                                                                                                                                                                                                                                        var $4052 = Kind$Term$app$(Kind$Term$app$(_s$195, _moti$185), Kind$Term$lam$($3886, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                            var $4053 = Kind$Term$lam$($3917, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                                var $4054 = $4009;
                                                                                                                                                                                                                                                                                                                                                return $4054;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $4053;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $4052;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$196 = Kind$Term$app$(Kind$Term$app$(_term$195, _moti$185), Kind$Term$lam$($3886, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                        var $4055 = Kind$Term$lam$($3917, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                            var $4056 = $4040;
                                                                                                                                                                                                                                                                                                                                            return $4056;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $4055;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var $4047 = Parser$Reply$value$(_reply$pst$184, _term$196);
                                                                                                                                                                                                                                                                                                                                    var $4041 = $4047;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $4033 = $4041;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $4031 = $4033;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $4025 = $4031;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $4018 = $4025;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $4016 = $4018;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $4010 = $4016;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $4002 = $4010;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $4000 = $4002;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3994 = $4000;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3987 = $3994;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3985 = $3987;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3979 = $3985;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3971 = $3979;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3969 = $3971;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3963 = $3969;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3956 = $3963;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3954 = $3956;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3948 = $3954;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3941 = $3948;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3939 = $3941;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3933 = $3939;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3926 = $3933;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3924 = $3926;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3918 = $3924;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3910 = $3918;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3908 = $3910;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3902 = $3908;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3895 = $3902;
                                                                                                    break;
                                                                                            };
                                                                                            var $3893 = $3895;
                                                                                            break;
                                                                                    };
                                                                                    var $3887 = $3893;
                                                                                    break;
                                                                            };
                                                                            var $3879 = $3887;
                                                                            break;
                                                                    };
                                                                    var $3877 = $3879;
                                                                    break;
                                                            };
                                                            var $3871 = $3877;
                                                            break;
                                                    };
                                                    var $3864 = $3871;
                                                    break;
                                            };
                                            var $3862 = $3864;
                                            break;
                                    };
                                    var $3856 = $3862;
                                    break;
                            };
                            var $3849 = $3856;
                            break;
                    };
                    var $3847 = $3849;
                    break;
            };
            return $3847;
        }));
        return $3846;
    };
    const Kind$Parser$getwhile = x0 => Kind$Parser$getwhile$(x0);

    function Kind$Parser$getwhile$with$(_body$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $4058 = self.err;
                var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4060 = self.err;
                        var self = $4058;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4062 = self.value;
                                var $4063 = Parser$Reply$error$(Parser$Error$combine$($4062, $4060));
                                var $4061 = $4063;
                                break;
                            case 'Maybe.none':
                                var $4064 = Parser$Reply$error$($4060);
                                var $4061 = $4064;
                                break;
                        };
                        var $4059 = $4061;
                        break;
                    case 'Parser.Reply.value':
                        var $4065 = self.pst;
                        var self = $4065;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4067 = self.err;
                                var $4068 = self.nam;
                                var $4069 = self.ini;
                                var $4070 = self.idx;
                                var $4071 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4058, $4067), $4068, $4069, $4070, $4071);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4073 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4075 = self.err;
                                                var self = $4073;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4077 = self.value;
                                                        var $4078 = Parser$Reply$error$(Parser$Error$combine$($4077, $4075));
                                                        var $4076 = $4078;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4079 = Parser$Reply$error$($4075);
                                                        var $4076 = $4079;
                                                        break;
                                                };
                                                var $4074 = $4076;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4080 = self.pst;
                                                var $4081 = self.val;
                                                var self = $4080;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4083 = self.err;
                                                        var $4084 = self.nam;
                                                        var $4085 = self.ini;
                                                        var $4086 = self.idx;
                                                        var $4087 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4073, $4083), $4084, $4085, $4086, $4087);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4089 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4091 = self.err;
                                                                        var self = $4089;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4093 = self.value;
                                                                                var $4094 = Parser$Reply$error$(Parser$Error$combine$($4093, $4091));
                                                                                var $4092 = $4094;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4095 = Parser$Reply$error$($4091);
                                                                                var $4092 = $4095;
                                                                                break;
                                                                        };
                                                                        var $4090 = $4092;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4096 = self.pst;
                                                                        var self = $4096;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4098 = self.err;
                                                                                var $4099 = self.nam;
                                                                                var $4100 = self.ini;
                                                                                var $4101 = self.idx;
                                                                                var $4102 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4089, $4098), $4099, $4100, $4101, $4102);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4104 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4106 = self.err;
                                                                                                var self = $4104;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4108 = self.value;
                                                                                                        var $4109 = Parser$Reply$error$(Parser$Error$combine$($4108, $4106));
                                                                                                        var $4107 = $4109;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4110 = Parser$Reply$error$($4106);
                                                                                                        var $4107 = $4110;
                                                                                                        break;
                                                                                                };
                                                                                                var $4105 = $4107;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4111 = self.pst;
                                                                                                var self = $4111;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4113 = self.err;
                                                                                                        var $4114 = self.nam;
                                                                                                        var $4115 = self.ini;
                                                                                                        var $4116 = self.idx;
                                                                                                        var $4117 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4104, $4113), $4114, $4115, $4116, $4117);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4119 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4121 = self.err;
                                                                                                                        var self = $4119;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4123 = self.value;
                                                                                                                                var $4124 = Parser$Reply$error$(Parser$Error$combine$($4123, $4121));
                                                                                                                                var $4122 = $4124;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4125 = Parser$Reply$error$($4121);
                                                                                                                                var $4122 = $4125;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4120 = $4122;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4126 = self.pst;
                                                                                                                        var $4127 = self.val;
                                                                                                                        var self = $4126;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4129 = self.err;
                                                                                                                                var $4130 = self.nam;
                                                                                                                                var $4131 = self.ini;
                                                                                                                                var $4132 = self.idx;
                                                                                                                                var $4133 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4119, $4129), $4130, $4131, $4132, $4133);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4135 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$(",", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4137 = self.err;
                                                                                                                                                var self = $4135;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4139 = self.value;
                                                                                                                                                        var $4140 = Parser$Reply$error$(Parser$Error$combine$($4139, $4137));
                                                                                                                                                        var $4138 = $4140;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4141 = Parser$Reply$error$($4137);
                                                                                                                                                        var $4138 = $4141;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4136 = $4138;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4142 = self.pst;
                                                                                                                                                var self = $4142;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4144 = self.err;
                                                                                                                                                        var $4145 = self.nam;
                                                                                                                                                        var $4146 = self.ini;
                                                                                                                                                        var $4147 = self.idx;
                                                                                                                                                        var $4148 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4135, $4144), $4145, $4146, $4147, $4148);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4150 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$name1$(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4152 = self.err;
                                                                                                                                                                        var self = $4150;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4154 = self.value;
                                                                                                                                                                                var $4155 = Parser$Reply$error$(Parser$Error$combine$($4154, $4152));
                                                                                                                                                                                var $4153 = $4155;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4156 = Parser$Reply$error$($4152);
                                                                                                                                                                                var $4153 = $4156;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4151 = $4153;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4157 = self.pst;
                                                                                                                                                                        var $4158 = self.val;
                                                                                                                                                                        var self = $4157;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4160 = self.err;
                                                                                                                                                                                var $4161 = self.nam;
                                                                                                                                                                                var $4162 = self.ini;
                                                                                                                                                                                var $4163 = self.idx;
                                                                                                                                                                                var $4164 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4150, $4160), $4161, $4162, $4163, $4164);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $4166 = self.err;
                                                                                                                                                                                        var _reply$106 = Kind$Parser$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $4168 = self.err;
                                                                                                                                                                                                var self = $4166;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $4170 = self.value;
                                                                                                                                                                                                        var $4171 = Parser$Reply$error$(Parser$Error$combine$($4170, $4168));
                                                                                                                                                                                                        var $4169 = $4171;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $4172 = Parser$Reply$error$($4168);
                                                                                                                                                                                                        var $4169 = $4172;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4167 = $4169;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $4173 = self.pst;
                                                                                                                                                                                                var self = $4173;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $4175 = self.err;
                                                                                                                                                                                                        var $4176 = self.nam;
                                                                                                                                                                                                        var $4177 = self.ini;
                                                                                                                                                                                                        var $4178 = self.idx;
                                                                                                                                                                                                        var $4179 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4166, $4175), $4176, $4177, $4178, $4179);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $4181 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $4183 = self.err;
                                                                                                                                                                                                                        var self = $4181;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $4185 = self.value;
                                                                                                                                                                                                                                var $4186 = Parser$Reply$error$(Parser$Error$combine$($4185, $4183));
                                                                                                                                                                                                                                var $4184 = $4186;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $4187 = Parser$Reply$error$($4183);
                                                                                                                                                                                                                                var $4184 = $4187;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4182 = $4184;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $4188 = self.pst;
                                                                                                                                                                                                                        var self = $4188;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $4190 = self.err;
                                                                                                                                                                                                                                var $4191 = self.nam;
                                                                                                                                                                                                                                var $4192 = self.ini;
                                                                                                                                                                                                                                var $4193 = self.idx;
                                                                                                                                                                                                                                var $4194 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4181, $4190), $4191, $4192, $4193, $4194);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $4196 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $4198 = self.err;
                                                                                                                                                                                                                                                var self = $4196;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $4200 = self.value;
                                                                                                                                                                                                                                                        var $4201 = Parser$Reply$error$(Parser$Error$combine$($4200, $4198));
                                                                                                                                                                                                                                                        var $4199 = $4201;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $4202 = Parser$Reply$error$($4198);
                                                                                                                                                                                                                                                        var $4199 = $4202;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4197 = $4199;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $4203 = self.pst;
                                                                                                                                                                                                                                                var $4204 = self.val;
                                                                                                                                                                                                                                                var self = $4203;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $4206 = self.err;
                                                                                                                                                                                                                                                        var $4207 = self.nam;
                                                                                                                                                                                                                                                        var $4208 = self.ini;
                                                                                                                                                                                                                                                        var $4209 = self.idx;
                                                                                                                                                                                                                                                        var $4210 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4196, $4206), $4207, $4208, $4209, $4210);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $4212 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $4214 = self.err;
                                                                                                                                                                                                                                                                        var self = $4212;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $4216 = self.value;
                                                                                                                                                                                                                                                                                var $4217 = Parser$Reply$error$(Parser$Error$combine$($4216, $4214));
                                                                                                                                                                                                                                                                                var $4215 = $4217;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $4218 = Parser$Reply$error$($4214);
                                                                                                                                                                                                                                                                                var $4215 = $4218;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4213 = $4215;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $4219 = self.pst;
                                                                                                                                                                                                                                                                        var self = $4219;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $4221 = self.err;
                                                                                                                                                                                                                                                                                var $4222 = self.nam;
                                                                                                                                                                                                                                                                                var $4223 = self.ini;
                                                                                                                                                                                                                                                                                var $4224 = self.idx;
                                                                                                                                                                                                                                                                                var $4225 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4212, $4221), $4222, $4223, $4224, $4225);
                                                                                                                                                                                                                                                                                var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                        var $4227 = self.err;
                                                                                                                                                                                                                                                                                        var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                        var self = _reply$162;
                                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                var $4229 = self.err;
                                                                                                                                                                                                                                                                                                var self = $4227;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                                                                        var $4231 = self.value;
                                                                                                                                                                                                                                                                                                        var $4232 = Parser$Reply$error$(Parser$Error$combine$($4231, $4229));
                                                                                                                                                                                                                                                                                                        var $4230 = $4232;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                                                                        var $4233 = Parser$Reply$error$($4229);
                                                                                                                                                                                                                                                                                                        var $4230 = $4233;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4228 = $4230;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                var $4234 = self.pst;
                                                                                                                                                                                                                                                                                                var $4235 = self.val;
                                                                                                                                                                                                                                                                                                var self = $4234;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                        var $4237 = self.err;
                                                                                                                                                                                                                                                                                                        var $4238 = self.nam;
                                                                                                                                                                                                                                                                                                        var $4239 = self.ini;
                                                                                                                                                                                                                                                                                                        var $4240 = self.idx;
                                                                                                                                                                                                                                                                                                        var $4241 = self.str;
                                                                                                                                                                                                                                                                                                        var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4227, $4237), $4238, $4239, $4240, $4241);
                                                                                                                                                                                                                                                                                                        var _moti$171 = Kind$Term$lam$("", (_x$171 => {
                                                                                                                                                                                                                                                                                                            var $4243 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                            return $4243;
                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                        var _term$172 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                        var _term$173 = Kind$Term$app$(_term$172, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$174 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                        var _init$175 = Kind$Term$app$(_init$174, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$176 = Kind$Term$app$(_init$175, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$177 = Kind$Term$app$(_init$176, Kind$Term$ref$($4127));
                                                                                                                                                                                                                                                                                                        var _init$178 = Kind$Term$app$(_init$177, Kind$Term$ref$($4158));
                                                                                                                                                                                                                                                                                                        var _term$179 = Kind$Term$app$(_term$173, _init$178);
                                                                                                                                                                                                                                                                                                        var _term$180 = Kind$Term$app$(_term$179, Kind$Term$lam$("s", (_s$180 => {
                                                                                                                                                                                                                                                                                                            var $4244 = Kind$Term$app$(Kind$Term$app$(_s$180, _moti$171), Kind$Term$lam$($4127, (_x$181 => {
                                                                                                                                                                                                                                                                                                                var $4245 = Kind$Term$lam$($4158, (_y$182 => {
                                                                                                                                                                                                                                                                                                                    var $4246 = $4081;
                                                                                                                                                                                                                                                                                                                    return $4246;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4245;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4244;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$181 = Kind$Term$app$(_term$180, Kind$Term$lam$("s", (_s$181 => {
                                                                                                                                                                                                                                                                                                            var $4247 = Kind$Term$app$(Kind$Term$app$(_s$181, _moti$171), Kind$Term$lam$($4127, (_x$182 => {
                                                                                                                                                                                                                                                                                                                var $4248 = Kind$Term$lam$($4158, (_y$183 => {
                                                                                                                                                                                                                                                                                                                    var $4249 = $4204;
                                                                                                                                                                                                                                                                                                                    return $4249;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4248;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4247;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$182 = Kind$Term$app$(Kind$Term$app$(_term$181, _moti$171), Kind$Term$lam$($4127, (_x$182 => {
                                                                                                                                                                                                                                                                                                            var $4250 = Kind$Term$lam$($4158, (_y$183 => {
                                                                                                                                                                                                                                                                                                                var $4251 = $4235;
                                                                                                                                                                                                                                                                                                                return $4251;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            return $4250;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var $4242 = Parser$Reply$value$(_reply$pst$170, _term$182);
                                                                                                                                                                                                                                                                                                        var $4236 = $4242;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4228 = $4236;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                        var $4226 = $4228;
                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                var $4220 = $4226;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4213 = $4220;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $4211 = $4213;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $4205 = $4211;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4197 = $4205;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $4195 = $4197;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $4189 = $4195;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4182 = $4189;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $4180 = $4182;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $4174 = $4180;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4167 = $4174;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $4165 = $4167;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $4159 = $4165;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4151 = $4159;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4149 = $4151;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4143 = $4149;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4136 = $4143;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4134 = $4136;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4128 = $4134;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4120 = $4128;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4118 = $4120;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4112 = $4118;
                                                                                                        break;
                                                                                                };
                                                                                                var $4105 = $4112;
                                                                                                break;
                                                                                        };
                                                                                        var $4103 = $4105;
                                                                                        break;
                                                                                };
                                                                                var $4097 = $4103;
                                                                                break;
                                                                        };
                                                                        var $4090 = $4097;
                                                                        break;
                                                                };
                                                                var $4088 = $4090;
                                                                break;
                                                        };
                                                        var $4082 = $4088;
                                                        break;
                                                };
                                                var $4074 = $4082;
                                                break;
                                        };
                                        var $4072 = $4074;
                                        break;
                                };
                                var $4066 = $4072;
                                break;
                        };
                        var $4059 = $4066;
                        break;
                };
                var $4057 = $4059;
                break;
        };
        return $4057;
    };
    const Kind$Parser$getwhile$with = x0 => x1 => Kind$Parser$getwhile$with$(x0, x1);

    function Kind$Parser$get$(_body$1) {
        var $4252 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4254 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4256 = self.err;
                            var self = $4254;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4258 = self.value;
                                    var $4259 = Parser$Reply$error$(Parser$Error$combine$($4258, $4256));
                                    var $4257 = $4259;
                                    break;
                                case 'Maybe.none':
                                    var $4260 = Parser$Reply$error$($4256);
                                    var $4257 = $4260;
                                    break;
                            };
                            var $4255 = $4257;
                            break;
                        case 'Parser.Reply.value':
                            var $4261 = self.pst;
                            var self = $4261;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4263 = self.err;
                                    var $4264 = self.nam;
                                    var $4265 = self.ini;
                                    var $4266 = self.idx;
                                    var $4267 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4254, $4263), $4264, $4265, $4266, $4267);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4269 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4271 = self.err;
                                                    var self = $4269;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4273 = self.value;
                                                            var $4274 = Parser$Reply$error$(Parser$Error$combine$($4273, $4271));
                                                            var $4272 = $4274;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4275 = Parser$Reply$error$($4271);
                                                            var $4272 = $4275;
                                                            break;
                                                    };
                                                    var $4270 = $4272;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4276 = self.pst;
                                                    var self = $4276;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4278 = self.err;
                                                            var $4279 = self.nam;
                                                            var $4280 = self.ini;
                                                            var $4281 = self.idx;
                                                            var $4282 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4269, $4278), $4279, $4280, $4281, $4282);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4284 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4286 = self.err;
                                                                            var self = $4284;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4288 = self.value;
                                                                                    var $4289 = Parser$Reply$error$(Parser$Error$combine$($4288, $4286));
                                                                                    var $4287 = $4289;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4290 = Parser$Reply$error$($4286);
                                                                                    var $4287 = $4290;
                                                                                    break;
                                                                            };
                                                                            var $4285 = $4287;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4291 = self.pst;
                                                                            var $4292 = self.val;
                                                                            var self = $4291;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4294 = self.err;
                                                                                    var $4295 = self.nam;
                                                                                    var $4296 = self.ini;
                                                                                    var $4297 = self.idx;
                                                                                    var $4298 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4284, $4294), $4295, $4296, $4297, $4298);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4300 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4302 = self.err;
                                                                                                    var self = $4300;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4304 = self.value;
                                                                                                            var $4305 = Parser$Reply$error$(Parser$Error$combine$($4304, $4302));
                                                                                                            var $4303 = $4305;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4306 = Parser$Reply$error$($4302);
                                                                                                            var $4303 = $4306;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4301 = $4303;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4307 = self.pst;
                                                                                                    var self = $4307;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4309 = self.err;
                                                                                                            var $4310 = self.nam;
                                                                                                            var $4311 = self.ini;
                                                                                                            var $4312 = self.idx;
                                                                                                            var $4313 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4300, $4309), $4310, $4311, $4312, $4313);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4315 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4317 = self.err;
                                                                                                                            var self = $4315;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4319 = self.value;
                                                                                                                                    var $4320 = Parser$Reply$error$(Parser$Error$combine$($4319, $4317));
                                                                                                                                    var $4318 = $4320;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4321 = Parser$Reply$error$($4317);
                                                                                                                                    var $4318 = $4321;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4316 = $4318;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4322 = self.pst;
                                                                                                                            var $4323 = self.val;
                                                                                                                            var self = $4322;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4325 = self.err;
                                                                                                                                    var $4326 = self.nam;
                                                                                                                                    var $4327 = self.ini;
                                                                                                                                    var $4328 = self.idx;
                                                                                                                                    var $4329 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4315, $4325), $4326, $4327, $4328, $4329);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4331 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4333 = self.err;
                                                                                                                                                    var self = $4331;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4335 = self.value;
                                                                                                                                                            var $4336 = Parser$Reply$error$(Parser$Error$combine$($4335, $4333));
                                                                                                                                                            var $4334 = $4336;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4337 = Parser$Reply$error$($4333);
                                                                                                                                                            var $4334 = $4337;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4332 = $4334;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4338 = self.pst;
                                                                                                                                                    var self = $4338;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4340 = self.err;
                                                                                                                                                            var $4341 = self.nam;
                                                                                                                                                            var $4342 = self.ini;
                                                                                                                                                            var $4343 = self.idx;
                                                                                                                                                            var $4344 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4331, $4340), $4341, $4342, $4343, $4344);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4346 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4348 = self.err;
                                                                                                                                                                            var self = $4346;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4350 = self.value;
                                                                                                                                                                                    var $4351 = Parser$Reply$error$(Parser$Error$combine$($4350, $4348));
                                                                                                                                                                                    var $4349 = $4351;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4352 = Parser$Reply$error$($4348);
                                                                                                                                                                                    var $4349 = $4352;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4347 = $4349;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4353 = self.pst;
                                                                                                                                                                            var self = $4353;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4355 = self.err;
                                                                                                                                                                                    var $4356 = self.nam;
                                                                                                                                                                                    var $4357 = self.ini;
                                                                                                                                                                                    var $4358 = self.idx;
                                                                                                                                                                                    var $4359 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4346, $4355), $4356, $4357, $4358, $4359);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4361 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4363 = self.err;
                                                                                                                                                                                                    var self = $4361;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4365 = self.value;
                                                                                                                                                                                                            var $4366 = Parser$Reply$error$(Parser$Error$combine$($4365, $4363));
                                                                                                                                                                                                            var $4364 = $4366;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4367 = Parser$Reply$error$($4363);
                                                                                                                                                                                                            var $4364 = $4367;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4362 = $4364;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4368 = self.pst;
                                                                                                                                                                                                    var $4369 = self.val;
                                                                                                                                                                                                    var self = $4368;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4371 = self.err;
                                                                                                                                                                                                            var $4372 = self.nam;
                                                                                                                                                                                                            var $4373 = self.ini;
                                                                                                                                                                                                            var $4374 = self.idx;
                                                                                                                                                                                                            var $4375 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4361, $4371), $4372, $4373, $4374, $4375);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4377 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4379 = self.err;
                                                                                                                                                                                                                            var self = $4377;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4381 = self.value;
                                                                                                                                                                                                                                    var $4382 = Parser$Reply$error$(Parser$Error$combine$($4381, $4379));
                                                                                                                                                                                                                                    var $4380 = $4382;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4383 = Parser$Reply$error$($4379);
                                                                                                                                                                                                                                    var $4380 = $4383;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4378 = $4380;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4384 = self.pst;
                                                                                                                                                                                                                            var self = $4384;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4386 = self.err;
                                                                                                                                                                                                                                    var $4387 = self.nam;
                                                                                                                                                                                                                                    var $4388 = self.ini;
                                                                                                                                                                                                                                    var $4389 = self.idx;
                                                                                                                                                                                                                                    var $4390 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4377, $4386), $4387, $4388, $4389, $4390);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4392 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4394 = self.err;
                                                                                                                                                                                                                                                    var self = $4392;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4396 = self.value;
                                                                                                                                                                                                                                                            var $4397 = Parser$Reply$error$(Parser$Error$combine$($4396, $4394));
                                                                                                                                                                                                                                                            var $4395 = $4397;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4398 = Parser$Reply$error$($4394);
                                                                                                                                                                                                                                                            var $4395 = $4398;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4393 = $4395;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4399 = self.pst;
                                                                                                                                                                                                                                                    var $4400 = self.val;
                                                                                                                                                                                                                                                    var self = $4399;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4402 = self.err;
                                                                                                                                                                                                                                                            var $4403 = self.nam;
                                                                                                                                                                                                                                                            var $4404 = self.ini;
                                                                                                                                                                                                                                                            var $4405 = self.idx;
                                                                                                                                                                                                                                                            var $4406 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4392, $4402), $4403, $4404, $4405, $4406);
                                                                                                                                                                                                                                                            var _term$143 = $4369;
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$lam$("", (_x$144 => {
                                                                                                                                                                                                                                                                var $4408 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                return $4408;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, Kind$Term$lam$($4292, (_x$145 => {
                                                                                                                                                                                                                                                                var $4409 = Kind$Term$lam$($4323, (_y$146 => {
                                                                                                                                                                                                                                                                    var $4410 = $4400;
                                                                                                                                                                                                                                                                    return $4410;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $4409;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var $4407 = Parser$Reply$value$(_reply$pst$142, _term$145);
                                                                                                                                                                                                                                                            var $4401 = $4407;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4393 = $4401;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4391 = $4393;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4385 = $4391;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4378 = $4385;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4376 = $4378;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4370 = $4376;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4362 = $4370;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4360 = $4362;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4354 = $4360;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4347 = $4354;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4345 = $4347;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4339 = $4345;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4332 = $4339;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4330 = $4332;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4324 = $4330;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4316 = $4324;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4314 = $4316;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4308 = $4314;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4301 = $4308;
                                                                                                    break;
                                                                                            };
                                                                                            var $4299 = $4301;
                                                                                            break;
                                                                                    };
                                                                                    var $4293 = $4299;
                                                                                    break;
                                                                            };
                                                                            var $4285 = $4293;
                                                                            break;
                                                                    };
                                                                    var $4283 = $4285;
                                                                    break;
                                                            };
                                                            var $4277 = $4283;
                                                            break;
                                                    };
                                                    var $4270 = $4277;
                                                    break;
                                            };
                                            var $4268 = $4270;
                                            break;
                                    };
                                    var $4262 = $4268;
                                    break;
                            };
                            var $4255 = $4262;
                            break;
                    };
                    var $4253 = $4255;
                    break;
            };
            return $4253;
        }));
        return $4252;
    };
    const Kind$Parser$get = x0 => Kind$Parser$get$(x0);

    function Kind$Parser$get$omit$(_body$1) {
        var $4411 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4413 = self.err;
                    var _reply$8 = Kind$Parser$text$("{", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4415 = self.err;
                            var self = $4413;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4417 = self.value;
                                    var $4418 = Parser$Reply$error$(Parser$Error$combine$($4417, $4415));
                                    var $4416 = $4418;
                                    break;
                                case 'Maybe.none':
                                    var $4419 = Parser$Reply$error$($4415);
                                    var $4416 = $4419;
                                    break;
                            };
                            var $4414 = $4416;
                            break;
                        case 'Parser.Reply.value':
                            var $4420 = self.pst;
                            var self = $4420;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4422 = self.err;
                                    var $4423 = self.nam;
                                    var $4424 = self.ini;
                                    var $4425 = self.idx;
                                    var $4426 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4413, $4422), $4423, $4424, $4425, $4426);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4428 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4430 = self.err;
                                                    var self = $4428;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4432 = self.value;
                                                            var $4433 = Parser$Reply$error$(Parser$Error$combine$($4432, $4430));
                                                            var $4431 = $4433;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4434 = Parser$Reply$error$($4430);
                                                            var $4431 = $4434;
                                                            break;
                                                    };
                                                    var $4429 = $4431;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4435 = self.pst;
                                                    var $4436 = self.val;
                                                    var self = $4435;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4438 = self.err;
                                                            var $4439 = self.nam;
                                                            var $4440 = self.ini;
                                                            var $4441 = self.idx;
                                                            var $4442 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4428, $4438), $4439, $4440, $4441, $4442);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4444 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(",", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4446 = self.err;
                                                                            var self = $4444;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4448 = self.value;
                                                                                    var $4449 = Parser$Reply$error$(Parser$Error$combine$($4448, $4446));
                                                                                    var $4447 = $4449;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4450 = Parser$Reply$error$($4446);
                                                                                    var $4447 = $4450;
                                                                                    break;
                                                                            };
                                                                            var $4445 = $4447;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4451 = self.pst;
                                                                            var self = $4451;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4453 = self.err;
                                                                                    var $4454 = self.nam;
                                                                                    var $4455 = self.ini;
                                                                                    var $4456 = self.idx;
                                                                                    var $4457 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4444, $4453), $4454, $4455, $4456, $4457);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4459 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4461 = self.err;
                                                                                                    var self = $4459;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4463 = self.value;
                                                                                                            var $4464 = Parser$Reply$error$(Parser$Error$combine$($4463, $4461));
                                                                                                            var $4462 = $4464;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4465 = Parser$Reply$error$($4461);
                                                                                                            var $4462 = $4465;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4460 = $4462;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4466 = self.pst;
                                                                                                    var $4467 = self.val;
                                                                                                    var self = $4466;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4469 = self.err;
                                                                                                            var $4470 = self.nam;
                                                                                                            var $4471 = self.ini;
                                                                                                            var $4472 = self.idx;
                                                                                                            var $4473 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4459, $4469), $4470, $4471, $4472, $4473);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4475 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4477 = self.err;
                                                                                                                            var self = $4475;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4479 = self.value;
                                                                                                                                    var $4480 = Parser$Reply$error$(Parser$Error$combine$($4479, $4477));
                                                                                                                                    var $4478 = $4480;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4481 = Parser$Reply$error$($4477);
                                                                                                                                    var $4478 = $4481;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4476 = $4478;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4482 = self.pst;
                                                                                                                            var self = $4482;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4484 = self.err;
                                                                                                                                    var $4485 = self.nam;
                                                                                                                                    var $4486 = self.ini;
                                                                                                                                    var $4487 = self.idx;
                                                                                                                                    var $4488 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4475, $4484), $4485, $4486, $4487, $4488);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4490 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("= ", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4492 = self.err;
                                                                                                                                                    var self = $4490;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4494 = self.value;
                                                                                                                                                            var $4495 = Parser$Reply$error$(Parser$Error$combine$($4494, $4492));
                                                                                                                                                            var $4493 = $4495;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4496 = Parser$Reply$error$($4492);
                                                                                                                                                            var $4493 = $4496;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4491 = $4493;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4497 = self.pst;
                                                                                                                                                    var self = $4497;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4499 = self.err;
                                                                                                                                                            var $4500 = self.nam;
                                                                                                                                                            var $4501 = self.ini;
                                                                                                                                                            var $4502 = self.idx;
                                                                                                                                                            var $4503 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4490, $4499), $4500, $4501, $4502, $4503);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4505 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4507 = self.err;
                                                                                                                                                                            var self = $4505;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4509 = self.value;
                                                                                                                                                                                    var $4510 = Parser$Reply$error$(Parser$Error$combine$($4509, $4507));
                                                                                                                                                                                    var $4508 = $4510;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4511 = Parser$Reply$error$($4507);
                                                                                                                                                                                    var $4508 = $4511;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4506 = $4508;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4512 = self.pst;
                                                                                                                                                                            var $4513 = self.val;
                                                                                                                                                                            var self = $4512;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4515 = self.err;
                                                                                                                                                                                    var $4516 = self.nam;
                                                                                                                                                                                    var $4517 = self.ini;
                                                                                                                                                                                    var $4518 = self.idx;
                                                                                                                                                                                    var $4519 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4505, $4515), $4516, $4517, $4518, $4519);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4521 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4523 = self.err;
                                                                                                                                                                                                    var self = $4521;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4525 = self.value;
                                                                                                                                                                                                            var $4526 = Parser$Reply$error$(Parser$Error$combine$($4525, $4523));
                                                                                                                                                                                                            var $4524 = $4526;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4527 = Parser$Reply$error$($4523);
                                                                                                                                                                                                            var $4524 = $4527;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4522 = $4524;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4528 = self.pst;
                                                                                                                                                                                                    var self = $4528;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4530 = self.err;
                                                                                                                                                                                                            var $4531 = self.nam;
                                                                                                                                                                                                            var $4532 = self.ini;
                                                                                                                                                                                                            var $4533 = self.idx;
                                                                                                                                                                                                            var $4534 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4521, $4530), $4531, $4532, $4533, $4534);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4536 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4538 = self.err;
                                                                                                                                                                                                                            var self = $4536;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4540 = self.value;
                                                                                                                                                                                                                                    var $4541 = Parser$Reply$error$(Parser$Error$combine$($4540, $4538));
                                                                                                                                                                                                                                    var $4539 = $4541;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4542 = Parser$Reply$error$($4538);
                                                                                                                                                                                                                                    var $4539 = $4542;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4537 = $4539;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4543 = self.pst;
                                                                                                                                                                                                                            var $4544 = self.val;
                                                                                                                                                                                                                            var self = $4543;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4546 = self.err;
                                                                                                                                                                                                                                    var $4547 = self.nam;
                                                                                                                                                                                                                                    var $4548 = self.ini;
                                                                                                                                                                                                                                    var $4549 = self.idx;
                                                                                                                                                                                                                                    var $4550 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4536, $4546), $4547, $4548, $4549, $4550);
                                                                                                                                                                                                                                    var _term$129 = $4513;
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$lam$("", (_x$130 => {
                                                                                                                                                                                                                                        var $4552 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                        return $4552;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$lam$($4436, (_x$131 => {
                                                                                                                                                                                                                                        var $4553 = Kind$Term$lam$($4467, (_y$132 => {
                                                                                                                                                                                                                                            var $4554 = $4544;
                                                                                                                                                                                                                                            return $4554;
                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                        return $4553;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var $4551 = Parser$Reply$value$(_reply$pst$128, _term$131);
                                                                                                                                                                                                                                    var $4545 = $4551;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4537 = $4545;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4535 = $4537;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4529 = $4535;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4522 = $4529;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4520 = $4522;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4514 = $4520;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4506 = $4514;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4504 = $4506;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4498 = $4504;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4491 = $4498;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4489 = $4491;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4483 = $4489;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4476 = $4483;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4474 = $4476;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4468 = $4474;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4460 = $4468;
                                                                                                    break;
                                                                                            };
                                                                                            var $4458 = $4460;
                                                                                            break;
                                                                                    };
                                                                                    var $4452 = $4458;
                                                                                    break;
                                                                            };
                                                                            var $4445 = $4452;
                                                                            break;
                                                                    };
                                                                    var $4443 = $4445;
                                                                    break;
                                                            };
                                                            var $4437 = $4443;
                                                            break;
                                                    };
                                                    var $4429 = $4437;
                                                    break;
                                            };
                                            var $4427 = $4429;
                                            break;
                                    };
                                    var $4421 = $4427;
                                    break;
                            };
                            var $4414 = $4421;
                            break;
                    };
                    var $4412 = $4414;
                    break;
            };
            return $4412;
        }));
        return $4411;
    };
    const Kind$Parser$get$omit = x0 => Kind$Parser$get$omit$(x0);

    function Kind$Parser$def$(_body$1) {
        var $4555 = Kind$Parser$block("def")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4557 = self.err;
                    var _reply$8 = Kind$Parser$text$("def ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4559 = self.err;
                            var self = $4557;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4561 = self.value;
                                    var $4562 = Parser$Reply$error$(Parser$Error$combine$($4561, $4559));
                                    var $4560 = $4562;
                                    break;
                                case 'Maybe.none':
                                    var $4563 = Parser$Reply$error$($4559);
                                    var $4560 = $4563;
                                    break;
                            };
                            var $4558 = $4560;
                            break;
                        case 'Parser.Reply.value':
                            var $4564 = self.pst;
                            var self = $4564;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4566 = self.err;
                                    var $4567 = self.nam;
                                    var $4568 = self.ini;
                                    var $4569 = self.idx;
                                    var $4570 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4557, $4566), $4567, $4568, $4569, $4570);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4572 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4574 = self.err;
                                                    var self = $4572;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4576 = self.value;
                                                            var $4577 = Parser$Reply$error$(Parser$Error$combine$($4576, $4574));
                                                            var $4575 = $4577;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4578 = Parser$Reply$error$($4574);
                                                            var $4575 = $4578;
                                                            break;
                                                    };
                                                    var $4573 = $4575;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4579 = self.pst;
                                                    var $4580 = self.val;
                                                    var self = $4579;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4582 = self.err;
                                                            var $4583 = self.nam;
                                                            var $4584 = self.ini;
                                                            var $4585 = self.idx;
                                                            var $4586 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4572, $4582), $4583, $4584, $4585, $4586);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4588 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4590 = self.err;
                                                                            var self = $4588;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4592 = self.value;
                                                                                    var $4593 = Parser$Reply$error$(Parser$Error$combine$($4592, $4590));
                                                                                    var $4591 = $4593;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4594 = Parser$Reply$error$($4590);
                                                                                    var $4591 = $4594;
                                                                                    break;
                                                                            };
                                                                            var $4589 = $4591;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4595 = self.pst;
                                                                            var self = $4595;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4597 = self.err;
                                                                                    var $4598 = self.nam;
                                                                                    var $4599 = self.ini;
                                                                                    var $4600 = self.idx;
                                                                                    var $4601 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4588, $4597), $4598, $4599, $4600, $4601);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4603 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4605 = self.err;
                                                                                                    var self = $4603;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4607 = self.value;
                                                                                                            var $4608 = Parser$Reply$error$(Parser$Error$combine$($4607, $4605));
                                                                                                            var $4606 = $4608;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4609 = Parser$Reply$error$($4605);
                                                                                                            var $4606 = $4609;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4604 = $4606;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4610 = self.pst;
                                                                                                    var $4611 = self.val;
                                                                                                    var self = $4610;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4613 = self.err;
                                                                                                            var $4614 = self.nam;
                                                                                                            var $4615 = self.ini;
                                                                                                            var $4616 = self.idx;
                                                                                                            var $4617 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4603, $4613), $4614, $4615, $4616, $4617);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4619 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4621 = self.err;
                                                                                                                            var self = $4619;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4623 = self.value;
                                                                                                                                    var $4624 = Parser$Reply$error$(Parser$Error$combine$($4623, $4621));
                                                                                                                                    var $4622 = $4624;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4625 = Parser$Reply$error$($4621);
                                                                                                                                    var $4622 = $4625;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4620 = $4622;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4626 = self.pst;
                                                                                                                            var self = $4626;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4628 = self.err;
                                                                                                                                    var $4629 = self.nam;
                                                                                                                                    var $4630 = self.ini;
                                                                                                                                    var $4631 = self.idx;
                                                                                                                                    var $4632 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4619, $4628), $4629, $4630, $4631, $4632);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4634 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4636 = self.err;
                                                                                                                                                    var self = $4634;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4638 = self.value;
                                                                                                                                                            var $4639 = Parser$Reply$error$(Parser$Error$combine$($4638, $4636));
                                                                                                                                                            var $4637 = $4639;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4640 = Parser$Reply$error$($4636);
                                                                                                                                                            var $4637 = $4640;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4635 = $4637;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4641 = self.pst;
                                                                                                                                                    var $4642 = self.val;
                                                                                                                                                    var self = $4641;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4644 = self.err;
                                                                                                                                                            var $4645 = self.nam;
                                                                                                                                                            var $4646 = self.ini;
                                                                                                                                                            var $4647 = self.idx;
                                                                                                                                                            var $4648 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4634, $4644), $4645, $4646, $4647, $4648);
                                                                                                                                                            var $4649 = Parser$Reply$value$(_reply$pst$86, Kind$Term$def$($4580, $4611, (_x$87 => {
                                                                                                                                                                var $4650 = $4642;
                                                                                                                                                                return $4650;
                                                                                                                                                            })));
                                                                                                                                                            var $4643 = $4649;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4635 = $4643;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4633 = $4635;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4627 = $4633;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4620 = $4627;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4618 = $4620;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4612 = $4618;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4604 = $4612;
                                                                                                    break;
                                                                                            };
                                                                                            var $4602 = $4604;
                                                                                            break;
                                                                                    };
                                                                                    var $4596 = $4602;
                                                                                    break;
                                                                            };
                                                                            var $4589 = $4596;
                                                                            break;
                                                                    };
                                                                    var $4587 = $4589;
                                                                    break;
                                                            };
                                                            var $4581 = $4587;
                                                            break;
                                                    };
                                                    var $4573 = $4581;
                                                    break;
                                            };
                                            var $4571 = $4573;
                                            break;
                                    };
                                    var $4565 = $4571;
                                    break;
                            };
                            var $4558 = $4565;
                            break;
                    };
                    var $4556 = $4558;
                    break;
            };
            return $4556;
        }));
        return $4555;
    };
    const Kind$Parser$def = x0 => Kind$Parser$def$(x0);
    const Kind$Parser$goal_rewrite = Kind$Parser$block("goal-rewrite")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4652 = self.err;
                var _reply$7 = Kind$Parser$text$("rewrite ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4654 = self.err;
                        var self = $4652;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4656 = self.value;
                                var $4657 = Parser$Reply$error$(Parser$Error$combine$($4656, $4654));
                                var $4655 = $4657;
                                break;
                            case 'Maybe.none':
                                var $4658 = Parser$Reply$error$($4654);
                                var $4655 = $4658;
                                break;
                        };
                        var $4653 = $4655;
                        break;
                    case 'Parser.Reply.value':
                        var $4659 = self.pst;
                        var self = $4659;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4661 = self.err;
                                var $4662 = self.nam;
                                var $4663 = self.ini;
                                var $4664 = self.idx;
                                var $4665 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4652, $4661), $4662, $4663, $4664, $4665);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4667 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4669 = self.err;
                                                var self = $4667;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4671 = self.value;
                                                        var $4672 = Parser$Reply$error$(Parser$Error$combine$($4671, $4669));
                                                        var $4670 = $4672;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4673 = Parser$Reply$error$($4669);
                                                        var $4670 = $4673;
                                                        break;
                                                };
                                                var $4668 = $4670;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4674 = self.pst;
                                                var $4675 = self.val;
                                                var self = $4674;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4677 = self.err;
                                                        var $4678 = self.nam;
                                                        var $4679 = self.ini;
                                                        var $4680 = self.idx;
                                                        var $4681 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4667, $4677), $4678, $4679, $4680, $4681);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4683 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4685 = self.err;
                                                                        var self = $4683;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4687 = self.value;
                                                                                var $4688 = Parser$Reply$error$(Parser$Error$combine$($4687, $4685));
                                                                                var $4686 = $4688;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4689 = Parser$Reply$error$($4685);
                                                                                var $4686 = $4689;
                                                                                break;
                                                                        };
                                                                        var $4684 = $4686;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4690 = self.pst;
                                                                        var self = $4690;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4692 = self.err;
                                                                                var $4693 = self.nam;
                                                                                var $4694 = self.ini;
                                                                                var $4695 = self.idx;
                                                                                var $4696 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4683, $4692), $4693, $4694, $4695, $4696);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4698 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4700 = self.err;
                                                                                                var self = $4698;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4702 = self.value;
                                                                                                        var $4703 = Parser$Reply$error$(Parser$Error$combine$($4702, $4700));
                                                                                                        var $4701 = $4703;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4704 = Parser$Reply$error$($4700);
                                                                                                        var $4701 = $4704;
                                                                                                        break;
                                                                                                };
                                                                                                var $4699 = $4701;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4705 = self.pst;
                                                                                                var $4706 = self.val;
                                                                                                var self = $4705;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4708 = self.err;
                                                                                                        var $4709 = self.nam;
                                                                                                        var $4710 = self.ini;
                                                                                                        var $4711 = self.idx;
                                                                                                        var $4712 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4698, $4708), $4709, $4710, $4711, $4712);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4714 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("with", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4716 = self.err;
                                                                                                                        var self = $4714;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4718 = self.value;
                                                                                                                                var $4719 = Parser$Reply$error$(Parser$Error$combine$($4718, $4716));
                                                                                                                                var $4717 = $4719;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4720 = Parser$Reply$error$($4716);
                                                                                                                                var $4717 = $4720;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4715 = $4717;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4721 = self.pst;
                                                                                                                        var self = $4721;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4723 = self.err;
                                                                                                                                var $4724 = self.nam;
                                                                                                                                var $4725 = self.ini;
                                                                                                                                var $4726 = self.idx;
                                                                                                                                var $4727 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4714, $4723), $4724, $4725, $4726, $4727);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4729 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4731 = self.err;
                                                                                                                                                var self = $4729;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4733 = self.value;
                                                                                                                                                        var $4734 = Parser$Reply$error$(Parser$Error$combine$($4733, $4731));
                                                                                                                                                        var $4732 = $4734;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4735 = Parser$Reply$error$($4731);
                                                                                                                                                        var $4732 = $4735;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4730 = $4732;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4736 = self.pst;
                                                                                                                                                var $4737 = self.val;
                                                                                                                                                var self = $4736;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4739 = self.err;
                                                                                                                                                        var $4740 = self.nam;
                                                                                                                                                        var $4741 = self.ini;
                                                                                                                                                        var $4742 = self.idx;
                                                                                                                                                        var $4743 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4729, $4739), $4740, $4741, $4742, $4743);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4745 = self.err;
                                                                                                                                                                var _reply$91 = Kind$Parser$term(_reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4747 = self.err;
                                                                                                                                                                        var self = $4745;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4749 = self.value;
                                                                                                                                                                                var $4750 = Parser$Reply$error$(Parser$Error$combine$($4749, $4747));
                                                                                                                                                                                var $4748 = $4750;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4751 = Parser$Reply$error$($4747);
                                                                                                                                                                                var $4748 = $4751;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4746 = $4748;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4752 = self.pst;
                                                                                                                                                                        var $4753 = self.val;
                                                                                                                                                                        var self = $4752;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4755 = self.err;
                                                                                                                                                                                var $4756 = self.nam;
                                                                                                                                                                                var $4757 = self.ini;
                                                                                                                                                                                var $4758 = self.idx;
                                                                                                                                                                                var $4759 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($4745, $4755), $4756, $4757, $4758, $4759);
                                                                                                                                                                                var _moti$100 = Kind$Term$lam$($4675, (_s$100 => {
                                                                                                                                                                                    var $4761 = Kind$Term$lam$("", (_x$101 => {
                                                                                                                                                                                        var $4762 = $4706;
                                                                                                                                                                                        return $4762;
                                                                                                                                                                                    }));
                                                                                                                                                                                    return $4761;
                                                                                                                                                                                }));
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.mirror");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $4737);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, _moti$100);
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, $4753);
                                                                                                                                                                                var $4760 = Parser$Reply$value$(_reply$pst$99, _term$107);
                                                                                                                                                                                var $4754 = $4760;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4746 = $4754;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4744 = $4746;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4738 = $4744;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4730 = $4738;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4728 = $4730;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4722 = $4728;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4715 = $4722;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4713 = $4715;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4707 = $4713;
                                                                                                        break;
                                                                                                };
                                                                                                var $4699 = $4707;
                                                                                                break;
                                                                                        };
                                                                                        var $4697 = $4699;
                                                                                        break;
                                                                                };
                                                                                var $4691 = $4697;
                                                                                break;
                                                                        };
                                                                        var $4684 = $4691;
                                                                        break;
                                                                };
                                                                var $4682 = $4684;
                                                                break;
                                                        };
                                                        var $4676 = $4682;
                                                        break;
                                                };
                                                var $4668 = $4676;
                                                break;
                                        };
                                        var $4666 = $4668;
                                        break;
                                };
                                var $4660 = $4666;
                                break;
                        };
                        var $4653 = $4660;
                        break;
                };
                var $4651 = $4653;
                break;
        };
        return $4651;
    }));
    const Kind$Parser$if = Kind$Parser$block("if")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4764 = self.err;
                var _reply$7 = Kind$Parser$text$("if ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4766 = self.err;
                        var self = $4764;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4768 = self.value;
                                var $4769 = Parser$Reply$error$(Parser$Error$combine$($4768, $4766));
                                var $4767 = $4769;
                                break;
                            case 'Maybe.none':
                                var $4770 = Parser$Reply$error$($4766);
                                var $4767 = $4770;
                                break;
                        };
                        var $4765 = $4767;
                        break;
                    case 'Parser.Reply.value':
                        var $4771 = self.pst;
                        var self = $4771;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4773 = self.err;
                                var $4774 = self.nam;
                                var $4775 = self.ini;
                                var $4776 = self.idx;
                                var $4777 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4764, $4773), $4774, $4775, $4776, $4777);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4779 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4781 = self.err;
                                                var self = $4779;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4783 = self.value;
                                                        var $4784 = Parser$Reply$error$(Parser$Error$combine$($4783, $4781));
                                                        var $4782 = $4784;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4785 = Parser$Reply$error$($4781);
                                                        var $4782 = $4785;
                                                        break;
                                                };
                                                var $4780 = $4782;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4786 = self.pst;
                                                var $4787 = self.val;
                                                var self = $4786;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4789 = self.err;
                                                        var $4790 = self.nam;
                                                        var $4791 = self.ini;
                                                        var $4792 = self.idx;
                                                        var $4793 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4779, $4789), $4790, $4791, $4792, $4793);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4795 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("then", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4797 = self.err;
                                                                        var self = $4795;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4799 = self.value;
                                                                                var $4800 = Parser$Reply$error$(Parser$Error$combine$($4799, $4797));
                                                                                var $4798 = $4800;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4801 = Parser$Reply$error$($4797);
                                                                                var $4798 = $4801;
                                                                                break;
                                                                        };
                                                                        var $4796 = $4798;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4802 = self.pst;
                                                                        var self = $4802;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4804 = self.err;
                                                                                var $4805 = self.nam;
                                                                                var $4806 = self.ini;
                                                                                var $4807 = self.idx;
                                                                                var $4808 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4795, $4804), $4805, $4806, $4807, $4808);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4810 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4812 = self.err;
                                                                                                var self = $4810;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4814 = self.value;
                                                                                                        var $4815 = Parser$Reply$error$(Parser$Error$combine$($4814, $4812));
                                                                                                        var $4813 = $4815;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4816 = Parser$Reply$error$($4812);
                                                                                                        var $4813 = $4816;
                                                                                                        break;
                                                                                                };
                                                                                                var $4811 = $4813;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4817 = self.pst;
                                                                                                var $4818 = self.val;
                                                                                                var self = $4817;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4820 = self.err;
                                                                                                        var $4821 = self.nam;
                                                                                                        var $4822 = self.ini;
                                                                                                        var $4823 = self.idx;
                                                                                                        var $4824 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4810, $4820), $4821, $4822, $4823, $4824);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4826 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("else", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4828 = self.err;
                                                                                                                        var self = $4826;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4830 = self.value;
                                                                                                                                var $4831 = Parser$Reply$error$(Parser$Error$combine$($4830, $4828));
                                                                                                                                var $4829 = $4831;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4832 = Parser$Reply$error$($4828);
                                                                                                                                var $4829 = $4832;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4827 = $4829;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4833 = self.pst;
                                                                                                                        var self = $4833;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4835 = self.err;
                                                                                                                                var $4836 = self.nam;
                                                                                                                                var $4837 = self.ini;
                                                                                                                                var $4838 = self.idx;
                                                                                                                                var $4839 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4826, $4835), $4836, $4837, $4838, $4839);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4841 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4843 = self.err;
                                                                                                                                                var self = $4841;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4845 = self.value;
                                                                                                                                                        var $4846 = Parser$Reply$error$(Parser$Error$combine$($4845, $4843));
                                                                                                                                                        var $4844 = $4846;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4847 = Parser$Reply$error$($4843);
                                                                                                                                                        var $4844 = $4847;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4842 = $4844;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4848 = self.pst;
                                                                                                                                                var $4849 = self.val;
                                                                                                                                                var self = $4848;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4851 = self.err;
                                                                                                                                                        var $4852 = self.nam;
                                                                                                                                                        var $4853 = self.ini;
                                                                                                                                                        var $4854 = self.idx;
                                                                                                                                                        var $4855 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4841, $4851), $4852, $4853, $4854, $4855);
                                                                                                                                                        var _term$86 = $4787;
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, Kind$Term$lam$("", (_x$87 => {
                                                                                                                                                            var $4857 = Kind$Term$hol$(Bits$e);
                                                                                                                                                            return $4857;
                                                                                                                                                        })));
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, $4818);
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, $4849);
                                                                                                                                                        var $4856 = Parser$Reply$value$(_reply$pst$85, _term$89);
                                                                                                                                                        var $4850 = $4856;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4842 = $4850;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4840 = $4842;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4834 = $4840;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4827 = $4834;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4825 = $4827;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4819 = $4825;
                                                                                                        break;
                                                                                                };
                                                                                                var $4811 = $4819;
                                                                                                break;
                                                                                        };
                                                                                        var $4809 = $4811;
                                                                                        break;
                                                                                };
                                                                                var $4803 = $4809;
                                                                                break;
                                                                        };
                                                                        var $4796 = $4803;
                                                                        break;
                                                                };
                                                                var $4794 = $4796;
                                                                break;
                                                        };
                                                        var $4788 = $4794;
                                                        break;
                                                };
                                                var $4780 = $4788;
                                                break;
                                        };
                                        var $4778 = $4780;
                                        break;
                                };
                                var $4772 = $4778;
                                break;
                        };
                        var $4765 = $4772;
                        break;
                };
                var $4763 = $4765;
                break;
        };
        return $4763;
    }));
    const Kind$Code$backslash = 92;
    const Kind$Code$escapes = List$cons$(Pair$new$("\\b", 8), List$cons$(Pair$new$("\\f", 12), List$cons$(Pair$new$("\\n", 10), List$cons$(Pair$new$("\\r", 13), List$cons$(Pair$new$("\\t", 9), List$cons$(Pair$new$("\\v", 11), List$cons$(Pair$new$(String$cons$(Kind$Code$backslash, String$cons$(Kind$Code$backslash, String$nil)), Kind$Code$backslash), List$cons$(Pair$new$("\\\"", 34), List$cons$(Pair$new$("\\0", 0), List$cons$(Pair$new$("\\\'", 39), List$nil))))))))));
    const Kind$Parser$char$single = Parser$choice(List$cons$(Parser$choice(List$mapped$(Kind$Code$escapes, (_esc$1 => {
        var self = _esc$1;
        switch (self._) {
            case 'Pair.new':
                var $4859 = self.fst;
                var $4860 = self.snd;
                var $4861 = (_pst$4 => {
                    var self = _pst$4;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $4863 = self.err;
                            var _reply$10 = Parser$text$($4859, _pst$4);
                            var self = _reply$10;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $4865 = self.err;
                                    var self = $4863;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $4867 = self.value;
                                            var $4868 = Parser$Reply$error$(Parser$Error$combine$($4867, $4865));
                                            var $4866 = $4868;
                                            break;
                                        case 'Maybe.none':
                                            var $4869 = Parser$Reply$error$($4865);
                                            var $4866 = $4869;
                                            break;
                                    };
                                    var $4864 = $4866;
                                    break;
                                case 'Parser.Reply.value':
                                    var $4870 = self.pst;
                                    var self = $4870;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4872 = self.err;
                                            var $4873 = self.nam;
                                            var $4874 = self.ini;
                                            var $4875 = self.idx;
                                            var $4876 = self.str;
                                            var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($4863, $4872), $4873, $4874, $4875, $4876);
                                            var $4877 = Parser$Reply$value$(_reply$pst$18, $4860);
                                            var $4871 = $4877;
                                            break;
                                    };
                                    var $4864 = $4871;
                                    break;
                            };
                            var $4862 = $4864;
                            break;
                    };
                    return $4862;
                });
                var $4858 = $4861;
                break;
        };
        return $4858;
    }))), List$cons$(Parser$one, List$nil)));
    const Kind$Parser$char = Kind$Parser$block("char")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4879 = self.err;
                var _reply$7 = Kind$Parser$text$("\'", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4881 = self.err;
                        var self = $4879;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4883 = self.value;
                                var $4884 = Parser$Reply$error$(Parser$Error$combine$($4883, $4881));
                                var $4882 = $4884;
                                break;
                            case 'Maybe.none':
                                var $4885 = Parser$Reply$error$($4881);
                                var $4882 = $4885;
                                break;
                        };
                        var $4880 = $4882;
                        break;
                    case 'Parser.Reply.value':
                        var $4886 = self.pst;
                        var self = $4886;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4888 = self.err;
                                var $4889 = self.nam;
                                var $4890 = self.ini;
                                var $4891 = self.idx;
                                var $4892 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4879, $4888), $4889, $4890, $4891, $4892);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4894 = self.err;
                                        var _reply$21 = Kind$Parser$char$single(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4896 = self.err;
                                                var self = $4894;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4898 = self.value;
                                                        var $4899 = Parser$Reply$error$(Parser$Error$combine$($4898, $4896));
                                                        var $4897 = $4899;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4900 = Parser$Reply$error$($4896);
                                                        var $4897 = $4900;
                                                        break;
                                                };
                                                var $4895 = $4897;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4901 = self.pst;
                                                var $4902 = self.val;
                                                var self = $4901;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4904 = self.err;
                                                        var $4905 = self.nam;
                                                        var $4906 = self.ini;
                                                        var $4907 = self.idx;
                                                        var $4908 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4894, $4904), $4905, $4906, $4907, $4908);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4910 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("\'", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4912 = self.err;
                                                                        var self = $4910;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4914 = self.value;
                                                                                var $4915 = Parser$Reply$error$(Parser$Error$combine$($4914, $4912));
                                                                                var $4913 = $4915;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4916 = Parser$Reply$error$($4912);
                                                                                var $4913 = $4916;
                                                                                break;
                                                                        };
                                                                        var $4911 = $4913;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4917 = self.pst;
                                                                        var self = $4917;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4919 = self.err;
                                                                                var $4920 = self.nam;
                                                                                var $4921 = self.ini;
                                                                                var $4922 = self.idx;
                                                                                var $4923 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4910, $4919), $4920, $4921, $4922, $4923);
                                                                                var $4924 = Parser$Reply$value$(_reply$pst$43, Kind$Term$chr$($4902));
                                                                                var $4918 = $4924;
                                                                                break;
                                                                        };
                                                                        var $4911 = $4918;
                                                                        break;
                                                                };
                                                                var $4909 = $4911;
                                                                break;
                                                        };
                                                        var $4903 = $4909;
                                                        break;
                                                };
                                                var $4895 = $4903;
                                                break;
                                        };
                                        var $4893 = $4895;
                                        break;
                                };
                                var $4887 = $4893;
                                break;
                        };
                        var $4880 = $4887;
                        break;
                };
                var $4878 = $4880;
                break;
        };
        return $4878;
    }));

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $4925 = _res$2;
                    return $4925;
                } else {
                    var $4926 = self.charCodeAt(0);
                    var $4927 = self.slice(1);
                    var $4928 = String$reverse$go$($4927, String$cons$($4926, _res$2));
                    return $4928;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $4929 = String$reverse$go$(_xs$1, String$nil);
        return $4929;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function Kind$Parser$string$go$(_delim$1, _str$2, _pst$3) {
        var Kind$Parser$string$go$ = (_delim$1, _str$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_delim$1, _str$2, _pst$3]
        });
        var Kind$Parser$string$go = _delim$1 => _str$2 => _pst$3 => Kind$Parser$string$go$(_delim$1, _str$2, _pst$3);
        var arg = [_delim$1, _str$2, _pst$3];
        while (true) {
            let [_delim$1, _str$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $4930 = self.err;
                        var $4931 = self.nam;
                        var $4932 = self.ini;
                        var $4933 = self.idx;
                        var $4934 = self.str;
                        var self = $4934;
                        if (self.length === 0) {
                            var $4936 = Parser$Reply$fail$($4931, $4932, $4933, "Non-terminating string.");
                            var $4935 = $4936;
                        } else {
                            var $4937 = self.charCodeAt(0);
                            var $4938 = self.slice(1);
                            var self = ($4937 === _delim$1);
                            if (self) {
                                var _pst$11 = Parser$State$new$($4930, $4931, $4932, Nat$succ$($4933), $4938);
                                var $4940 = Parser$Reply$value$(_pst$11, String$reverse$(_str$2));
                                var $4939 = $4940;
                            } else {
                                var self = Kind$Parser$char$single(_pst$3);
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $4942 = self.err;
                                        var $4943 = Parser$Reply$error$($4942);
                                        var $4941 = $4943;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $4944 = self.pst;
                                        var $4945 = self.val;
                                        var $4946 = Kind$Parser$string$go$(_delim$1, String$cons$($4945, _str$2), $4944);
                                        var $4941 = $4946;
                                        break;
                                };
                                var $4939 = $4941;
                            };
                            var $4935 = $4939;
                        };
                        return $4935;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$string$go = x0 => x1 => x2 => Kind$Parser$string$go$(x0, x1, x2);

    function Kind$Parser$string$(_delim$1) {
        var $4947 = Kind$Parser$block("string")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4949 = self.err;
                    var _reply$8 = Kind$Parser$text$(String$cons$(_delim$1, String$nil), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4951 = self.err;
                            var self = $4949;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4953 = self.value;
                                    var $4954 = Parser$Reply$error$(Parser$Error$combine$($4953, $4951));
                                    var $4952 = $4954;
                                    break;
                                case 'Maybe.none':
                                    var $4955 = Parser$Reply$error$($4951);
                                    var $4952 = $4955;
                                    break;
                            };
                            var $4950 = $4952;
                            break;
                        case 'Parser.Reply.value':
                            var $4956 = self.pst;
                            var self = $4956;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4958 = self.err;
                                    var $4959 = self.nam;
                                    var $4960 = self.ini;
                                    var $4961 = self.idx;
                                    var $4962 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4949, $4958), $4959, $4960, $4961, $4962);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4964 = self.err;
                                            var _reply$22 = Kind$Parser$string$go$(_delim$1, "", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4966 = self.err;
                                                    var self = $4964;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4968 = self.value;
                                                            var $4969 = Parser$Reply$error$(Parser$Error$combine$($4968, $4966));
                                                            var $4967 = $4969;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4970 = Parser$Reply$error$($4966);
                                                            var $4967 = $4970;
                                                            break;
                                                    };
                                                    var $4965 = $4967;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4971 = self.pst;
                                                    var $4972 = self.val;
                                                    var self = $4971;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4974 = self.err;
                                                            var $4975 = self.nam;
                                                            var $4976 = self.ini;
                                                            var $4977 = self.idx;
                                                            var $4978 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4964, $4974), $4975, $4976, $4977, $4978);
                                                            var $4979 = Parser$Reply$value$(_reply$pst$30, Kind$Term$str$($4972));
                                                            var $4973 = $4979;
                                                            break;
                                                    };
                                                    var $4965 = $4973;
                                                    break;
                                            };
                                            var $4963 = $4965;
                                            break;
                                    };
                                    var $4957 = $4963;
                                    break;
                            };
                            var $4950 = $4957;
                            break;
                    };
                    var $4948 = $4950;
                    break;
            };
            return $4948;
        }));
        return $4947;
    };
    const Kind$Parser$string = x0 => Kind$Parser$string$(x0);

    function Kind$Term$new$(_args$1) {
        var $4980 = ({
            _: 'Kind.Term.new',
            'args': _args$1
        });
        return $4980;
    };
    const Kind$Term$new = x0 => Kind$Term$new$(x0);
    const Kind$Parser$new = Kind$Parser$block("new-struct")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4982 = self.err;
                var _reply$7 = Kind$Parser$items1$("{", Kind$Parser$term, "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4984 = self.err;
                        var self = $4982;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4986 = self.value;
                                var $4987 = Parser$Reply$error$(Parser$Error$combine$($4986, $4984));
                                var $4985 = $4987;
                                break;
                            case 'Maybe.none':
                                var $4988 = Parser$Reply$error$($4984);
                                var $4985 = $4988;
                                break;
                        };
                        var $4983 = $4985;
                        break;
                    case 'Parser.Reply.value':
                        var $4989 = self.pst;
                        var $4990 = self.val;
                        var self = $4989;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4992 = self.err;
                                var $4993 = self.nam;
                                var $4994 = self.ini;
                                var $4995 = self.idx;
                                var $4996 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4982, $4992), $4993, $4994, $4995, $4996);
                                var $4997 = Parser$Reply$value$(_reply$pst$15, Kind$Term$new$($4990));
                                var $4991 = $4997;
                                break;
                        };
                        var $4983 = $4991;
                        break;
                };
                var $4981 = $4983;
                break;
        };
        return $4981;
    }));
    const Kind$Parser$sigma$type = Kind$Parser$block("sigma")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4999 = self.err;
                var _reply$7 = Kind$Parser$text$("[", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5001 = self.err;
                        var self = $4999;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5003 = self.value;
                                var $5004 = Parser$Reply$error$(Parser$Error$combine$($5003, $5001));
                                var $5002 = $5004;
                                break;
                            case 'Maybe.none':
                                var $5005 = Parser$Reply$error$($5001);
                                var $5002 = $5005;
                                break;
                        };
                        var $5000 = $5002;
                        break;
                    case 'Parser.Reply.value':
                        var $5006 = self.pst;
                        var self = $5006;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5008 = self.err;
                                var $5009 = self.nam;
                                var $5010 = self.ini;
                                var $5011 = self.idx;
                                var $5012 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4999, $5008), $5009, $5010, $5011, $5012);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5014 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5016 = self.err;
                                                var self = $5014;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5018 = self.value;
                                                        var $5019 = Parser$Reply$error$(Parser$Error$combine$($5018, $5016));
                                                        var $5017 = $5019;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5020 = Parser$Reply$error$($5016);
                                                        var $5017 = $5020;
                                                        break;
                                                };
                                                var $5015 = $5017;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5021 = self.pst;
                                                var $5022 = self.val;
                                                var self = $5021;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5024 = self.err;
                                                        var $5025 = self.nam;
                                                        var $5026 = self.ini;
                                                        var $5027 = self.idx;
                                                        var $5028 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5014, $5024), $5025, $5026, $5027, $5028);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5030 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5032 = self.err;
                                                                        var self = $5030;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5034 = self.value;
                                                                                var $5035 = Parser$Reply$error$(Parser$Error$combine$($5034, $5032));
                                                                                var $5033 = $5035;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5036 = Parser$Reply$error$($5032);
                                                                                var $5033 = $5036;
                                                                                break;
                                                                        };
                                                                        var $5031 = $5033;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5037 = self.pst;
                                                                        var self = $5037;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5039 = self.err;
                                                                                var $5040 = self.nam;
                                                                                var $5041 = self.ini;
                                                                                var $5042 = self.idx;
                                                                                var $5043 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5030, $5039), $5040, $5041, $5042, $5043);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5045 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5047 = self.err;
                                                                                                var self = $5045;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5049 = self.value;
                                                                                                        var $5050 = Parser$Reply$error$(Parser$Error$combine$($5049, $5047));
                                                                                                        var $5048 = $5050;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5051 = Parser$Reply$error$($5047);
                                                                                                        var $5048 = $5051;
                                                                                                        break;
                                                                                                };
                                                                                                var $5046 = $5048;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5052 = self.pst;
                                                                                                var $5053 = self.val;
                                                                                                var self = $5052;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5055 = self.err;
                                                                                                        var $5056 = self.nam;
                                                                                                        var $5057 = self.ini;
                                                                                                        var $5058 = self.idx;
                                                                                                        var $5059 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5045, $5055), $5056, $5057, $5058, $5059);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5061 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("]", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5063 = self.err;
                                                                                                                        var self = $5061;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5065 = self.value;
                                                                                                                                var $5066 = Parser$Reply$error$(Parser$Error$combine$($5065, $5063));
                                                                                                                                var $5064 = $5066;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5067 = Parser$Reply$error$($5063);
                                                                                                                                var $5064 = $5067;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5062 = $5064;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5068 = self.pst;
                                                                                                                        var self = $5068;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5070 = self.err;
                                                                                                                                var $5071 = self.nam;
                                                                                                                                var $5072 = self.ini;
                                                                                                                                var $5073 = self.idx;
                                                                                                                                var $5074 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5061, $5070), $5071, $5072, $5073, $5074);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $5076 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $5078 = self.err;
                                                                                                                                                var self = $5076;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $5080 = self.value;
                                                                                                                                                        var $5081 = Parser$Reply$error$(Parser$Error$combine$($5080, $5078));
                                                                                                                                                        var $5079 = $5081;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $5082 = Parser$Reply$error$($5078);
                                                                                                                                                        var $5079 = $5082;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5077 = $5079;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $5083 = self.pst;
                                                                                                                                                var $5084 = self.val;
                                                                                                                                                var self = $5083;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $5086 = self.err;
                                                                                                                                                        var $5087 = self.nam;
                                                                                                                                                        var $5088 = self.ini;
                                                                                                                                                        var $5089 = self.idx;
                                                                                                                                                        var $5090 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($5076, $5086), $5087, $5088, $5089, $5090);
                                                                                                                                                        var _term$86 = Kind$Term$ref$("Sigma");
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, $5053);
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, Kind$Term$lam$($5022, (_x$88 => {
                                                                                                                                                            var $5092 = $5084;
                                                                                                                                                            return $5092;
                                                                                                                                                        })));
                                                                                                                                                        var $5091 = Parser$Reply$value$(_reply$pst$85, _term$88);
                                                                                                                                                        var $5085 = $5091;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5077 = $5085;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $5075 = $5077;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $5069 = $5075;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5062 = $5069;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5060 = $5062;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5054 = $5060;
                                                                                                        break;
                                                                                                };
                                                                                                var $5046 = $5054;
                                                                                                break;
                                                                                        };
                                                                                        var $5044 = $5046;
                                                                                        break;
                                                                                };
                                                                                var $5038 = $5044;
                                                                                break;
                                                                        };
                                                                        var $5031 = $5038;
                                                                        break;
                                                                };
                                                                var $5029 = $5031;
                                                                break;
                                                        };
                                                        var $5023 = $5029;
                                                        break;
                                                };
                                                var $5015 = $5023;
                                                break;
                                        };
                                        var $5013 = $5015;
                                        break;
                                };
                                var $5007 = $5013;
                                break;
                        };
                        var $5000 = $5007;
                        break;
                };
                var $4998 = $5000;
                break;
        };
        return $4998;
    }));
    const Kind$Parser$some = Kind$Parser$block("some")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5094 = self.err;
                var _reply$7 = Kind$Parser$text$("some(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5096 = self.err;
                        var self = $5094;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5098 = self.value;
                                var $5099 = Parser$Reply$error$(Parser$Error$combine$($5098, $5096));
                                var $5097 = $5099;
                                break;
                            case 'Maybe.none':
                                var $5100 = Parser$Reply$error$($5096);
                                var $5097 = $5100;
                                break;
                        };
                        var $5095 = $5097;
                        break;
                    case 'Parser.Reply.value':
                        var $5101 = self.pst;
                        var self = $5101;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5103 = self.err;
                                var $5104 = self.nam;
                                var $5105 = self.ini;
                                var $5106 = self.idx;
                                var $5107 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5094, $5103), $5104, $5105, $5106, $5107);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5109 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5111 = self.err;
                                                var self = $5109;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5113 = self.value;
                                                        var $5114 = Parser$Reply$error$(Parser$Error$combine$($5113, $5111));
                                                        var $5112 = $5114;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5115 = Parser$Reply$error$($5111);
                                                        var $5112 = $5115;
                                                        break;
                                                };
                                                var $5110 = $5112;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5116 = self.pst;
                                                var $5117 = self.val;
                                                var self = $5116;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5119 = self.err;
                                                        var $5120 = self.nam;
                                                        var $5121 = self.ini;
                                                        var $5122 = self.idx;
                                                        var $5123 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5109, $5119), $5120, $5121, $5122, $5123);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5125 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5127 = self.err;
                                                                        var self = $5125;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5129 = self.value;
                                                                                var $5130 = Parser$Reply$error$(Parser$Error$combine$($5129, $5127));
                                                                                var $5128 = $5130;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5131 = Parser$Reply$error$($5127);
                                                                                var $5128 = $5131;
                                                                                break;
                                                                        };
                                                                        var $5126 = $5128;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5132 = self.pst;
                                                                        var self = $5132;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5134 = self.err;
                                                                                var $5135 = self.nam;
                                                                                var $5136 = self.ini;
                                                                                var $5137 = self.idx;
                                                                                var $5138 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5125, $5134), $5135, $5136, $5137, $5138);
                                                                                var _term$44 = Kind$Term$ref$("Maybe.some");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, $5117);
                                                                                var $5139 = Parser$Reply$value$(_reply$pst$43, _term$46);
                                                                                var $5133 = $5139;
                                                                                break;
                                                                        };
                                                                        var $5126 = $5133;
                                                                        break;
                                                                };
                                                                var $5124 = $5126;
                                                                break;
                                                        };
                                                        var $5118 = $5124;
                                                        break;
                                                };
                                                var $5110 = $5118;
                                                break;
                                        };
                                        var $5108 = $5110;
                                        break;
                                };
                                var $5102 = $5108;
                                break;
                        };
                        var $5095 = $5102;
                        break;
                };
                var $5093 = $5095;
                break;
        };
        return $5093;
    }));
    const Kind$Parser$not = Kind$Parser$block("not")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5141 = self.err;
                var _reply$7 = Kind$Parser$text$("not(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5143 = self.err;
                        var self = $5141;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5145 = self.value;
                                var $5146 = Parser$Reply$error$(Parser$Error$combine$($5145, $5143));
                                var $5144 = $5146;
                                break;
                            case 'Maybe.none':
                                var $5147 = Parser$Reply$error$($5143);
                                var $5144 = $5147;
                                break;
                        };
                        var $5142 = $5144;
                        break;
                    case 'Parser.Reply.value':
                        var $5148 = self.pst;
                        var self = $5148;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5150 = self.err;
                                var $5151 = self.nam;
                                var $5152 = self.ini;
                                var $5153 = self.idx;
                                var $5154 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5141, $5150), $5151, $5152, $5153, $5154);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5156 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5158 = self.err;
                                                var self = $5156;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5160 = self.value;
                                                        var $5161 = Parser$Reply$error$(Parser$Error$combine$($5160, $5158));
                                                        var $5159 = $5161;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5162 = Parser$Reply$error$($5158);
                                                        var $5159 = $5162;
                                                        break;
                                                };
                                                var $5157 = $5159;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5163 = self.pst;
                                                var $5164 = self.val;
                                                var self = $5163;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5166 = self.err;
                                                        var $5167 = self.nam;
                                                        var $5168 = self.ini;
                                                        var $5169 = self.idx;
                                                        var $5170 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5156, $5166), $5167, $5168, $5169, $5170);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5172 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5174 = self.err;
                                                                        var self = $5172;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5176 = self.value;
                                                                                var $5177 = Parser$Reply$error$(Parser$Error$combine$($5176, $5174));
                                                                                var $5175 = $5177;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5178 = Parser$Reply$error$($5174);
                                                                                var $5175 = $5178;
                                                                                break;
                                                                        };
                                                                        var $5173 = $5175;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5179 = self.pst;
                                                                        var self = $5179;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5181 = self.err;
                                                                                var $5182 = self.nam;
                                                                                var $5183 = self.ini;
                                                                                var $5184 = self.idx;
                                                                                var $5185 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5172, $5181), $5182, $5183, $5184, $5185);
                                                                                var _term$44 = Kind$Term$ref$("Bool.not");
                                                                                var _term$45 = Kind$Term$app$(_term$44, $5164);
                                                                                var $5186 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $5180 = $5186;
                                                                                break;
                                                                        };
                                                                        var $5173 = $5180;
                                                                        break;
                                                                };
                                                                var $5171 = $5173;
                                                                break;
                                                        };
                                                        var $5165 = $5171;
                                                        break;
                                                };
                                                var $5157 = $5165;
                                                break;
                                        };
                                        var $5155 = $5157;
                                        break;
                                };
                                var $5149 = $5155;
                                break;
                        };
                        var $5142 = $5149;
                        break;
                };
                var $5140 = $5142;
                break;
        };
        return $5140;
    }));
    const Kind$Parser$left = Kind$Parser$block("left")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5188 = self.err;
                var _reply$7 = Kind$Parser$text$("left(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5190 = self.err;
                        var self = $5188;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5192 = self.value;
                                var $5193 = Parser$Reply$error$(Parser$Error$combine$($5192, $5190));
                                var $5191 = $5193;
                                break;
                            case 'Maybe.none':
                                var $5194 = Parser$Reply$error$($5190);
                                var $5191 = $5194;
                                break;
                        };
                        var $5189 = $5191;
                        break;
                    case 'Parser.Reply.value':
                        var $5195 = self.pst;
                        var self = $5195;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5197 = self.err;
                                var $5198 = self.nam;
                                var $5199 = self.ini;
                                var $5200 = self.idx;
                                var $5201 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5188, $5197), $5198, $5199, $5200, $5201);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5203 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5205 = self.err;
                                                var self = $5203;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5207 = self.value;
                                                        var $5208 = Parser$Reply$error$(Parser$Error$combine$($5207, $5205));
                                                        var $5206 = $5208;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5209 = Parser$Reply$error$($5205);
                                                        var $5206 = $5209;
                                                        break;
                                                };
                                                var $5204 = $5206;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5210 = self.pst;
                                                var $5211 = self.val;
                                                var self = $5210;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5213 = self.err;
                                                        var $5214 = self.nam;
                                                        var $5215 = self.ini;
                                                        var $5216 = self.idx;
                                                        var $5217 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5203, $5213), $5214, $5215, $5216, $5217);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5219 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5221 = self.err;
                                                                        var self = $5219;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5223 = self.value;
                                                                                var $5224 = Parser$Reply$error$(Parser$Error$combine$($5223, $5221));
                                                                                var $5222 = $5224;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5225 = Parser$Reply$error$($5221);
                                                                                var $5222 = $5225;
                                                                                break;
                                                                        };
                                                                        var $5220 = $5222;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5226 = self.pst;
                                                                        var self = $5226;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5228 = self.err;
                                                                                var $5229 = self.nam;
                                                                                var $5230 = self.ini;
                                                                                var $5231 = self.idx;
                                                                                var $5232 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5219, $5228), $5229, $5230, $5231, $5232);
                                                                                var _term$44 = Kind$Term$ref$("Either.left");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5211);
                                                                                var $5233 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5227 = $5233;
                                                                                break;
                                                                        };
                                                                        var $5220 = $5227;
                                                                        break;
                                                                };
                                                                var $5218 = $5220;
                                                                break;
                                                        };
                                                        var $5212 = $5218;
                                                        break;
                                                };
                                                var $5204 = $5212;
                                                break;
                                        };
                                        var $5202 = $5204;
                                        break;
                                };
                                var $5196 = $5202;
                                break;
                        };
                        var $5189 = $5196;
                        break;
                };
                var $5187 = $5189;
                break;
        };
        return $5187;
    }));
    const Kind$Parser$right = Kind$Parser$block("right")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5235 = self.err;
                var _reply$7 = Kind$Parser$text$("right(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5237 = self.err;
                        var self = $5235;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5239 = self.value;
                                var $5240 = Parser$Reply$error$(Parser$Error$combine$($5239, $5237));
                                var $5238 = $5240;
                                break;
                            case 'Maybe.none':
                                var $5241 = Parser$Reply$error$($5237);
                                var $5238 = $5241;
                                break;
                        };
                        var $5236 = $5238;
                        break;
                    case 'Parser.Reply.value':
                        var $5242 = self.pst;
                        var self = $5242;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5244 = self.err;
                                var $5245 = self.nam;
                                var $5246 = self.ini;
                                var $5247 = self.idx;
                                var $5248 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5235, $5244), $5245, $5246, $5247, $5248);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5250 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5252 = self.err;
                                                var self = $5250;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5254 = self.value;
                                                        var $5255 = Parser$Reply$error$(Parser$Error$combine$($5254, $5252));
                                                        var $5253 = $5255;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5256 = Parser$Reply$error$($5252);
                                                        var $5253 = $5256;
                                                        break;
                                                };
                                                var $5251 = $5253;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5257 = self.pst;
                                                var $5258 = self.val;
                                                var self = $5257;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5260 = self.err;
                                                        var $5261 = self.nam;
                                                        var $5262 = self.ini;
                                                        var $5263 = self.idx;
                                                        var $5264 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5250, $5260), $5261, $5262, $5263, $5264);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5266 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5268 = self.err;
                                                                        var self = $5266;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5270 = self.value;
                                                                                var $5271 = Parser$Reply$error$(Parser$Error$combine$($5270, $5268));
                                                                                var $5269 = $5271;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5272 = Parser$Reply$error$($5268);
                                                                                var $5269 = $5272;
                                                                                break;
                                                                        };
                                                                        var $5267 = $5269;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5273 = self.pst;
                                                                        var self = $5273;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5275 = self.err;
                                                                                var $5276 = self.nam;
                                                                                var $5277 = self.ini;
                                                                                var $5278 = self.idx;
                                                                                var $5279 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5266, $5275), $5276, $5277, $5278, $5279);
                                                                                var _term$44 = Kind$Term$ref$("Either.right");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5258);
                                                                                var $5280 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5274 = $5280;
                                                                                break;
                                                                        };
                                                                        var $5267 = $5274;
                                                                        break;
                                                                };
                                                                var $5265 = $5267;
                                                                break;
                                                        };
                                                        var $5259 = $5265;
                                                        break;
                                                };
                                                var $5251 = $5259;
                                                break;
                                        };
                                        var $5249 = $5251;
                                        break;
                                };
                                var $5243 = $5249;
                                break;
                        };
                        var $5236 = $5243;
                        break;
                };
                var $5234 = $5236;
                break;
        };
        return $5234;
    }));
    const Kind$Parser$apply = Kind$Parser$block("apply")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5282 = self.err;
                var _reply$7 = Kind$Parser$text$("apply(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5284 = self.err;
                        var self = $5282;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5286 = self.value;
                                var $5287 = Parser$Reply$error$(Parser$Error$combine$($5286, $5284));
                                var $5285 = $5287;
                                break;
                            case 'Maybe.none':
                                var $5288 = Parser$Reply$error$($5284);
                                var $5285 = $5288;
                                break;
                        };
                        var $5283 = $5285;
                        break;
                    case 'Parser.Reply.value':
                        var $5289 = self.pst;
                        var self = $5289;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5291 = self.err;
                                var $5292 = self.nam;
                                var $5293 = self.ini;
                                var $5294 = self.idx;
                                var $5295 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5282, $5291), $5292, $5293, $5294, $5295);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5297 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5299 = self.err;
                                                var self = $5297;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5301 = self.value;
                                                        var $5302 = Parser$Reply$error$(Parser$Error$combine$($5301, $5299));
                                                        var $5300 = $5302;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5303 = Parser$Reply$error$($5299);
                                                        var $5300 = $5303;
                                                        break;
                                                };
                                                var $5298 = $5300;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5304 = self.pst;
                                                var $5305 = self.val;
                                                var self = $5304;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5307 = self.err;
                                                        var $5308 = self.nam;
                                                        var $5309 = self.ini;
                                                        var $5310 = self.idx;
                                                        var $5311 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5297, $5307), $5308, $5309, $5310, $5311);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5313 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5315 = self.err;
                                                                        var self = $5313;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5317 = self.value;
                                                                                var $5318 = Parser$Reply$error$(Parser$Error$combine$($5317, $5315));
                                                                                var $5316 = $5318;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5319 = Parser$Reply$error$($5315);
                                                                                var $5316 = $5319;
                                                                                break;
                                                                        };
                                                                        var $5314 = $5316;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5320 = self.pst;
                                                                        var self = $5320;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5322 = self.err;
                                                                                var $5323 = self.nam;
                                                                                var $5324 = self.ini;
                                                                                var $5325 = self.idx;
                                                                                var $5326 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5313, $5322), $5323, $5324, $5325, $5326);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5328 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5330 = self.err;
                                                                                                var self = $5328;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5332 = self.value;
                                                                                                        var $5333 = Parser$Reply$error$(Parser$Error$combine$($5332, $5330));
                                                                                                        var $5331 = $5333;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5334 = Parser$Reply$error$($5330);
                                                                                                        var $5331 = $5334;
                                                                                                        break;
                                                                                                };
                                                                                                var $5329 = $5331;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5335 = self.pst;
                                                                                                var $5336 = self.val;
                                                                                                var self = $5335;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5338 = self.err;
                                                                                                        var $5339 = self.nam;
                                                                                                        var $5340 = self.ini;
                                                                                                        var $5341 = self.idx;
                                                                                                        var $5342 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5328, $5338), $5339, $5340, $5341, $5342);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5344 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5346 = self.err;
                                                                                                                        var self = $5344;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5348 = self.value;
                                                                                                                                var $5349 = Parser$Reply$error$(Parser$Error$combine$($5348, $5346));
                                                                                                                                var $5347 = $5349;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5350 = Parser$Reply$error$($5346);
                                                                                                                                var $5347 = $5350;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5345 = $5347;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5351 = self.pst;
                                                                                                                        var self = $5351;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5353 = self.err;
                                                                                                                                var $5354 = self.nam;
                                                                                                                                var $5355 = self.ini;
                                                                                                                                var $5356 = self.idx;
                                                                                                                                var $5357 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5344, $5353), $5354, $5355, $5356, $5357);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.apply");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5305);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5336);
                                                                                                                                var $5358 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5352 = $5358;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5345 = $5352;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5343 = $5345;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5337 = $5343;
                                                                                                        break;
                                                                                                };
                                                                                                var $5329 = $5337;
                                                                                                break;
                                                                                        };
                                                                                        var $5327 = $5329;
                                                                                        break;
                                                                                };
                                                                                var $5321 = $5327;
                                                                                break;
                                                                        };
                                                                        var $5314 = $5321;
                                                                        break;
                                                                };
                                                                var $5312 = $5314;
                                                                break;
                                                        };
                                                        var $5306 = $5312;
                                                        break;
                                                };
                                                var $5298 = $5306;
                                                break;
                                        };
                                        var $5296 = $5298;
                                        break;
                                };
                                var $5290 = $5296;
                                break;
                        };
                        var $5283 = $5290;
                        break;
                };
                var $5281 = $5283;
                break;
        };
        return $5281;
    }));
    const Kind$Parser$chain = Kind$Parser$block("chain")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5360 = self.err;
                var _reply$7 = Kind$Parser$text$("chain(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5362 = self.err;
                        var self = $5360;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5364 = self.value;
                                var $5365 = Parser$Reply$error$(Parser$Error$combine$($5364, $5362));
                                var $5363 = $5365;
                                break;
                            case 'Maybe.none':
                                var $5366 = Parser$Reply$error$($5362);
                                var $5363 = $5366;
                                break;
                        };
                        var $5361 = $5363;
                        break;
                    case 'Parser.Reply.value':
                        var $5367 = self.pst;
                        var self = $5367;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5369 = self.err;
                                var $5370 = self.nam;
                                var $5371 = self.ini;
                                var $5372 = self.idx;
                                var $5373 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5360, $5369), $5370, $5371, $5372, $5373);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5375 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5377 = self.err;
                                                var self = $5375;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5379 = self.value;
                                                        var $5380 = Parser$Reply$error$(Parser$Error$combine$($5379, $5377));
                                                        var $5378 = $5380;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5381 = Parser$Reply$error$($5377);
                                                        var $5378 = $5381;
                                                        break;
                                                };
                                                var $5376 = $5378;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5382 = self.pst;
                                                var $5383 = self.val;
                                                var self = $5382;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5385 = self.err;
                                                        var $5386 = self.nam;
                                                        var $5387 = self.ini;
                                                        var $5388 = self.idx;
                                                        var $5389 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5375, $5385), $5386, $5387, $5388, $5389);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5391 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5393 = self.err;
                                                                        var self = $5391;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5395 = self.value;
                                                                                var $5396 = Parser$Reply$error$(Parser$Error$combine$($5395, $5393));
                                                                                var $5394 = $5396;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5397 = Parser$Reply$error$($5393);
                                                                                var $5394 = $5397;
                                                                                break;
                                                                        };
                                                                        var $5392 = $5394;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5398 = self.pst;
                                                                        var self = $5398;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5400 = self.err;
                                                                                var $5401 = self.nam;
                                                                                var $5402 = self.ini;
                                                                                var $5403 = self.idx;
                                                                                var $5404 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5391, $5400), $5401, $5402, $5403, $5404);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5406 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5408 = self.err;
                                                                                                var self = $5406;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5410 = self.value;
                                                                                                        var $5411 = Parser$Reply$error$(Parser$Error$combine$($5410, $5408));
                                                                                                        var $5409 = $5411;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5412 = Parser$Reply$error$($5408);
                                                                                                        var $5409 = $5412;
                                                                                                        break;
                                                                                                };
                                                                                                var $5407 = $5409;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5413 = self.pst;
                                                                                                var $5414 = self.val;
                                                                                                var self = $5413;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5416 = self.err;
                                                                                                        var $5417 = self.nam;
                                                                                                        var $5418 = self.ini;
                                                                                                        var $5419 = self.idx;
                                                                                                        var $5420 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5406, $5416), $5417, $5418, $5419, $5420);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5422 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5424 = self.err;
                                                                                                                        var self = $5422;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5426 = self.value;
                                                                                                                                var $5427 = Parser$Reply$error$(Parser$Error$combine$($5426, $5424));
                                                                                                                                var $5425 = $5427;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5428 = Parser$Reply$error$($5424);
                                                                                                                                var $5425 = $5428;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5423 = $5425;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5429 = self.pst;
                                                                                                                        var self = $5429;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5431 = self.err;
                                                                                                                                var $5432 = self.nam;
                                                                                                                                var $5433 = self.ini;
                                                                                                                                var $5434 = self.idx;
                                                                                                                                var $5435 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5422, $5431), $5432, $5433, $5434, $5435);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.chain");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5383);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5414);
                                                                                                                                var $5436 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5430 = $5436;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5423 = $5430;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5421 = $5423;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5415 = $5421;
                                                                                                        break;
                                                                                                };
                                                                                                var $5407 = $5415;
                                                                                                break;
                                                                                        };
                                                                                        var $5405 = $5407;
                                                                                        break;
                                                                                };
                                                                                var $5399 = $5405;
                                                                                break;
                                                                        };
                                                                        var $5392 = $5399;
                                                                        break;
                                                                };
                                                                var $5390 = $5392;
                                                                break;
                                                        };
                                                        var $5384 = $5390;
                                                        break;
                                                };
                                                var $5376 = $5384;
                                                break;
                                        };
                                        var $5374 = $5376;
                                        break;
                                };
                                var $5368 = $5374;
                                break;
                        };
                        var $5361 = $5368;
                        break;
                };
                var $5359 = $5361;
                break;
        };
        return $5359;
    }));
    const Kind$Parser$mirror = Kind$Parser$block("mirror")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5438 = self.err;
                var _reply$7 = Kind$Parser$text$("mirror(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5440 = self.err;
                        var self = $5438;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5442 = self.value;
                                var $5443 = Parser$Reply$error$(Parser$Error$combine$($5442, $5440));
                                var $5441 = $5443;
                                break;
                            case 'Maybe.none':
                                var $5444 = Parser$Reply$error$($5440);
                                var $5441 = $5444;
                                break;
                        };
                        var $5439 = $5441;
                        break;
                    case 'Parser.Reply.value':
                        var $5445 = self.pst;
                        var self = $5445;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5447 = self.err;
                                var $5448 = self.nam;
                                var $5449 = self.ini;
                                var $5450 = self.idx;
                                var $5451 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5438, $5447), $5448, $5449, $5450, $5451);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5453 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5455 = self.err;
                                                var self = $5453;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5457 = self.value;
                                                        var $5458 = Parser$Reply$error$(Parser$Error$combine$($5457, $5455));
                                                        var $5456 = $5458;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5459 = Parser$Reply$error$($5455);
                                                        var $5456 = $5459;
                                                        break;
                                                };
                                                var $5454 = $5456;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5460 = self.pst;
                                                var $5461 = self.val;
                                                var self = $5460;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5463 = self.err;
                                                        var $5464 = self.nam;
                                                        var $5465 = self.ini;
                                                        var $5466 = self.idx;
                                                        var $5467 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5453, $5463), $5464, $5465, $5466, $5467);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5469 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5471 = self.err;
                                                                        var self = $5469;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5473 = self.value;
                                                                                var $5474 = Parser$Reply$error$(Parser$Error$combine$($5473, $5471));
                                                                                var $5472 = $5474;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5475 = Parser$Reply$error$($5471);
                                                                                var $5472 = $5475;
                                                                                break;
                                                                        };
                                                                        var $5470 = $5472;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5476 = self.pst;
                                                                        var self = $5476;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5478 = self.err;
                                                                                var $5479 = self.nam;
                                                                                var $5480 = self.ini;
                                                                                var $5481 = self.idx;
                                                                                var $5482 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5469, $5478), $5479, $5480, $5481, $5482);
                                                                                var _term$44 = Kind$Term$ref$("Equal.mirror");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                var _term$48 = Kind$Term$app$(_term$47, $5461);
                                                                                var $5483 = Parser$Reply$value$(_reply$pst$43, _term$48);
                                                                                var $5477 = $5483;
                                                                                break;
                                                                        };
                                                                        var $5470 = $5477;
                                                                        break;
                                                                };
                                                                var $5468 = $5470;
                                                                break;
                                                        };
                                                        var $5462 = $5468;
                                                        break;
                                                };
                                                var $5454 = $5462;
                                                break;
                                        };
                                        var $5452 = $5454;
                                        break;
                                };
                                var $5446 = $5452;
                                break;
                        };
                        var $5439 = $5446;
                        break;
                };
                var $5437 = $5439;
                break;
        };
        return $5437;
    }));

    function Kind$Name$read$(_str$1) {
        var $5484 = _str$1;
        return $5484;
    };
    const Kind$Name$read = x0 => Kind$Name$read$(x0);
    const Kind$Parser$list = Kind$Parser$block("list")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5486 = self.err;
                var _reply$7 = Kind$Parser$items$("[", Kind$Parser$term, "]")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5488 = self.err;
                        var self = $5486;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5490 = self.value;
                                var $5491 = Parser$Reply$error$(Parser$Error$combine$($5490, $5488));
                                var $5489 = $5491;
                                break;
                            case 'Maybe.none':
                                var $5492 = Parser$Reply$error$($5488);
                                var $5489 = $5492;
                                break;
                        };
                        var $5487 = $5489;
                        break;
                    case 'Parser.Reply.value':
                        var $5493 = self.pst;
                        var $5494 = self.val;
                        var self = $5493;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5496 = self.err;
                                var $5497 = self.nam;
                                var $5498 = self.ini;
                                var $5499 = self.idx;
                                var $5500 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5486, $5496), $5497, $5498, $5499, $5500);
                                var $5501 = Parser$Reply$value$(_reply$pst$15, List$fold$($5494, Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("List.nil")), Kind$Term$hol$(Bits$e)), (_x$16 => _xs$17 => {
                                    var _term$18 = Kind$Term$ref$(Kind$Name$read$("List.cons"));
                                    var _term$19 = Kind$Term$app$(_term$18, Kind$Term$hol$(Bits$e));
                                    var _term$20 = Kind$Term$app$(_term$19, _x$16);
                                    var _term$21 = Kind$Term$app$(_term$20, _xs$17);
                                    var $5502 = _term$21;
                                    return $5502;
                                })));
                                var $5495 = $5501;
                                break;
                        };
                        var $5487 = $5495;
                        break;
                };
                var $5485 = $5487;
                break;
        };
        return $5485;
    }));
    const Kind$Parser$map = Kind$Parser$block("map")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5504 = self.err;
                var _reply$7 = Kind$Parser$items$("{", (_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $5507 = self.err;
                            var _reply$13 = Kind$Parser$term(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $5509 = self.err;
                                    var self = $5507;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $5511 = self.value;
                                            var $5512 = Parser$Reply$error$(Parser$Error$combine$($5511, $5509));
                                            var $5510 = $5512;
                                            break;
                                        case 'Maybe.none':
                                            var $5513 = Parser$Reply$error$($5509);
                                            var $5510 = $5513;
                                            break;
                                    };
                                    var $5508 = $5510;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5514 = self.pst;
                                    var $5515 = self.val;
                                    var self = $5514;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5517 = self.err;
                                            var $5518 = self.nam;
                                            var $5519 = self.ini;
                                            var $5520 = self.idx;
                                            var $5521 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($5507, $5517), $5518, $5519, $5520, $5521);
                                            var self = _reply$pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $5523 = self.err;
                                                    var _reply$27 = Kind$Parser$text$(":", _reply$pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $5525 = self.err;
                                                            var self = $5523;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $5527 = self.value;
                                                                    var $5528 = Parser$Reply$error$(Parser$Error$combine$($5527, $5525));
                                                                    var $5526 = $5528;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $5529 = Parser$Reply$error$($5525);
                                                                    var $5526 = $5529;
                                                                    break;
                                                            };
                                                            var $5524 = $5526;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $5530 = self.pst;
                                                            var self = $5530;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5532 = self.err;
                                                                    var $5533 = self.nam;
                                                                    var $5534 = self.ini;
                                                                    var $5535 = self.idx;
                                                                    var $5536 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($5523, $5532), $5533, $5534, $5535, $5536);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $5538 = self.err;
                                                                            var _reply$41 = Kind$Parser$term(_reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $5540 = self.err;
                                                                                    var self = $5538;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $5542 = self.value;
                                                                                            var $5543 = Parser$Reply$error$(Parser$Error$combine$($5542, $5540));
                                                                                            var $5541 = $5543;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $5544 = Parser$Reply$error$($5540);
                                                                                            var $5541 = $5544;
                                                                                            break;
                                                                                    };
                                                                                    var $5539 = $5541;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $5545 = self.pst;
                                                                                    var $5546 = self.val;
                                                                                    var self = $5545;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5548 = self.err;
                                                                                            var $5549 = self.nam;
                                                                                            var $5550 = self.ini;
                                                                                            var $5551 = self.idx;
                                                                                            var $5552 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($5538, $5548), $5549, $5550, $5551, $5552);
                                                                                            var $5553 = Parser$Reply$value$(_reply$pst$49, Pair$new$($5515, $5546));
                                                                                            var $5547 = $5553;
                                                                                            break;
                                                                                    };
                                                                                    var $5539 = $5547;
                                                                                    break;
                                                                            };
                                                                            var $5537 = $5539;
                                                                            break;
                                                                    };
                                                                    var $5531 = $5537;
                                                                    break;
                                                            };
                                                            var $5524 = $5531;
                                                            break;
                                                    };
                                                    var $5522 = $5524;
                                                    break;
                                            };
                                            var $5516 = $5522;
                                            break;
                                    };
                                    var $5508 = $5516;
                                    break;
                            };
                            var $5506 = $5508;
                            break;
                    };
                    return $5506;
                }), "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5554 = self.err;
                        var self = $5504;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5556 = self.value;
                                var $5557 = Parser$Reply$error$(Parser$Error$combine$($5556, $5554));
                                var $5555 = $5557;
                                break;
                            case 'Maybe.none':
                                var $5558 = Parser$Reply$error$($5554);
                                var $5555 = $5558;
                                break;
                        };
                        var $5505 = $5555;
                        break;
                    case 'Parser.Reply.value':
                        var $5559 = self.pst;
                        var $5560 = self.val;
                        var self = $5559;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5562 = self.err;
                                var $5563 = self.nam;
                                var $5564 = self.ini;
                                var $5565 = self.idx;
                                var $5566 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5504, $5562), $5563, $5564, $5565, $5566);
                                var _list$16 = List$fold$($5560, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)), (_kv$16 => _xs$17 => {
                                    var self = _kv$16;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $5569 = self.fst;
                                            var $5570 = self.snd;
                                            var _pair$20 = Kind$Term$ref$("Pair.new");
                                            var _pair$21 = Kind$Term$app$(_pair$20, Kind$Term$hol$(Bits$e));
                                            var _pair$22 = Kind$Term$app$(_pair$21, Kind$Term$hol$(Bits$e));
                                            var _pair$23 = Kind$Term$app$(_pair$22, $5569);
                                            var _pair$24 = Kind$Term$app$(_pair$23, $5570);
                                            var _term$25 = Kind$Term$ref$("List.cons");
                                            var _term$26 = Kind$Term$app$(_term$25, Kind$Term$hol$(Bits$e));
                                            var _term$27 = Kind$Term$app$(_term$26, _pair$24);
                                            var _term$28 = Kind$Term$app$(_term$27, _xs$17);
                                            var $5571 = _term$28;
                                            var $5568 = $5571;
                                            break;
                                    };
                                    return $5568;
                                }));
                                var _term$17 = Kind$Term$ref$("Map.from_list");
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                var _term$19 = Kind$Term$app$(_term$18, _list$16);
                                var $5567 = Parser$Reply$value$(_reply$pst$15, _term$19);
                                var $5561 = $5567;
                                break;
                        };
                        var $5505 = $5561;
                        break;
                };
                var $5503 = $5505;
                break;
        };
        return $5503;
    }));

    function Kind$Parser$log$(_body$1) {
        var $5572 = Kind$Parser$block("log")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5574 = self.err;
                    var _reply$8 = Kind$Parser$text$("log(", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5576 = self.err;
                            var self = $5574;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5578 = self.value;
                                    var $5579 = Parser$Reply$error$(Parser$Error$combine$($5578, $5576));
                                    var $5577 = $5579;
                                    break;
                                case 'Maybe.none':
                                    var $5580 = Parser$Reply$error$($5576);
                                    var $5577 = $5580;
                                    break;
                            };
                            var $5575 = $5577;
                            break;
                        case 'Parser.Reply.value':
                            var $5581 = self.pst;
                            var self = $5581;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5583 = self.err;
                                    var $5584 = self.nam;
                                    var $5585 = self.ini;
                                    var $5586 = self.idx;
                                    var $5587 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5574, $5583), $5584, $5585, $5586, $5587);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5589 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5591 = self.err;
                                                    var self = $5589;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5593 = self.value;
                                                            var $5594 = Parser$Reply$error$(Parser$Error$combine$($5593, $5591));
                                                            var $5592 = $5594;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5595 = Parser$Reply$error$($5591);
                                                            var $5592 = $5595;
                                                            break;
                                                    };
                                                    var $5590 = $5592;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5596 = self.pst;
                                                    var $5597 = self.val;
                                                    var self = $5596;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5599 = self.err;
                                                            var $5600 = self.nam;
                                                            var $5601 = self.ini;
                                                            var $5602 = self.idx;
                                                            var $5603 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5589, $5599), $5600, $5601, $5602, $5603);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5605 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(")", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5607 = self.err;
                                                                            var self = $5605;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5609 = self.value;
                                                                                    var $5610 = Parser$Reply$error$(Parser$Error$combine$($5609, $5607));
                                                                                    var $5608 = $5610;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5611 = Parser$Reply$error$($5607);
                                                                                    var $5608 = $5611;
                                                                                    break;
                                                                            };
                                                                            var $5606 = $5608;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5612 = self.pst;
                                                                            var self = $5612;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5614 = self.err;
                                                                                    var $5615 = self.nam;
                                                                                    var $5616 = self.ini;
                                                                                    var $5617 = self.idx;
                                                                                    var $5618 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5605, $5614), $5615, $5616, $5617, $5618);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5620 = self.err;
                                                                                            var _reply$50 = _body$1(Unit$new)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5622 = self.err;
                                                                                                    var self = $5620;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5624 = self.value;
                                                                                                            var $5625 = Parser$Reply$error$(Parser$Error$combine$($5624, $5622));
                                                                                                            var $5623 = $5625;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5626 = Parser$Reply$error$($5622);
                                                                                                            var $5623 = $5626;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5621 = $5623;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5627 = self.pst;
                                                                                                    var $5628 = self.val;
                                                                                                    var self = $5627;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5630 = self.err;
                                                                                                            var $5631 = self.nam;
                                                                                                            var $5632 = self.ini;
                                                                                                            var $5633 = self.idx;
                                                                                                            var $5634 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5620, $5630), $5631, $5632, $5633, $5634);
                                                                                                            var _term$59 = Kind$Term$ref$("Debug.log");
                                                                                                            var _term$60 = Kind$Term$app$(_term$59, Kind$Term$hol$(Bits$e));
                                                                                                            var _term$61 = Kind$Term$app$(_term$60, $5597);
                                                                                                            var _term$62 = Kind$Term$app$(_term$61, Kind$Term$lam$("", (_x$62 => {
                                                                                                                var $5636 = $5628;
                                                                                                                return $5636;
                                                                                                            })));
                                                                                                            var $5635 = Parser$Reply$value$(_reply$pst$58, _term$62);
                                                                                                            var $5629 = $5635;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5621 = $5629;
                                                                                                    break;
                                                                                            };
                                                                                            var $5619 = $5621;
                                                                                            break;
                                                                                    };
                                                                                    var $5613 = $5619;
                                                                                    break;
                                                                            };
                                                                            var $5606 = $5613;
                                                                            break;
                                                                    };
                                                                    var $5604 = $5606;
                                                                    break;
                                                            };
                                                            var $5598 = $5604;
                                                            break;
                                                    };
                                                    var $5590 = $5598;
                                                    break;
                                            };
                                            var $5588 = $5590;
                                            break;
                                    };
                                    var $5582 = $5588;
                                    break;
                            };
                            var $5575 = $5582;
                            break;
                    };
                    var $5573 = $5575;
                    break;
            };
            return $5573;
        }));
        return $5572;
    };
    const Kind$Parser$log = x0 => Kind$Parser$log$(x0);

    function String$map$(_f$1, _as$2) {
        var self = _as$2;
        if (self.length === 0) {
            var $5638 = String$nil;
            var $5637 = $5638;
        } else {
            var $5639 = self.charCodeAt(0);
            var $5640 = self.slice(1);
            var $5641 = String$cons$(_f$1($5639), String$map$(_f$1, $5640));
            var $5637 = $5641;
        };
        return $5637;
    };
    const String$map = x0 => x1 => String$map$(x0, x1);

    function Char$to_upper$(_char$1) {
        var self = ((_char$1 >= 97) && (_char$1 <= 122));
        if (self) {
            var $5643 = ((_char$1 - 32) & 0xFFFF);
            var $5642 = $5643;
        } else {
            var $5644 = _char$1;
            var $5642 = $5644;
        };
        return $5642;
    };
    const Char$to_upper = x0 => Char$to_upper$(x0);

    function String$to_upper$(_str$1) {
        var $5645 = String$map$(Char$to_upper, _str$1);
        return $5645;
    };
    const String$to_upper = x0 => String$to_upper$(x0);

    function String$is_upper$(_str$1) {
        var $5646 = (String$to_upper$(_str$1) === _str$1);
        return $5646;
    };
    const String$is_upper = x0 => String$is_upper$(x0);

    function String$take$(_n$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $5648 = String$nil;
            var $5647 = $5648;
        } else {
            var $5649 = self.charCodeAt(0);
            var $5650 = self.slice(1);
            var self = _n$1;
            if (self === 0n) {
                var $5652 = String$nil;
                var $5651 = $5652;
            } else {
                var $5653 = (self - 1n);
                var $5654 = String$cons$($5649, String$take$($5653, $5650));
                var $5651 = $5654;
            };
            var $5647 = $5651;
        };
        return $5647;
    };
    const String$take = x0 => x1 => String$take$(x0, x1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function String$slice$(_i$1, _j$2, _xs$3) {
        var $5655 = String$take$((_j$2 - _i$1 <= 0n ? 0n : _j$2 - _i$1), String$drop$(_i$1, _xs$3));
        return $5655;
    };
    const String$slice = x0 => x1 => x2 => String$slice$(x0, x1, x2);

    function Kind$Term$unroll_nat$(_natx$1) {
        var self = _natx$1;
        if (self === 0n) {
            var $5657 = Kind$Term$ref$(Kind$Name$read$("Nat.zero"));
            var $5656 = $5657;
        } else {
            var $5658 = (self - 1n);
            var _func$3 = Kind$Term$ref$(Kind$Name$read$("Nat.succ"));
            var _argm$4 = Kind$Term$nat$($5658);
            var $5659 = Kind$Term$app$(_func$3, _argm$4);
            var $5656 = $5659;
        };
        return $5656;
    };
    const Kind$Term$unroll_nat = x0 => Kind$Term$unroll_nat$(x0);

    function Word$to_bits$(_a$2) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $5661 = self.pred;
                var $5662 = (Word$to_bits$($5661) + '0');
                var $5660 = $5662;
                break;
            case 'Word.i':
                var $5663 = self.pred;
                var $5664 = (Word$to_bits$($5663) + '1');
                var $5660 = $5664;
                break;
            case 'Word.e':
                var $5665 = Bits$e;
                var $5660 = $5665;
                break;
        };
        return $5660;
    };
    const Word$to_bits = x0 => Word$to_bits$(x0);
    const U16$to_bits = a0 => (u16_to_bits(a0));

    function Kind$Term$unroll_chr$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $5667 = self.slice(0, -1);
                var $5668 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.o")), Kind$Term$unroll_chr$bits$($5667));
                var $5666 = $5668;
                break;
            case 'i':
                var $5669 = self.slice(0, -1);
                var $5670 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.i")), Kind$Term$unroll_chr$bits$($5669));
                var $5666 = $5670;
                break;
            case 'e':
                var $5671 = Kind$Term$ref$(Kind$Name$read$("Bits.e"));
                var $5666 = $5671;
                break;
        };
        return $5666;
    };
    const Kind$Term$unroll_chr$bits = x0 => Kind$Term$unroll_chr$bits$(x0);

    function Kind$Term$unroll_chr$(_chrx$1) {
        var _bits$2 = (u16_to_bits(_chrx$1));
        var _term$3 = Kind$Term$ref$(Kind$Name$read$("Word.from_bits"));
        var _term$4 = Kind$Term$app$(_term$3, Kind$Term$nat$(16n));
        var _term$5 = Kind$Term$app$(_term$4, Kind$Term$unroll_chr$bits$(_bits$2));
        var _term$6 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("U16.new")), _term$5);
        var $5672 = _term$6;
        return $5672;
    };
    const Kind$Term$unroll_chr = x0 => Kind$Term$unroll_chr$(x0);

    function Kind$Term$unroll_str$(_strx$1) {
        var self = _strx$1;
        if (self.length === 0) {
            var $5674 = Kind$Term$ref$(Kind$Name$read$("String.nil"));
            var $5673 = $5674;
        } else {
            var $5675 = self.charCodeAt(0);
            var $5676 = self.slice(1);
            var _char$4 = Kind$Term$chr$($5675);
            var _term$5 = Kind$Term$ref$(Kind$Name$read$("String.cons"));
            var _term$6 = Kind$Term$app$(_term$5, _char$4);
            var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$($5676));
            var $5677 = _term$7;
            var $5673 = $5677;
        };
        return $5673;
    };
    const Kind$Term$unroll_str = x0 => Kind$Term$unroll_str$(x0);

    function Kind$Term$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $5679 = self.name;
                var self = Kind$Map$get$($5679, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $5681 = self.value;
                        var self = $5681;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $5683 = self.term;
                                var $5684 = Kind$Term$reduce$($5683, _defs$2);
                                var $5682 = $5684;
                                break;
                        };
                        var $5680 = $5682;
                        break;
                    case 'Maybe.none':
                        var $5685 = Kind$Term$ref$($5679);
                        var $5680 = $5685;
                        break;
                };
                var $5678 = $5680;
                break;
            case 'Kind.Term.app':
                var $5686 = self.func;
                var $5687 = self.argm;
                var _func$5 = Kind$Term$reduce$($5686, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $5689 = self.body;
                        var $5690 = Kind$Term$reduce$($5689($5687), _defs$2);
                        var $5688 = $5690;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $5691 = _term$1;
                        var $5688 = $5691;
                        break;
                };
                var $5678 = $5688;
                break;
            case 'Kind.Term.let':
                var $5692 = self.expr;
                var $5693 = self.body;
                var $5694 = Kind$Term$reduce$($5693($5692), _defs$2);
                var $5678 = $5694;
                break;
            case 'Kind.Term.def':
                var $5695 = self.expr;
                var $5696 = self.body;
                var $5697 = Kind$Term$reduce$($5696($5695), _defs$2);
                var $5678 = $5697;
                break;
            case 'Kind.Term.ann':
                var $5698 = self.term;
                var $5699 = Kind$Term$reduce$($5698, _defs$2);
                var $5678 = $5699;
                break;
            case 'Kind.Term.nat':
                var $5700 = self.natx;
                var $5701 = Kind$Term$reduce$(Kind$Term$unroll_nat$($5700), _defs$2);
                var $5678 = $5701;
                break;
            case 'Kind.Term.chr':
                var $5702 = self.chrx;
                var $5703 = Kind$Term$reduce$(Kind$Term$unroll_chr$($5702), _defs$2);
                var $5678 = $5703;
                break;
            case 'Kind.Term.str':
                var $5704 = self.strx;
                var $5705 = Kind$Term$reduce$(Kind$Term$unroll_str$($5704), _defs$2);
                var $5678 = $5705;
                break;
            case 'Kind.Term.ori':
                var $5706 = self.expr;
                var $5707 = Kind$Term$reduce$($5706, _defs$2);
                var $5678 = $5707;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $5708 = _term$1;
                var $5678 = $5708;
                break;
        };
        return $5678;
    };
    const Kind$Term$reduce = x0 => x1 => Kind$Term$reduce$(x0, x1);

    function Kind$Term$cse$(_path$1, _expr$2, _name$3, _with$4, _cses$5, _moti$6) {
        var $5709 = ({
            _: 'Kind.Term.cse',
            'path': _path$1,
            'expr': _expr$2,
            'name': _name$3,
            'with': _with$4,
            'cses': _cses$5,
            'moti': _moti$6
        });
        return $5709;
    };
    const Kind$Term$cse = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$cse$(x0, x1, x2, x3, x4, x5);

    function Kind$Parser$open$(_body$1) {
        var $5710 = Kind$Parser$block("open")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5712 = self.err;
                    var _reply$8 = Kind$Parser$text$("open ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5714 = self.err;
                            var self = $5712;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5716 = self.value;
                                    var $5717 = Parser$Reply$error$(Parser$Error$combine$($5716, $5714));
                                    var $5715 = $5717;
                                    break;
                                case 'Maybe.none':
                                    var $5718 = Parser$Reply$error$($5714);
                                    var $5715 = $5718;
                                    break;
                            };
                            var $5713 = $5715;
                            break;
                        case 'Parser.Reply.value':
                            var $5719 = self.pst;
                            var self = $5719;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5721 = self.err;
                                    var $5722 = self.nam;
                                    var $5723 = self.ini;
                                    var $5724 = self.idx;
                                    var $5725 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5712, $5721), $5722, $5723, $5724, $5725);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5727 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5729 = self.err;
                                                    var self = $5727;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5731 = self.value;
                                                            var $5732 = Parser$Reply$error$(Parser$Error$combine$($5731, $5729));
                                                            var $5730 = $5732;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5733 = Parser$Reply$error$($5729);
                                                            var $5730 = $5733;
                                                            break;
                                                    };
                                                    var $5728 = $5730;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5734 = self.pst;
                                                    var $5735 = self.val;
                                                    var self = $5734;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5737 = self.err;
                                                            var $5738 = self.nam;
                                                            var $5739 = self.ini;
                                                            var $5740 = self.idx;
                                                            var $5741 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5727, $5737), $5738, $5739, $5740, $5741);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5743 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5746 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$("as", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $5748 = self.err;
                                                                                        var self = $5746;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $5750 = self.value;
                                                                                                var $5751 = Parser$Reply$error$(Parser$Error$combine$($5750, $5748));
                                                                                                var $5749 = $5751;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $5752 = Parser$Reply$error$($5748);
                                                                                                var $5749 = $5752;
                                                                                                break;
                                                                                        };
                                                                                        var $5747 = $5749;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $5753 = self.pst;
                                                                                        var self = $5753;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $5755 = self.err;
                                                                                                var $5756 = self.nam;
                                                                                                var $5757 = self.ini;
                                                                                                var $5758 = self.idx;
                                                                                                var $5759 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($5746, $5755), $5756, $5757, $5758, $5759);
                                                                                                var $5760 = Kind$Parser$name1$(_reply$pst$50);
                                                                                                var $5754 = $5760;
                                                                                                break;
                                                                                        };
                                                                                        var $5747 = $5754;
                                                                                        break;
                                                                                };
                                                                                var $5745 = $5747;
                                                                                break;
                                                                        };
                                                                        return $5745;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5761 = self.err;
                                                                            var self = $5743;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5763 = self.value;
                                                                                    var $5764 = Parser$Reply$error$(Parser$Error$combine$($5763, $5761));
                                                                                    var $5762 = $5764;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5765 = Parser$Reply$error$($5761);
                                                                                    var $5762 = $5765;
                                                                                    break;
                                                                            };
                                                                            var $5744 = $5762;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5766 = self.pst;
                                                                            var $5767 = self.val;
                                                                            var self = $5766;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5769 = self.err;
                                                                                    var $5770 = self.nam;
                                                                                    var $5771 = self.ini;
                                                                                    var $5772 = self.idx;
                                                                                    var $5773 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5743, $5769), $5770, $5771, $5772, $5773);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5775 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5777 = self.err;
                                                                                                    var self = $5775;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5779 = self.value;
                                                                                                            var $5780 = Parser$Reply$error$(Parser$Error$combine$($5779, $5777));
                                                                                                            var $5778 = $5780;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5781 = Parser$Reply$error$($5777);
                                                                                                            var $5778 = $5781;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5776 = $5778;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5782 = self.pst;
                                                                                                    var self = $5782;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5784 = self.err;
                                                                                                            var $5785 = self.nam;
                                                                                                            var $5786 = self.ini;
                                                                                                            var $5787 = self.idx;
                                                                                                            var $5788 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5775, $5784), $5785, $5786, $5787, $5788);
                                                                                                            var self = $5767;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $5790 = self.value;
                                                                                                                    var $5791 = $5790;
                                                                                                                    var _name$59 = $5791;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var self = Kind$Term$reduce$($5735, Kind$Map$new);
                                                                                                                    switch (self._) {
                                                                                                                        case 'Kind.Term.var':
                                                                                                                            var $5793 = self.name;
                                                                                                                            var $5794 = $5793;
                                                                                                                            var $5792 = $5794;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.ref':
                                                                                                                            var $5795 = self.name;
                                                                                                                            var $5796 = $5795;
                                                                                                                            var $5792 = $5796;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.typ':
                                                                                                                        case 'Kind.Term.all':
                                                                                                                        case 'Kind.Term.lam':
                                                                                                                        case 'Kind.Term.app':
                                                                                                                        case 'Kind.Term.let':
                                                                                                                        case 'Kind.Term.def':
                                                                                                                        case 'Kind.Term.ann':
                                                                                                                        case 'Kind.Term.gol':
                                                                                                                        case 'Kind.Term.hol':
                                                                                                                        case 'Kind.Term.nat':
                                                                                                                        case 'Kind.Term.chr':
                                                                                                                        case 'Kind.Term.str':
                                                                                                                        case 'Kind.Term.num':
                                                                                                                        case 'Kind.Term.cse':
                                                                                                                        case 'Kind.Term.new':
                                                                                                                        case 'Kind.Term.get':
                                                                                                                        case 'Kind.Term.set':
                                                                                                                        case 'Kind.Term.ope':
                                                                                                                        case 'Kind.Term.ori':
                                                                                                                            var $5797 = Kind$Name$read$("self");
                                                                                                                            var $5792 = $5797;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var _name$59 = $5792;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var _wyth$60 = List$nil;
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5798 = self.err;
                                                                                                                    var _reply$66 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5800 = self.err;
                                                                                                                            var self = $5798;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5802 = self.value;
                                                                                                                                    var $5803 = Parser$Reply$error$(Parser$Error$combine$($5802, $5800));
                                                                                                                                    var $5801 = $5803;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5804 = Parser$Reply$error$($5800);
                                                                                                                                    var $5801 = $5804;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5799 = $5801;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5805 = self.pst;
                                                                                                                            var $5806 = self.val;
                                                                                                                            var self = $5805;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5808 = self.err;
                                                                                                                                    var $5809 = self.nam;
                                                                                                                                    var $5810 = self.ini;
                                                                                                                                    var $5811 = self.idx;
                                                                                                                                    var $5812 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($5798, $5808), $5809, $5810, $5811, $5812);
                                                                                                                                    var _cses$75 = Kind$Map$set$("_", $5806, Kind$Map$new);
                                                                                                                                    var _moti$76 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                    var $5813 = Parser$Reply$value$(_reply$pst$74, Kind$Term$cse$(Bits$e, $5735, _name$59, _wyth$60, _cses$75, _moti$76));
                                                                                                                                    var $5807 = $5813;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5799 = $5807;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5789 = $5799;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5783 = $5789;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5776 = $5783;
                                                                                                    break;
                                                                                            };
                                                                                            var $5774 = $5776;
                                                                                            break;
                                                                                    };
                                                                                    var $5768 = $5774;
                                                                                    break;
                                                                            };
                                                                            var $5744 = $5768;
                                                                            break;
                                                                    };
                                                                    var $5742 = $5744;
                                                                    break;
                                                            };
                                                            var $5736 = $5742;
                                                            break;
                                                    };
                                                    var $5728 = $5736;
                                                    break;
                                            };
                                            var $5726 = $5728;
                                            break;
                                    };
                                    var $5720 = $5726;
                                    break;
                            };
                            var $5713 = $5720;
                            break;
                    };
                    var $5711 = $5713;
                    break;
            };
            return $5711;
        }));
        return $5710;
    };
    const Kind$Parser$open = x0 => Kind$Parser$open$(x0);

    function Kind$Parser$do$statements$(_monad_name$1) {
        var $5814 = Parser$choice(List$cons$(Kind$Parser$block("do-get")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5816 = self.err;
                    var _reply$8 = Parser$choice$(List$cons$(Kind$Parser$text("var "), List$cons$(Kind$Parser$text("get "), List$nil)), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5818 = self.err;
                            var self = $5816;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5820 = self.value;
                                    var $5821 = Parser$Reply$error$(Parser$Error$combine$($5820, $5818));
                                    var $5819 = $5821;
                                    break;
                                case 'Maybe.none':
                                    var $5822 = Parser$Reply$error$($5818);
                                    var $5819 = $5822;
                                    break;
                            };
                            var $5817 = $5819;
                            break;
                        case 'Parser.Reply.value':
                            var $5823 = self.pst;
                            var self = $5823;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5825 = self.err;
                                    var $5826 = self.nam;
                                    var $5827 = self.ini;
                                    var $5828 = self.idx;
                                    var $5829 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5816, $5825), $5826, $5827, $5828, $5829);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5831 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5833 = self.err;
                                                    var self = $5831;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5835 = self.value;
                                                            var $5836 = Parser$Reply$error$(Parser$Error$combine$($5835, $5833));
                                                            var $5834 = $5836;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5837 = Parser$Reply$error$($5833);
                                                            var $5834 = $5837;
                                                            break;
                                                    };
                                                    var $5832 = $5834;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5838 = self.pst;
                                                    var $5839 = self.val;
                                                    var self = $5838;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5841 = self.err;
                                                            var $5842 = self.nam;
                                                            var $5843 = self.ini;
                                                            var $5844 = self.idx;
                                                            var $5845 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5831, $5841), $5842, $5843, $5844, $5845);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5847 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5849 = self.err;
                                                                            var self = $5847;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5851 = self.value;
                                                                                    var $5852 = Parser$Reply$error$(Parser$Error$combine$($5851, $5849));
                                                                                    var $5850 = $5852;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5853 = Parser$Reply$error$($5849);
                                                                                    var $5850 = $5853;
                                                                                    break;
                                                                            };
                                                                            var $5848 = $5850;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5854 = self.pst;
                                                                            var self = $5854;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5856 = self.err;
                                                                                    var $5857 = self.nam;
                                                                                    var $5858 = self.ini;
                                                                                    var $5859 = self.idx;
                                                                                    var $5860 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5847, $5856), $5857, $5858, $5859, $5860);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5862 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5864 = self.err;
                                                                                                    var self = $5862;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5866 = self.value;
                                                                                                            var $5867 = Parser$Reply$error$(Parser$Error$combine$($5866, $5864));
                                                                                                            var $5865 = $5867;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5868 = Parser$Reply$error$($5864);
                                                                                                            var $5865 = $5868;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5863 = $5865;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5869 = self.pst;
                                                                                                    var $5870 = self.val;
                                                                                                    var self = $5869;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5872 = self.err;
                                                                                                            var $5873 = self.nam;
                                                                                                            var $5874 = self.ini;
                                                                                                            var $5875 = self.idx;
                                                                                                            var $5876 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5862, $5872), $5873, $5874, $5875, $5876);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5878 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5880 = self.err;
                                                                                                                            var self = $5878;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5882 = self.value;
                                                                                                                                    var $5883 = Parser$Reply$error$(Parser$Error$combine$($5882, $5880));
                                                                                                                                    var $5881 = $5883;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5884 = Parser$Reply$error$($5880);
                                                                                                                                    var $5881 = $5884;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5879 = $5881;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5885 = self.pst;
                                                                                                                            var self = $5885;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5887 = self.err;
                                                                                                                                    var $5888 = self.nam;
                                                                                                                                    var $5889 = self.ini;
                                                                                                                                    var $5890 = self.idx;
                                                                                                                                    var $5891 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($5878, $5887), $5888, $5889, $5890, $5891);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $5893 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $5895 = self.err;
                                                                                                                                                    var self = $5893;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $5897 = self.value;
                                                                                                                                                            var $5898 = Parser$Reply$error$(Parser$Error$combine$($5897, $5895));
                                                                                                                                                            var $5896 = $5898;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $5899 = Parser$Reply$error$($5895);
                                                                                                                                                            var $5896 = $5899;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5894 = $5896;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $5900 = self.pst;
                                                                                                                                                    var $5901 = self.val;
                                                                                                                                                    var self = $5900;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $5903 = self.err;
                                                                                                                                                            var $5904 = self.nam;
                                                                                                                                                            var $5905 = self.ini;
                                                                                                                                                            var $5906 = self.idx;
                                                                                                                                                            var $5907 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($5893, $5903), $5904, $5905, $5906, $5907);
                                                                                                                                                            var _term$87 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                            var _term$88 = Kind$Term$app$(_term$87, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                            var _term$89 = Kind$Term$app$(_term$88, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$91 = Kind$Term$app$(_term$90, $5870);
                                                                                                                                                            var _term$92 = Kind$Term$app$(_term$91, Kind$Term$lam$($5839, (_x$92 => {
                                                                                                                                                                var $5909 = $5901;
                                                                                                                                                                return $5909;
                                                                                                                                                            })));
                                                                                                                                                            var $5908 = Parser$Reply$value$(_reply$pst$86, _term$92);
                                                                                                                                                            var $5902 = $5908;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5894 = $5902;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $5892 = $5894;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $5886 = $5892;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5879 = $5886;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5877 = $5879;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5871 = $5877;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5863 = $5871;
                                                                                                    break;
                                                                                            };
                                                                                            var $5861 = $5863;
                                                                                            break;
                                                                                    };
                                                                                    var $5855 = $5861;
                                                                                    break;
                                                                            };
                                                                            var $5848 = $5855;
                                                                            break;
                                                                    };
                                                                    var $5846 = $5848;
                                                                    break;
                                                            };
                                                            var $5840 = $5846;
                                                            break;
                                                    };
                                                    var $5832 = $5840;
                                                    break;
                                            };
                                            var $5830 = $5832;
                                            break;
                                    };
                                    var $5824 = $5830;
                                    break;
                            };
                            var $5817 = $5824;
                            break;
                    };
                    var $5815 = $5817;
                    break;
            };
            return $5815;
        })), List$cons$(Kind$Parser$block("do-return")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5911 = self.err;
                    var _reply$8 = Kind$Parser$text$("return ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5913 = self.err;
                            var self = $5911;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5915 = self.value;
                                    var $5916 = Parser$Reply$error$(Parser$Error$combine$($5915, $5913));
                                    var $5914 = $5916;
                                    break;
                                case 'Maybe.none':
                                    var $5917 = Parser$Reply$error$($5913);
                                    var $5914 = $5917;
                                    break;
                            };
                            var $5912 = $5914;
                            break;
                        case 'Parser.Reply.value':
                            var $5918 = self.pst;
                            var self = $5918;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5920 = self.err;
                                    var $5921 = self.nam;
                                    var $5922 = self.ini;
                                    var $5923 = self.idx;
                                    var $5924 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5911, $5920), $5921, $5922, $5923, $5924);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5926 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5928 = self.err;
                                                    var self = $5926;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5930 = self.value;
                                                            var $5931 = Parser$Reply$error$(Parser$Error$combine$($5930, $5928));
                                                            var $5929 = $5931;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5932 = Parser$Reply$error$($5928);
                                                            var $5929 = $5932;
                                                            break;
                                                    };
                                                    var $5927 = $5929;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5933 = self.pst;
                                                    var $5934 = self.val;
                                                    var self = $5933;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5936 = self.err;
                                                            var $5937 = self.nam;
                                                            var $5938 = self.ini;
                                                            var $5939 = self.idx;
                                                            var $5940 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5926, $5936), $5937, $5938, $5939, $5940);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5942 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5944 = self.err;
                                                                            var self = $5942;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5946 = self.value;
                                                                                    var $5947 = Parser$Reply$error$(Parser$Error$combine$($5946, $5944));
                                                                                    var $5945 = $5947;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5948 = Parser$Reply$error$($5944);
                                                                                    var $5945 = $5948;
                                                                                    break;
                                                                            };
                                                                            var $5943 = $5945;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5949 = self.pst;
                                                                            var self = $5949;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5951 = self.err;
                                                                                    var $5952 = self.nam;
                                                                                    var $5953 = self.ini;
                                                                                    var $5954 = self.idx;
                                                                                    var $5955 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5942, $5951), $5952, $5953, $5954, $5955);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.pure"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, $5934);
                                                                                    var $5956 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                    var $5950 = $5956;
                                                                                    break;
                                                                            };
                                                                            var $5943 = $5950;
                                                                            break;
                                                                    };
                                                                    var $5941 = $5943;
                                                                    break;
                                                            };
                                                            var $5935 = $5941;
                                                            break;
                                                    };
                                                    var $5927 = $5935;
                                                    break;
                                            };
                                            var $5925 = $5927;
                                            break;
                                    };
                                    var $5919 = $5925;
                                    break;
                            };
                            var $5912 = $5919;
                            break;
                    };
                    var $5910 = $5912;
                    break;
            };
            return $5910;
        })), List$cons$(Kind$Parser$block("do-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5958 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5960 = self.err;
                            var self = $5958;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5962 = self.value;
                                    var $5963 = Parser$Reply$error$(Parser$Error$combine$($5962, $5960));
                                    var $5961 = $5963;
                                    break;
                                case 'Maybe.none':
                                    var $5964 = Parser$Reply$error$($5960);
                                    var $5961 = $5964;
                                    break;
                            };
                            var $5959 = $5961;
                            break;
                        case 'Parser.Reply.value':
                            var $5965 = self.pst;
                            var self = $5965;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5967 = self.err;
                                    var $5968 = self.nam;
                                    var $5969 = self.ini;
                                    var $5970 = self.idx;
                                    var $5971 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5958, $5967), $5968, $5969, $5970, $5971);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5973 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5975 = self.err;
                                                    var self = $5973;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5977 = self.value;
                                                            var $5978 = Parser$Reply$error$(Parser$Error$combine$($5977, $5975));
                                                            var $5976 = $5978;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5979 = Parser$Reply$error$($5975);
                                                            var $5976 = $5979;
                                                            break;
                                                    };
                                                    var $5974 = $5976;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5980 = self.pst;
                                                    var $5981 = self.val;
                                                    var self = $5980;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5983 = self.err;
                                                            var $5984 = self.nam;
                                                            var $5985 = self.ini;
                                                            var $5986 = self.idx;
                                                            var $5987 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5973, $5983), $5984, $5985, $5986, $5987);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5989 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5991 = self.err;
                                                                            var self = $5989;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5993 = self.value;
                                                                                    var $5994 = Parser$Reply$error$(Parser$Error$combine$($5993, $5991));
                                                                                    var $5992 = $5994;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5995 = Parser$Reply$error$($5991);
                                                                                    var $5992 = $5995;
                                                                                    break;
                                                                            };
                                                                            var $5990 = $5992;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5996 = self.pst;
                                                                            var self = $5996;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5998 = self.err;
                                                                                    var $5999 = self.nam;
                                                                                    var $6000 = self.ini;
                                                                                    var $6001 = self.idx;
                                                                                    var $6002 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5989, $5998), $5999, $6000, $6001, $6002);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6004 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $6006 = self.err;
                                                                                                    var self = $6004;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $6008 = self.value;
                                                                                                            var $6009 = Parser$Reply$error$(Parser$Error$combine$($6008, $6006));
                                                                                                            var $6007 = $6009;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $6010 = Parser$Reply$error$($6006);
                                                                                                            var $6007 = $6010;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6005 = $6007;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $6011 = self.pst;
                                                                                                    var $6012 = self.val;
                                                                                                    var self = $6011;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $6014 = self.err;
                                                                                                            var $6015 = self.nam;
                                                                                                            var $6016 = self.ini;
                                                                                                            var $6017 = self.idx;
                                                                                                            var $6018 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6004, $6014), $6015, $6016, $6017, $6018);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6020 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $6022 = self.err;
                                                                                                                            var self = $6020;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $6024 = self.value;
                                                                                                                                    var $6025 = Parser$Reply$error$(Parser$Error$combine$($6024, $6022));
                                                                                                                                    var $6023 = $6025;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $6026 = Parser$Reply$error$($6022);
                                                                                                                                    var $6023 = $6026;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6021 = $6023;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $6027 = self.pst;
                                                                                                                            var self = $6027;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $6029 = self.err;
                                                                                                                                    var $6030 = self.nam;
                                                                                                                                    var $6031 = self.ini;
                                                                                                                                    var $6032 = self.idx;
                                                                                                                                    var $6033 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6020, $6029), $6030, $6031, $6032, $6033);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $6035 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $6037 = self.err;
                                                                                                                                                    var self = $6035;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $6039 = self.value;
                                                                                                                                                            var $6040 = Parser$Reply$error$(Parser$Error$combine$($6039, $6037));
                                                                                                                                                            var $6038 = $6040;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $6041 = Parser$Reply$error$($6037);
                                                                                                                                                            var $6038 = $6041;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6036 = $6038;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $6042 = self.pst;
                                                                                                                                                    var $6043 = self.val;
                                                                                                                                                    var self = $6042;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $6045 = self.err;
                                                                                                                                                            var $6046 = self.nam;
                                                                                                                                                            var $6047 = self.ini;
                                                                                                                                                            var $6048 = self.idx;
                                                                                                                                                            var $6049 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($6035, $6045), $6046, $6047, $6048, $6049);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6051 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $6053 = self.err;
                                                                                                                                                                            var self = $6051;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $6055 = self.value;
                                                                                                                                                                                    var $6056 = Parser$Reply$error$(Parser$Error$combine$($6055, $6053));
                                                                                                                                                                                    var $6054 = $6056;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $6057 = Parser$Reply$error$($6053);
                                                                                                                                                                                    var $6054 = $6057;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6052 = $6054;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $6058 = self.pst;
                                                                                                                                                                            var self = $6058;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $6060 = self.err;
                                                                                                                                                                                    var $6061 = self.nam;
                                                                                                                                                                                    var $6062 = self.ini;
                                                                                                                                                                                    var $6063 = self.idx;
                                                                                                                                                                                    var $6064 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($6051, $6060), $6061, $6062, $6063, $6064);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6066 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $6068 = self.err;
                                                                                                                                                                                                    var self = $6066;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $6070 = self.value;
                                                                                                                                                                                                            var $6071 = Parser$Reply$error$(Parser$Error$combine$($6070, $6068));
                                                                                                                                                                                                            var $6069 = $6071;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $6072 = Parser$Reply$error$($6068);
                                                                                                                                                                                                            var $6069 = $6072;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6067 = $6069;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $6073 = self.pst;
                                                                                                                                                                                                    var $6074 = self.val;
                                                                                                                                                                                                    var self = $6073;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $6076 = self.err;
                                                                                                                                                                                                            var $6077 = self.nam;
                                                                                                                                                                                                            var $6078 = self.ini;
                                                                                                                                                                                                            var $6079 = self.idx;
                                                                                                                                                                                                            var $6080 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($6066, $6076), $6077, $6078, $6079, $6080);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $6082 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$do$statements$(_monad_name$1), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $6084 = self.err;
                                                                                                                                                                                                                            var self = $6082;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $6086 = self.value;
                                                                                                                                                                                                                                    var $6087 = Parser$Reply$error$(Parser$Error$combine$($6086, $6084));
                                                                                                                                                                                                                                    var $6085 = $6087;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $6088 = Parser$Reply$error$($6084);
                                                                                                                                                                                                                                    var $6085 = $6088;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6083 = $6085;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $6089 = self.pst;
                                                                                                                                                                                                                            var $6090 = self.val;
                                                                                                                                                                                                                            var self = $6089;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $6092 = self.err;
                                                                                                                                                                                                                                    var $6093 = self.nam;
                                                                                                                                                                                                                                    var $6094 = self.ini;
                                                                                                                                                                                                                                    var $6095 = self.idx;
                                                                                                                                                                                                                                    var $6096 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($6082, $6092), $6093, $6094, $6095, $6096);
                                                                                                                                                                                                                                    var _expr$129 = Kind$Term$ref$("Nat.for.io");
                                                                                                                                                                                                                                    var _expr$130 = Kind$Term$app$(_expr$129, $6012);
                                                                                                                                                                                                                                    var _expr$131 = Kind$Term$app$(_expr$130, $6043);
                                                                                                                                                                                                                                    var _expr$132 = Kind$Term$app$(_expr$131, Kind$Term$lam$($5981, (_x$132 => {
                                                                                                                                                                                                                                        var $6098 = $6074;
                                                                                                                                                                                                                                        return $6098;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var self = $6090;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                            var $6099 = self.value;
                                                                                                                                                                                                                                            var _term$134 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                                                                                                            var _term$135 = Kind$Term$app$(_term$134, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                                                                                                            var _term$136 = Kind$Term$app$(_term$135, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$137 = Kind$Term$app$(_term$136, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$138 = Kind$Term$app$(_term$137, _expr$132);
                                                                                                                                                                                                                                            var _term$139 = Kind$Term$app$(_term$138, Kind$Term$lam$("", (_x$139 => {
                                                                                                                                                                                                                                                var $6101 = $6099;
                                                                                                                                                                                                                                                return $6101;
                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                            var $6100 = (_pst$140 => {
                                                                                                                                                                                                                                                var $6102 = Parser$Reply$value$(_pst$140, _term$139);
                                                                                                                                                                                                                                                return $6102;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6097 = $6100;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                            var $6103 = (_pst$133 => {
                                                                                                                                                                                                                                                var $6104 = Parser$Reply$value$(_pst$133, _expr$132);
                                                                                                                                                                                                                                                return $6104;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6097 = $6103;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $6097 = $6097(_reply$pst$128);
                                                                                                                                                                                                                                    var $6091 = $6097;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6083 = $6091;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $6081 = $6083;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $6075 = $6081;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $6067 = $6075;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $6065 = $6067;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6059 = $6065;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6052 = $6059;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6050 = $6052;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6044 = $6050;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6036 = $6044;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $6034 = $6036;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $6028 = $6034;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $6021 = $6028;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $6019 = $6021;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6013 = $6019;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6005 = $6013;
                                                                                                    break;
                                                                                            };
                                                                                            var $6003 = $6005;
                                                                                            break;
                                                                                    };
                                                                                    var $5997 = $6003;
                                                                                    break;
                                                                            };
                                                                            var $5990 = $5997;
                                                                            break;
                                                                    };
                                                                    var $5988 = $5990;
                                                                    break;
                                                            };
                                                            var $5982 = $5988;
                                                            break;
                                                    };
                                                    var $5974 = $5982;
                                                    break;
                                            };
                                            var $5972 = $5974;
                                            break;
                                    };
                                    var $5966 = $5972;
                                    break;
                            };
                            var $5959 = $5966;
                            break;
                    };
                    var $5957 = $5959;
                    break;
            };
            return $5957;
        })), List$cons$(Kind$Parser$letforrange$u32$((_x$2 => {
            var $6105 = Kind$Parser$do$statements$(_monad_name$1);
            return $6105;
        })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$2 => {
            var $6106 = Kind$Parser$do$statements$(_monad_name$1);
            return $6106;
        })), List$cons$(Kind$Parser$letforrange$nat$((_x$2 => {
            var $6107 = Kind$Parser$do$statements$(_monad_name$1);
            return $6107;
        })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$2 => {
            var $6108 = Kind$Parser$do$statements$(_monad_name$1);
            return $6108;
        })), List$cons$(Kind$Parser$letforin$((_x$2 => {
            var $6109 = Kind$Parser$do$statements$(_monad_name$1);
            return $6109;
        })), List$cons$(Kind$Parser$letforin$with$((_x$2 => {
            var $6110 = Kind$Parser$do$statements$(_monad_name$1);
            return $6110;
        })), List$cons$(Kind$Parser$letwhile$((_x$2 => {
            var $6111 = Kind$Parser$do$statements$(_monad_name$1);
            return $6111;
        })), List$cons$(Kind$Parser$letwhile$with$((_x$2 => {
            var $6112 = Kind$Parser$do$statements$(_monad_name$1);
            return $6112;
        })), List$cons$(Kind$Parser$let$((_x$2 => {
            var $6113 = Kind$Parser$do$statements$(_monad_name$1);
            return $6113;
        })), List$cons$(Kind$Parser$getwhile$((_x$2 => {
            var $6114 = Kind$Parser$do$statements$(_monad_name$1);
            return $6114;
        })), List$cons$(Kind$Parser$getwhile$with((_x$2 => {
            var $6115 = Kind$Parser$do$statements$(_monad_name$1);
            return $6115;
        })), List$cons$(Kind$Parser$get$((_x$2 => {
            var $6116 = Kind$Parser$do$statements$(_monad_name$1);
            return $6116;
        })), List$cons$(Kind$Parser$def$((_x$2 => {
            var $6117 = Kind$Parser$do$statements$(_monad_name$1);
            return $6117;
        })), List$cons$(Kind$Parser$log$((_x$2 => {
            var $6118 = Kind$Parser$do$statements$(_monad_name$1);
            return $6118;
        })), List$cons$(Kind$Parser$open$((_x$2 => {
            var $6119 = Kind$Parser$do$statements$(_monad_name$1);
            return $6119;
        })), List$cons$(Kind$Parser$block("do-statement")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6121 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6123 = self.err;
                            var self = $6121;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6125 = self.value;
                                    var $6126 = Parser$Reply$error$(Parser$Error$combine$($6125, $6123));
                                    var $6124 = $6126;
                                    break;
                                case 'Maybe.none':
                                    var $6127 = Parser$Reply$error$($6123);
                                    var $6124 = $6127;
                                    break;
                            };
                            var $6122 = $6124;
                            break;
                        case 'Parser.Reply.value':
                            var $6128 = self.pst;
                            var $6129 = self.val;
                            var self = $6128;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6131 = self.err;
                                    var $6132 = self.nam;
                                    var $6133 = self.ini;
                                    var $6134 = self.idx;
                                    var $6135 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6121, $6131), $6132, $6133, $6134, $6135);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6137 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6139 = self.err;
                                                    var self = $6137;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6141 = self.value;
                                                            var $6142 = Parser$Reply$error$(Parser$Error$combine$($6141, $6139));
                                                            var $6140 = $6142;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6143 = Parser$Reply$error$($6139);
                                                            var $6140 = $6143;
                                                            break;
                                                    };
                                                    var $6138 = $6140;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6144 = self.pst;
                                                    var self = $6144;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6146 = self.err;
                                                            var $6147 = self.nam;
                                                            var $6148 = self.ini;
                                                            var $6149 = self.idx;
                                                            var $6150 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6137, $6146), $6147, $6148, $6149, $6150);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6152 = self.err;
                                                                    var _reply$36 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6154 = self.err;
                                                                            var self = $6152;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6156 = self.value;
                                                                                    var $6157 = Parser$Reply$error$(Parser$Error$combine$($6156, $6154));
                                                                                    var $6155 = $6157;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6158 = Parser$Reply$error$($6154);
                                                                                    var $6155 = $6158;
                                                                                    break;
                                                                            };
                                                                            var $6153 = $6155;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6159 = self.pst;
                                                                            var $6160 = self.val;
                                                                            var self = $6159;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6162 = self.err;
                                                                                    var $6163 = self.nam;
                                                                                    var $6164 = self.ini;
                                                                                    var $6165 = self.idx;
                                                                                    var $6166 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6152, $6162), $6163, $6164, $6165, $6166);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, Kind$Term$hol$(Bits$e));
                                                                                    var _term$49 = Kind$Term$app$(_term$48, $6129);
                                                                                    var _term$50 = Kind$Term$app$(_term$49, Kind$Term$lam$("", (_x$50 => {
                                                                                        var $6168 = $6160;
                                                                                        return $6168;
                                                                                    })));
                                                                                    var $6167 = Parser$Reply$value$(_reply$pst$44, _term$50);
                                                                                    var $6161 = $6167;
                                                                                    break;
                                                                            };
                                                                            var $6153 = $6161;
                                                                            break;
                                                                    };
                                                                    var $6151 = $6153;
                                                                    break;
                                                            };
                                                            var $6145 = $6151;
                                                            break;
                                                    };
                                                    var $6138 = $6145;
                                                    break;
                                            };
                                            var $6136 = $6138;
                                            break;
                                    };
                                    var $6130 = $6136;
                                    break;
                            };
                            var $6122 = $6130;
                            break;
                    };
                    var $6120 = $6122;
                    break;
            };
            return $6120;
        })), List$cons$(Kind$Parser$block("do-end")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6170 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6172 = self.err;
                            var self = $6170;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6174 = self.value;
                                    var $6175 = Parser$Reply$error$(Parser$Error$combine$($6174, $6172));
                                    var $6173 = $6175;
                                    break;
                                case 'Maybe.none':
                                    var $6176 = Parser$Reply$error$($6172);
                                    var $6173 = $6176;
                                    break;
                            };
                            var $6171 = $6173;
                            break;
                        case 'Parser.Reply.value':
                            var $6177 = self.pst;
                            var $6178 = self.val;
                            var self = $6177;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6180 = self.err;
                                    var $6181 = self.nam;
                                    var $6182 = self.ini;
                                    var $6183 = self.idx;
                                    var $6184 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6170, $6180), $6181, $6182, $6183, $6184);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6186 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6188 = self.err;
                                                    var self = $6186;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6190 = self.value;
                                                            var $6191 = Parser$Reply$error$(Parser$Error$combine$($6190, $6188));
                                                            var $6189 = $6191;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6192 = Parser$Reply$error$($6188);
                                                            var $6189 = $6192;
                                                            break;
                                                    };
                                                    var $6187 = $6189;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6193 = self.pst;
                                                    var self = $6193;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6195 = self.err;
                                                            var $6196 = self.nam;
                                                            var $6197 = self.ini;
                                                            var $6198 = self.idx;
                                                            var $6199 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6186, $6195), $6196, $6197, $6198, $6199);
                                                            var $6200 = Parser$Reply$value$(_reply$pst$30, $6178);
                                                            var $6194 = $6200;
                                                            break;
                                                    };
                                                    var $6187 = $6194;
                                                    break;
                                            };
                                            var $6185 = $6187;
                                            break;
                                    };
                                    var $6179 = $6185;
                                    break;
                            };
                            var $6171 = $6179;
                            break;
                    };
                    var $6169 = $6171;
                    break;
            };
            return $6169;
        })), List$nil)))))))))))))))))))));
        return $5814;
    };
    const Kind$Parser$do$statements = x0 => Kind$Parser$do$statements$(x0);
    const Kind$Parser$do = Kind$Parser$block("do")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6202 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$text("do "), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6204 = self.err;
                        var self = $6202;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6206 = self.value;
                                var $6207 = Parser$Reply$error$(Parser$Error$combine$($6206, $6204));
                                var $6205 = $6207;
                                break;
                            case 'Maybe.none':
                                var $6208 = Parser$Reply$error$($6204);
                                var $6205 = $6208;
                                break;
                        };
                        var $6203 = $6205;
                        break;
                    case 'Parser.Reply.value':
                        var $6209 = self.pst;
                        var self = $6209;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6211 = self.err;
                                var $6212 = self.nam;
                                var $6213 = self.ini;
                                var $6214 = self.idx;
                                var $6215 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6202, $6211), $6212, $6213, $6214, $6215);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6217 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6219 = self.err;
                                                var self = $6217;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6221 = self.value;
                                                        var $6222 = Parser$Reply$error$(Parser$Error$combine$($6221, $6219));
                                                        var $6220 = $6222;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6223 = Parser$Reply$error$($6219);
                                                        var $6220 = $6223;
                                                        break;
                                                };
                                                var $6218 = $6220;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6224 = self.pst;
                                                var $6225 = self.val;
                                                var self = $6224;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6227 = self.err;
                                                        var $6228 = self.nam;
                                                        var $6229 = self.ini;
                                                        var $6230 = self.idx;
                                                        var $6231 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6217, $6227), $6228, $6229, $6230, $6231);
                                                        var self = String$is_upper$(String$slice$(0n, 1n, $6225));
                                                        if (self) {
                                                            var $6233 = (_pst$30 => {
                                                                var self = _pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6235 = self.err;
                                                                        var _reply$36 = Parser$text$(" {", _pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6237 = self.err;
                                                                                var self = $6235;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6239 = self.value;
                                                                                        var $6240 = Parser$Reply$error$(Parser$Error$combine$($6239, $6237));
                                                                                        var $6238 = $6240;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6241 = Parser$Reply$error$($6237);
                                                                                        var $6238 = $6241;
                                                                                        break;
                                                                                };
                                                                                var $6236 = $6238;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6242 = self.pst;
                                                                                var self = $6242;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6244 = self.err;
                                                                                        var $6245 = self.nam;
                                                                                        var $6246 = self.ini;
                                                                                        var $6247 = self.idx;
                                                                                        var $6248 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6235, $6244), $6245, $6246, $6247, $6248);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6250 = self.err;
                                                                                                var _reply$50 = Kind$Parser$do$statements$($6225)(_reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6252 = self.err;
                                                                                                        var self = $6250;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6254 = self.value;
                                                                                                                var $6255 = Parser$Reply$error$(Parser$Error$combine$($6254, $6252));
                                                                                                                var $6253 = $6255;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6256 = Parser$Reply$error$($6252);
                                                                                                                var $6253 = $6256;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6251 = $6253;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6257 = self.pst;
                                                                                                        var $6258 = self.val;
                                                                                                        var self = $6257;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6260 = self.err;
                                                                                                                var $6261 = self.nam;
                                                                                                                var $6262 = self.ini;
                                                                                                                var $6263 = self.idx;
                                                                                                                var $6264 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6250, $6260), $6261, $6262, $6263, $6264);
                                                                                                                var self = _reply$pst$58;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6266 = self.err;
                                                                                                                        var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                        var self = _reply$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                var $6268 = self.err;
                                                                                                                                var self = $6266;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Maybe.some':
                                                                                                                                        var $6270 = self.value;
                                                                                                                                        var $6271 = Parser$Reply$error$(Parser$Error$combine$($6270, $6268));
                                                                                                                                        var $6269 = $6271;
                                                                                                                                        break;
                                                                                                                                    case 'Maybe.none':
                                                                                                                                        var $6272 = Parser$Reply$error$($6268);
                                                                                                                                        var $6269 = $6272;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6267 = $6269;
                                                                                                                                break;
                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                var $6273 = self.pst;
                                                                                                                                var self = $6273;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6275 = self.err;
                                                                                                                                        var $6276 = self.nam;
                                                                                                                                        var $6277 = self.ini;
                                                                                                                                        var $6278 = self.idx;
                                                                                                                                        var $6279 = self.str;
                                                                                                                                        var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6266, $6275), $6276, $6277, $6278, $6279);
                                                                                                                                        var $6280 = Parser$Reply$value$(_reply$pst$72, $6258);
                                                                                                                                        var $6274 = $6280;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6267 = $6274;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6265 = $6267;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6259 = $6265;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6251 = $6259;
                                                                                                        break;
                                                                                                };
                                                                                                var $6249 = $6251;
                                                                                                break;
                                                                                        };
                                                                                        var $6243 = $6249;
                                                                                        break;
                                                                                };
                                                                                var $6236 = $6243;
                                                                                break;
                                                                        };
                                                                        var $6234 = $6236;
                                                                        break;
                                                                };
                                                                return $6234;
                                                            });
                                                            var $6232 = $6233;
                                                        } else {
                                                            var $6281 = Parser$fail("Not a do-block.");
                                                            var $6232 = $6281;
                                                        };
                                                        var $6232 = $6232(_reply$pst$29);
                                                        var $6226 = $6232;
                                                        break;
                                                };
                                                var $6218 = $6226;
                                                break;
                                        };
                                        var $6216 = $6218;
                                        break;
                                };
                                var $6210 = $6216;
                                break;
                        };
                        var $6203 = $6210;
                        break;
                };
                var $6201 = $6203;
                break;
        };
        return $6201;
    }));

    function Parser$try$(_parse$2, _pst$3) {
        var self = _parse$2(_pst$3);
        switch (self._) {
            case 'Parser.Reply.error':
                var $6283 = Parser$Reply$value$(_pst$3, Bool$false);
                var $6282 = $6283;
                break;
            case 'Parser.Reply.value':
                var $6284 = Parser$Reply$value$(_pst$3, Bool$true);
                var $6282 = $6284;
                break;
        };
        return $6282;
    };
    const Parser$try = x0 => x1 => Parser$try$(x0, x1);

    function Parser$avoiding$(_test$2, _parse$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $6286 = self.err;
                var _reply$10 = Parser$try$(_test$2, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6288 = self.err;
                        var self = $6286;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6290 = self.value;
                                var $6291 = Parser$Reply$error$(Parser$Error$combine$($6290, $6288));
                                var $6289 = $6291;
                                break;
                            case 'Maybe.none':
                                var $6292 = Parser$Reply$error$($6288);
                                var $6289 = $6292;
                                break;
                        };
                        var $6287 = $6289;
                        break;
                    case 'Parser.Reply.value':
                        var $6293 = self.pst;
                        var $6294 = self.val;
                        var self = $6293;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6296 = self.err;
                                var $6297 = self.nam;
                                var $6298 = self.ini;
                                var $6299 = self.idx;
                                var $6300 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($6286, $6296), $6297, $6298, $6299, $6300);
                                var self = $6294;
                                if (self) {
                                    var $6302 = Parser$fail("Avoided.");
                                    var $6301 = $6302;
                                } else {
                                    var $6303 = _parse$3;
                                    var $6301 = $6303;
                                };
                                var $6301 = $6301(_reply$pst$18);
                                var $6295 = $6301;
                                break;
                        };
                        var $6287 = $6295;
                        break;
                };
                var $6285 = $6287;
                break;
        };
        return $6285;
    };
    const Parser$avoiding = x0 => x1 => x2 => Parser$avoiding$(x0, x1, x2);

    function Kind$Term$extract_name$(_term$1) {
        var _term$2 = Kind$Term$reduce$(_term$1, Kind$Map$new);
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
                var $6305 = self.name;
                var $6306 = $6305;
                var $6304 = $6306;
                break;
            case 'Kind.Term.ref':
                var $6307 = self.name;
                var $6308 = $6307;
                var $6304 = $6308;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $6309 = "self";
                var $6304 = $6309;
                break;
        };
        return $6304;
    };
    const Kind$Term$extract_name = x0 => Kind$Term$extract_name$(x0);

    function Kind$Ann$new$(_name$1, _term$2, _type$3) {
        var $6310 = ({
            _: 'Kind.Ann.new',
            'name': _name$1,
            'term': _term$2,
            'type': _type$3
        });
        return $6310;
    };
    const Kind$Ann$new = x0 => x1 => x2 => Kind$Ann$new$(x0, x1, x2);
    const Kind$Parser$case$with = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6312 = self.err;
                var _reply$7 = Kind$Parser$text$("with ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6314 = self.err;
                        var self = $6312;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6316 = self.value;
                                var $6317 = Parser$Reply$error$(Parser$Error$combine$($6316, $6314));
                                var $6315 = $6317;
                                break;
                            case 'Maybe.none':
                                var $6318 = Parser$Reply$error$($6314);
                                var $6315 = $6318;
                                break;
                        };
                        var $6313 = $6315;
                        break;
                    case 'Parser.Reply.value':
                        var $6319 = self.pst;
                        var self = $6319;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6321 = self.err;
                                var $6322 = self.nam;
                                var $6323 = self.ini;
                                var $6324 = self.idx;
                                var $6325 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6312, $6321), $6322, $6323, $6324, $6325);
                                var $6326 = Parser$many$((_pst$16 => {
                                    var self = _pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6328 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6330 = self.err;
                                                    var self = $6328;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6332 = self.value;
                                                            var $6333 = Parser$Reply$error$(Parser$Error$combine$($6332, $6330));
                                                            var $6331 = $6333;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6334 = Parser$Reply$error$($6330);
                                                            var $6331 = $6334;
                                                            break;
                                                    };
                                                    var $6329 = $6331;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6335 = self.pst;
                                                    var $6336 = self.val;
                                                    var self = $6335;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6338 = self.err;
                                                            var $6339 = self.nam;
                                                            var $6340 = self.ini;
                                                            var $6341 = self.idx;
                                                            var $6342 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6328, $6338), $6339, $6340, $6341, $6342);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6344 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6347 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$(":", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $6349 = self.err;
                                                                                        var self = $6347;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $6351 = self.value;
                                                                                                var $6352 = Parser$Reply$error$(Parser$Error$combine$($6351, $6349));
                                                                                                var $6350 = $6352;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $6353 = Parser$Reply$error$($6349);
                                                                                                var $6350 = $6353;
                                                                                                break;
                                                                                        };
                                                                                        var $6348 = $6350;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $6354 = self.pst;
                                                                                        var self = $6354;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6356 = self.err;
                                                                                                var $6357 = self.nam;
                                                                                                var $6358 = self.ini;
                                                                                                var $6359 = self.idx;
                                                                                                var $6360 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($6347, $6356), $6357, $6358, $6359, $6360);
                                                                                                var self = _reply$pst$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6362 = self.err;
                                                                                                        var _reply$56 = Kind$Parser$term(_reply$pst$50);
                                                                                                        var self = _reply$56;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.Reply.error':
                                                                                                                var $6364 = self.err;
                                                                                                                var self = $6362;
                                                                                                                switch (self._) {
                                                                                                                    case 'Maybe.some':
                                                                                                                        var $6366 = self.value;
                                                                                                                        var $6367 = Parser$Reply$error$(Parser$Error$combine$($6366, $6364));
                                                                                                                        var $6365 = $6367;
                                                                                                                        break;
                                                                                                                    case 'Maybe.none':
                                                                                                                        var $6368 = Parser$Reply$error$($6364);
                                                                                                                        var $6365 = $6368;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6363 = $6365;
                                                                                                                break;
                                                                                                            case 'Parser.Reply.value':
                                                                                                                var $6369 = self.pst;
                                                                                                                var $6370 = self.val;
                                                                                                                var self = $6369;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6372 = self.err;
                                                                                                                        var $6373 = self.nam;
                                                                                                                        var $6374 = self.ini;
                                                                                                                        var $6375 = self.idx;
                                                                                                                        var $6376 = self.str;
                                                                                                                        var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($6362, $6372), $6373, $6374, $6375, $6376);
                                                                                                                        var self = _reply$pst$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6378 = self.err;
                                                                                                                                var _reply$70 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$64);
                                                                                                                                var self = _reply$70;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                        var $6380 = self.err;
                                                                                                                                        var self = $6378;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Maybe.some':
                                                                                                                                                var $6382 = self.value;
                                                                                                                                                var $6383 = Parser$Reply$error$(Parser$Error$combine$($6382, $6380));
                                                                                                                                                var $6381 = $6383;
                                                                                                                                                break;
                                                                                                                                            case 'Maybe.none':
                                                                                                                                                var $6384 = Parser$Reply$error$($6380);
                                                                                                                                                var $6381 = $6384;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6379 = $6381;
                                                                                                                                        break;
                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                        var $6385 = self.pst;
                                                                                                                                        var self = $6385;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                var $6387 = self.err;
                                                                                                                                                var $6388 = self.nam;
                                                                                                                                                var $6389 = self.ini;
                                                                                                                                                var $6390 = self.idx;
                                                                                                                                                var $6391 = self.str;
                                                                                                                                                var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($6378, $6387), $6388, $6389, $6390, $6391);
                                                                                                                                                var $6392 = Parser$Reply$value$(_reply$pst$78, $6370);
                                                                                                                                                var $6386 = $6392;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6379 = $6386;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6377 = $6379;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6371 = $6377;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6363 = $6371;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6361 = $6363;
                                                                                                        break;
                                                                                                };
                                                                                                var $6355 = $6361;
                                                                                                break;
                                                                                        };
                                                                                        var $6348 = $6355;
                                                                                        break;
                                                                                };
                                                                                var $6346 = $6348;
                                                                                break;
                                                                        };
                                                                        return $6346;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6393 = self.err;
                                                                            var self = $6344;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6395 = self.value;
                                                                                    var $6396 = Parser$Reply$error$(Parser$Error$combine$($6395, $6393));
                                                                                    var $6394 = $6396;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6397 = Parser$Reply$error$($6393);
                                                                                    var $6394 = $6397;
                                                                                    break;
                                                                            };
                                                                            var $6345 = $6394;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6398 = self.pst;
                                                                            var $6399 = self.val;
                                                                            var self = $6398;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6401 = self.err;
                                                                                    var $6402 = self.nam;
                                                                                    var $6403 = self.ini;
                                                                                    var $6404 = self.idx;
                                                                                    var $6405 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6344, $6401), $6402, $6403, $6404, $6405);
                                                                                    var $6406 = Parser$Reply$value$(_reply$pst$44, Kind$Ann$new$($6336, Kind$Term$ref$($6336), $6399));
                                                                                    var $6400 = $6406;
                                                                                    break;
                                                                            };
                                                                            var $6345 = $6400;
                                                                            break;
                                                                    };
                                                                    var $6343 = $6345;
                                                                    break;
                                                            };
                                                            var $6337 = $6343;
                                                            break;
                                                    };
                                                    var $6329 = $6337;
                                                    break;
                                            };
                                            var $6327 = $6329;
                                            break;
                                    };
                                    return $6327;
                                }))(_reply$pst$15);
                                var $6320 = $6326;
                                break;
                        };
                        var $6313 = $6320;
                        break;
                };
                var $6311 = $6313;
                break;
        };
        return $6311;
    }), List$cons$((_pst$1 => {
        var $6407 = Parser$Reply$value$(_pst$1, List$nil);
        return $6407;
    }), List$nil)));

    function Kind$Parser$case$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6409 = self.err;
                var _reply$7 = Parser$try$(Kind$Parser$text(":"), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6411 = self.err;
                        var self = $6409;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6413 = self.value;
                                var $6414 = Parser$Reply$error$(Parser$Error$combine$($6413, $6411));
                                var $6412 = $6414;
                                break;
                            case 'Maybe.none':
                                var $6415 = Parser$Reply$error$($6411);
                                var $6412 = $6415;
                                break;
                        };
                        var $6410 = $6412;
                        break;
                    case 'Parser.Reply.value':
                        var $6416 = self.pst;
                        var $6417 = self.val;
                        var self = $6416;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6419 = self.err;
                                var $6420 = self.nam;
                                var $6421 = self.ini;
                                var $6422 = self.idx;
                                var $6423 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6409, $6419), $6420, $6421, $6422, $6423);
                                var self = $6417;
                                if (self) {
                                    var $6425 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6427 = self.err;
                                                var _reply$22 = Kind$Parser$spaces(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6429 = self.err;
                                                        var self = $6427;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6431 = self.value;
                                                                var $6432 = Parser$Reply$error$(Parser$Error$combine$($6431, $6429));
                                                                var $6430 = $6432;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6433 = Parser$Reply$error$($6429);
                                                                var $6430 = $6433;
                                                                break;
                                                        };
                                                        var $6428 = $6430;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6434 = self.pst;
                                                        var self = $6434;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6436 = self.err;
                                                                var $6437 = self.nam;
                                                                var $6438 = self.ini;
                                                                var $6439 = self.idx;
                                                                var $6440 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6427, $6436), $6437, $6438, $6439, $6440);
                                                                var $6441 = Parser$fail$("Expected constructor names.", _reply$pst$30);
                                                                var $6435 = $6441;
                                                                break;
                                                        };
                                                        var $6428 = $6435;
                                                        break;
                                                };
                                                var $6426 = $6428;
                                                break;
                                        };
                                        return $6426;
                                    });
                                    var $6424 = $6425;
                                } else {
                                    var $6442 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6444 = self.err;
                                                var _reply$22 = Parser$until$(Kind$Parser$text(":"), Kind$Parser$name1)(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6446 = self.err;
                                                        var self = $6444;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6448 = self.value;
                                                                var $6449 = Parser$Reply$error$(Parser$Error$combine$($6448, $6446));
                                                                var $6447 = $6449;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6450 = Parser$Reply$error$($6446);
                                                                var $6447 = $6450;
                                                                break;
                                                        };
                                                        var $6445 = $6447;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6451 = self.pst;
                                                        var $6452 = self.val;
                                                        var self = $6451;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6454 = self.err;
                                                                var $6455 = self.nam;
                                                                var $6456 = self.ini;
                                                                var $6457 = self.idx;
                                                                var $6458 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6444, $6454), $6455, $6456, $6457, $6458);
                                                                var self = _reply$pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6460 = self.err;
                                                                        var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6462 = self.err;
                                                                                var self = $6460;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6464 = self.value;
                                                                                        var $6465 = Parser$Reply$error$(Parser$Error$combine$($6464, $6462));
                                                                                        var $6463 = $6465;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6466 = Parser$Reply$error$($6462);
                                                                                        var $6463 = $6466;
                                                                                        break;
                                                                                };
                                                                                var $6461 = $6463;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6467 = self.pst;
                                                                                var $6468 = self.val;
                                                                                var self = $6467;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6470 = self.err;
                                                                                        var $6471 = self.nam;
                                                                                        var $6472 = self.ini;
                                                                                        var $6473 = self.idx;
                                                                                        var $6474 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6460, $6470), $6471, $6472, $6473, $6474);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6476 = self.err;
                                                                                                var _reply$50 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6478 = self.err;
                                                                                                        var self = $6476;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6480 = self.value;
                                                                                                                var $6481 = Parser$Reply$error$(Parser$Error$combine$($6480, $6478));
                                                                                                                var $6479 = $6481;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6482 = Parser$Reply$error$($6478);
                                                                                                                var $6479 = $6482;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6477 = $6479;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6483 = self.pst;
                                                                                                        var self = $6483;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6485 = self.err;
                                                                                                                var $6486 = self.nam;
                                                                                                                var $6487 = self.ini;
                                                                                                                var $6488 = self.idx;
                                                                                                                var $6489 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6476, $6485), $6486, $6487, $6488, $6489);
                                                                                                                var $6490 = Parser$Reply$value$(_reply$pst$58, Pair$new$($6452, $6468));
                                                                                                                var $6484 = $6490;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6477 = $6484;
                                                                                                        break;
                                                                                                };
                                                                                                var $6475 = $6477;
                                                                                                break;
                                                                                        };
                                                                                        var $6469 = $6475;
                                                                                        break;
                                                                                };
                                                                                var $6461 = $6469;
                                                                                break;
                                                                        };
                                                                        var $6459 = $6461;
                                                                        break;
                                                                };
                                                                var $6453 = $6459;
                                                                break;
                                                        };
                                                        var $6445 = $6453;
                                                        break;
                                                };
                                                var $6443 = $6445;
                                                break;
                                        };
                                        return $6443;
                                    });
                                    var $6424 = $6442;
                                };
                                var $6424 = $6424(_reply$pst$15);
                                var $6418 = $6424;
                                break;
                        };
                        var $6410 = $6418;
                        break;
                };
                var $6408 = $6410;
                break;
        };
        return $6408;
    };
    const Kind$Parser$case$case = x0 => Kind$Parser$case$case$(x0);

    function Parser$append_error$(_parse$2, _msg$3, _pst$4) {
        var _reply$5 = _parse$2(_pst$4);
        var self = _reply$5;
        switch (self._) {
            case 'Parser.Reply.error':
                var $6492 = self.err;
                var self = $6492;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $6494 = self.nam;
                        var $6495 = self.ini;
                        var $6496 = self.idx;
                        var $6497 = self.msg;
                        var $6498 = Parser$Reply$fail$($6494, $6495, $6496, ($6497 + _msg$3));
                        var $6493 = $6498;
                        break;
                };
                var $6491 = $6493;
                break;
            case 'Parser.Reply.value':
                var $6499 = _reply$5;
                var $6491 = $6499;
                break;
        };
        return $6491;
    };
    const Parser$append_error = x0 => x1 => x2 => Parser$append_error$(x0, x1, x2);

    function Kind$Parser$case$group$(_dflt$1, _cses$2) {
        var self = _cses$2;
        switch (self._) {
            case 'List.cons':
                var $6501 = self.head;
                var $6502 = self.tail;
                var _map$5 = Kind$Parser$case$group$(_dflt$1, $6502);
                var self = $6501;
                switch (self._) {
                    case 'Pair.new':
                        var $6504 = self.fst;
                        var $6505 = self.snd;
                        var self = $6504;
                        switch (self._) {
                            case 'List.cons':
                                var $6507 = self.head;
                                var $6508 = self.tail;
                                var _rest$10 = Maybe$default$(Kind$Map$get$($6507, _map$5), List$nil);
                                var $6509 = Kind$Map$set$($6507, List$cons$(Pair$new$($6508, $6505), _rest$10), _map$5);
                                var $6506 = $6509;
                                break;
                            case 'List.nil':
                                var $6510 = _map$5;
                                var $6506 = $6510;
                                break;
                        };
                        var $6503 = $6506;
                        break;
                };
                var $6500 = $6503;
                break;
            case 'List.nil':
                var self = _dflt$1;
                switch (self._) {
                    case 'Maybe.some':
                        var $6512 = self.value;
                        var $6513 = Kind$Map$set$("_", List$cons$(Pair$new$(List$nil, $6512), List$nil), Kind$Map$new);
                        var $6511 = $6513;
                        break;
                    case 'Maybe.none':
                        var $6514 = Kind$Map$new;
                        var $6511 = $6514;
                        break;
                };
                var $6500 = $6511;
                break;
        };
        return $6500;
    };
    const Kind$Parser$case$group = x0 => x1 => Kind$Parser$case$group$(x0, x1);

    function BitsMap$map$(_fn$3, _map$4) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $6516 = self.val;
                var $6517 = self.lft;
                var $6518 = self.rgt;
                var self = $6516;
                switch (self._) {
                    case 'Maybe.some':
                        var $6520 = self.value;
                        var $6521 = Maybe$some$(_fn$3($6520));
                        var _val$8 = $6521;
                        break;
                    case 'Maybe.none':
                        var $6522 = Maybe$none;
                        var _val$8 = $6522;
                        break;
                };
                var _lft$9 = BitsMap$map$(_fn$3, $6517);
                var _rgt$10 = BitsMap$map$(_fn$3, $6518);
                var $6519 = BitsMap$tie$(_val$8, _lft$9, _rgt$10);
                var $6515 = $6519;
                break;
            case 'BitsMap.new':
                var $6523 = BitsMap$new;
                var $6515 = $6523;
                break;
        };
        return $6515;
    };
    const BitsMap$map = x0 => x1 => BitsMap$map$(x0, x1);

    function Kind$Map$map$(_fn$3, _map$4) {
        var $6524 = BitsMap$map$(_fn$3, _map$4);
        return $6524;
    };
    const Kind$Map$map = x0 => x1 => Kind$Map$map$(x0, x1);

    function Kind$Parser$case$build$(_vals$1, _wyth$2, _cses$3, _dflt$4, _moti$5) {
        var self = _vals$1;
        switch (self._) {
            case 'List.cons':
                var $6526 = self.head;
                var $6527 = self.tail;
                var _group$8 = Kind$Parser$case$group$(_dflt$4, _cses$3);
                var _name$9 = Pair$fst$($6526);
                var _expr$10 = Pair$snd$($6526);
                var _cses$11 = Kind$Map$map$((_cses$11 => {
                    var $6529 = Kind$Parser$case$build$($6527, _wyth$2, _cses$11, _dflt$4, _moti$5);
                    return $6529;
                }), _group$8);
                var $6528 = Kind$Term$cse$(Bits$e, _expr$10, _name$9, _wyth$2, _cses$11, _moti$5);
                var $6525 = $6528;
                break;
            case 'List.nil':
                var self = _cses$3;
                switch (self._) {
                    case 'List.cons':
                        var $6531 = self.head;
                        var $6532 = Pair$snd$($6531);
                        var $6530 = $6532;
                        break;
                    case 'List.nil':
                        var $6533 = Kind$Term$ref$("missing_case");
                        var $6530 = $6533;
                        break;
                };
                var $6525 = $6530;
                break;
        };
        return $6525;
    };
    const Kind$Parser$case$build = x0 => x1 => x2 => x3 => x4 => Kind$Parser$case$build$(x0, x1, x2, x3, x4);
    const Kind$Parser$case = Kind$Parser$block("case")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6535 = self.err;
                var _reply$7 = Kind$Parser$text$("case ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6537 = self.err;
                        var self = $6535;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6539 = self.value;
                                var $6540 = Parser$Reply$error$(Parser$Error$combine$($6539, $6537));
                                var $6538 = $6540;
                                break;
                            case 'Maybe.none':
                                var $6541 = Parser$Reply$error$($6537);
                                var $6538 = $6541;
                                break;
                        };
                        var $6536 = $6538;
                        break;
                    case 'Parser.Reply.value':
                        var $6542 = self.pst;
                        var self = $6542;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6544 = self.err;
                                var $6545 = self.nam;
                                var $6546 = self.ini;
                                var $6547 = self.idx;
                                var $6548 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6535, $6544), $6545, $6546, $6547, $6548);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6550 = self.err;
                                        var _reply$21 = Parser$many1$((_pst$21 => {
                                            var self = _pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $6553 = self.err;
                                                    var _reply$27 = Parser$avoiding$(Kind$Parser$text("{"), Kind$Parser$term, _pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $6555 = self.err;
                                                            var self = $6553;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $6557 = self.value;
                                                                    var $6558 = Parser$Reply$error$(Parser$Error$combine$($6557, $6555));
                                                                    var $6556 = $6558;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $6559 = Parser$Reply$error$($6555);
                                                                    var $6556 = $6559;
                                                                    break;
                                                            };
                                                            var $6554 = $6556;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $6560 = self.pst;
                                                            var $6561 = self.val;
                                                            var self = $6560;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6563 = self.err;
                                                                    var $6564 = self.nam;
                                                                    var $6565 = self.ini;
                                                                    var $6566 = self.idx;
                                                                    var $6567 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($6553, $6563), $6564, $6565, $6566, $6567);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6569 = self.err;
                                                                            var _reply$41 = Parser$maybe$((_pst$41 => {
                                                                                var self = _pst$41;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6572 = self.err;
                                                                                        var _reply$47 = Kind$Parser$text$("as", _pst$41);
                                                                                        var self = _reply$47;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6574 = self.err;
                                                                                                var self = $6572;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6576 = self.value;
                                                                                                        var $6577 = Parser$Reply$error$(Parser$Error$combine$($6576, $6574));
                                                                                                        var $6575 = $6577;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6578 = Parser$Reply$error$($6574);
                                                                                                        var $6575 = $6578;
                                                                                                        break;
                                                                                                };
                                                                                                var $6573 = $6575;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6579 = self.pst;
                                                                                                var self = $6579;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6581 = self.err;
                                                                                                        var $6582 = self.nam;
                                                                                                        var $6583 = self.ini;
                                                                                                        var $6584 = self.idx;
                                                                                                        var $6585 = self.str;
                                                                                                        var _reply$pst$55 = Parser$State$new$(Parser$Error$maybe_combine$($6572, $6581), $6582, $6583, $6584, $6585);
                                                                                                        var self = _reply$pst$55;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6587 = self.err;
                                                                                                                var _reply$61 = Kind$Parser$name1$(_reply$pst$55);
                                                                                                                var self = _reply$61;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6589 = self.err;
                                                                                                                        var self = $6587;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6591 = self.value;
                                                                                                                                var $6592 = Parser$Reply$error$(Parser$Error$combine$($6591, $6589));
                                                                                                                                var $6590 = $6592;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6593 = Parser$Reply$error$($6589);
                                                                                                                                var $6590 = $6593;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6588 = $6590;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6594 = self.pst;
                                                                                                                        var $6595 = self.val;
                                                                                                                        var self = $6594;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6597 = self.err;
                                                                                                                                var $6598 = self.nam;
                                                                                                                                var $6599 = self.ini;
                                                                                                                                var $6600 = self.idx;
                                                                                                                                var $6601 = self.str;
                                                                                                                                var _reply$pst$69 = Parser$State$new$(Parser$Error$maybe_combine$($6587, $6597), $6598, $6599, $6600, $6601);
                                                                                                                                var self = _reply$pst$69;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6603 = self.err;
                                                                                                                                        var _reply$75 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$69);
                                                                                                                                        var self = _reply$75;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6605 = self.err;
                                                                                                                                                var self = $6603;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6607 = self.value;
                                                                                                                                                        var $6608 = Parser$Reply$error$(Parser$Error$combine$($6607, $6605));
                                                                                                                                                        var $6606 = $6608;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6609 = Parser$Reply$error$($6605);
                                                                                                                                                        var $6606 = $6609;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6604 = $6606;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6610 = self.pst;
                                                                                                                                                var self = $6610;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6612 = self.err;
                                                                                                                                                        var $6613 = self.nam;
                                                                                                                                                        var $6614 = self.ini;
                                                                                                                                                        var $6615 = self.idx;
                                                                                                                                                        var $6616 = self.str;
                                                                                                                                                        var _reply$pst$83 = Parser$State$new$(Parser$Error$maybe_combine$($6603, $6612), $6613, $6614, $6615, $6616);
                                                                                                                                                        var $6617 = Parser$Reply$value$(_reply$pst$83, $6595);
                                                                                                                                                        var $6611 = $6617;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6604 = $6611;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6602 = $6604;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6596 = $6602;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6588 = $6596;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6586 = $6588;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6580 = $6586;
                                                                                                        break;
                                                                                                };
                                                                                                var $6573 = $6580;
                                                                                                break;
                                                                                        };
                                                                                        var $6571 = $6573;
                                                                                        break;
                                                                                };
                                                                                return $6571;
                                                                            }), _reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6618 = self.err;
                                                                                    var self = $6569;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6620 = self.value;
                                                                                            var $6621 = Parser$Reply$error$(Parser$Error$combine$($6620, $6618));
                                                                                            var $6619 = $6621;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6622 = Parser$Reply$error$($6618);
                                                                                            var $6619 = $6622;
                                                                                            break;
                                                                                    };
                                                                                    var $6570 = $6619;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6623 = self.pst;
                                                                                    var $6624 = self.val;
                                                                                    var self = $6623;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6626 = self.err;
                                                                                            var $6627 = self.nam;
                                                                                            var $6628 = self.ini;
                                                                                            var $6629 = self.idx;
                                                                                            var $6630 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6569, $6626), $6627, $6628, $6629, $6630);
                                                                                            var _name$50 = Maybe$default$($6624, Kind$Term$extract_name$($6561));
                                                                                            var $6631 = Parser$Reply$value$(_reply$pst$49, Pair$new$(_name$50, $6561));
                                                                                            var $6625 = $6631;
                                                                                            break;
                                                                                    };
                                                                                    var $6570 = $6625;
                                                                                    break;
                                                                            };
                                                                            var $6568 = $6570;
                                                                            break;
                                                                    };
                                                                    var $6562 = $6568;
                                                                    break;
                                                            };
                                                            var $6554 = $6562;
                                                            break;
                                                    };
                                                    var $6552 = $6554;
                                                    break;
                                            };
                                            return $6552;
                                        }), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6632 = self.err;
                                                var self = $6550;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6634 = self.value;
                                                        var $6635 = Parser$Reply$error$(Parser$Error$combine$($6634, $6632));
                                                        var $6633 = $6635;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6636 = Parser$Reply$error$($6632);
                                                        var $6633 = $6636;
                                                        break;
                                                };
                                                var $6551 = $6633;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6637 = self.pst;
                                                var $6638 = self.val;
                                                var self = $6637;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6640 = self.err;
                                                        var $6641 = self.nam;
                                                        var $6642 = self.ini;
                                                        var $6643 = self.idx;
                                                        var $6644 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6550, $6640), $6641, $6642, $6643, $6644);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6646 = self.err;
                                                                var _reply$35 = Kind$Parser$case$with(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6648 = self.err;
                                                                        var self = $6646;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6650 = self.value;
                                                                                var $6651 = Parser$Reply$error$(Parser$Error$combine$($6650, $6648));
                                                                                var $6649 = $6651;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6652 = Parser$Reply$error$($6648);
                                                                                var $6649 = $6652;
                                                                                break;
                                                                        };
                                                                        var $6647 = $6649;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6653 = self.pst;
                                                                        var $6654 = self.val;
                                                                        var self = $6653;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6656 = self.err;
                                                                                var $6657 = self.nam;
                                                                                var $6658 = self.ini;
                                                                                var $6659 = self.idx;
                                                                                var $6660 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6646, $6656), $6657, $6658, $6659, $6660);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6662 = self.err;
                                                                                        var _reply$49 = Kind$Parser$items$("{", Kind$Parser$case$case, "}")(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6664 = self.err;
                                                                                                var self = $6662;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6666 = self.value;
                                                                                                        var $6667 = Parser$Reply$error$(Parser$Error$combine$($6666, $6664));
                                                                                                        var $6665 = $6667;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6668 = Parser$Reply$error$($6664);
                                                                                                        var $6665 = $6668;
                                                                                                        break;
                                                                                                };
                                                                                                var $6663 = $6665;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6669 = self.pst;
                                                                                                var $6670 = self.val;
                                                                                                var self = $6669;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6672 = self.err;
                                                                                                        var $6673 = self.nam;
                                                                                                        var $6674 = self.ini;
                                                                                                        var $6675 = self.idx;
                                                                                                        var $6676 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6662, $6672), $6673, $6674, $6675, $6676);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6678 = self.err;
                                                                                                                var _reply$63 = Parser$maybe$(Kind$Parser$text("!"), _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6680 = self.err;
                                                                                                                        var self = $6678;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6682 = self.value;
                                                                                                                                var $6683 = Parser$Reply$error$(Parser$Error$combine$($6682, $6680));
                                                                                                                                var $6681 = $6683;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6684 = Parser$Reply$error$($6680);
                                                                                                                                var $6681 = $6684;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6679 = $6681;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6685 = self.pst;
                                                                                                                        var $6686 = self.val;
                                                                                                                        var self = $6685;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6688 = self.err;
                                                                                                                                var $6689 = self.nam;
                                                                                                                                var $6690 = self.ini;
                                                                                                                                var $6691 = self.idx;
                                                                                                                                var $6692 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6678, $6688), $6689, $6690, $6691, $6692);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6694 = self.err;
                                                                                                                                        var _reply$77 = Parser$maybe$((_pst$77 => {
                                                                                                                                            var self = _pst$77;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $6697 = self.err;
                                                                                                                                                    var _reply$83 = Kind$Parser$text$("default", _pst$77);
                                                                                                                                                    var self = _reply$83;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $6699 = self.err;
                                                                                                                                                            var self = $6697;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $6701 = self.value;
                                                                                                                                                                    var $6702 = Parser$Reply$error$(Parser$Error$combine$($6701, $6699));
                                                                                                                                                                    var $6700 = $6702;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $6703 = Parser$Reply$error$($6699);
                                                                                                                                                                    var $6700 = $6703;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6698 = $6700;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $6704 = self.pst;
                                                                                                                                                            var self = $6704;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6706 = self.err;
                                                                                                                                                                    var $6707 = self.nam;
                                                                                                                                                                    var $6708 = self.ini;
                                                                                                                                                                    var $6709 = self.idx;
                                                                                                                                                                    var $6710 = self.str;
                                                                                                                                                                    var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($6697, $6706), $6707, $6708, $6709, $6710);
                                                                                                                                                                    var self = _reply$pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6712 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$term(_reply$pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6714 = self.err;
                                                                                                                                                                                    var self = $6712;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6716 = self.value;
                                                                                                                                                                                            var $6717 = Parser$Reply$error$(Parser$Error$combine$($6716, $6714));
                                                                                                                                                                                            var $6715 = $6717;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6718 = Parser$Reply$error$($6714);
                                                                                                                                                                                            var $6715 = $6718;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6713 = $6715;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6719 = self.pst;
                                                                                                                                                                                    var $6720 = self.val;
                                                                                                                                                                                    var self = $6719;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6722 = self.err;
                                                                                                                                                                                            var $6723 = self.nam;
                                                                                                                                                                                            var $6724 = self.ini;
                                                                                                                                                                                            var $6725 = self.idx;
                                                                                                                                                                                            var $6726 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6712, $6722), $6723, $6724, $6725, $6726);
                                                                                                                                                                                            var $6727 = Parser$Reply$value$(_reply$pst$105, $6720);
                                                                                                                                                                                            var $6721 = $6727;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6713 = $6721;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6711 = $6713;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6705 = $6711;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6698 = $6705;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6696 = $6698;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $6696;
                                                                                                                                        }), _reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6728 = self.err;
                                                                                                                                                var self = $6694;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6730 = self.value;
                                                                                                                                                        var $6731 = Parser$Reply$error$(Parser$Error$combine$($6730, $6728));
                                                                                                                                                        var $6729 = $6731;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6732 = Parser$Reply$error$($6728);
                                                                                                                                                        var $6729 = $6732;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6695 = $6729;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6733 = self.pst;
                                                                                                                                                var $6734 = self.val;
                                                                                                                                                var self = $6733;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6736 = self.err;
                                                                                                                                                        var $6737 = self.nam;
                                                                                                                                                        var $6738 = self.ini;
                                                                                                                                                        var $6739 = self.idx;
                                                                                                                                                        var $6740 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($6694, $6736), $6737, $6738, $6739, $6740);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $6742 = self.err;
                                                                                                                                                                var _reply$91 = Parser$maybe$((_pst$91 => {
                                                                                                                                                                    var self = _pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6745 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$text$(":", _pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6747 = self.err;
                                                                                                                                                                                    var self = $6745;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6749 = self.value;
                                                                                                                                                                                            var $6750 = Parser$Reply$error$(Parser$Error$combine$($6749, $6747));
                                                                                                                                                                                            var $6748 = $6750;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6751 = Parser$Reply$error$($6747);
                                                                                                                                                                                            var $6748 = $6751;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6746 = $6748;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6752 = self.pst;
                                                                                                                                                                                    var self = $6752;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6754 = self.err;
                                                                                                                                                                                            var $6755 = self.nam;
                                                                                                                                                                                            var $6756 = self.ini;
                                                                                                                                                                                            var $6757 = self.idx;
                                                                                                                                                                                            var $6758 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6745, $6754), $6755, $6756, $6757, $6758);
                                                                                                                                                                                            var $6759 = Parser$append_error$(Kind$Parser$term, "\u{a}Inside motive.", _reply$pst$105);
                                                                                                                                                                                            var $6753 = $6759;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6746 = $6753;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6744 = $6746;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    return $6744;
                                                                                                                                                                }), _reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $6760 = self.err;
                                                                                                                                                                        var self = $6742;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $6762 = self.value;
                                                                                                                                                                                var $6763 = Parser$Reply$error$(Parser$Error$combine$($6762, $6760));
                                                                                                                                                                                var $6761 = $6763;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $6764 = Parser$Reply$error$($6760);
                                                                                                                                                                                var $6761 = $6764;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6743 = $6761;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $6765 = self.pst;
                                                                                                                                                                        var $6766 = self.val;
                                                                                                                                                                        var self = $6765;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $6768 = self.err;
                                                                                                                                                                                var $6769 = self.nam;
                                                                                                                                                                                var $6770 = self.ini;
                                                                                                                                                                                var $6771 = self.idx;
                                                                                                                                                                                var $6772 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($6742, $6768), $6769, $6770, $6771, $6772);
                                                                                                                                                                                var self = $6766;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                        var $6774 = self.value;
                                                                                                                                                                                        var $6775 = Maybe$some$($6774);
                                                                                                                                                                                        var _moti$100 = $6775;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                        var self = $6686;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $6777 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                var $6776 = $6777;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $6778 = Maybe$none;
                                                                                                                                                                                                var $6776 = $6778;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var _moti$100 = $6776;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $6773 = Parser$Reply$value$(_reply$pst$99, Kind$Parser$case$build$($6638, $6654, $6670, $6734, _moti$100));
                                                                                                                                                                                var $6767 = $6773;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6743 = $6767;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $6741 = $6743;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $6735 = $6741;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6695 = $6735;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6693 = $6695;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6687 = $6693;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6679 = $6687;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6677 = $6679;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6671 = $6677;
                                                                                                        break;
                                                                                                };
                                                                                                var $6663 = $6671;
                                                                                                break;
                                                                                        };
                                                                                        var $6661 = $6663;
                                                                                        break;
                                                                                };
                                                                                var $6655 = $6661;
                                                                                break;
                                                                        };
                                                                        var $6647 = $6655;
                                                                        break;
                                                                };
                                                                var $6645 = $6647;
                                                                break;
                                                        };
                                                        var $6639 = $6645;
                                                        break;
                                                };
                                                var $6551 = $6639;
                                                break;
                                        };
                                        var $6549 = $6551;
                                        break;
                                };
                                var $6543 = $6549;
                                break;
                        };
                        var $6536 = $6543;
                        break;
                };
                var $6534 = $6536;
                break;
        };
        return $6534;
    }));
    const Kind$Parser$without = Kind$Parser$block("without")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6780 = self.err;
                var _reply$7 = Kind$Parser$text$("without ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6782 = self.err;
                        var self = $6780;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6784 = self.value;
                                var $6785 = Parser$Reply$error$(Parser$Error$combine$($6784, $6782));
                                var $6783 = $6785;
                                break;
                            case 'Maybe.none':
                                var $6786 = Parser$Reply$error$($6782);
                                var $6783 = $6786;
                                break;
                        };
                        var $6781 = $6783;
                        break;
                    case 'Parser.Reply.value':
                        var $6787 = self.pst;
                        var self = $6787;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6789 = self.err;
                                var $6790 = self.nam;
                                var $6791 = self.ini;
                                var $6792 = self.idx;
                                var $6793 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6780, $6789), $6790, $6791, $6792, $6793);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6795 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6797 = self.err;
                                                var self = $6795;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6799 = self.value;
                                                        var $6800 = Parser$Reply$error$(Parser$Error$combine$($6799, $6797));
                                                        var $6798 = $6800;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6801 = Parser$Reply$error$($6797);
                                                        var $6798 = $6801;
                                                        break;
                                                };
                                                var $6796 = $6798;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6802 = self.pst;
                                                var $6803 = self.val;
                                                var self = $6802;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6805 = self.err;
                                                        var $6806 = self.nam;
                                                        var $6807 = self.ini;
                                                        var $6808 = self.idx;
                                                        var $6809 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6795, $6805), $6806, $6807, $6808, $6809);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6811 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6813 = self.err;
                                                                        var self = $6811;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6815 = self.value;
                                                                                var $6816 = Parser$Reply$error$(Parser$Error$combine$($6815, $6813));
                                                                                var $6814 = $6816;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6817 = Parser$Reply$error$($6813);
                                                                                var $6814 = $6817;
                                                                                break;
                                                                        };
                                                                        var $6812 = $6814;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6818 = self.pst;
                                                                        var self = $6818;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6820 = self.err;
                                                                                var $6821 = self.nam;
                                                                                var $6822 = self.ini;
                                                                                var $6823 = self.idx;
                                                                                var $6824 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6811, $6820), $6821, $6822, $6823, $6824);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6826 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6828 = self.err;
                                                                                                var self = $6826;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6830 = self.value;
                                                                                                        var $6831 = Parser$Reply$error$(Parser$Error$combine$($6830, $6828));
                                                                                                        var $6829 = $6831;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6832 = Parser$Reply$error$($6828);
                                                                                                        var $6829 = $6832;
                                                                                                        break;
                                                                                                };
                                                                                                var $6827 = $6829;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6833 = self.pst;
                                                                                                var $6834 = self.val;
                                                                                                var self = $6833;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6836 = self.err;
                                                                                                        var $6837 = self.nam;
                                                                                                        var $6838 = self.ini;
                                                                                                        var $6839 = self.idx;
                                                                                                        var $6840 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6826, $6836), $6837, $6838, $6839, $6840);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6842 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6844 = self.err;
                                                                                                                        var self = $6842;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6846 = self.value;
                                                                                                                                var $6847 = Parser$Reply$error$(Parser$Error$combine$($6846, $6844));
                                                                                                                                var $6845 = $6847;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6848 = Parser$Reply$error$($6844);
                                                                                                                                var $6845 = $6848;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6843 = $6845;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6849 = self.pst;
                                                                                                                        var $6850 = self.val;
                                                                                                                        var self = $6849;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6852 = self.err;
                                                                                                                                var $6853 = self.nam;
                                                                                                                                var $6854 = self.ini;
                                                                                                                                var $6855 = self.idx;
                                                                                                                                var $6856 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6842, $6852), $6853, $6854, $6855, $6856);
                                                                                                                                var _term$72 = Kind$Term$ref$($6803);
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$lam$("", (_x$73 => {
                                                                                                                                    var $6858 = Kind$Term$hol$(Bits$e);
                                                                                                                                    return $6858;
                                                                                                                                })));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, $6834);
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$lam$($6803, (_x$75 => {
                                                                                                                                    var $6859 = $6850;
                                                                                                                                    return $6859;
                                                                                                                                })));
                                                                                                                                var $6857 = Parser$Reply$value$(_reply$pst$71, _term$75);
                                                                                                                                var $6851 = $6857;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6843 = $6851;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6841 = $6843;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6835 = $6841;
                                                                                                        break;
                                                                                                };
                                                                                                var $6827 = $6835;
                                                                                                break;
                                                                                        };
                                                                                        var $6825 = $6827;
                                                                                        break;
                                                                                };
                                                                                var $6819 = $6825;
                                                                                break;
                                                                        };
                                                                        var $6812 = $6819;
                                                                        break;
                                                                };
                                                                var $6810 = $6812;
                                                                break;
                                                        };
                                                        var $6804 = $6810;
                                                        break;
                                                };
                                                var $6796 = $6804;
                                                break;
                                        };
                                        var $6794 = $6796;
                                        break;
                                };
                                var $6788 = $6794;
                                break;
                        };
                        var $6781 = $6788;
                        break;
                };
                var $6779 = $6781;
                break;
        };
        return $6779;
    }));

    function Kind$Parser$switch$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6861 = self.err;
                var _reply$7 = Kind$Parser$term(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6863 = self.err;
                        var self = $6861;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6865 = self.value;
                                var $6866 = Parser$Reply$error$(Parser$Error$combine$($6865, $6863));
                                var $6864 = $6866;
                                break;
                            case 'Maybe.none':
                                var $6867 = Parser$Reply$error$($6863);
                                var $6864 = $6867;
                                break;
                        };
                        var $6862 = $6864;
                        break;
                    case 'Parser.Reply.value':
                        var $6868 = self.pst;
                        var $6869 = self.val;
                        var self = $6868;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6871 = self.err;
                                var $6872 = self.nam;
                                var $6873 = self.ini;
                                var $6874 = self.idx;
                                var $6875 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6861, $6871), $6872, $6873, $6874, $6875);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6877 = self.err;
                                        var _reply$21 = Kind$Parser$text$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6879 = self.err;
                                                var self = $6877;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6881 = self.value;
                                                        var $6882 = Parser$Reply$error$(Parser$Error$combine$($6881, $6879));
                                                        var $6880 = $6882;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6883 = Parser$Reply$error$($6879);
                                                        var $6880 = $6883;
                                                        break;
                                                };
                                                var $6878 = $6880;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6884 = self.pst;
                                                var self = $6884;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6886 = self.err;
                                                        var $6887 = self.nam;
                                                        var $6888 = self.ini;
                                                        var $6889 = self.idx;
                                                        var $6890 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6877, $6886), $6887, $6888, $6889, $6890);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6892 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6894 = self.err;
                                                                        var self = $6892;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6896 = self.value;
                                                                                var $6897 = Parser$Reply$error$(Parser$Error$combine$($6896, $6894));
                                                                                var $6895 = $6897;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6898 = Parser$Reply$error$($6894);
                                                                                var $6895 = $6898;
                                                                                break;
                                                                        };
                                                                        var $6893 = $6895;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6899 = self.pst;
                                                                        var $6900 = self.val;
                                                                        var self = $6899;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6902 = self.err;
                                                                                var $6903 = self.nam;
                                                                                var $6904 = self.ini;
                                                                                var $6905 = self.idx;
                                                                                var $6906 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6892, $6902), $6903, $6904, $6905, $6906);
                                                                                var $6907 = Parser$Reply$value$(_reply$pst$43, Pair$new$($6869, $6900));
                                                                                var $6901 = $6907;
                                                                                break;
                                                                        };
                                                                        var $6893 = $6901;
                                                                        break;
                                                                };
                                                                var $6891 = $6893;
                                                                break;
                                                        };
                                                        var $6885 = $6891;
                                                        break;
                                                };
                                                var $6878 = $6885;
                                                break;
                                        };
                                        var $6876 = $6878;
                                        break;
                                };
                                var $6870 = $6876;
                                break;
                        };
                        var $6862 = $6870;
                        break;
                };
                var $6860 = $6862;
                break;
        };
        return $6860;
    };
    const Kind$Parser$switch$case = x0 => Kind$Parser$switch$case$(x0);
    const Kind$Parser$switch = Kind$Parser$block("switch")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6909 = self.err;
                var _reply$7 = Kind$Parser$text$("switch", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6911 = self.err;
                        var self = $6909;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6913 = self.value;
                                var $6914 = Parser$Reply$error$(Parser$Error$combine$($6913, $6911));
                                var $6912 = $6914;
                                break;
                            case 'Maybe.none':
                                var $6915 = Parser$Reply$error$($6911);
                                var $6912 = $6915;
                                break;
                        };
                        var $6910 = $6912;
                        break;
                    case 'Parser.Reply.value':
                        var $6916 = self.pst;
                        var self = $6916;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6918 = self.err;
                                var $6919 = self.nam;
                                var $6920 = self.ini;
                                var $6921 = self.idx;
                                var $6922 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6909, $6918), $6919, $6920, $6921, $6922);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6924 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6926 = self.err;
                                                var self = $6924;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6928 = self.value;
                                                        var $6929 = Parser$Reply$error$(Parser$Error$combine$($6928, $6926));
                                                        var $6927 = $6929;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6930 = Parser$Reply$error$($6926);
                                                        var $6927 = $6930;
                                                        break;
                                                };
                                                var $6925 = $6927;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6931 = self.pst;
                                                var $6932 = self.val;
                                                var self = $6931;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6934 = self.err;
                                                        var $6935 = self.nam;
                                                        var $6936 = self.ini;
                                                        var $6937 = self.idx;
                                                        var $6938 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6924, $6934), $6935, $6936, $6937, $6938);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6940 = self.err;
                                                                var _reply$35 = Kind$Parser$items$("{", Kind$Parser$switch$case, "}")(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6942 = self.err;
                                                                        var self = $6940;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6944 = self.value;
                                                                                var $6945 = Parser$Reply$error$(Parser$Error$combine$($6944, $6942));
                                                                                var $6943 = $6945;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6946 = Parser$Reply$error$($6942);
                                                                                var $6943 = $6946;
                                                                                break;
                                                                        };
                                                                        var $6941 = $6943;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6947 = self.pst;
                                                                        var $6948 = self.val;
                                                                        var self = $6947;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6950 = self.err;
                                                                                var $6951 = self.nam;
                                                                                var $6952 = self.ini;
                                                                                var $6953 = self.idx;
                                                                                var $6954 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6940, $6950), $6951, $6952, $6953, $6954);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6956 = self.err;
                                                                                        var _reply$49 = Kind$Parser$text$("default", _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6958 = self.err;
                                                                                                var self = $6956;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6960 = self.value;
                                                                                                        var $6961 = Parser$Reply$error$(Parser$Error$combine$($6960, $6958));
                                                                                                        var $6959 = $6961;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6962 = Parser$Reply$error$($6958);
                                                                                                        var $6959 = $6962;
                                                                                                        break;
                                                                                                };
                                                                                                var $6957 = $6959;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6963 = self.pst;
                                                                                                var self = $6963;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6965 = self.err;
                                                                                                        var $6966 = self.nam;
                                                                                                        var $6967 = self.ini;
                                                                                                        var $6968 = self.idx;
                                                                                                        var $6969 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6956, $6965), $6966, $6967, $6968, $6969);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6971 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6973 = self.err;
                                                                                                                        var self = $6971;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6975 = self.value;
                                                                                                                                var $6976 = Parser$Reply$error$(Parser$Error$combine$($6975, $6973));
                                                                                                                                var $6974 = $6976;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6977 = Parser$Reply$error$($6973);
                                                                                                                                var $6974 = $6977;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6972 = $6974;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6978 = self.pst;
                                                                                                                        var $6979 = self.val;
                                                                                                                        var self = $6978;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6981 = self.err;
                                                                                                                                var $6982 = self.nam;
                                                                                                                                var $6983 = self.ini;
                                                                                                                                var $6984 = self.idx;
                                                                                                                                var $6985 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6971, $6981), $6982, $6983, $6984, $6985);
                                                                                                                                var _term$72 = List$fold$($6948, $6979, (_cse$72 => _rest$73 => {
                                                                                                                                    var self = _cse$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Pair.new':
                                                                                                                                            var $6988 = self.fst;
                                                                                                                                            var $6989 = self.snd;
                                                                                                                                            var _term$76 = Kind$Term$app$($6932, $6988);
                                                                                                                                            var _term$77 = Kind$Term$app$(_term$76, Kind$Term$lam$("", (_x$77 => {
                                                                                                                                                var $6991 = Kind$Term$hol$(Bits$e);
                                                                                                                                                return $6991;
                                                                                                                                            })));
                                                                                                                                            var _term$78 = Kind$Term$app$(_term$77, $6989);
                                                                                                                                            var _term$79 = Kind$Term$app$(_term$78, _rest$73);
                                                                                                                                            var $6990 = _term$79;
                                                                                                                                            var $6987 = $6990;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    return $6987;
                                                                                                                                }));
                                                                                                                                var $6986 = Parser$Reply$value$(_reply$pst$71, _term$72);
                                                                                                                                var $6980 = $6986;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6972 = $6980;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6970 = $6972;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6964 = $6970;
                                                                                                        break;
                                                                                                };
                                                                                                var $6957 = $6964;
                                                                                                break;
                                                                                        };
                                                                                        var $6955 = $6957;
                                                                                        break;
                                                                                };
                                                                                var $6949 = $6955;
                                                                                break;
                                                                        };
                                                                        var $6941 = $6949;
                                                                        break;
                                                                };
                                                                var $6939 = $6941;
                                                                break;
                                                        };
                                                        var $6933 = $6939;
                                                        break;
                                                };
                                                var $6925 = $6933;
                                                break;
                                        };
                                        var $6923 = $6925;
                                        break;
                                };
                                var $6917 = $6923;
                                break;
                        };
                        var $6910 = $6917;
                        break;
                };
                var $6908 = $6910;
                break;
        };
        return $6908;
    }));

    function Bits$tail$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6993 = self.slice(0, -1);
                var $6994 = $6993;
                var $6992 = $6994;
                break;
            case 'i':
                var $6995 = self.slice(0, -1);
                var $6996 = $6995;
                var $6992 = $6996;
                break;
            case 'e':
                var $6997 = Bits$e;
                var $6992 = $6997;
                break;
        };
        return $6992;
    };
    const Bits$tail = x0 => Bits$tail$(x0);

    function Bits$inc$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6999 = self.slice(0, -1);
                var $7000 = ($6999 + '1');
                var $6998 = $7000;
                break;
            case 'i':
                var $7001 = self.slice(0, -1);
                var $7002 = (Bits$inc$($7001) + '0');
                var $6998 = $7002;
                break;
            case 'e':
                var $7003 = (Bits$e + '1');
                var $6998 = $7003;
                break;
        };
        return $6998;
    };
    const Bits$inc = x0 => Bits$inc$(x0);
    const Nat$to_bits = a0 => (nat_to_bits(a0));

    function Maybe$is_some$(_m$2) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.none':
                var $7005 = Bool$false;
                var $7004 = $7005;
                break;
            case 'Maybe.some':
                var $7006 = Bool$true;
                var $7004 = $7006;
                break;
        };
        return $7004;
    };
    const Maybe$is_some = x0 => Maybe$is_some$(x0);

    function Kind$Term$gol$(_name$1, _dref$2, _verb$3) {
        var $7007 = ({
            _: 'Kind.Term.gol',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3
        });
        return $7007;
    };
    const Kind$Term$gol = x0 => x1 => x2 => Kind$Term$gol$(x0, x1, x2);
    const Kind$Parser$goal = Kind$Parser$block("goal")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7009 = self.err;
                var _reply$7 = Kind$Parser$text$("?", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7011 = self.err;
                        var self = $7009;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7013 = self.value;
                                var $7014 = Parser$Reply$error$(Parser$Error$combine$($7013, $7011));
                                var $7012 = $7014;
                                break;
                            case 'Maybe.none':
                                var $7015 = Parser$Reply$error$($7011);
                                var $7012 = $7015;
                                break;
                        };
                        var $7010 = $7012;
                        break;
                    case 'Parser.Reply.value':
                        var $7016 = self.pst;
                        var self = $7016;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7018 = self.err;
                                var $7019 = self.nam;
                                var $7020 = self.ini;
                                var $7021 = self.idx;
                                var $7022 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7009, $7018), $7019, $7020, $7021, $7022);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7024 = self.err;
                                        var _reply$21 = Kind$Parser$name$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7026 = self.err;
                                                var self = $7024;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7028 = self.value;
                                                        var $7029 = Parser$Reply$error$(Parser$Error$combine$($7028, $7026));
                                                        var $7027 = $7029;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7030 = Parser$Reply$error$($7026);
                                                        var $7027 = $7030;
                                                        break;
                                                };
                                                var $7025 = $7027;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7031 = self.pst;
                                                var $7032 = self.val;
                                                var self = $7031;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7034 = self.err;
                                                        var $7035 = self.nam;
                                                        var $7036 = self.ini;
                                                        var $7037 = self.idx;
                                                        var $7038 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7024, $7034), $7035, $7036, $7037, $7038);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7040 = self.err;
                                                                var _reply$35 = Parser$many$((_pst$35 => {
                                                                    var self = _pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $7043 = self.err;
                                                                            var _reply$41 = Kind$Parser$text$("-", _pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $7045 = self.err;
                                                                                    var self = $7043;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $7047 = self.value;
                                                                                            var $7048 = Parser$Reply$error$(Parser$Error$combine$($7047, $7045));
                                                                                            var $7046 = $7048;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $7049 = Parser$Reply$error$($7045);
                                                                                            var $7046 = $7049;
                                                                                            break;
                                                                                    };
                                                                                    var $7044 = $7046;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $7050 = self.pst;
                                                                                    var self = $7050;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $7052 = self.err;
                                                                                            var $7053 = self.nam;
                                                                                            var $7054 = self.ini;
                                                                                            var $7055 = self.idx;
                                                                                            var $7056 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($7043, $7052), $7053, $7054, $7055, $7056);
                                                                                            var self = _reply$pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $7058 = self.err;
                                                                                                    var _reply$55 = Parser$nat$(_reply$pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $7060 = self.err;
                                                                                                            var self = $7058;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $7062 = self.value;
                                                                                                                    var $7063 = Parser$Reply$error$(Parser$Error$combine$($7062, $7060));
                                                                                                                    var $7061 = $7063;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $7064 = Parser$Reply$error$($7060);
                                                                                                                    var $7061 = $7064;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7059 = $7061;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $7065 = self.pst;
                                                                                                            var $7066 = self.val;
                                                                                                            var self = $7065;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $7068 = self.err;
                                                                                                                    var $7069 = self.nam;
                                                                                                                    var $7070 = self.ini;
                                                                                                                    var $7071 = self.idx;
                                                                                                                    var $7072 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($7058, $7068), $7069, $7070, $7071, $7072);
                                                                                                                    var _bits$64 = Bits$reverse$(Bits$tail$(Bits$reverse$((nat_to_bits($7066)))));
                                                                                                                    var $7073 = Parser$Reply$value$(_reply$pst$63, _bits$64);
                                                                                                                    var $7067 = $7073;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $7059 = $7067;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $7057 = $7059;
                                                                                                    break;
                                                                                            };
                                                                                            var $7051 = $7057;
                                                                                            break;
                                                                                    };
                                                                                    var $7044 = $7051;
                                                                                    break;
                                                                            };
                                                                            var $7042 = $7044;
                                                                            break;
                                                                    };
                                                                    return $7042;
                                                                }))(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7074 = self.err;
                                                                        var self = $7040;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7076 = self.value;
                                                                                var $7077 = Parser$Reply$error$(Parser$Error$combine$($7076, $7074));
                                                                                var $7075 = $7077;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7078 = Parser$Reply$error$($7074);
                                                                                var $7075 = $7078;
                                                                                break;
                                                                        };
                                                                        var $7041 = $7075;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7079 = self.pst;
                                                                        var $7080 = self.val;
                                                                        var self = $7079;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7082 = self.err;
                                                                                var $7083 = self.nam;
                                                                                var $7084 = self.ini;
                                                                                var $7085 = self.idx;
                                                                                var $7086 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7040, $7082), $7083, $7084, $7085, $7086);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7088 = self.err;
                                                                                        var self = _reply$pst$43;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7090 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$text("-"), _reply$pst$43);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7092 = self.err;
                                                                                                        var self = $7090;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7094 = self.value;
                                                                                                                var $7095 = Parser$Reply$error$(Parser$Error$combine$($7094, $7092));
                                                                                                                var $7093 = $7095;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7096 = Parser$Reply$error$($7092);
                                                                                                                var $7093 = $7096;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7091 = $7093;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7097 = self.pst;
                                                                                                        var $7098 = self.val;
                                                                                                        var self = $7097;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7100 = self.err;
                                                                                                                var $7101 = self.nam;
                                                                                                                var $7102 = self.ini;
                                                                                                                var $7103 = self.idx;
                                                                                                                var $7104 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7090, $7100), $7101, $7102, $7103, $7104);
                                                                                                                var $7105 = Parser$Reply$value$(_reply$pst$62, Maybe$is_some$($7098));
                                                                                                                var $7099 = $7105;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7091 = $7099;
                                                                                                        break;
                                                                                                };
                                                                                                var _reply$49 = $7091;
                                                                                                break;
                                                                                        };
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7106 = self.err;
                                                                                                var self = $7088;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7108 = self.value;
                                                                                                        var $7109 = Parser$Reply$error$(Parser$Error$combine$($7108, $7106));
                                                                                                        var $7107 = $7109;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7110 = Parser$Reply$error$($7106);
                                                                                                        var $7107 = $7110;
                                                                                                        break;
                                                                                                };
                                                                                                var $7089 = $7107;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7111 = self.pst;
                                                                                                var $7112 = self.val;
                                                                                                var self = $7111;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7114 = self.err;
                                                                                                        var $7115 = self.nam;
                                                                                                        var $7116 = self.ini;
                                                                                                        var $7117 = self.idx;
                                                                                                        var $7118 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7088, $7114), $7115, $7116, $7117, $7118);
                                                                                                        var $7119 = Parser$Reply$value$(_reply$pst$57, Kind$Term$gol$($7032, $7080, $7112));
                                                                                                        var $7113 = $7119;
                                                                                                        break;
                                                                                                };
                                                                                                var $7089 = $7113;
                                                                                                break;
                                                                                        };
                                                                                        var $7087 = $7089;
                                                                                        break;
                                                                                };
                                                                                var $7081 = $7087;
                                                                                break;
                                                                        };
                                                                        var $7041 = $7081;
                                                                        break;
                                                                };
                                                                var $7039 = $7041;
                                                                break;
                                                        };
                                                        var $7033 = $7039;
                                                        break;
                                                };
                                                var $7025 = $7033;
                                                break;
                                        };
                                        var $7023 = $7025;
                                        break;
                                };
                                var $7017 = $7023;
                                break;
                        };
                        var $7010 = $7017;
                        break;
                };
                var $7008 = $7010;
                break;
        };
        return $7008;
    }));
    const Kind$Parser$hole = Kind$Parser$block("hole")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7121 = self.err;
                var _reply$7 = Kind$Parser$text$("_", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7123 = self.err;
                        var self = $7121;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7125 = self.value;
                                var $7126 = Parser$Reply$error$(Parser$Error$combine$($7125, $7123));
                                var $7124 = $7126;
                                break;
                            case 'Maybe.none':
                                var $7127 = Parser$Reply$error$($7123);
                                var $7124 = $7127;
                                break;
                        };
                        var $7122 = $7124;
                        break;
                    case 'Parser.Reply.value':
                        var $7128 = self.pst;
                        var self = $7128;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7130 = self.err;
                                var $7131 = self.nam;
                                var $7132 = self.ini;
                                var $7133 = self.idx;
                                var $7134 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7121, $7130), $7131, $7132, $7133, $7134);
                                var $7135 = Parser$Reply$value$(_reply$pst$15, Kind$Term$hol$(Bits$e));
                                var $7129 = $7135;
                                break;
                        };
                        var $7122 = $7129;
                        break;
                };
                var $7120 = $7122;
                break;
        };
        return $7120;
    }));

    function Kind$Parser$float$sign$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7137 = self.nam;
                var $7138 = self.ini;
                var $7139 = self.idx;
                var $7140 = self.str;
                var self = $7140;
                if (self.length === 0) {
                    var $7142 = Parser$Reply$fail$($7137, $7138, $7139, "Expected \'+\' or \'-\'.");
                    var $7141 = $7142;
                } else {
                    var $7143 = self.charCodeAt(0);
                    var $7144 = self.slice(1);
                    var self = (($7143 === 43) || ($7143 === 45));
                    if (self) {
                        var $7146 = Parser$Reply$value$(_pst$1, $7143);
                        var $7145 = $7146;
                    } else {
                        var $7147 = Parser$Reply$fail$($7137, $7138, $7139, "Expected \'+\' ou \'-\'.");
                        var $7145 = $7147;
                    };
                    var $7141 = $7145;
                };
                var $7136 = $7141;
                break;
        };
        return $7136;
    };
    const Kind$Parser$float$sign = x0 => Kind$Parser$float$sign$(x0);

    function List$any$(_cond$2, _list$3) {
        var List$any$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$any = _cond$2 => _list$3 => List$any$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7148 = self.head;
                        var $7149 = self.tail;
                        var self = _cond$2($7148);
                        if (self) {
                            var $7151 = Bool$true;
                            var $7150 = $7151;
                        } else {
                            var $7152 = List$any$(_cond$2, $7149);
                            var $7150 = $7152;
                        };
                        return $7150;
                    case 'List.nil':
                        var $7153 = Bool$false;
                        return $7153;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$any = x0 => x1 => List$any$(x0, x1);

    function Kind$Parser$float$str_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7155 = self.err;
                var $7156 = self.nam;
                var $7157 = self.ini;
                var $7158 = self.idx;
                var $7159 = self.str;
                var self = $7159;
                if (self.length === 0) {
                    var $7161 = Parser$Reply$fail$($7156, $7157, $7158, "Not a digit.");
                    var $7160 = $7161;
                } else {
                    var $7162 = self.charCodeAt(0);
                    var $7163 = self.slice(1);
                    var _digits$9 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$nil)))))))))));
                    var _pst$10 = Parser$State$new$($7155, $7156, $7157, Nat$succ$($7158), $7163);
                    var self = List$any$(a1 => ($7162 === a1), _digits$9);
                    if (self) {
                        var $7165 = Parser$Reply$value$(_pst$10, $7162);
                        var $7164 = $7165;
                    } else {
                        var $7166 = Parser$Reply$fail$($7156, $7157, $7158, "Not a digit.");
                        var $7164 = $7166;
                    };
                    var $7160 = $7164;
                };
                var $7154 = $7160;
                break;
        };
        return $7154;
    };
    const Kind$Parser$float$str_digit = x0 => Kind$Parser$float$str_digit$(x0);

    function String$from_list$(_xs$1) {
        var self = _xs$1;
        switch (self._) {
            case 'List.cons':
                var $7168 = self.head;
                var $7169 = self.tail;
                var $7170 = String$cons$($7168, String$from_list$($7169));
                var $7167 = $7170;
                break;
            case 'List.nil':
                var $7171 = String$nil;
                var $7167 = $7171;
                break;
        };
        return $7167;
    };
    const String$from_list = x0 => String$from_list$(x0);
    const Kind$Parser$float$64 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7173 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7175 = self.err;
                        var self = $7173;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7177 = self.value;
                                var $7178 = Parser$Reply$error$(Parser$Error$combine$($7177, $7175));
                                var $7176 = $7178;
                                break;
                            case 'Maybe.none':
                                var $7179 = Parser$Reply$error$($7175);
                                var $7176 = $7179;
                                break;
                        };
                        var $7174 = $7176;
                        break;
                    case 'Parser.Reply.value':
                        var $7180 = self.pst;
                        var $7181 = self.val;
                        var self = $7180;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7183 = self.err;
                                var $7184 = self.nam;
                                var $7185 = self.ini;
                                var $7186 = self.idx;
                                var $7187 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7173, $7183), $7184, $7185, $7186, $7187);
                                var _sign$16 = Maybe$default$($7181, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7189 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7191 = self.err;
                                                var self = $7189;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7193 = self.value;
                                                        var $7194 = Parser$Reply$error$(Parser$Error$combine$($7193, $7191));
                                                        var $7192 = $7194;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7195 = Parser$Reply$error$($7191);
                                                        var $7192 = $7195;
                                                        break;
                                                };
                                                var $7190 = $7192;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7196 = self.pst;
                                                var $7197 = self.val;
                                                var self = $7196;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7199 = self.err;
                                                        var $7200 = self.nam;
                                                        var $7201 = self.ini;
                                                        var $7202 = self.idx;
                                                        var $7203 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7189, $7199), $7200, $7201, $7202, $7203);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7205 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7207 = self.err;
                                                                        var self = $7205;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7209 = self.value;
                                                                                var $7210 = Parser$Reply$error$(Parser$Error$combine$($7209, $7207));
                                                                                var $7208 = $7210;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7211 = Parser$Reply$error$($7207);
                                                                                var $7208 = $7211;
                                                                                break;
                                                                        };
                                                                        var $7206 = $7208;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7212 = self.pst;
                                                                        var self = $7212;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7214 = self.err;
                                                                                var $7215 = self.nam;
                                                                                var $7216 = self.ini;
                                                                                var $7217 = self.idx;
                                                                                var $7218 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7205, $7214), $7215, $7216, $7217, $7218);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7220 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7222 = self.err;
                                                                                                var self = $7220;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7224 = self.value;
                                                                                                        var $7225 = Parser$Reply$error$(Parser$Error$combine$($7224, $7222));
                                                                                                        var $7223 = $7225;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7226 = Parser$Reply$error$($7222);
                                                                                                        var $7223 = $7226;
                                                                                                        break;
                                                                                                };
                                                                                                var $7221 = $7223;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7227 = self.pst;
                                                                                                var $7228 = self.val;
                                                                                                var self = $7227;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7230 = self.err;
                                                                                                        var $7231 = self.nam;
                                                                                                        var $7232 = self.ini;
                                                                                                        var $7233 = self.idx;
                                                                                                        var $7234 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7220, $7230), $7231, $7232, $7233, $7234);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7236 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#64", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7238 = self.err;
                                                                                                                        var self = $7236;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7240 = self.value;
                                                                                                                                var $7241 = Parser$Reply$error$(Parser$Error$combine$($7240, $7238));
                                                                                                                                var $7239 = $7241;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7242 = Parser$Reply$error$($7238);
                                                                                                                                var $7239 = $7242;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7237 = $7239;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7243 = self.pst;
                                                                                                                        var self = $7243;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7245 = self.err;
                                                                                                                                var $7246 = self.nam;
                                                                                                                                var $7247 = self.ini;
                                                                                                                                var $7248 = self.idx;
                                                                                                                                var $7249 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7236, $7245), $7246, $7247, $7248, $7249);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7197)) + ("." + String$from_list$($7228))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F64.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7250 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7244 = $7250;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7237 = $7244;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7235 = $7237;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7229 = $7235;
                                                                                                        break;
                                                                                                };
                                                                                                var $7221 = $7229;
                                                                                                break;
                                                                                        };
                                                                                        var $7219 = $7221;
                                                                                        break;
                                                                                };
                                                                                var $7213 = $7219;
                                                                                break;
                                                                        };
                                                                        var $7206 = $7213;
                                                                        break;
                                                                };
                                                                var $7204 = $7206;
                                                                break;
                                                        };
                                                        var $7198 = $7204;
                                                        break;
                                                };
                                                var $7190 = $7198;
                                                break;
                                        };
                                        var $7188 = $7190;
                                        break;
                                };
                                var $7182 = $7188;
                                break;
                        };
                        var $7174 = $7182;
                        break;
                };
                var $7172 = $7174;
                break;
        };
        return $7172;
    }));
    const Kind$Parser$float$32 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7252 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7254 = self.err;
                        var self = $7252;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7256 = self.value;
                                var $7257 = Parser$Reply$error$(Parser$Error$combine$($7256, $7254));
                                var $7255 = $7257;
                                break;
                            case 'Maybe.none':
                                var $7258 = Parser$Reply$error$($7254);
                                var $7255 = $7258;
                                break;
                        };
                        var $7253 = $7255;
                        break;
                    case 'Parser.Reply.value':
                        var $7259 = self.pst;
                        var $7260 = self.val;
                        var self = $7259;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7262 = self.err;
                                var $7263 = self.nam;
                                var $7264 = self.ini;
                                var $7265 = self.idx;
                                var $7266 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7252, $7262), $7263, $7264, $7265, $7266);
                                var _sign$16 = Maybe$default$($7260, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7268 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7270 = self.err;
                                                var self = $7268;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7272 = self.value;
                                                        var $7273 = Parser$Reply$error$(Parser$Error$combine$($7272, $7270));
                                                        var $7271 = $7273;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7274 = Parser$Reply$error$($7270);
                                                        var $7271 = $7274;
                                                        break;
                                                };
                                                var $7269 = $7271;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7275 = self.pst;
                                                var $7276 = self.val;
                                                var self = $7275;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7278 = self.err;
                                                        var $7279 = self.nam;
                                                        var $7280 = self.ini;
                                                        var $7281 = self.idx;
                                                        var $7282 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7268, $7278), $7279, $7280, $7281, $7282);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7284 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7286 = self.err;
                                                                        var self = $7284;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7288 = self.value;
                                                                                var $7289 = Parser$Reply$error$(Parser$Error$combine$($7288, $7286));
                                                                                var $7287 = $7289;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7290 = Parser$Reply$error$($7286);
                                                                                var $7287 = $7290;
                                                                                break;
                                                                        };
                                                                        var $7285 = $7287;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7291 = self.pst;
                                                                        var self = $7291;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7293 = self.err;
                                                                                var $7294 = self.nam;
                                                                                var $7295 = self.ini;
                                                                                var $7296 = self.idx;
                                                                                var $7297 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7284, $7293), $7294, $7295, $7296, $7297);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7299 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7301 = self.err;
                                                                                                var self = $7299;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7303 = self.value;
                                                                                                        var $7304 = Parser$Reply$error$(Parser$Error$combine$($7303, $7301));
                                                                                                        var $7302 = $7304;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7305 = Parser$Reply$error$($7301);
                                                                                                        var $7302 = $7305;
                                                                                                        break;
                                                                                                };
                                                                                                var $7300 = $7302;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7306 = self.pst;
                                                                                                var $7307 = self.val;
                                                                                                var self = $7306;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7309 = self.err;
                                                                                                        var $7310 = self.nam;
                                                                                                        var $7311 = self.ini;
                                                                                                        var $7312 = self.idx;
                                                                                                        var $7313 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7299, $7309), $7310, $7311, $7312, $7313);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7315 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#32", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7317 = self.err;
                                                                                                                        var self = $7315;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7319 = self.value;
                                                                                                                                var $7320 = Parser$Reply$error$(Parser$Error$combine$($7319, $7317));
                                                                                                                                var $7318 = $7320;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7321 = Parser$Reply$error$($7317);
                                                                                                                                var $7318 = $7321;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7316 = $7318;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7322 = self.pst;
                                                                                                                        var self = $7322;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7324 = self.err;
                                                                                                                                var $7325 = self.nam;
                                                                                                                                var $7326 = self.ini;
                                                                                                                                var $7327 = self.idx;
                                                                                                                                var $7328 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7315, $7324), $7325, $7326, $7327, $7328);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7276)) + ("." + String$from_list$($7307))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F32.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7329 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7323 = $7329;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7316 = $7323;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7314 = $7316;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7308 = $7314;
                                                                                                        break;
                                                                                                };
                                                                                                var $7300 = $7308;
                                                                                                break;
                                                                                        };
                                                                                        var $7298 = $7300;
                                                                                        break;
                                                                                };
                                                                                var $7292 = $7298;
                                                                                break;
                                                                        };
                                                                        var $7285 = $7292;
                                                                        break;
                                                                };
                                                                var $7283 = $7285;
                                                                break;
                                                        };
                                                        var $7277 = $7283;
                                                        break;
                                                };
                                                var $7269 = $7277;
                                                break;
                                        };
                                        var $7267 = $7269;
                                        break;
                                };
                                var $7261 = $7267;
                                break;
                        };
                        var $7253 = $7261;
                        break;
                };
                var $7251 = $7253;
                break;
        };
        return $7251;
    }));

    function Either$(_A$1, _B$2) {
        var $7330 = null;
        return $7330;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $7331 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $7331;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $7332 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $7332;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7333 = Either$left$(_n$1);
                    return $7333;
                } else {
                    var $7334 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7336 = Either$right$(Nat$succ$($7334));
                        var $7335 = $7336;
                    } else {
                        var $7337 = (self - 1n);
                        var $7338 = Nat$sub_rem$($7337, $7334);
                        var $7335 = $7338;
                    };
                    return $7335;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $7339 = self.value;
                        var $7340 = Nat$div_mod$go$($7339, _m$2, Nat$succ$(_d$3));
                        return $7340;
                    case 'Either.right':
                        var $7341 = Pair$new$(_d$3, _n$1);
                        return $7341;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $7342 = self.fst;
                        var $7343 = self.snd;
                        var self = $7342;
                        if (self === 0n) {
                            var $7345 = List$cons$($7343, _res$3);
                            var $7344 = $7345;
                        } else {
                            var $7346 = (self - 1n);
                            var $7347 = Nat$to_base$go$(_base$1, $7342, List$cons$($7343, _res$3));
                            var $7344 = $7347;
                        };
                        return $7344;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $7348 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $7348;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7349 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $7349;
                } else {
                    var $7350 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7352 = _r$3;
                        var $7351 = $7352;
                    } else {
                        var $7353 = (self - 1n);
                        var $7354 = Nat$mod$go$($7353, $7350, Nat$succ$(_r$3));
                        var $7351 = $7354;
                    };
                    return $7351;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7355 = self.head;
                        var $7356 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $7358 = Maybe$some$($7355);
                            var $7357 = $7358;
                        } else {
                            var $7359 = (self - 1n);
                            var $7360 = List$at$($7359, $7356);
                            var $7357 = $7360;
                        };
                        return $7357;
                    case 'List.nil':
                        var $7361 = Maybe$none;
                        return $7361;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $7364 = self.value;
                    var $7365 = $7364;
                    var $7363 = $7365;
                    break;
                case 'Maybe.none':
                    var $7366 = 35;
                    var $7363 = $7366;
                    break;
            };
            var $7362 = $7363;
        } else {
            var $7367 = 35;
            var $7362 = $7367;
        };
        return $7362;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $7368 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $7369 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $7369;
        }));
        return $7368;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $7370 = Nat$to_string_base$(10n, _n$1);
        return $7370;
    };
    const Nat$show = x0 => Nat$show$(x0);

    function Kind$Parser$int_pos$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7372 = self.err;
                var _reply$7 = Parser$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7374 = self.err;
                        var self = $7372;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7376 = self.value;
                                var $7377 = Parser$Reply$error$(Parser$Error$combine$($7376, $7374));
                                var $7375 = $7377;
                                break;
                            case 'Maybe.none':
                                var $7378 = Parser$Reply$error$($7374);
                                var $7375 = $7378;
                                break;
                        };
                        var $7373 = $7375;
                        break;
                    case 'Parser.Reply.value':
                        var $7379 = self.pst;
                        var self = $7379;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7381 = self.err;
                                var $7382 = self.nam;
                                var $7383 = self.ini;
                                var $7384 = self.idx;
                                var $7385 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7372, $7381), $7382, $7383, $7384, $7385);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7387 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7389 = self.err;
                                                var self = $7387;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7391 = self.value;
                                                        var $7392 = Parser$Reply$error$(Parser$Error$combine$($7391, $7389));
                                                        var $7390 = $7392;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7393 = Parser$Reply$error$($7389);
                                                        var $7390 = $7393;
                                                        break;
                                                };
                                                var $7388 = $7390;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7394 = self.pst;
                                                var $7395 = self.val;
                                                var self = $7394;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7397 = self.err;
                                                        var $7398 = self.nam;
                                                        var $7399 = self.ini;
                                                        var $7400 = self.idx;
                                                        var $7401 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7387, $7397), $7398, $7399, $7400, $7401);
                                                        var $7402 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$true, Nat$from_base$(10n, $7395)));
                                                        var $7396 = $7402;
                                                        break;
                                                };
                                                var $7388 = $7396;
                                                break;
                                        };
                                        var $7386 = $7388;
                                        break;
                                };
                                var $7380 = $7386;
                                break;
                        };
                        var $7373 = $7380;
                        break;
                };
                var $7371 = $7373;
                break;
        };
        return $7371;
    };
    const Kind$Parser$int_pos = x0 => Kind$Parser$int_pos$(x0);

    function Kind$Parser$int_neg$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7404 = self.err;
                var _reply$7 = Parser$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7406 = self.err;
                        var self = $7404;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7408 = self.value;
                                var $7409 = Parser$Reply$error$(Parser$Error$combine$($7408, $7406));
                                var $7407 = $7409;
                                break;
                            case 'Maybe.none':
                                var $7410 = Parser$Reply$error$($7406);
                                var $7407 = $7410;
                                break;
                        };
                        var $7405 = $7407;
                        break;
                    case 'Parser.Reply.value':
                        var $7411 = self.pst;
                        var self = $7411;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7413 = self.err;
                                var $7414 = self.nam;
                                var $7415 = self.ini;
                                var $7416 = self.idx;
                                var $7417 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7404, $7413), $7414, $7415, $7416, $7417);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7419 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7421 = self.err;
                                                var self = $7419;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7423 = self.value;
                                                        var $7424 = Parser$Reply$error$(Parser$Error$combine$($7423, $7421));
                                                        var $7422 = $7424;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7425 = Parser$Reply$error$($7421);
                                                        var $7422 = $7425;
                                                        break;
                                                };
                                                var $7420 = $7422;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7426 = self.pst;
                                                var $7427 = self.val;
                                                var self = $7426;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7429 = self.err;
                                                        var $7430 = self.nam;
                                                        var $7431 = self.ini;
                                                        var $7432 = self.idx;
                                                        var $7433 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7419, $7429), $7430, $7431, $7432, $7433);
                                                        var $7434 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$false, Nat$from_base$(10n, $7427)));
                                                        var $7428 = $7434;
                                                        break;
                                                };
                                                var $7420 = $7428;
                                                break;
                                        };
                                        var $7418 = $7420;
                                        break;
                                };
                                var $7412 = $7418;
                                break;
                        };
                        var $7405 = $7412;
                        break;
                };
                var $7403 = $7405;
                break;
        };
        return $7403;
    };
    const Kind$Parser$int_neg = x0 => Kind$Parser$int_neg$(x0);

    function Kind$Parser$machine_integer$signed$(_size$1) {
        var $7435 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7436 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7438 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7440 = self.err;
                                var self = $7438;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7442 = self.value;
                                        var $7443 = Parser$Reply$error$(Parser$Error$combine$($7442, $7440));
                                        var $7441 = $7443;
                                        break;
                                    case 'Maybe.none':
                                        var $7444 = Parser$Reply$error$($7440);
                                        var $7441 = $7444;
                                        break;
                                };
                                var $7439 = $7441;
                                break;
                            case 'Parser.Reply.value':
                                var $7445 = self.pst;
                                var self = $7445;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7447 = self.err;
                                        var $7448 = self.nam;
                                        var $7449 = self.ini;
                                        var $7450 = self.idx;
                                        var $7451 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7438, $7447), $7448, $7449, $7450, $7451);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7453 = self.err;
                                                var _reply$23 = Parser$choice$(List$cons$(Kind$Parser$int_pos, List$cons$(Kind$Parser$int_neg, List$nil)), _reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7455 = self.err;
                                                        var self = $7453;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7457 = self.value;
                                                                var $7458 = Parser$Reply$error$(Parser$Error$combine$($7457, $7455));
                                                                var $7456 = $7458;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7459 = Parser$Reply$error$($7455);
                                                                var $7456 = $7459;
                                                                break;
                                                        };
                                                        var $7454 = $7456;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7460 = self.pst;
                                                        var $7461 = self.val;
                                                        var self = $7460;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7463 = self.err;
                                                                var $7464 = self.nam;
                                                                var $7465 = self.ini;
                                                                var $7466 = self.idx;
                                                                var $7467 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7453, $7463), $7464, $7465, $7466, $7467);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7469 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + _size_str$2), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7471 = self.err;
                                                                                var self = $7469;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7473 = self.value;
                                                                                        var $7474 = Parser$Reply$error$(Parser$Error$combine$($7473, $7471));
                                                                                        var $7472 = $7474;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7475 = Parser$Reply$error$($7471);
                                                                                        var $7472 = $7475;
                                                                                        break;
                                                                                };
                                                                                var $7470 = $7472;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7476 = self.pst;
                                                                                var self = $7476;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7478 = self.err;
                                                                                        var $7479 = self.nam;
                                                                                        var $7480 = self.ini;
                                                                                        var $7481 = self.idx;
                                                                                        var $7482 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7469, $7478), $7479, $7480, $7481, $7482);
                                                                                        var $7483 = Parser$Reply$value$(_reply$pst$45, (() => {
                                                                                            var self = $7461;
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $7484 = self.fst;
                                                                                                    var $7485 = self.snd;
                                                                                                    var _term$48 = Kind$Term$ref$(("I" + (_size_str$2 + ".from_nat")));
                                                                                                    var _term$49 = Kind$Term$app$(_term$48, Kind$Term$nat$($7485));
                                                                                                    var self = $7484;
                                                                                                    if (self) {
                                                                                                        var $7487 = _term$49;
                                                                                                        var _term$50 = $7487;
                                                                                                    } else {
                                                                                                        var $7488 = Kind$Term$app$(Kind$Term$ref$(("I" + (_size_str$2 + ".neg"))), _term$49);
                                                                                                        var _term$50 = $7488;
                                                                                                    };
                                                                                                    var $7486 = _term$50;
                                                                                                    return $7486;
                                                                                            };
                                                                                        })());
                                                                                        var $7477 = $7483;
                                                                                        break;
                                                                                };
                                                                                var $7470 = $7477;
                                                                                break;
                                                                        };
                                                                        var $7468 = $7470;
                                                                        break;
                                                                };
                                                                var $7462 = $7468;
                                                                break;
                                                        };
                                                        var $7454 = $7462;
                                                        break;
                                                };
                                                var $7452 = $7454;
                                                break;
                                        };
                                        var $7446 = $7452;
                                        break;
                                };
                                var $7439 = $7446;
                                break;
                        };
                        var $7437 = $7439;
                        break;
                };
                return $7437;
            });
            return $7436;
        })());
        return $7435;
    };
    const Kind$Parser$machine_integer$signed = x0 => Kind$Parser$machine_integer$signed$(x0);

    function Parser$hex_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7490 = self.err;
                var $7491 = self.nam;
                var $7492 = self.ini;
                var $7493 = self.idx;
                var $7494 = self.str;
                var self = $7494;
                if (self.length === 0) {
                    var $7496 = Parser$Reply$fail$($7491, $7492, $7493, "Not a digit.");
                    var $7495 = $7496;
                } else {
                    var $7497 = self.charCodeAt(0);
                    var $7498 = self.slice(1);
                    var _pst$9 = Parser$State$new$($7490, $7491, $7492, Nat$succ$($7493), $7498);
                    var self = ($7497 === 48);
                    if (self) {
                        var $7500 = Parser$Reply$value$(_pst$9, 0n);
                        var $7499 = $7500;
                    } else {
                        var self = ($7497 === 49);
                        if (self) {
                            var $7502 = Parser$Reply$value$(_pst$9, 1n);
                            var $7501 = $7502;
                        } else {
                            var self = ($7497 === 50);
                            if (self) {
                                var $7504 = Parser$Reply$value$(_pst$9, 2n);
                                var $7503 = $7504;
                            } else {
                                var self = ($7497 === 51);
                                if (self) {
                                    var $7506 = Parser$Reply$value$(_pst$9, 3n);
                                    var $7505 = $7506;
                                } else {
                                    var self = ($7497 === 52);
                                    if (self) {
                                        var $7508 = Parser$Reply$value$(_pst$9, 4n);
                                        var $7507 = $7508;
                                    } else {
                                        var self = ($7497 === 53);
                                        if (self) {
                                            var $7510 = Parser$Reply$value$(_pst$9, 5n);
                                            var $7509 = $7510;
                                        } else {
                                            var self = ($7497 === 54);
                                            if (self) {
                                                var $7512 = Parser$Reply$value$(_pst$9, 6n);
                                                var $7511 = $7512;
                                            } else {
                                                var self = ($7497 === 55);
                                                if (self) {
                                                    var $7514 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $7513 = $7514;
                                                } else {
                                                    var self = ($7497 === 56);
                                                    if (self) {
                                                        var $7516 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $7515 = $7516;
                                                    } else {
                                                        var self = ($7497 === 57);
                                                        if (self) {
                                                            var $7518 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $7517 = $7518;
                                                        } else {
                                                            var self = ($7497 === 97);
                                                            if (self) {
                                                                var $7520 = Parser$Reply$value$(_pst$9, 10n);
                                                                var $7519 = $7520;
                                                            } else {
                                                                var self = ($7497 === 98);
                                                                if (self) {
                                                                    var $7522 = Parser$Reply$value$(_pst$9, 11n);
                                                                    var $7521 = $7522;
                                                                } else {
                                                                    var self = ($7497 === 99);
                                                                    if (self) {
                                                                        var $7524 = Parser$Reply$value$(_pst$9, 12n);
                                                                        var $7523 = $7524;
                                                                    } else {
                                                                        var self = ($7497 === 100);
                                                                        if (self) {
                                                                            var $7526 = Parser$Reply$value$(_pst$9, 13n);
                                                                            var $7525 = $7526;
                                                                        } else {
                                                                            var self = ($7497 === 101);
                                                                            if (self) {
                                                                                var $7528 = Parser$Reply$value$(_pst$9, 14n);
                                                                                var $7527 = $7528;
                                                                            } else {
                                                                                var self = ($7497 === 102);
                                                                                if (self) {
                                                                                    var $7530 = Parser$Reply$value$(_pst$9, 15n);
                                                                                    var $7529 = $7530;
                                                                                } else {
                                                                                    var self = ($7497 === 65);
                                                                                    if (self) {
                                                                                        var $7532 = Parser$Reply$value$(_pst$9, 10n);
                                                                                        var $7531 = $7532;
                                                                                    } else {
                                                                                        var self = ($7497 === 66);
                                                                                        if (self) {
                                                                                            var $7534 = Parser$Reply$value$(_pst$9, 11n);
                                                                                            var $7533 = $7534;
                                                                                        } else {
                                                                                            var self = ($7497 === 67);
                                                                                            if (self) {
                                                                                                var $7536 = Parser$Reply$value$(_pst$9, 12n);
                                                                                                var $7535 = $7536;
                                                                                            } else {
                                                                                                var self = ($7497 === 68);
                                                                                                if (self) {
                                                                                                    var $7538 = Parser$Reply$value$(_pst$9, 13n);
                                                                                                    var $7537 = $7538;
                                                                                                } else {
                                                                                                    var self = ($7497 === 69);
                                                                                                    if (self) {
                                                                                                        var $7540 = Parser$Reply$value$(_pst$9, 14n);
                                                                                                        var $7539 = $7540;
                                                                                                    } else {
                                                                                                        var self = ($7497 === 70);
                                                                                                        if (self) {
                                                                                                            var $7542 = Parser$Reply$value$(_pst$9, 15n);
                                                                                                            var $7541 = $7542;
                                                                                                        } else {
                                                                                                            var $7543 = Parser$Reply$fail$($7491, $7492, $7493, "Not a digit.");
                                                                                                            var $7541 = $7543;
                                                                                                        };
                                                                                                        var $7539 = $7541;
                                                                                                    };
                                                                                                    var $7537 = $7539;
                                                                                                };
                                                                                                var $7535 = $7537;
                                                                                            };
                                                                                            var $7533 = $7535;
                                                                                        };
                                                                                        var $7531 = $7533;
                                                                                    };
                                                                                    var $7529 = $7531;
                                                                                };
                                                                                var $7527 = $7529;
                                                                            };
                                                                            var $7525 = $7527;
                                                                        };
                                                                        var $7523 = $7525;
                                                                    };
                                                                    var $7521 = $7523;
                                                                };
                                                                var $7519 = $7521;
                                                            };
                                                            var $7517 = $7519;
                                                        };
                                                        var $7515 = $7517;
                                                    };
                                                    var $7513 = $7515;
                                                };
                                                var $7511 = $7513;
                                            };
                                            var $7509 = $7511;
                                        };
                                        var $7507 = $7509;
                                    };
                                    var $7505 = $7507;
                                };
                                var $7503 = $7505;
                            };
                            var $7501 = $7503;
                        };
                        var $7499 = $7501;
                    };
                    var $7495 = $7499;
                };
                var $7489 = $7495;
                break;
        };
        return $7489;
    };
    const Parser$hex_digit = x0 => Parser$hex_digit$(x0);

    function Parser$hex_nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7545 = self.err;
                var _reply$7 = Parser$text$("0x", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7547 = self.err;
                        var self = $7545;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7549 = self.value;
                                var $7550 = Parser$Reply$error$(Parser$Error$combine$($7549, $7547));
                                var $7548 = $7550;
                                break;
                            case 'Maybe.none':
                                var $7551 = Parser$Reply$error$($7547);
                                var $7548 = $7551;
                                break;
                        };
                        var $7546 = $7548;
                        break;
                    case 'Parser.Reply.value':
                        var $7552 = self.pst;
                        var self = $7552;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7554 = self.err;
                                var $7555 = self.nam;
                                var $7556 = self.ini;
                                var $7557 = self.idx;
                                var $7558 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7545, $7554), $7555, $7556, $7557, $7558);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7560 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$hex_digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7562 = self.err;
                                                var self = $7560;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7564 = self.value;
                                                        var $7565 = Parser$Reply$error$(Parser$Error$combine$($7564, $7562));
                                                        var $7563 = $7565;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7566 = Parser$Reply$error$($7562);
                                                        var $7563 = $7566;
                                                        break;
                                                };
                                                var $7561 = $7563;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7567 = self.pst;
                                                var $7568 = self.val;
                                                var self = $7567;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7570 = self.err;
                                                        var $7571 = self.nam;
                                                        var $7572 = self.ini;
                                                        var $7573 = self.idx;
                                                        var $7574 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7560, $7570), $7571, $7572, $7573, $7574);
                                                        var $7575 = Parser$Reply$value$(_reply$pst$29, Nat$from_base$(16n, $7568));
                                                        var $7569 = $7575;
                                                        break;
                                                };
                                                var $7561 = $7569;
                                                break;
                                        };
                                        var $7559 = $7561;
                                        break;
                                };
                                var $7553 = $7559;
                                break;
                        };
                        var $7546 = $7553;
                        break;
                };
                var $7544 = $7546;
                break;
        };
        return $7544;
    };
    const Parser$hex_nat = x0 => Parser$hex_nat$(x0);
    const Kind$Parser$nat = Kind$Parser$block("nat")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7577 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7579 = self.err;
                        var self = $7577;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7581 = self.value;
                                var $7582 = Parser$Reply$error$(Parser$Error$combine$($7581, $7579));
                                var $7580 = $7582;
                                break;
                            case 'Maybe.none':
                                var $7583 = Parser$Reply$error$($7579);
                                var $7580 = $7583;
                                break;
                        };
                        var $7578 = $7580;
                        break;
                    case 'Parser.Reply.value':
                        var $7584 = self.pst;
                        var self = $7584;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7586 = self.err;
                                var $7587 = self.nam;
                                var $7588 = self.ini;
                                var $7589 = self.idx;
                                var $7590 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7577, $7586), $7587, $7588, $7589, $7590);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7592 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7594 = self.err;
                                                var self = $7592;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7596 = self.value;
                                                        var $7597 = Parser$Reply$error$(Parser$Error$combine$($7596, $7594));
                                                        var $7595 = $7597;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7598 = Parser$Reply$error$($7594);
                                                        var $7595 = $7598;
                                                        break;
                                                };
                                                var $7593 = $7595;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7599 = self.pst;
                                                var $7600 = self.val;
                                                var self = $7599;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7602 = self.err;
                                                        var $7603 = self.nam;
                                                        var $7604 = self.ini;
                                                        var $7605 = self.idx;
                                                        var $7606 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7592, $7602), $7603, $7604, $7605, $7606);
                                                        var $7607 = Parser$Reply$value$(_reply$pst$29, Kind$Term$nat$($7600));
                                                        var $7601 = $7607;
                                                        break;
                                                };
                                                var $7593 = $7601;
                                                break;
                                        };
                                        var $7591 = $7593;
                                        break;
                                };
                                var $7585 = $7591;
                                break;
                        };
                        var $7578 = $7585;
                        break;
                };
                var $7576 = $7578;
                break;
        };
        return $7576;
    }));

    function Kind$Parser$machine_integer$unsigned$(_size$1) {
        var $7608 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7609 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7611 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7613 = self.err;
                                var self = $7611;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7615 = self.value;
                                        var $7616 = Parser$Reply$error$(Parser$Error$combine$($7615, $7613));
                                        var $7614 = $7616;
                                        break;
                                    case 'Maybe.none':
                                        var $7617 = Parser$Reply$error$($7613);
                                        var $7614 = $7617;
                                        break;
                                };
                                var $7612 = $7614;
                                break;
                            case 'Parser.Reply.value':
                                var $7618 = self.pst;
                                var self = $7618;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7620 = self.err;
                                        var $7621 = self.nam;
                                        var $7622 = self.ini;
                                        var $7623 = self.idx;
                                        var $7624 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7611, $7620), $7621, $7622, $7623, $7624);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7626 = self.err;
                                                var _reply$23 = Kind$Parser$nat(_reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7628 = self.err;
                                                        var self = $7626;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7630 = self.value;
                                                                var $7631 = Parser$Reply$error$(Parser$Error$combine$($7630, $7628));
                                                                var $7629 = $7631;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7632 = Parser$Reply$error$($7628);
                                                                var $7629 = $7632;
                                                                break;
                                                        };
                                                        var $7627 = $7629;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7633 = self.pst;
                                                        var $7634 = self.val;
                                                        var self = $7633;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7636 = self.err;
                                                                var $7637 = self.nam;
                                                                var $7638 = self.ini;
                                                                var $7639 = self.idx;
                                                                var $7640 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7626, $7636), $7637, $7638, $7639, $7640);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7642 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + Nat$show$(_size$1)), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7644 = self.err;
                                                                                var self = $7642;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7646 = self.value;
                                                                                        var $7647 = Parser$Reply$error$(Parser$Error$combine$($7646, $7644));
                                                                                        var $7645 = $7647;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7648 = Parser$Reply$error$($7644);
                                                                                        var $7645 = $7648;
                                                                                        break;
                                                                                };
                                                                                var $7643 = $7645;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7649 = self.pst;
                                                                                var self = $7649;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7651 = self.err;
                                                                                        var $7652 = self.nam;
                                                                                        var $7653 = self.ini;
                                                                                        var $7654 = self.idx;
                                                                                        var $7655 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7642, $7651), $7652, $7653, $7654, $7655);
                                                                                        var _term$46 = Kind$Term$ref$(("Nat.to_u" + Nat$show$(_size$1)));
                                                                                        var _term$47 = Kind$Term$app$(_term$46, $7634);
                                                                                        var $7656 = Parser$Reply$value$(_reply$pst$45, _term$47);
                                                                                        var $7650 = $7656;
                                                                                        break;
                                                                                };
                                                                                var $7643 = $7650;
                                                                                break;
                                                                        };
                                                                        var $7641 = $7643;
                                                                        break;
                                                                };
                                                                var $7635 = $7641;
                                                                break;
                                                        };
                                                        var $7627 = $7635;
                                                        break;
                                                };
                                                var $7625 = $7627;
                                                break;
                                        };
                                        var $7619 = $7625;
                                        break;
                                };
                                var $7612 = $7619;
                                break;
                        };
                        var $7610 = $7612;
                        break;
                };
                return $7610;
            });
            return $7609;
        })());
        return $7608;
    };
    const Kind$Parser$machine_integer$unsigned = x0 => Kind$Parser$machine_integer$unsigned$(x0);
    const Kind$Parser$u64 = Kind$Parser$block("u64")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7658 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7660 = self.err;
                        var self = $7658;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7662 = self.value;
                                var $7663 = Parser$Reply$error$(Parser$Error$combine$($7662, $7660));
                                var $7661 = $7663;
                                break;
                            case 'Maybe.none':
                                var $7664 = Parser$Reply$error$($7660);
                                var $7661 = $7664;
                                break;
                        };
                        var $7659 = $7661;
                        break;
                    case 'Parser.Reply.value':
                        var $7665 = self.pst;
                        var self = $7665;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7667 = self.err;
                                var $7668 = self.nam;
                                var $7669 = self.ini;
                                var $7670 = self.idx;
                                var $7671 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7658, $7667), $7668, $7669, $7670, $7671);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7673 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7675 = self.err;
                                                var self = $7673;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7677 = self.value;
                                                        var $7678 = Parser$Reply$error$(Parser$Error$combine$($7677, $7675));
                                                        var $7676 = $7678;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7679 = Parser$Reply$error$($7675);
                                                        var $7676 = $7679;
                                                        break;
                                                };
                                                var $7674 = $7676;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7680 = self.pst;
                                                var $7681 = self.val;
                                                var self = $7680;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7683 = self.err;
                                                        var $7684 = self.nam;
                                                        var $7685 = self.ini;
                                                        var $7686 = self.idx;
                                                        var $7687 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7673, $7683), $7684, $7685, $7686, $7687);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7689 = self.err;
                                                                var _reply$35 = Parser$text$("l", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7691 = self.err;
                                                                        var self = $7689;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7693 = self.value;
                                                                                var $7694 = Parser$Reply$error$(Parser$Error$combine$($7693, $7691));
                                                                                var $7692 = $7694;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7695 = Parser$Reply$error$($7691);
                                                                                var $7692 = $7695;
                                                                                break;
                                                                        };
                                                                        var $7690 = $7692;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7696 = self.pst;
                                                                        var self = $7696;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7698 = self.err;
                                                                                var $7699 = self.nam;
                                                                                var $7700 = self.ini;
                                                                                var $7701 = self.idx;
                                                                                var $7702 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7689, $7698), $7699, $7700, $7701, $7702);
                                                                                var _term$44 = Kind$Term$ref$("U64.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7681));
                                                                                var $7703 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7697 = $7703;
                                                                                break;
                                                                        };
                                                                        var $7690 = $7697;
                                                                        break;
                                                                };
                                                                var $7688 = $7690;
                                                                break;
                                                        };
                                                        var $7682 = $7688;
                                                        break;
                                                };
                                                var $7674 = $7682;
                                                break;
                                        };
                                        var $7672 = $7674;
                                        break;
                                };
                                var $7666 = $7672;
                                break;
                        };
                        var $7659 = $7666;
                        break;
                };
                var $7657 = $7659;
                break;
        };
        return $7657;
    }));
    const Kind$Parser$u32 = Kind$Parser$block("u32")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7705 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7707 = self.err;
                        var self = $7705;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7709 = self.value;
                                var $7710 = Parser$Reply$error$(Parser$Error$combine$($7709, $7707));
                                var $7708 = $7710;
                                break;
                            case 'Maybe.none':
                                var $7711 = Parser$Reply$error$($7707);
                                var $7708 = $7711;
                                break;
                        };
                        var $7706 = $7708;
                        break;
                    case 'Parser.Reply.value':
                        var $7712 = self.pst;
                        var self = $7712;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7714 = self.err;
                                var $7715 = self.nam;
                                var $7716 = self.ini;
                                var $7717 = self.idx;
                                var $7718 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7705, $7714), $7715, $7716, $7717, $7718);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7720 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7722 = self.err;
                                                var self = $7720;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7724 = self.value;
                                                        var $7725 = Parser$Reply$error$(Parser$Error$combine$($7724, $7722));
                                                        var $7723 = $7725;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7726 = Parser$Reply$error$($7722);
                                                        var $7723 = $7726;
                                                        break;
                                                };
                                                var $7721 = $7723;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7727 = self.pst;
                                                var $7728 = self.val;
                                                var self = $7727;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7730 = self.err;
                                                        var $7731 = self.nam;
                                                        var $7732 = self.ini;
                                                        var $7733 = self.idx;
                                                        var $7734 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7720, $7730), $7731, $7732, $7733, $7734);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7736 = self.err;
                                                                var _reply$35 = Parser$text$("u", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7738 = self.err;
                                                                        var self = $7736;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7740 = self.value;
                                                                                var $7741 = Parser$Reply$error$(Parser$Error$combine$($7740, $7738));
                                                                                var $7739 = $7741;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7742 = Parser$Reply$error$($7738);
                                                                                var $7739 = $7742;
                                                                                break;
                                                                        };
                                                                        var $7737 = $7739;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7743 = self.pst;
                                                                        var self = $7743;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7745 = self.err;
                                                                                var $7746 = self.nam;
                                                                                var $7747 = self.ini;
                                                                                var $7748 = self.idx;
                                                                                var $7749 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7736, $7745), $7746, $7747, $7748, $7749);
                                                                                var _term$44 = Kind$Term$ref$("U32.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7728));
                                                                                var $7750 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7744 = $7750;
                                                                                break;
                                                                        };
                                                                        var $7737 = $7744;
                                                                        break;
                                                                };
                                                                var $7735 = $7737;
                                                                break;
                                                        };
                                                        var $7729 = $7735;
                                                        break;
                                                };
                                                var $7721 = $7729;
                                                break;
                                        };
                                        var $7719 = $7721;
                                        break;
                                };
                                var $7713 = $7719;
                                break;
                        };
                        var $7706 = $7713;
                        break;
                };
                var $7704 = $7706;
                break;
        };
        return $7704;
    }));
    const Kind$Parser$u16 = Kind$Parser$block("u16")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7752 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7754 = self.err;
                        var self = $7752;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7756 = self.value;
                                var $7757 = Parser$Reply$error$(Parser$Error$combine$($7756, $7754));
                                var $7755 = $7757;
                                break;
                            case 'Maybe.none':
                                var $7758 = Parser$Reply$error$($7754);
                                var $7755 = $7758;
                                break;
                        };
                        var $7753 = $7755;
                        break;
                    case 'Parser.Reply.value':
                        var $7759 = self.pst;
                        var self = $7759;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7761 = self.err;
                                var $7762 = self.nam;
                                var $7763 = self.ini;
                                var $7764 = self.idx;
                                var $7765 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7752, $7761), $7762, $7763, $7764, $7765);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7767 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7769 = self.err;
                                                var self = $7767;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7771 = self.value;
                                                        var $7772 = Parser$Reply$error$(Parser$Error$combine$($7771, $7769));
                                                        var $7770 = $7772;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7773 = Parser$Reply$error$($7769);
                                                        var $7770 = $7773;
                                                        break;
                                                };
                                                var $7768 = $7770;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7774 = self.pst;
                                                var $7775 = self.val;
                                                var self = $7774;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7777 = self.err;
                                                        var $7778 = self.nam;
                                                        var $7779 = self.ini;
                                                        var $7780 = self.idx;
                                                        var $7781 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7767, $7777), $7778, $7779, $7780, $7781);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7783 = self.err;
                                                                var _reply$35 = Parser$text$("s", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7785 = self.err;
                                                                        var self = $7783;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7787 = self.value;
                                                                                var $7788 = Parser$Reply$error$(Parser$Error$combine$($7787, $7785));
                                                                                var $7786 = $7788;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7789 = Parser$Reply$error$($7785);
                                                                                var $7786 = $7789;
                                                                                break;
                                                                        };
                                                                        var $7784 = $7786;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7790 = self.pst;
                                                                        var self = $7790;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7792 = self.err;
                                                                                var $7793 = self.nam;
                                                                                var $7794 = self.ini;
                                                                                var $7795 = self.idx;
                                                                                var $7796 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7783, $7792), $7793, $7794, $7795, $7796);
                                                                                var _term$44 = Kind$Term$ref$("U16.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7775));
                                                                                var $7797 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7791 = $7797;
                                                                                break;
                                                                        };
                                                                        var $7784 = $7791;
                                                                        break;
                                                                };
                                                                var $7782 = $7784;
                                                                break;
                                                        };
                                                        var $7776 = $7782;
                                                        break;
                                                };
                                                var $7768 = $7776;
                                                break;
                                        };
                                        var $7766 = $7768;
                                        break;
                                };
                                var $7760 = $7766;
                                break;
                        };
                        var $7753 = $7760;
                        break;
                };
                var $7751 = $7753;
                break;
        };
        return $7751;
    }));
    const Kind$Parser$u8 = Kind$Parser$block("u8")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7799 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7801 = self.err;
                        var self = $7799;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7803 = self.value;
                                var $7804 = Parser$Reply$error$(Parser$Error$combine$($7803, $7801));
                                var $7802 = $7804;
                                break;
                            case 'Maybe.none':
                                var $7805 = Parser$Reply$error$($7801);
                                var $7802 = $7805;
                                break;
                        };
                        var $7800 = $7802;
                        break;
                    case 'Parser.Reply.value':
                        var $7806 = self.pst;
                        var self = $7806;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7808 = self.err;
                                var $7809 = self.nam;
                                var $7810 = self.ini;
                                var $7811 = self.idx;
                                var $7812 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7799, $7808), $7809, $7810, $7811, $7812);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7814 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7816 = self.err;
                                                var self = $7814;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7818 = self.value;
                                                        var $7819 = Parser$Reply$error$(Parser$Error$combine$($7818, $7816));
                                                        var $7817 = $7819;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7820 = Parser$Reply$error$($7816);
                                                        var $7817 = $7820;
                                                        break;
                                                };
                                                var $7815 = $7817;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7821 = self.pst;
                                                var $7822 = self.val;
                                                var self = $7821;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7824 = self.err;
                                                        var $7825 = self.nam;
                                                        var $7826 = self.ini;
                                                        var $7827 = self.idx;
                                                        var $7828 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7814, $7824), $7825, $7826, $7827, $7828);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7830 = self.err;
                                                                var _reply$35 = Parser$text$("b", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7832 = self.err;
                                                                        var self = $7830;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7834 = self.value;
                                                                                var $7835 = Parser$Reply$error$(Parser$Error$combine$($7834, $7832));
                                                                                var $7833 = $7835;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7836 = Parser$Reply$error$($7832);
                                                                                var $7833 = $7836;
                                                                                break;
                                                                        };
                                                                        var $7831 = $7833;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7837 = self.pst;
                                                                        var self = $7837;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7839 = self.err;
                                                                                var $7840 = self.nam;
                                                                                var $7841 = self.ini;
                                                                                var $7842 = self.idx;
                                                                                var $7843 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7830, $7839), $7840, $7841, $7842, $7843);
                                                                                var _term$44 = Kind$Term$ref$("U8.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7822));
                                                                                var $7844 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7838 = $7844;
                                                                                break;
                                                                        };
                                                                        var $7831 = $7838;
                                                                        break;
                                                                };
                                                                var $7829 = $7831;
                                                                break;
                                                        };
                                                        var $7823 = $7829;
                                                        break;
                                                };
                                                var $7815 = $7823;
                                                break;
                                        };
                                        var $7813 = $7815;
                                        break;
                                };
                                var $7807 = $7813;
                                break;
                        };
                        var $7800 = $7807;
                        break;
                };
                var $7798 = $7800;
                break;
        };
        return $7798;
    }));

    function Parser$Number$new$(_sign$1, _numb$2, _frac$3) {
        var $7845 = ({
            _: 'Parser.Number.new',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7845;
    };
    const Parser$Number$new = x0 => x1 => x2 => Parser$Number$new$(x0, x1, x2);

    function Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7847 = self.err;
                var _reply$7 = Parser$choice$(List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7850 = self.err;
                            var _reply$13 = Parser$text$("+", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7852 = self.err;
                                    var self = $7850;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7854 = self.value;
                                            var $7855 = Parser$Reply$error$(Parser$Error$combine$($7854, $7852));
                                            var $7853 = $7855;
                                            break;
                                        case 'Maybe.none':
                                            var $7856 = Parser$Reply$error$($7852);
                                            var $7853 = $7856;
                                            break;
                                    };
                                    var $7851 = $7853;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7857 = self.pst;
                                    var self = $7857;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7859 = self.err;
                                            var $7860 = self.nam;
                                            var $7861 = self.ini;
                                            var $7862 = self.idx;
                                            var $7863 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7850, $7859), $7860, $7861, $7862, $7863);
                                            var $7864 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$true));
                                            var $7858 = $7864;
                                            break;
                                    };
                                    var $7851 = $7858;
                                    break;
                            };
                            var $7849 = $7851;
                            break;
                    };
                    return $7849;
                }), List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7866 = self.err;
                            var _reply$13 = Parser$text$("-", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7868 = self.err;
                                    var self = $7866;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7870 = self.value;
                                            var $7871 = Parser$Reply$error$(Parser$Error$combine$($7870, $7868));
                                            var $7869 = $7871;
                                            break;
                                        case 'Maybe.none':
                                            var $7872 = Parser$Reply$error$($7868);
                                            var $7869 = $7872;
                                            break;
                                    };
                                    var $7867 = $7869;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7873 = self.pst;
                                    var self = $7873;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7875 = self.err;
                                            var $7876 = self.nam;
                                            var $7877 = self.ini;
                                            var $7878 = self.idx;
                                            var $7879 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7866, $7875), $7876, $7877, $7878, $7879);
                                            var $7880 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$false));
                                            var $7874 = $7880;
                                            break;
                                    };
                                    var $7867 = $7874;
                                    break;
                            };
                            var $7865 = $7867;
                            break;
                    };
                    return $7865;
                }), List$cons$((_pst$7 => {
                    var $7881 = Parser$Reply$value$(_pst$7, Maybe$none);
                    return $7881;
                }), List$nil))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7882 = self.err;
                        var self = $7847;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7884 = self.value;
                                var $7885 = Parser$Reply$error$(Parser$Error$combine$($7884, $7882));
                                var $7883 = $7885;
                                break;
                            case 'Maybe.none':
                                var $7886 = Parser$Reply$error$($7882);
                                var $7883 = $7886;
                                break;
                        };
                        var $7848 = $7883;
                        break;
                    case 'Parser.Reply.value':
                        var $7887 = self.pst;
                        var $7888 = self.val;
                        var self = $7887;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7890 = self.err;
                                var $7891 = self.nam;
                                var $7892 = self.ini;
                                var $7893 = self.idx;
                                var $7894 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7847, $7890), $7891, $7892, $7893, $7894);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7896 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7898 = self.err;
                                                var self = $7896;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7900 = self.value;
                                                        var $7901 = Parser$Reply$error$(Parser$Error$combine$($7900, $7898));
                                                        var $7899 = $7901;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7902 = Parser$Reply$error$($7898);
                                                        var $7899 = $7902;
                                                        break;
                                                };
                                                var $7897 = $7899;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7903 = self.pst;
                                                var $7904 = self.val;
                                                var self = $7903;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7906 = self.err;
                                                        var $7907 = self.nam;
                                                        var $7908 = self.ini;
                                                        var $7909 = self.idx;
                                                        var $7910 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7896, $7906), $7907, $7908, $7909, $7910);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7912 = self.err;
                                                                var self = _reply$pst$29;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7914 = self.err;
                                                                        var _reply$40 = Parser$maybe$(Parser$text("."), _reply$pst$29);
                                                                        var self = _reply$40;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7916 = self.err;
                                                                                var self = $7914;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7918 = self.value;
                                                                                        var $7919 = Parser$Reply$error$(Parser$Error$combine$($7918, $7916));
                                                                                        var $7917 = $7919;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7920 = Parser$Reply$error$($7916);
                                                                                        var $7917 = $7920;
                                                                                        break;
                                                                                };
                                                                                var $7915 = $7917;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7921 = self.pst;
                                                                                var self = $7921;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7923 = self.err;
                                                                                        var $7924 = self.nam;
                                                                                        var $7925 = self.ini;
                                                                                        var $7926 = self.idx;
                                                                                        var $7927 = self.str;
                                                                                        var _reply$pst$48 = Parser$State$new$(Parser$Error$maybe_combine$($7914, $7923), $7924, $7925, $7926, $7927);
                                                                                        var self = _reply$pst$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7929 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$nat, _reply$pst$48);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7931 = self.err;
                                                                                                        var self = $7929;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7933 = self.value;
                                                                                                                var $7934 = Parser$Reply$error$(Parser$Error$combine$($7933, $7931));
                                                                                                                var $7932 = $7934;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7935 = Parser$Reply$error$($7931);
                                                                                                                var $7932 = $7935;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7930 = $7932;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7936 = self.pst;
                                                                                                        var $7937 = self.val;
                                                                                                        var self = $7936;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7939 = self.err;
                                                                                                                var $7940 = self.nam;
                                                                                                                var $7941 = self.ini;
                                                                                                                var $7942 = self.idx;
                                                                                                                var $7943 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7929, $7939), $7940, $7941, $7942, $7943);
                                                                                                                var $7944 = Parser$Reply$value$(_reply$pst$62, $7937);
                                                                                                                var $7938 = $7944;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7930 = $7938;
                                                                                                        break;
                                                                                                };
                                                                                                var $7928 = $7930;
                                                                                                break;
                                                                                        };
                                                                                        var $7922 = $7928;
                                                                                        break;
                                                                                };
                                                                                var $7915 = $7922;
                                                                                break;
                                                                        };
                                                                        var _reply$35 = $7915;
                                                                        break;
                                                                };
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7945 = self.err;
                                                                        var self = $7912;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7947 = self.value;
                                                                                var $7948 = Parser$Reply$error$(Parser$Error$combine$($7947, $7945));
                                                                                var $7946 = $7948;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7949 = Parser$Reply$error$($7945);
                                                                                var $7946 = $7949;
                                                                                break;
                                                                        };
                                                                        var $7913 = $7946;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7950 = self.pst;
                                                                        var $7951 = self.val;
                                                                        var self = $7950;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7953 = self.err;
                                                                                var $7954 = self.nam;
                                                                                var $7955 = self.ini;
                                                                                var $7956 = self.idx;
                                                                                var $7957 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7912, $7953), $7954, $7955, $7956, $7957);
                                                                                var $7958 = Parser$Reply$value$(_reply$pst$43, Parser$Number$new$($7888, $7904, $7951));
                                                                                var $7952 = $7958;
                                                                                break;
                                                                        };
                                                                        var $7913 = $7952;
                                                                        break;
                                                                };
                                                                var $7911 = $7913;
                                                                break;
                                                        };
                                                        var $7905 = $7911;
                                                        break;
                                                };
                                                var $7897 = $7905;
                                                break;
                                        };
                                        var $7895 = $7897;
                                        break;
                                };
                                var $7889 = $7895;
                                break;
                        };
                        var $7848 = $7889;
                        break;
                };
                var $7846 = $7848;
                break;
        };
        return $7846;
    };
    const Parser$num = x0 => Parser$num$(x0);

    function Kind$Term$num$(_sign$1, _numb$2, _frac$3) {
        var $7959 = ({
            _: 'Kind.Term.num',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7959;
    };
    const Kind$Term$num = x0 => x1 => x2 => Kind$Term$num$(x0, x1, x2);

    function Kind$Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7961 = self.err;
                var _reply$7 = Parser$num$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7963 = self.err;
                        var self = $7961;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7965 = self.value;
                                var $7966 = Parser$Reply$error$(Parser$Error$combine$($7965, $7963));
                                var $7964 = $7966;
                                break;
                            case 'Maybe.none':
                                var $7967 = Parser$Reply$error$($7963);
                                var $7964 = $7967;
                                break;
                        };
                        var $7962 = $7964;
                        break;
                    case 'Parser.Reply.value':
                        var $7968 = self.pst;
                        var $7969 = self.val;
                        var self = $7968;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7971 = self.err;
                                var $7972 = self.nam;
                                var $7973 = self.ini;
                                var $7974 = self.idx;
                                var $7975 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7961, $7971), $7972, $7973, $7974, $7975);
                                var self = $7969;
                                switch (self._) {
                                    case 'Parser.Number.new':
                                        var $7977 = self.sign;
                                        var $7978 = self.numb;
                                        var $7979 = self.frac;
                                        var self = $7977;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var self = $7979;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $7982 = (_pst$19 => {
                                                            var $7983 = Parser$Reply$value$(_pst$19, Kind$Term$nat$($7978));
                                                            return $7983;
                                                        });
                                                        var $7981 = $7982;
                                                        break;
                                                    case 'Maybe.some':
                                                        var $7984 = (_pst$20 => {
                                                            var $7985 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7977, $7978, $7979));
                                                            return $7985;
                                                        });
                                                        var $7981 = $7984;
                                                        break;
                                                };
                                                var $7980 = $7981;
                                                break;
                                            case 'Maybe.some':
                                                var $7986 = (_pst$20 => {
                                                    var $7987 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7977, $7978, $7979));
                                                    return $7987;
                                                });
                                                var $7980 = $7986;
                                                break;
                                        };
                                        var $7976 = $7980;
                                        break;
                                };
                                var $7976 = $7976(_reply$pst$15);
                                var $7970 = $7976;
                                break;
                        };
                        var $7962 = $7970;
                        break;
                };
                var $7960 = $7962;
                break;
        };
        return $7960;
    };
    const Kind$Parser$num = x0 => Kind$Parser$num$(x0);
    const Kind$Parser$reference = Kind$Parser$block("reference")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7989 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7991 = self.err;
                        var self = $7989;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7993 = self.value;
                                var $7994 = Parser$Reply$error$(Parser$Error$combine$($7993, $7991));
                                var $7992 = $7994;
                                break;
                            case 'Maybe.none':
                                var $7995 = Parser$Reply$error$($7991);
                                var $7992 = $7995;
                                break;
                        };
                        var $7990 = $7992;
                        break;
                    case 'Parser.Reply.value':
                        var $7996 = self.pst;
                        var $7997 = self.val;
                        var self = $7996;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7999 = self.err;
                                var $8000 = self.nam;
                                var $8001 = self.ini;
                                var $8002 = self.idx;
                                var $8003 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7989, $7999), $8000, $8001, $8002, $8003);
                                var self = ($7997 === "Type");
                                if (self) {
                                    var $8005 = (_pst$16 => {
                                        var $8006 = Parser$Reply$value$(_pst$16, Kind$Term$typ);
                                        return $8006;
                                    });
                                    var $8004 = $8005;
                                } else {
                                    var self = ($7997 === "true");
                                    if (self) {
                                        var $8008 = (_pst$16 => {
                                            var $8009 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.true"));
                                            return $8009;
                                        });
                                        var $8007 = $8008;
                                    } else {
                                        var self = ($7997 === "false");
                                        if (self) {
                                            var $8011 = (_pst$16 => {
                                                var $8012 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.false"));
                                                return $8012;
                                            });
                                            var $8010 = $8011;
                                        } else {
                                            var self = ($7997 === "unit");
                                            if (self) {
                                                var $8014 = (_pst$16 => {
                                                    var $8015 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Unit.new"));
                                                    return $8015;
                                                });
                                                var $8013 = $8014;
                                            } else {
                                                var self = ($7997 === "none");
                                                if (self) {
                                                    var _term$16 = Kind$Term$ref$("Maybe.none");
                                                    var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                    var $8017 = (_pst$18 => {
                                                        var $8018 = Parser$Reply$value$(_pst$18, _term$17);
                                                        return $8018;
                                                    });
                                                    var $8016 = $8017;
                                                } else {
                                                    var self = ($7997 === "refl");
                                                    if (self) {
                                                        var _term$16 = Kind$Term$ref$("Equal.refl");
                                                        var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                        var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                                        var $8020 = (_pst$19 => {
                                                            var $8021 = Parser$Reply$value$(_pst$19, _term$18);
                                                            return $8021;
                                                        });
                                                        var $8019 = $8020;
                                                    } else {
                                                        var $8022 = (_pst$16 => {
                                                            var $8023 = Parser$Reply$value$(_pst$16, Kind$Term$ref$($7997));
                                                            return $8023;
                                                        });
                                                        var $8019 = $8022;
                                                    };
                                                    var $8016 = $8019;
                                                };
                                                var $8013 = $8016;
                                            };
                                            var $8010 = $8013;
                                        };
                                        var $8007 = $8010;
                                    };
                                    var $8004 = $8007;
                                };
                                var $8004 = $8004(_reply$pst$15);
                                var $7998 = $8004;
                                break;
                        };
                        var $7990 = $7998;
                        break;
                };
                var $7988 = $7990;
                break;
        };
        return $7988;
    }));

    function Kind$Parser$text_now$(_text$1) {
        var $8024 = Parser$text(_text$1);
        return $8024;
    };
    const Kind$Parser$text_now = x0 => Kind$Parser$text_now$(x0);

    function Kind$Parser$items_now$(_ini$2, _parser$3, _end$4) {
        var $8025 = Parser$wrap1(Kind$Parser$text_now$(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $8027 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8029 = self.err;
                            var self = $8027;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8031 = self.value;
                                    var $8032 = Parser$Reply$error$(Parser$Error$combine$($8031, $8029));
                                    var $8030 = $8032;
                                    break;
                                case 'Maybe.none':
                                    var $8033 = Parser$Reply$error$($8029);
                                    var $8030 = $8033;
                                    break;
                            };
                            var $8028 = $8030;
                            break;
                        case 'Parser.Reply.value':
                            var $8034 = self.pst;
                            var self = $8034;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8036 = self.err;
                                    var $8037 = self.nam;
                                    var $8038 = self.ini;
                                    var $8039 = self.idx;
                                    var $8040 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($8027, $8036), $8037, $8038, $8039, $8040);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8042 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8044 = self.err;
                                                    var self = $8042;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8046 = self.value;
                                                            var $8047 = Parser$Reply$error$(Parser$Error$combine$($8046, $8044));
                                                            var $8045 = $8047;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8048 = Parser$Reply$error$($8044);
                                                            var $8045 = $8048;
                                                            break;
                                                    };
                                                    var $8043 = $8045;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8049 = self.pst;
                                                    var $8050 = self.val;
                                                    var self = $8049;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8052 = self.err;
                                                            var $8053 = self.nam;
                                                            var $8054 = self.ini;
                                                            var $8055 = self.idx;
                                                            var $8056 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($8042, $8052), $8053, $8054, $8055, $8056);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $8058 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $8060 = self.err;
                                                                            var self = $8058;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $8062 = self.value;
                                                                                    var $8063 = Parser$Reply$error$(Parser$Error$combine$($8062, $8060));
                                                                                    var $8061 = $8063;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $8064 = Parser$Reply$error$($8060);
                                                                                    var $8061 = $8064;
                                                                                    break;
                                                                            };
                                                                            var $8059 = $8061;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $8065 = self.pst;
                                                                            var self = $8065;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $8067 = self.err;
                                                                                    var $8068 = self.nam;
                                                                                    var $8069 = self.ini;
                                                                                    var $8070 = self.idx;
                                                                                    var $8071 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($8058, $8067), $8068, $8069, $8070, $8071);
                                                                                    var $8072 = Parser$Reply$value$(_reply$pst$47, $8050);
                                                                                    var $8066 = $8072;
                                                                                    break;
                                                                            };
                                                                            var $8059 = $8066;
                                                                            break;
                                                                    };
                                                                    var $8057 = $8059;
                                                                    break;
                                                            };
                                                            var $8051 = $8057;
                                                            break;
                                                    };
                                                    var $8043 = $8051;
                                                    break;
                                            };
                                            var $8041 = $8043;
                                            break;
                                    };
                                    var $8035 = $8041;
                                    break;
                            };
                            var $8028 = $8035;
                            break;
                    };
                    var $8026 = $8028;
                    break;
            };
            return $8026;
        }))(Kind$Parser$text(_end$4));
        return $8025;
    };
    const Kind$Parser$items_now = x0 => x1 => x2 => Kind$Parser$items_now$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kind$Parser$application$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8074 = self.err;
                var _reply$8 = Kind$Parser$items_now$("(", Kind$Parser$term, ")")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8076 = self.err;
                        var self = $8074;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8078 = self.value;
                                var $8079 = Parser$Reply$error$(Parser$Error$combine$($8078, $8076));
                                var $8077 = $8079;
                                break;
                            case 'Maybe.none':
                                var $8080 = Parser$Reply$error$($8076);
                                var $8077 = $8080;
                                break;
                        };
                        var $8075 = $8077;
                        break;
                    case 'Parser.Reply.value':
                        var $8081 = self.pst;
                        var $8082 = self.val;
                        var self = $8081;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8084 = self.err;
                                var $8085 = self.nam;
                                var $8086 = self.ini;
                                var $8087 = self.idx;
                                var $8088 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8074, $8084), $8085, $8086, $8087, $8088);
                                var _expr$17 = (() => {
                                    var $8091 = _func$1;
                                    var $8092 = $8082;
                                    let _f$18 = $8091;
                                    let _x$17;
                                    while ($8092._ === 'List.cons') {
                                        _x$17 = $8092.head;
                                        var $8091 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8091;
                                        $8092 = $8092.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8089 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8083 = $8089;
                                break;
                        };
                        var $8075 = $8083;
                        break;
                };
                var $8073 = $8075;
                break;
        };
        return $8073;
    };
    const Kind$Parser$application = x0 => x1 => Kind$Parser$application$(x0, x1);

    function Kind$Parser$application$erased$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8094 = self.err;
                var _reply$8 = Kind$Parser$items_now$("<", Kind$Parser$term, ">")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8096 = self.err;
                        var self = $8094;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8098 = self.value;
                                var $8099 = Parser$Reply$error$(Parser$Error$combine$($8098, $8096));
                                var $8097 = $8099;
                                break;
                            case 'Maybe.none':
                                var $8100 = Parser$Reply$error$($8096);
                                var $8097 = $8100;
                                break;
                        };
                        var $8095 = $8097;
                        break;
                    case 'Parser.Reply.value':
                        var $8101 = self.pst;
                        var $8102 = self.val;
                        var self = $8101;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8104 = self.err;
                                var $8105 = self.nam;
                                var $8106 = self.ini;
                                var $8107 = self.idx;
                                var $8108 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8094, $8104), $8105, $8106, $8107, $8108);
                                var _expr$17 = (() => {
                                    var $8111 = _func$1;
                                    var $8112 = $8102;
                                    let _f$18 = $8111;
                                    let _x$17;
                                    while ($8112._ === 'List.cons') {
                                        _x$17 = $8112.head;
                                        var $8111 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8111;
                                        $8112 = $8112.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8109 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8103 = $8109;
                                break;
                        };
                        var $8095 = $8103;
                        break;
                };
                var $8093 = $8095;
                break;
        };
        return $8093;
    };
    const Kind$Parser$application$erased = x0 => x1 => Kind$Parser$application$erased$(x0, x1);

    function Kind$Parser$list_set$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8114 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8116 = self.err;
                        var self = $8114;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8118 = self.value;
                                var $8119 = Parser$Reply$error$(Parser$Error$combine$($8118, $8116));
                                var $8117 = $8119;
                                break;
                            case 'Maybe.none':
                                var $8120 = Parser$Reply$error$($8116);
                                var $8117 = $8120;
                                break;
                        };
                        var $8115 = $8117;
                        break;
                    case 'Parser.Reply.value':
                        var $8121 = self.pst;
                        var self = $8121;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8123 = self.err;
                                var $8124 = self.nam;
                                var $8125 = self.ini;
                                var $8126 = self.idx;
                                var $8127 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8114, $8123), $8124, $8125, $8126, $8127);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8129 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8131 = self.err;
                                                var self = $8129;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8133 = self.value;
                                                        var $8134 = Parser$Reply$error$(Parser$Error$combine$($8133, $8131));
                                                        var $8132 = $8134;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8135 = Parser$Reply$error$($8131);
                                                        var $8132 = $8135;
                                                        break;
                                                };
                                                var $8130 = $8132;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8136 = self.pst;
                                                var $8137 = self.val;
                                                var self = $8136;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8139 = self.err;
                                                        var $8140 = self.nam;
                                                        var $8141 = self.ini;
                                                        var $8142 = self.idx;
                                                        var $8143 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8129, $8139), $8140, $8141, $8142, $8143);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8145 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8147 = self.err;
                                                                        var self = $8145;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8149 = self.value;
                                                                                var $8150 = Parser$Reply$error$(Parser$Error$combine$($8149, $8147));
                                                                                var $8148 = $8150;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8151 = Parser$Reply$error$($8147);
                                                                                var $8148 = $8151;
                                                                                break;
                                                                        };
                                                                        var $8146 = $8148;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8152 = self.pst;
                                                                        var self = $8152;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8154 = self.err;
                                                                                var $8155 = self.nam;
                                                                                var $8156 = self.ini;
                                                                                var $8157 = self.idx;
                                                                                var $8158 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8145, $8154), $8155, $8156, $8157, $8158);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8160 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8162 = self.err;
                                                                                                var self = $8160;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8164 = self.value;
                                                                                                        var $8165 = Parser$Reply$error$(Parser$Error$combine$($8164, $8162));
                                                                                                        var $8163 = $8165;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8166 = Parser$Reply$error$($8162);
                                                                                                        var $8163 = $8166;
                                                                                                        break;
                                                                                                };
                                                                                                var $8161 = $8163;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8167 = self.pst;
                                                                                                var self = $8167;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8169 = self.err;
                                                                                                        var $8170 = self.nam;
                                                                                                        var $8171 = self.ini;
                                                                                                        var $8172 = self.idx;
                                                                                                        var $8173 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8160, $8169), $8170, $8171, $8172, $8173);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8175 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8177 = self.err;
                                                                                                                        var self = $8175;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8179 = self.value;
                                                                                                                                var $8180 = Parser$Reply$error$(Parser$Error$combine$($8179, $8177));
                                                                                                                                var $8178 = $8180;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8181 = Parser$Reply$error$($8177);
                                                                                                                                var $8178 = $8181;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8176 = $8178;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8182 = self.pst;
                                                                                                                        var $8183 = self.val;
                                                                                                                        var self = $8182;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8185 = self.err;
                                                                                                                                var $8186 = self.nam;
                                                                                                                                var $8187 = self.ini;
                                                                                                                                var $8188 = self.idx;
                                                                                                                                var $8189 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8175, $8185), $8186, $8187, $8188, $8189);
                                                                                                                                var _term$73 = Kind$Term$ref$("List.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8137);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8183);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _list$1);
                                                                                                                                var $8190 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8184 = $8190;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8176 = $8184;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8174 = $8176;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8168 = $8174;
                                                                                                        break;
                                                                                                };
                                                                                                var $8161 = $8168;
                                                                                                break;
                                                                                        };
                                                                                        var $8159 = $8161;
                                                                                        break;
                                                                                };
                                                                                var $8153 = $8159;
                                                                                break;
                                                                        };
                                                                        var $8146 = $8153;
                                                                        break;
                                                                };
                                                                var $8144 = $8146;
                                                                break;
                                                        };
                                                        var $8138 = $8144;
                                                        break;
                                                };
                                                var $8130 = $8138;
                                                break;
                                        };
                                        var $8128 = $8130;
                                        break;
                                };
                                var $8122 = $8128;
                                break;
                        };
                        var $8115 = $8122;
                        break;
                };
                var $8113 = $8115;
                break;
        };
        return $8113;
    };
    const Kind$Parser$list_set = x0 => x1 => Kind$Parser$list_set$(x0, x1);

    function Kind$Parser$list_get$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8192 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8194 = self.err;
                        var self = $8192;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8196 = self.value;
                                var $8197 = Parser$Reply$error$(Parser$Error$combine$($8196, $8194));
                                var $8195 = $8197;
                                break;
                            case 'Maybe.none':
                                var $8198 = Parser$Reply$error$($8194);
                                var $8195 = $8198;
                                break;
                        };
                        var $8193 = $8195;
                        break;
                    case 'Parser.Reply.value':
                        var $8199 = self.pst;
                        var self = $8199;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8201 = self.err;
                                var $8202 = self.nam;
                                var $8203 = self.ini;
                                var $8204 = self.idx;
                                var $8205 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8192, $8201), $8202, $8203, $8204, $8205);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8207 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8209 = self.err;
                                                var self = $8207;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8211 = self.value;
                                                        var $8212 = Parser$Reply$error$(Parser$Error$combine$($8211, $8209));
                                                        var $8210 = $8212;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8213 = Parser$Reply$error$($8209);
                                                        var $8210 = $8213;
                                                        break;
                                                };
                                                var $8208 = $8210;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8214 = self.pst;
                                                var $8215 = self.val;
                                                var self = $8214;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8217 = self.err;
                                                        var $8218 = self.nam;
                                                        var $8219 = self.ini;
                                                        var $8220 = self.idx;
                                                        var $8221 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8207, $8217), $8218, $8219, $8220, $8221);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8223 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8225 = self.err;
                                                                        var self = $8223;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8227 = self.value;
                                                                                var $8228 = Parser$Reply$error$(Parser$Error$combine$($8227, $8225));
                                                                                var $8226 = $8228;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8229 = Parser$Reply$error$($8225);
                                                                                var $8226 = $8229;
                                                                                break;
                                                                        };
                                                                        var $8224 = $8226;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8230 = self.pst;
                                                                        var self = $8230;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8232 = self.err;
                                                                                var $8233 = self.nam;
                                                                                var $8234 = self.ini;
                                                                                var $8235 = self.idx;
                                                                                var $8236 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8223, $8232), $8233, $8234, $8235, $8236);
                                                                                var _term$45 = Kind$Term$ref$("List.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8215);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _list$1);
                                                                                var $8237 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8231 = $8237;
                                                                                break;
                                                                        };
                                                                        var $8224 = $8231;
                                                                        break;
                                                                };
                                                                var $8222 = $8224;
                                                                break;
                                                        };
                                                        var $8216 = $8222;
                                                        break;
                                                };
                                                var $8208 = $8216;
                                                break;
                                        };
                                        var $8206 = $8208;
                                        break;
                                };
                                var $8200 = $8206;
                                break;
                        };
                        var $8193 = $8200;
                        break;
                };
                var $8191 = $8193;
                break;
        };
        return $8191;
    };
    const Kind$Parser$list_get = x0 => x1 => Kind$Parser$list_get$(x0, x1);

    function Kind$Parser$map_set$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8239 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8241 = self.err;
                        var self = $8239;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8243 = self.value;
                                var $8244 = Parser$Reply$error$(Parser$Error$combine$($8243, $8241));
                                var $8242 = $8244;
                                break;
                            case 'Maybe.none':
                                var $8245 = Parser$Reply$error$($8241);
                                var $8242 = $8245;
                                break;
                        };
                        var $8240 = $8242;
                        break;
                    case 'Parser.Reply.value':
                        var $8246 = self.pst;
                        var self = $8246;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8248 = self.err;
                                var $8249 = self.nam;
                                var $8250 = self.ini;
                                var $8251 = self.idx;
                                var $8252 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8239, $8248), $8249, $8250, $8251, $8252);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8254 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8256 = self.err;
                                                var self = $8254;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8258 = self.value;
                                                        var $8259 = Parser$Reply$error$(Parser$Error$combine$($8258, $8256));
                                                        var $8257 = $8259;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8260 = Parser$Reply$error$($8256);
                                                        var $8257 = $8260;
                                                        break;
                                                };
                                                var $8255 = $8257;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8261 = self.pst;
                                                var $8262 = self.val;
                                                var self = $8261;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8264 = self.err;
                                                        var $8265 = self.nam;
                                                        var $8266 = self.ini;
                                                        var $8267 = self.idx;
                                                        var $8268 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8254, $8264), $8265, $8266, $8267, $8268);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8270 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8272 = self.err;
                                                                        var self = $8270;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8274 = self.value;
                                                                                var $8275 = Parser$Reply$error$(Parser$Error$combine$($8274, $8272));
                                                                                var $8273 = $8275;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8276 = Parser$Reply$error$($8272);
                                                                                var $8273 = $8276;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8273;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8277 = self.pst;
                                                                        var self = $8277;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8279 = self.err;
                                                                                var $8280 = self.nam;
                                                                                var $8281 = self.ini;
                                                                                var $8282 = self.idx;
                                                                                var $8283 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8270, $8279), $8280, $8281, $8282, $8283);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8285 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8287 = self.err;
                                                                                                var self = $8285;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8289 = self.value;
                                                                                                        var $8290 = Parser$Reply$error$(Parser$Error$combine$($8289, $8287));
                                                                                                        var $8288 = $8290;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8291 = Parser$Reply$error$($8287);
                                                                                                        var $8288 = $8291;
                                                                                                        break;
                                                                                                };
                                                                                                var $8286 = $8288;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8292 = self.pst;
                                                                                                var self = $8292;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8294 = self.err;
                                                                                                        var $8295 = self.nam;
                                                                                                        var $8296 = self.ini;
                                                                                                        var $8297 = self.idx;
                                                                                                        var $8298 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8285, $8294), $8295, $8296, $8297, $8298);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8300 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8302 = self.err;
                                                                                                                        var self = $8300;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8304 = self.value;
                                                                                                                                var $8305 = Parser$Reply$error$(Parser$Error$combine$($8304, $8302));
                                                                                                                                var $8303 = $8305;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8306 = Parser$Reply$error$($8302);
                                                                                                                                var $8303 = $8306;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8301 = $8303;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8307 = self.pst;
                                                                                                                        var $8308 = self.val;
                                                                                                                        var self = $8307;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8310 = self.err;
                                                                                                                                var $8311 = self.nam;
                                                                                                                                var $8312 = self.ini;
                                                                                                                                var $8313 = self.idx;
                                                                                                                                var $8314 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8300, $8310), $8311, $8312, $8313, $8314);
                                                                                                                                var _term$73 = Kind$Term$ref$("Map.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8262);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8308);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _map$1);
                                                                                                                                var $8315 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8309 = $8315;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8301 = $8309;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8299 = $8301;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8293 = $8299;
                                                                                                        break;
                                                                                                };
                                                                                                var $8286 = $8293;
                                                                                                break;
                                                                                        };
                                                                                        var $8284 = $8286;
                                                                                        break;
                                                                                };
                                                                                var $8278 = $8284;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8278;
                                                                        break;
                                                                };
                                                                var $8269 = $8271;
                                                                break;
                                                        };
                                                        var $8263 = $8269;
                                                        break;
                                                };
                                                var $8255 = $8263;
                                                break;
                                        };
                                        var $8253 = $8255;
                                        break;
                                };
                                var $8247 = $8253;
                                break;
                        };
                        var $8240 = $8247;
                        break;
                };
                var $8238 = $8240;
                break;
        };
        return $8238;
    };
    const Kind$Parser$map_set = x0 => x1 => Kind$Parser$map_set$(x0, x1);

    function Kind$Parser$map_get$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8317 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8319 = self.err;
                        var self = $8317;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8321 = self.value;
                                var $8322 = Parser$Reply$error$(Parser$Error$combine$($8321, $8319));
                                var $8320 = $8322;
                                break;
                            case 'Maybe.none':
                                var $8323 = Parser$Reply$error$($8319);
                                var $8320 = $8323;
                                break;
                        };
                        var $8318 = $8320;
                        break;
                    case 'Parser.Reply.value':
                        var $8324 = self.pst;
                        var self = $8324;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8326 = self.err;
                                var $8327 = self.nam;
                                var $8328 = self.ini;
                                var $8329 = self.idx;
                                var $8330 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8317, $8326), $8327, $8328, $8329, $8330);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8332 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8334 = self.err;
                                                var self = $8332;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8336 = self.value;
                                                        var $8337 = Parser$Reply$error$(Parser$Error$combine$($8336, $8334));
                                                        var $8335 = $8337;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8338 = Parser$Reply$error$($8334);
                                                        var $8335 = $8338;
                                                        break;
                                                };
                                                var $8333 = $8335;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8339 = self.pst;
                                                var $8340 = self.val;
                                                var self = $8339;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8342 = self.err;
                                                        var $8343 = self.nam;
                                                        var $8344 = self.ini;
                                                        var $8345 = self.idx;
                                                        var $8346 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8332, $8342), $8343, $8344, $8345, $8346);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8348 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8350 = self.err;
                                                                        var self = $8348;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8352 = self.value;
                                                                                var $8353 = Parser$Reply$error$(Parser$Error$combine$($8352, $8350));
                                                                                var $8351 = $8353;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8354 = Parser$Reply$error$($8350);
                                                                                var $8351 = $8354;
                                                                                break;
                                                                        };
                                                                        var $8349 = $8351;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8355 = self.pst;
                                                                        var self = $8355;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8357 = self.err;
                                                                                var $8358 = self.nam;
                                                                                var $8359 = self.ini;
                                                                                var $8360 = self.idx;
                                                                                var $8361 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8348, $8357), $8358, $8359, $8360, $8361);
                                                                                var _term$45 = Kind$Term$ref$("Map.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8340);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _map$1);
                                                                                var $8362 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8356 = $8362;
                                                                                break;
                                                                        };
                                                                        var $8349 = $8356;
                                                                        break;
                                                                };
                                                                var $8347 = $8349;
                                                                break;
                                                        };
                                                        var $8341 = $8347;
                                                        break;
                                                };
                                                var $8333 = $8341;
                                                break;
                                        };
                                        var $8331 = $8333;
                                        break;
                                };
                                var $8325 = $8331;
                                break;
                        };
                        var $8318 = $8325;
                        break;
                };
                var $8316 = $8318;
                break;
        };
        return $8316;
    };
    const Kind$Parser$map_get = x0 => x1 => Kind$Parser$map_get$(x0, x1);

    function Kind$Term$set$(_expr$1, _fkey$2, _fval$3) {
        var $8363 = ({
            _: 'Kind.Term.set',
            'expr': _expr$1,
            'fkey': _fkey$2,
            'fval': _fval$3
        });
        return $8363;
    };
    const Kind$Term$set = x0 => x1 => x2 => Kind$Term$set$(x0, x1, x2);

    function Kind$Parser$field_set$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8365 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8367 = self.err;
                        var self = $8365;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8369 = self.value;
                                var $8370 = Parser$Reply$error$(Parser$Error$combine$($8369, $8367));
                                var $8368 = $8370;
                                break;
                            case 'Maybe.none':
                                var $8371 = Parser$Reply$error$($8367);
                                var $8368 = $8371;
                                break;
                        };
                        var $8366 = $8368;
                        break;
                    case 'Parser.Reply.value':
                        var $8372 = self.pst;
                        var self = $8372;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8374 = self.err;
                                var $8375 = self.nam;
                                var $8376 = self.ini;
                                var $8377 = self.idx;
                                var $8378 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8365, $8374), $8375, $8376, $8377, $8378);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8380 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8382 = self.err;
                                                var self = $8380;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8384 = self.value;
                                                        var $8385 = Parser$Reply$error$(Parser$Error$combine$($8384, $8382));
                                                        var $8383 = $8385;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8386 = Parser$Reply$error$($8382);
                                                        var $8383 = $8386;
                                                        break;
                                                };
                                                var $8381 = $8383;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8387 = self.pst;
                                                var $8388 = self.val;
                                                var self = $8387;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8390 = self.err;
                                                        var $8391 = self.nam;
                                                        var $8392 = self.ini;
                                                        var $8393 = self.idx;
                                                        var $8394 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8380, $8390), $8391, $8392, $8393, $8394);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8396 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("<-", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8398 = self.err;
                                                                        var self = $8396;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8400 = self.value;
                                                                                var $8401 = Parser$Reply$error$(Parser$Error$combine$($8400, $8398));
                                                                                var $8399 = $8401;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8402 = Parser$Reply$error$($8398);
                                                                                var $8399 = $8402;
                                                                                break;
                                                                        };
                                                                        var $8397 = $8399;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8403 = self.pst;
                                                                        var self = $8403;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8405 = self.err;
                                                                                var $8406 = self.nam;
                                                                                var $8407 = self.ini;
                                                                                var $8408 = self.idx;
                                                                                var $8409 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8396, $8405), $8406, $8407, $8408, $8409);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8411 = self.err;
                                                                                        var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8413 = self.err;
                                                                                                var self = $8411;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8415 = self.value;
                                                                                                        var $8416 = Parser$Reply$error$(Parser$Error$combine$($8415, $8413));
                                                                                                        var $8414 = $8416;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8417 = Parser$Reply$error$($8413);
                                                                                                        var $8414 = $8417;
                                                                                                        break;
                                                                                                };
                                                                                                var $8412 = $8414;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8418 = self.pst;
                                                                                                var $8419 = self.val;
                                                                                                var self = $8418;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8421 = self.err;
                                                                                                        var $8422 = self.nam;
                                                                                                        var $8423 = self.ini;
                                                                                                        var $8424 = self.idx;
                                                                                                        var $8425 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8411, $8421), $8422, $8423, $8424, $8425);
                                                                                                        var $8426 = Parser$Reply$value$(_reply$pst$58, Kind$Term$set$(_term$1, $8388, $8419));
                                                                                                        var $8420 = $8426;
                                                                                                        break;
                                                                                                };
                                                                                                var $8412 = $8420;
                                                                                                break;
                                                                                        };
                                                                                        var $8410 = $8412;
                                                                                        break;
                                                                                };
                                                                                var $8404 = $8410;
                                                                                break;
                                                                        };
                                                                        var $8397 = $8404;
                                                                        break;
                                                                };
                                                                var $8395 = $8397;
                                                                break;
                                                        };
                                                        var $8389 = $8395;
                                                        break;
                                                };
                                                var $8381 = $8389;
                                                break;
                                        };
                                        var $8379 = $8381;
                                        break;
                                };
                                var $8373 = $8379;
                                break;
                        };
                        var $8366 = $8373;
                        break;
                };
                var $8364 = $8366;
                break;
        };
        return $8364;
    };
    const Kind$Parser$field_set = x0 => x1 => Kind$Parser$field_set$(x0, x1);

    function Kind$Term$get$(_expr$1, _fkey$2) {
        var $8427 = ({
            _: 'Kind.Term.get',
            'expr': _expr$1,
            'fkey': _fkey$2
        });
        return $8427;
    };
    const Kind$Term$get = x0 => x1 => Kind$Term$get$(x0, x1);

    function Kind$Parser$field_get$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8429 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8431 = self.err;
                        var self = $8429;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8433 = self.value;
                                var $8434 = Parser$Reply$error$(Parser$Error$combine$($8433, $8431));
                                var $8432 = $8434;
                                break;
                            case 'Maybe.none':
                                var $8435 = Parser$Reply$error$($8431);
                                var $8432 = $8435;
                                break;
                        };
                        var $8430 = $8432;
                        break;
                    case 'Parser.Reply.value':
                        var $8436 = self.pst;
                        var self = $8436;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8438 = self.err;
                                var $8439 = self.nam;
                                var $8440 = self.ini;
                                var $8441 = self.idx;
                                var $8442 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8429, $8438), $8439, $8440, $8441, $8442);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8444 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8446 = self.err;
                                                var self = $8444;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8448 = self.value;
                                                        var $8449 = Parser$Reply$error$(Parser$Error$combine$($8448, $8446));
                                                        var $8447 = $8449;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8450 = Parser$Reply$error$($8446);
                                                        var $8447 = $8450;
                                                        break;
                                                };
                                                var $8445 = $8447;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8451 = self.pst;
                                                var $8452 = self.val;
                                                var self = $8451;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8454 = self.err;
                                                        var $8455 = self.nam;
                                                        var $8456 = self.ini;
                                                        var $8457 = self.idx;
                                                        var $8458 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8444, $8454), $8455, $8456, $8457, $8458);
                                                        var $8459 = Parser$Reply$value$(_reply$pst$30, Kind$Term$get$(_term$1, $8452));
                                                        var $8453 = $8459;
                                                        break;
                                                };
                                                var $8445 = $8453;
                                                break;
                                        };
                                        var $8443 = $8445;
                                        break;
                                };
                                var $8437 = $8443;
                                break;
                        };
                        var $8430 = $8437;
                        break;
                };
                var $8428 = $8430;
                break;
        };
        return $8428;
    };
    const Kind$Parser$field_get = x0 => x1 => Kind$Parser$field_get$(x0, x1);

    function Kind$Parser$arrow$(_xtyp$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8461 = self.err;
                var _reply$8 = Kind$Parser$text$("->", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8463 = self.err;
                        var self = $8461;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8465 = self.value;
                                var $8466 = Parser$Reply$error$(Parser$Error$combine$($8465, $8463));
                                var $8464 = $8466;
                                break;
                            case 'Maybe.none':
                                var $8467 = Parser$Reply$error$($8463);
                                var $8464 = $8467;
                                break;
                        };
                        var $8462 = $8464;
                        break;
                    case 'Parser.Reply.value':
                        var $8468 = self.pst;
                        var self = $8468;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8470 = self.err;
                                var $8471 = self.nam;
                                var $8472 = self.ini;
                                var $8473 = self.idx;
                                var $8474 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8461, $8470), $8471, $8472, $8473, $8474);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8476 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8478 = self.err;
                                                var self = $8476;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8480 = self.value;
                                                        var $8481 = Parser$Reply$error$(Parser$Error$combine$($8480, $8478));
                                                        var $8479 = $8481;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8482 = Parser$Reply$error$($8478);
                                                        var $8479 = $8482;
                                                        break;
                                                };
                                                var $8477 = $8479;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8483 = self.pst;
                                                var $8484 = self.val;
                                                var self = $8483;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8486 = self.err;
                                                        var $8487 = self.nam;
                                                        var $8488 = self.ini;
                                                        var $8489 = self.idx;
                                                        var $8490 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8476, $8486), $8487, $8488, $8489, $8490);
                                                        var $8491 = Parser$Reply$value$(_reply$pst$30, Kind$Term$all$(Bool$false, "", "", _xtyp$1, (_s$31 => _x$32 => {
                                                            var $8492 = $8484;
                                                            return $8492;
                                                        })));
                                                        var $8485 = $8491;
                                                        break;
                                                };
                                                var $8477 = $8485;
                                                break;
                                        };
                                        var $8475 = $8477;
                                        break;
                                };
                                var $8469 = $8475;
                                break;
                        };
                        var $8462 = $8469;
                        break;
                };
                var $8460 = $8462;
                break;
        };
        return $8460;
    };
    const Kind$Parser$arrow = x0 => x1 => Kind$Parser$arrow$(x0, x1);

    function Kind$Parser$concat$(_lst0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8494 = self.err;
                var _reply$8 = Kind$Parser$text$("++", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8496 = self.err;
                        var self = $8494;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8498 = self.value;
                                var $8499 = Parser$Reply$error$(Parser$Error$combine$($8498, $8496));
                                var $8497 = $8499;
                                break;
                            case 'Maybe.none':
                                var $8500 = Parser$Reply$error$($8496);
                                var $8497 = $8500;
                                break;
                        };
                        var $8495 = $8497;
                        break;
                    case 'Parser.Reply.value':
                        var $8501 = self.pst;
                        var self = $8501;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8503 = self.err;
                                var $8504 = self.nam;
                                var $8505 = self.ini;
                                var $8506 = self.idx;
                                var $8507 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8494, $8503), $8504, $8505, $8506, $8507);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8509 = self.err;
                                        var _reply$22 = Parser$text$(" ", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8511 = self.err;
                                                var self = $8509;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8513 = self.value;
                                                        var $8514 = Parser$Reply$error$(Parser$Error$combine$($8513, $8511));
                                                        var $8512 = $8514;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8515 = Parser$Reply$error$($8511);
                                                        var $8512 = $8515;
                                                        break;
                                                };
                                                var $8510 = $8512;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8516 = self.pst;
                                                var self = $8516;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8518 = self.err;
                                                        var $8519 = self.nam;
                                                        var $8520 = self.ini;
                                                        var $8521 = self.idx;
                                                        var $8522 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8509, $8518), $8519, $8520, $8521, $8522);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8524 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8526 = self.err;
                                                                        var self = $8524;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8528 = self.value;
                                                                                var $8529 = Parser$Reply$error$(Parser$Error$combine$($8528, $8526));
                                                                                var $8527 = $8529;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8530 = Parser$Reply$error$($8526);
                                                                                var $8527 = $8530;
                                                                                break;
                                                                        };
                                                                        var $8525 = $8527;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8531 = self.pst;
                                                                        var $8532 = self.val;
                                                                        var self = $8531;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8534 = self.err;
                                                                                var $8535 = self.nam;
                                                                                var $8536 = self.ini;
                                                                                var $8537 = self.idx;
                                                                                var $8538 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8524, $8534), $8535, $8536, $8537, $8538);
                                                                                var _term$45 = Kind$Term$ref$("List.concat");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, _lst0$1);
                                                                                var _term$48 = Kind$Term$app$(_term$47, $8532);
                                                                                var $8539 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8533 = $8539;
                                                                                break;
                                                                        };
                                                                        var $8525 = $8533;
                                                                        break;
                                                                };
                                                                var $8523 = $8525;
                                                                break;
                                                        };
                                                        var $8517 = $8523;
                                                        break;
                                                };
                                                var $8510 = $8517;
                                                break;
                                        };
                                        var $8508 = $8510;
                                        break;
                                };
                                var $8502 = $8508;
                                break;
                        };
                        var $8495 = $8502;
                        break;
                };
                var $8493 = $8495;
                break;
        };
        return $8493;
    };
    const Kind$Parser$concat = x0 => x1 => Kind$Parser$concat$(x0, x1);

    function Kind$Parser$equality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8541 = self.err;
                var _reply$8 = Kind$Parser$text$("==", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8543 = self.err;
                        var self = $8541;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8545 = self.value;
                                var $8546 = Parser$Reply$error$(Parser$Error$combine$($8545, $8543));
                                var $8544 = $8546;
                                break;
                            case 'Maybe.none':
                                var $8547 = Parser$Reply$error$($8543);
                                var $8544 = $8547;
                                break;
                        };
                        var $8542 = $8544;
                        break;
                    case 'Parser.Reply.value':
                        var $8548 = self.pst;
                        var self = $8548;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8550 = self.err;
                                var $8551 = self.nam;
                                var $8552 = self.ini;
                                var $8553 = self.idx;
                                var $8554 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8541, $8550), $8551, $8552, $8553, $8554);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8556 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8558 = self.err;
                                                var self = $8556;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8560 = self.value;
                                                        var $8561 = Parser$Reply$error$(Parser$Error$combine$($8560, $8558));
                                                        var $8559 = $8561;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8562 = Parser$Reply$error$($8558);
                                                        var $8559 = $8562;
                                                        break;
                                                };
                                                var $8557 = $8559;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8563 = self.pst;
                                                var $8564 = self.val;
                                                var self = $8563;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8566 = self.err;
                                                        var $8567 = self.nam;
                                                        var $8568 = self.ini;
                                                        var $8569 = self.idx;
                                                        var $8570 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8556, $8566), $8567, $8568, $8569, $8570);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8564);
                                                        var $8571 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8565 = $8571;
                                                        break;
                                                };
                                                var $8557 = $8565;
                                                break;
                                        };
                                        var $8555 = $8557;
                                        break;
                                };
                                var $8549 = $8555;
                                break;
                        };
                        var $8542 = $8549;
                        break;
                };
                var $8540 = $8542;
                break;
        };
        return $8540;
    };
    const Kind$Parser$equality = x0 => x1 => Kind$Parser$equality$(x0, x1);

    function Kind$Term$ope$(_name$1, _arg0$2, _arg1$3) {
        var $8572 = ({
            _: 'Kind.Term.ope',
            'name': _name$1,
            'arg0': _arg0$2,
            'arg1': _arg1$3
        });
        return $8572;
    };
    const Kind$Term$ope = x0 => x1 => x2 => Kind$Term$ope$(x0, x1, x2);

    function Kind$Parser$op$(_sym$1, _ref$2, _val0$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $8574 = self.err;
                var _reply$10 = Kind$Parser$text$(_sym$1, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8576 = self.err;
                        var self = $8574;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8578 = self.value;
                                var $8579 = Parser$Reply$error$(Parser$Error$combine$($8578, $8576));
                                var $8577 = $8579;
                                break;
                            case 'Maybe.none':
                                var $8580 = Parser$Reply$error$($8576);
                                var $8577 = $8580;
                                break;
                        };
                        var $8575 = $8577;
                        break;
                    case 'Parser.Reply.value':
                        var $8581 = self.pst;
                        var self = $8581;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8583 = self.err;
                                var $8584 = self.nam;
                                var $8585 = self.ini;
                                var $8586 = self.idx;
                                var $8587 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($8574, $8583), $8584, $8585, $8586, $8587);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8589 = self.err;
                                        var _reply$24 = Kind$Parser$term(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8591 = self.err;
                                                var self = $8589;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8593 = self.value;
                                                        var $8594 = Parser$Reply$error$(Parser$Error$combine$($8593, $8591));
                                                        var $8592 = $8594;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8595 = Parser$Reply$error$($8591);
                                                        var $8592 = $8595;
                                                        break;
                                                };
                                                var $8590 = $8592;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8596 = self.pst;
                                                var $8597 = self.val;
                                                var self = $8596;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8599 = self.err;
                                                        var $8600 = self.nam;
                                                        var $8601 = self.ini;
                                                        var $8602 = self.idx;
                                                        var $8603 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($8589, $8599), $8600, $8601, $8602, $8603);
                                                        var $8604 = Parser$Reply$value$(_reply$pst$32, Kind$Term$ope$(_sym$1, _val0$3, $8597));
                                                        var $8598 = $8604;
                                                        break;
                                                };
                                                var $8590 = $8598;
                                                break;
                                        };
                                        var $8588 = $8590;
                                        break;
                                };
                                var $8582 = $8588;
                                break;
                        };
                        var $8575 = $8582;
                        break;
                };
                var $8573 = $8575;
                break;
        };
        return $8573;
    };
    const Kind$Parser$op = x0 => x1 => x2 => x3 => Kind$Parser$op$(x0, x1, x2, x3);
    const Kind$Parser$add = Kind$Parser$op("+")("Nat.add");
    const Kind$Parser$sub = Kind$Parser$op("-")("Nat.sub");
    const Kind$Parser$mul = Kind$Parser$op("*")("Nat.mul");
    const Kind$Parser$div = Kind$Parser$op("/")("Nat.div");
    const Kind$Parser$mod = Kind$Parser$op("%")("Nat.mod");
    const Kind$Parser$ltn = Kind$Parser$op("<?")("Nat.ltn");
    const Kind$Parser$lte = Kind$Parser$op("<=?")("Nat.lte");
    const Kind$Parser$eql = Kind$Parser$op("=?")("Nat.eql");
    const Kind$Parser$gte = Kind$Parser$op(">=?")("Nat.gte");
    const Kind$Parser$gtn = Kind$Parser$op(">?")("Nat.gtn");
    const Kind$Parser$and = Kind$Parser$op("&&")("Bool.and");
    const Kind$Parser$or = Kind$Parser$op("||")("Bool.or");

    function Kind$Parser$default$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8606 = self.err;
                var _reply$8 = Kind$Parser$text$("<>", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8608 = self.err;
                        var self = $8606;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8610 = self.value;
                                var $8611 = Parser$Reply$error$(Parser$Error$combine$($8610, $8608));
                                var $8609 = $8611;
                                break;
                            case 'Maybe.none':
                                var $8612 = Parser$Reply$error$($8608);
                                var $8609 = $8612;
                                break;
                        };
                        var $8607 = $8609;
                        break;
                    case 'Parser.Reply.value':
                        var $8613 = self.pst;
                        var self = $8613;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8615 = self.err;
                                var $8616 = self.nam;
                                var $8617 = self.ini;
                                var $8618 = self.idx;
                                var $8619 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8606, $8615), $8616, $8617, $8618, $8619);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8621 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8623 = self.err;
                                                var self = $8621;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8625 = self.value;
                                                        var $8626 = Parser$Reply$error$(Parser$Error$combine$($8625, $8623));
                                                        var $8624 = $8626;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8627 = Parser$Reply$error$($8623);
                                                        var $8624 = $8627;
                                                        break;
                                                };
                                                var $8622 = $8624;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8628 = self.pst;
                                                var $8629 = self.val;
                                                var self = $8628;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8631 = self.err;
                                                        var $8632 = self.nam;
                                                        var $8633 = self.ini;
                                                        var $8634 = self.idx;
                                                        var $8635 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8621, $8631), $8632, $8633, $8634, $8635);
                                                        var _term$31 = Kind$Term$ref$("Maybe.default");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8629);
                                                        var $8636 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8630 = $8636;
                                                        break;
                                                };
                                                var $8622 = $8630;
                                                break;
                                        };
                                        var $8620 = $8622;
                                        break;
                                };
                                var $8614 = $8620;
                                break;
                        };
                        var $8607 = $8614;
                        break;
                };
                var $8605 = $8607;
                break;
        };
        return $8605;
    };
    const Kind$Parser$default = x0 => x1 => Kind$Parser$default$(x0, x1);

    function Kind$Parser$cons$(_head$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8638 = self.err;
                var _reply$8 = Kind$Parser$text$("&", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8640 = self.err;
                        var self = $8638;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8642 = self.value;
                                var $8643 = Parser$Reply$error$(Parser$Error$combine$($8642, $8640));
                                var $8641 = $8643;
                                break;
                            case 'Maybe.none':
                                var $8644 = Parser$Reply$error$($8640);
                                var $8641 = $8644;
                                break;
                        };
                        var $8639 = $8641;
                        break;
                    case 'Parser.Reply.value':
                        var $8645 = self.pst;
                        var self = $8645;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8647 = self.err;
                                var $8648 = self.nam;
                                var $8649 = self.ini;
                                var $8650 = self.idx;
                                var $8651 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8638, $8647), $8648, $8649, $8650, $8651);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8653 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8655 = self.err;
                                                var self = $8653;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8657 = self.value;
                                                        var $8658 = Parser$Reply$error$(Parser$Error$combine$($8657, $8655));
                                                        var $8656 = $8658;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8659 = Parser$Reply$error$($8655);
                                                        var $8656 = $8659;
                                                        break;
                                                };
                                                var $8654 = $8656;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8660 = self.pst;
                                                var $8661 = self.val;
                                                var self = $8660;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8663 = self.err;
                                                        var $8664 = self.nam;
                                                        var $8665 = self.ini;
                                                        var $8666 = self.idx;
                                                        var $8667 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8653, $8663), $8664, $8665, $8666, $8667);
                                                        var _term$31 = Kind$Term$ref$("List.cons");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _head$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8661);
                                                        var $8668 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8662 = $8668;
                                                        break;
                                                };
                                                var $8654 = $8662;
                                                break;
                                        };
                                        var $8652 = $8654;
                                        break;
                                };
                                var $8646 = $8652;
                                break;
                        };
                        var $8639 = $8646;
                        break;
                };
                var $8637 = $8639;
                break;
        };
        return $8637;
    };
    const Kind$Parser$cons = x0 => x1 => Kind$Parser$cons$(x0, x1);

    function Kind$Parser$string_concat$(_str0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8670 = self.err;
                var _reply$8 = Kind$Parser$text$("|", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8672 = self.err;
                        var self = $8670;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8674 = self.value;
                                var $8675 = Parser$Reply$error$(Parser$Error$combine$($8674, $8672));
                                var $8673 = $8675;
                                break;
                            case 'Maybe.none':
                                var $8676 = Parser$Reply$error$($8672);
                                var $8673 = $8676;
                                break;
                        };
                        var $8671 = $8673;
                        break;
                    case 'Parser.Reply.value':
                        var $8677 = self.pst;
                        var self = $8677;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8679 = self.err;
                                var $8680 = self.nam;
                                var $8681 = self.ini;
                                var $8682 = self.idx;
                                var $8683 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8670, $8679), $8680, $8681, $8682, $8683);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8685 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8687 = self.err;
                                                var self = $8685;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8689 = self.value;
                                                        var $8690 = Parser$Reply$error$(Parser$Error$combine$($8689, $8687));
                                                        var $8688 = $8690;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8691 = Parser$Reply$error$($8687);
                                                        var $8688 = $8691;
                                                        break;
                                                };
                                                var $8686 = $8688;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8692 = self.pst;
                                                var $8693 = self.val;
                                                var self = $8692;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8695 = self.err;
                                                        var $8696 = self.nam;
                                                        var $8697 = self.ini;
                                                        var $8698 = self.idx;
                                                        var $8699 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8685, $8695), $8696, $8697, $8698, $8699);
                                                        var _term$31 = Kind$Term$ref$("String.concat");
                                                        var _term$32 = Kind$Term$app$(_term$31, _str0$1);
                                                        var _term$33 = Kind$Term$app$(_term$32, $8693);
                                                        var $8700 = Parser$Reply$value$(_reply$pst$30, _term$33);
                                                        var $8694 = $8700;
                                                        break;
                                                };
                                                var $8686 = $8694;
                                                break;
                                        };
                                        var $8684 = $8686;
                                        break;
                                };
                                var $8678 = $8684;
                                break;
                        };
                        var $8671 = $8678;
                        break;
                };
                var $8669 = $8671;
                break;
        };
        return $8669;
    };
    const Kind$Parser$string_concat = x0 => x1 => Kind$Parser$string_concat$(x0, x1);

    function Kind$Parser$sigma$(_val0$1) {
        var $8701 = Kind$Parser$block("sigma")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $8703 = self.err;
                    var _reply$8 = Kind$Parser$text$("~", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8705 = self.err;
                            var self = $8703;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8707 = self.value;
                                    var $8708 = Parser$Reply$error$(Parser$Error$combine$($8707, $8705));
                                    var $8706 = $8708;
                                    break;
                                case 'Maybe.none':
                                    var $8709 = Parser$Reply$error$($8705);
                                    var $8706 = $8709;
                                    break;
                            };
                            var $8704 = $8706;
                            break;
                        case 'Parser.Reply.value':
                            var $8710 = self.pst;
                            var self = $8710;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8712 = self.err;
                                    var $8713 = self.nam;
                                    var $8714 = self.ini;
                                    var $8715 = self.idx;
                                    var $8716 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8703, $8712), $8713, $8714, $8715, $8716);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8718 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8720 = self.err;
                                                    var self = $8718;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8722 = self.value;
                                                            var $8723 = Parser$Reply$error$(Parser$Error$combine$($8722, $8720));
                                                            var $8721 = $8723;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8724 = Parser$Reply$error$($8720);
                                                            var $8721 = $8724;
                                                            break;
                                                    };
                                                    var $8719 = $8721;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8725 = self.pst;
                                                    var $8726 = self.val;
                                                    var self = $8725;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8728 = self.err;
                                                            var $8729 = self.nam;
                                                            var $8730 = self.ini;
                                                            var $8731 = self.idx;
                                                            var $8732 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8718, $8728), $8729, $8730, $8731, $8732);
                                                            var _term$31 = Kind$Term$ref$("Sigma.new");
                                                            var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                            var _term$33 = Kind$Term$app$(_term$32, Kind$Term$hol$(Bits$e));
                                                            var _term$34 = Kind$Term$app$(_term$33, _val0$1);
                                                            var _term$35 = Kind$Term$app$(_term$34, $8726);
                                                            var $8733 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                            var $8727 = $8733;
                                                            break;
                                                    };
                                                    var $8719 = $8727;
                                                    break;
                                            };
                                            var $8717 = $8719;
                                            break;
                                    };
                                    var $8711 = $8717;
                                    break;
                            };
                            var $8704 = $8711;
                            break;
                    };
                    var $8702 = $8704;
                    break;
            };
            return $8702;
        }));
        return $8701;
    };
    const Kind$Parser$sigma = x0 => Kind$Parser$sigma$(x0);

    function Kind$Parser$inequality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8735 = self.err;
                var _reply$8 = Kind$Parser$text$("!=", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8737 = self.err;
                        var self = $8735;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8739 = self.value;
                                var $8740 = Parser$Reply$error$(Parser$Error$combine$($8739, $8737));
                                var $8738 = $8740;
                                break;
                            case 'Maybe.none':
                                var $8741 = Parser$Reply$error$($8737);
                                var $8738 = $8741;
                                break;
                        };
                        var $8736 = $8738;
                        break;
                    case 'Parser.Reply.value':
                        var $8742 = self.pst;
                        var self = $8742;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8744 = self.err;
                                var $8745 = self.nam;
                                var $8746 = self.ini;
                                var $8747 = self.idx;
                                var $8748 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8735, $8744), $8745, $8746, $8747, $8748);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8750 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8752 = self.err;
                                                var self = $8750;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8754 = self.value;
                                                        var $8755 = Parser$Reply$error$(Parser$Error$combine$($8754, $8752));
                                                        var $8753 = $8755;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8756 = Parser$Reply$error$($8752);
                                                        var $8753 = $8756;
                                                        break;
                                                };
                                                var $8751 = $8753;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8757 = self.pst;
                                                var $8758 = self.val;
                                                var self = $8757;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8760 = self.err;
                                                        var $8761 = self.nam;
                                                        var $8762 = self.ini;
                                                        var $8763 = self.idx;
                                                        var $8764 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8750, $8760), $8761, $8762, $8763, $8764);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8758);
                                                        var _term$35 = Kind$Term$app$(Kind$Term$ref$("Not"), _term$34);
                                                        var $8765 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                        var $8759 = $8765;
                                                        break;
                                                };
                                                var $8751 = $8759;
                                                break;
                                        };
                                        var $8749 = $8751;
                                        break;
                                };
                                var $8743 = $8749;
                                break;
                        };
                        var $8736 = $8743;
                        break;
                };
                var $8734 = $8736;
                break;
        };
        return $8734;
    };
    const Kind$Parser$inequality = x0 => x1 => Kind$Parser$inequality$(x0, x1);

    function Kind$Parser$rewrite$(_subt$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8767 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8769 = self.err;
                        var self = $8767;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8771 = self.value;
                                var $8772 = Parser$Reply$error$(Parser$Error$combine$($8771, $8769));
                                var $8770 = $8772;
                                break;
                            case 'Maybe.none':
                                var $8773 = Parser$Reply$error$($8769);
                                var $8770 = $8773;
                                break;
                        };
                        var $8768 = $8770;
                        break;
                    case 'Parser.Reply.value':
                        var $8774 = self.pst;
                        var self = $8774;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8776 = self.err;
                                var $8777 = self.nam;
                                var $8778 = self.ini;
                                var $8779 = self.idx;
                                var $8780 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8767, $8776), $8777, $8778, $8779, $8780);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8782 = self.err;
                                        var _reply$22 = Kind$Parser$text$("rewrite", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8784 = self.err;
                                                var self = $8782;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8786 = self.value;
                                                        var $8787 = Parser$Reply$error$(Parser$Error$combine$($8786, $8784));
                                                        var $8785 = $8787;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8788 = Parser$Reply$error$($8784);
                                                        var $8785 = $8788;
                                                        break;
                                                };
                                                var $8783 = $8785;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8789 = self.pst;
                                                var self = $8789;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8791 = self.err;
                                                        var $8792 = self.nam;
                                                        var $8793 = self.ini;
                                                        var $8794 = self.idx;
                                                        var $8795 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8782, $8791), $8792, $8793, $8794, $8795);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8797 = self.err;
                                                                var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8799 = self.err;
                                                                        var self = $8797;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8801 = self.value;
                                                                                var $8802 = Parser$Reply$error$(Parser$Error$combine$($8801, $8799));
                                                                                var $8800 = $8802;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8803 = Parser$Reply$error$($8799);
                                                                                var $8800 = $8803;
                                                                                break;
                                                                        };
                                                                        var $8798 = $8800;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8804 = self.pst;
                                                                        var $8805 = self.val;
                                                                        var self = $8804;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8807 = self.err;
                                                                                var $8808 = self.nam;
                                                                                var $8809 = self.ini;
                                                                                var $8810 = self.idx;
                                                                                var $8811 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8797, $8807), $8808, $8809, $8810, $8811);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8813 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("in", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8815 = self.err;
                                                                                                var self = $8813;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8817 = self.value;
                                                                                                        var $8818 = Parser$Reply$error$(Parser$Error$combine$($8817, $8815));
                                                                                                        var $8816 = $8818;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8819 = Parser$Reply$error$($8815);
                                                                                                        var $8816 = $8819;
                                                                                                        break;
                                                                                                };
                                                                                                var $8814 = $8816;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8820 = self.pst;
                                                                                                var self = $8820;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8822 = self.err;
                                                                                                        var $8823 = self.nam;
                                                                                                        var $8824 = self.ini;
                                                                                                        var $8825 = self.idx;
                                                                                                        var $8826 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8813, $8822), $8823, $8824, $8825, $8826);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8828 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8830 = self.err;
                                                                                                                        var self = $8828;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8832 = self.value;
                                                                                                                                var $8833 = Parser$Reply$error$(Parser$Error$combine$($8832, $8830));
                                                                                                                                var $8831 = $8833;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8834 = Parser$Reply$error$($8830);
                                                                                                                                var $8831 = $8834;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8829 = $8831;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8835 = self.pst;
                                                                                                                        var $8836 = self.val;
                                                                                                                        var self = $8835;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8838 = self.err;
                                                                                                                                var $8839 = self.nam;
                                                                                                                                var $8840 = self.ini;
                                                                                                                                var $8841 = self.idx;
                                                                                                                                var $8842 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8828, $8838), $8839, $8840, $8841, $8842);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $8844 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$("with", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $8846 = self.err;
                                                                                                                                                var self = $8844;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $8848 = self.value;
                                                                                                                                                        var $8849 = Parser$Reply$error$(Parser$Error$combine$($8848, $8846));
                                                                                                                                                        var $8847 = $8849;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $8850 = Parser$Reply$error$($8846);
                                                                                                                                                        var $8847 = $8850;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8845 = $8847;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $8851 = self.pst;
                                                                                                                                                var self = $8851;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $8853 = self.err;
                                                                                                                                                        var $8854 = self.nam;
                                                                                                                                                        var $8855 = self.ini;
                                                                                                                                                        var $8856 = self.idx;
                                                                                                                                                        var $8857 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($8844, $8853), $8854, $8855, $8856, $8857);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $8859 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $8861 = self.err;
                                                                                                                                                                        var self = $8859;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $8863 = self.value;
                                                                                                                                                                                var $8864 = Parser$Reply$error$(Parser$Error$combine$($8863, $8861));
                                                                                                                                                                                var $8862 = $8864;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $8865 = Parser$Reply$error$($8861);
                                                                                                                                                                                var $8862 = $8865;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8860 = $8862;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $8866 = self.pst;
                                                                                                                                                                        var $8867 = self.val;
                                                                                                                                                                        var self = $8866;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $8869 = self.err;
                                                                                                                                                                                var $8870 = self.nam;
                                                                                                                                                                                var $8871 = self.ini;
                                                                                                                                                                                var $8872 = self.idx;
                                                                                                                                                                                var $8873 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($8859, $8869), $8870, $8871, $8872, $8873);
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.rewrite");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $8867);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, Kind$Term$lam$($8805, (_x$106 => {
                                                                                                                                                                                    var $8875 = $8836;
                                                                                                                                                                                    return $8875;
                                                                                                                                                                                })));
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, _subt$1);
                                                                                                                                                                                var $8874 = Parser$Reply$value$(_reply$pst$100, _term$107);
                                                                                                                                                                                var $8868 = $8874;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8860 = $8868;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $8858 = $8860;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $8852 = $8858;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8845 = $8852;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $8843 = $8845;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $8837 = $8843;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8829 = $8837;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8827 = $8829;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8821 = $8827;
                                                                                                        break;
                                                                                                };
                                                                                                var $8814 = $8821;
                                                                                                break;
                                                                                        };
                                                                                        var $8812 = $8814;
                                                                                        break;
                                                                                };
                                                                                var $8806 = $8812;
                                                                                break;
                                                                        };
                                                                        var $8798 = $8806;
                                                                        break;
                                                                };
                                                                var $8796 = $8798;
                                                                break;
                                                        };
                                                        var $8790 = $8796;
                                                        break;
                                                };
                                                var $8783 = $8790;
                                                break;
                                        };
                                        var $8781 = $8783;
                                        break;
                                };
                                var $8775 = $8781;
                                break;
                        };
                        var $8768 = $8775;
                        break;
                };
                var $8766 = $8768;
                break;
        };
        return $8766;
    };
    const Kind$Parser$rewrite = x0 => x1 => Kind$Parser$rewrite$(x0, x1);

    function Kind$Parser$annotation$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8877 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8879 = self.err;
                        var self = $8877;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8881 = self.value;
                                var $8882 = Parser$Reply$error$(Parser$Error$combine$($8881, $8879));
                                var $8880 = $8882;
                                break;
                            case 'Maybe.none':
                                var $8883 = Parser$Reply$error$($8879);
                                var $8880 = $8883;
                                break;
                        };
                        var $8878 = $8880;
                        break;
                    case 'Parser.Reply.value':
                        var $8884 = self.pst;
                        var self = $8884;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8886 = self.err;
                                var $8887 = self.nam;
                                var $8888 = self.ini;
                                var $8889 = self.idx;
                                var $8890 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8877, $8886), $8887, $8888, $8889, $8890);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8892 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8894 = self.err;
                                                var self = $8892;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8896 = self.value;
                                                        var $8897 = Parser$Reply$error$(Parser$Error$combine$($8896, $8894));
                                                        var $8895 = $8897;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8898 = Parser$Reply$error$($8894);
                                                        var $8895 = $8898;
                                                        break;
                                                };
                                                var $8893 = $8895;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8899 = self.pst;
                                                var $8900 = self.val;
                                                var self = $8899;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8902 = self.err;
                                                        var $8903 = self.nam;
                                                        var $8904 = self.ini;
                                                        var $8905 = self.idx;
                                                        var $8906 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8892, $8902), $8903, $8904, $8905, $8906);
                                                        var $8907 = Parser$Reply$value$(_reply$pst$30, Kind$Term$ann$(Bool$false, _term$1, $8900));
                                                        var $8901 = $8907;
                                                        break;
                                                };
                                                var $8893 = $8901;
                                                break;
                                        };
                                        var $8891 = $8893;
                                        break;
                                };
                                var $8885 = $8891;
                                break;
                        };
                        var $8878 = $8885;
                        break;
                };
                var $8876 = $8878;
                break;
        };
        return $8876;
    };
    const Kind$Parser$annotation = x0 => x1 => Kind$Parser$annotation$(x0, x1);

    function Kind$Parser$application$hole$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8909 = self.err;
                var _reply$8 = Kind$Parser$text_now$("!")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8911 = self.err;
                        var self = $8909;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8913 = self.value;
                                var $8914 = Parser$Reply$error$(Parser$Error$combine$($8913, $8911));
                                var $8912 = $8914;
                                break;
                            case 'Maybe.none':
                                var $8915 = Parser$Reply$error$($8911);
                                var $8912 = $8915;
                                break;
                        };
                        var $8910 = $8912;
                        break;
                    case 'Parser.Reply.value':
                        var $8916 = self.pst;
                        var self = $8916;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8918 = self.err;
                                var $8919 = self.nam;
                                var $8920 = self.ini;
                                var $8921 = self.idx;
                                var $8922 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8909, $8918), $8919, $8920, $8921, $8922);
                                var $8923 = Parser$Reply$value$(_reply$pst$16, Kind$Term$app$(_term$1, Kind$Term$hol$(Bits$e)));
                                var $8917 = $8923;
                                break;
                        };
                        var $8910 = $8917;
                        break;
                };
                var $8908 = $8910;
                break;
        };
        return $8908;
    };
    const Kind$Parser$application$hole = x0 => x1 => Kind$Parser$application$hole$(x0, x1);

    function Kind$Parser$term$suffix$(_term$1, _pst$2) {
        var Kind$Parser$term$suffix$ = (_term$1, _pst$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _pst$2]
        });
        var Kind$Parser$term$suffix = _term$1 => _pst$2 => Kind$Parser$term$suffix$(_term$1, _pst$2);
        var arg = [_term$1, _pst$2];
        while (true) {
            let [_term$1, _pst$2] = arg;
            var R = (() => {
                var self = _pst$2;
                switch (self._) {
                    case 'Parser.State.new':
                        var $8924 = self.err;
                        var $8925 = self.nam;
                        var $8926 = self.ini;
                        var $8927 = self.idx;
                        var $8928 = self.str;
                        var _suffix_parser$8 = Parser$choice(List$cons$(Kind$Parser$application(_term$1), List$cons$(Kind$Parser$application$erased(_term$1), List$cons$(Kind$Parser$list_set(_term$1), List$cons$(Kind$Parser$list_get(_term$1), List$cons$(Kind$Parser$map_set(_term$1), List$cons$(Kind$Parser$map_get(_term$1), List$cons$(Kind$Parser$field_set(_term$1), List$cons$(Kind$Parser$field_get(_term$1), List$cons$(Kind$Parser$arrow(_term$1), List$cons$(Kind$Parser$concat(_term$1), List$cons$(Kind$Parser$equality(_term$1), List$cons$(Kind$Parser$add(_term$1), List$cons$(Kind$Parser$sub(_term$1), List$cons$(Kind$Parser$mul(_term$1), List$cons$(Kind$Parser$div(_term$1), List$cons$(Kind$Parser$mod(_term$1), List$cons$(Kind$Parser$ltn(_term$1), List$cons$(Kind$Parser$lte(_term$1), List$cons$(Kind$Parser$eql(_term$1), List$cons$(Kind$Parser$gte(_term$1), List$cons$(Kind$Parser$gtn(_term$1), List$cons$(Kind$Parser$and(_term$1), List$cons$(Kind$Parser$or(_term$1), List$cons$(Kind$Parser$default(_term$1), List$cons$(Kind$Parser$cons(_term$1), List$cons$(Kind$Parser$string_concat(_term$1), List$cons$(Kind$Parser$sigma$(_term$1), List$cons$(Kind$Parser$inequality(_term$1), List$cons$(Kind$Parser$rewrite(_term$1), List$cons$(Kind$Parser$annotation(_term$1), List$cons$(Kind$Parser$application$hole(_term$1), List$nil))))))))))))))))))))))))))))))));
                        var self = _suffix_parser$8(_pst$2);
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $8930 = self.err;
                                var self = $8930;
                                switch (self._) {
                                    case 'Parser.Error.new':
                                        var _err$14 = Parser$Error$maybe_combine$($8924, Maybe$some$($8930));
                                        var _pst$15 = Parser$State$new$(_err$14, $8925, $8926, $8927, $8928);
                                        var $8932 = Parser$Reply$value$(_pst$15, _term$1);
                                        var $8931 = $8932;
                                        break;
                                };
                                var $8929 = $8931;
                                break;
                            case 'Parser.Reply.value':
                                var $8933 = self.pst;
                                var $8934 = self.val;
                                var $8935 = Kind$Parser$term$suffix$($8934, $8933);
                                var $8929 = $8935;
                                break;
                        };
                        return $8929;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$term$suffix = x0 => x1 => Kind$Parser$term$suffix$(x0, x1);
    const Kind$Parser$term = Kind$Parser$block("term")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8937 = self.err;
                var _reply$7 = Parser$choice$(List$cons$(Kind$Parser$dom, List$cons$(Kind$Parser$forall, List$cons$(Kind$Parser$lambda, List$cons$(Kind$Parser$lambda$erased, List$cons$(Kind$Parser$parenthesis, List$cons$(Kind$Parser$letforrange$u32$((_x$7 => {
                    var $8939 = Kind$Parser$term;
                    return $8939;
                })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$7 => {
                    var $8940 = Kind$Parser$term;
                    return $8940;
                })), List$cons$(Kind$Parser$letforrange$i32$((_x$7 => {
                    var $8941 = Kind$Parser$term;
                    return $8941;
                })), List$cons$(Kind$Parser$letforrange$i32$with$((_x$7 => {
                    var $8942 = Kind$Parser$term;
                    return $8942;
                })), List$cons$(Kind$Parser$letforrange$nat$((_x$7 => {
                    var $8943 = Kind$Parser$term;
                    return $8943;
                })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$7 => {
                    var $8944 = Kind$Parser$term;
                    return $8944;
                })), List$cons$(Kind$Parser$letforin$((_x$7 => {
                    var $8945 = Kind$Parser$term;
                    return $8945;
                })), List$cons$(Kind$Parser$letforin$with$((_x$7 => {
                    var $8946 = Kind$Parser$term;
                    return $8946;
                })), List$cons$(Kind$Parser$letwhile$((_x$7 => {
                    var $8947 = Kind$Parser$term;
                    return $8947;
                })), List$cons$(Kind$Parser$letwhile$with$((_x$7 => {
                    var $8948 = Kind$Parser$term;
                    return $8948;
                })), List$cons$(Kind$Parser$let$((_x$7 => {
                    var $8949 = Kind$Parser$term;
                    return $8949;
                })), List$cons$(Kind$Parser$let$omit$((_x$7 => {
                    var $8950 = Kind$Parser$term;
                    return $8950;
                })), List$cons$(Kind$Parser$getwhile$((_x$7 => {
                    var $8951 = Kind$Parser$term;
                    return $8951;
                })), List$cons$(Kind$Parser$getwhile$with((_x$7 => {
                    var $8952 = Kind$Parser$term;
                    return $8952;
                })), List$cons$(Kind$Parser$get$((_x$7 => {
                    var $8953 = Kind$Parser$term;
                    return $8953;
                })), List$cons$(Kind$Parser$get$omit$((_x$7 => {
                    var $8954 = Kind$Parser$term;
                    return $8954;
                })), List$cons$(Kind$Parser$def$((_x$7 => {
                    var $8955 = Kind$Parser$term;
                    return $8955;
                })), List$cons$(Kind$Parser$goal_rewrite, List$cons$(Kind$Parser$if, List$cons$(Kind$Parser$char, List$cons$(Kind$Parser$string$(34), List$cons$(Kind$Parser$string$(96), List$cons$(Kind$Parser$new, List$cons$(Kind$Parser$sigma$type, List$cons$(Kind$Parser$some, List$cons$(Kind$Parser$not, List$cons$(Kind$Parser$left, List$cons$(Kind$Parser$right, List$cons$(Kind$Parser$apply, List$cons$(Kind$Parser$chain, List$cons$(Kind$Parser$mirror, List$cons$(Kind$Parser$list, List$cons$(Kind$Parser$map, List$cons$(Kind$Parser$log$((_x$7 => {
                    var $8956 = Kind$Parser$term;
                    return $8956;
                })), List$cons$(Kind$Parser$do, List$cons$(Kind$Parser$case, List$cons$(Kind$Parser$open$((_x$7 => {
                    var $8957 = Kind$Parser$term;
                    return $8957;
                })), List$cons$(Kind$Parser$without, List$cons$(Kind$Parser$switch, List$cons$(Kind$Parser$goal, List$cons$(Kind$Parser$hole, List$cons$(Kind$Parser$float$64, List$cons$(Kind$Parser$float$32, List$cons$(Kind$Parser$machine_integer$signed$(256n), List$cons$(Kind$Parser$machine_integer$signed$(128n), List$cons$(Kind$Parser$machine_integer$signed$(64n), List$cons$(Kind$Parser$machine_integer$signed$(32n), List$cons$(Kind$Parser$machine_integer$signed$(16n), List$cons$(Kind$Parser$machine_integer$signed$(8n), List$cons$(Kind$Parser$machine_integer$unsigned$(256n), List$cons$(Kind$Parser$machine_integer$unsigned$(128n), List$cons$(Kind$Parser$machine_integer$unsigned$(64n), List$cons$(Kind$Parser$machine_integer$unsigned$(32n), List$cons$(Kind$Parser$machine_integer$unsigned$(16n), List$cons$(Kind$Parser$machine_integer$unsigned$(8n), List$cons$(Kind$Parser$u64, List$cons$(Kind$Parser$u32, List$cons$(Kind$Parser$u16, List$cons$(Kind$Parser$u8, List$cons$(Kind$Parser$num, List$cons$(Kind$Parser$reference, List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $8959 = self.err;
                            var _reply$13 = Kind$Parser$spaces(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $8961 = self.err;
                                    var self = $8959;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $8963 = self.value;
                                            var $8964 = Parser$Reply$error$(Parser$Error$combine$($8963, $8961));
                                            var $8962 = $8964;
                                            break;
                                        case 'Maybe.none':
                                            var $8965 = Parser$Reply$error$($8961);
                                            var $8962 = $8965;
                                            break;
                                    };
                                    var $8960 = $8962;
                                    break;
                                case 'Parser.Reply.value':
                                    var $8966 = self.pst;
                                    var self = $8966;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8968 = self.err;
                                            var $8969 = self.nam;
                                            var $8970 = self.ini;
                                            var $8971 = self.idx;
                                            var $8972 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($8959, $8968), $8969, $8970, $8971, $8972);
                                            var $8973 = Parser$fail$("Expected a term.", _reply$pst$21);
                                            var $8967 = $8973;
                                            break;
                                    };
                                    var $8960 = $8967;
                                    break;
                            };
                            var $8958 = $8960;
                            break;
                    };
                    return $8958;
                }), List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8974 = self.err;
                        var self = $8937;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8976 = self.value;
                                var $8977 = Parser$Reply$error$(Parser$Error$combine$($8976, $8974));
                                var $8975 = $8977;
                                break;
                            case 'Maybe.none':
                                var $8978 = Parser$Reply$error$($8974);
                                var $8975 = $8978;
                                break;
                        };
                        var $8938 = $8975;
                        break;
                    case 'Parser.Reply.value':
                        var $8979 = self.pst;
                        var $8980 = self.val;
                        var self = $8979;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8982 = self.err;
                                var $8983 = self.nam;
                                var $8984 = self.ini;
                                var $8985 = self.idx;
                                var $8986 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8937, $8982), $8983, $8984, $8985, $8986);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8988 = self.err;
                                        var _reply$21 = Kind$Parser$term$suffix$($8980, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8990 = self.err;
                                                var self = $8988;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8992 = self.value;
                                                        var $8993 = Parser$Reply$error$(Parser$Error$combine$($8992, $8990));
                                                        var $8991 = $8993;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8994 = Parser$Reply$error$($8990);
                                                        var $8991 = $8994;
                                                        break;
                                                };
                                                var $8989 = $8991;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8995 = self.pst;
                                                var $8996 = self.val;
                                                var self = $8995;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8998 = self.err;
                                                        var $8999 = self.nam;
                                                        var $9000 = self.ini;
                                                        var $9001 = self.idx;
                                                        var $9002 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($8988, $8998), $8999, $9000, $9001, $9002);
                                                        var $9003 = Parser$Reply$value$(_reply$pst$29, $8996);
                                                        var $8997 = $9003;
                                                        break;
                                                };
                                                var $8989 = $8997;
                                                break;
                                        };
                                        var $8987 = $8989;
                                        break;
                                };
                                var $8981 = $8987;
                                break;
                        };
                        var $8938 = $8981;
                        break;
                };
                var $8936 = $8938;
                break;
        };
        return $8936;
    }));

    function Kind$Parser$name_term$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9005 = self.err;
                var _reply$8 = Kind$Parser$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9007 = self.err;
                        var self = $9005;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9009 = self.value;
                                var $9010 = Parser$Reply$error$(Parser$Error$combine$($9009, $9007));
                                var $9008 = $9010;
                                break;
                            case 'Maybe.none':
                                var $9011 = Parser$Reply$error$($9007);
                                var $9008 = $9011;
                                break;
                        };
                        var $9006 = $9008;
                        break;
                    case 'Parser.Reply.value':
                        var $9012 = self.pst;
                        var $9013 = self.val;
                        var self = $9012;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9015 = self.err;
                                var $9016 = self.nam;
                                var $9017 = self.ini;
                                var $9018 = self.idx;
                                var $9019 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9005, $9015), $9016, $9017, $9018, $9019);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9021 = self.err;
                                        var _reply$22 = Kind$Parser$text$(_sep$1, _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9023 = self.err;
                                                var self = $9021;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9025 = self.value;
                                                        var $9026 = Parser$Reply$error$(Parser$Error$combine$($9025, $9023));
                                                        var $9024 = $9026;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9027 = Parser$Reply$error$($9023);
                                                        var $9024 = $9027;
                                                        break;
                                                };
                                                var $9022 = $9024;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9028 = self.pst;
                                                var self = $9028;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9030 = self.err;
                                                        var $9031 = self.nam;
                                                        var $9032 = self.ini;
                                                        var $9033 = self.idx;
                                                        var $9034 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9021, $9030), $9031, $9032, $9033, $9034);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9036 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9038 = self.err;
                                                                        var self = $9036;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9040 = self.value;
                                                                                var $9041 = Parser$Reply$error$(Parser$Error$combine$($9040, $9038));
                                                                                var $9039 = $9041;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9042 = Parser$Reply$error$($9038);
                                                                                var $9039 = $9042;
                                                                                break;
                                                                        };
                                                                        var $9037 = $9039;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9043 = self.pst;
                                                                        var $9044 = self.val;
                                                                        var self = $9043;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9046 = self.err;
                                                                                var $9047 = self.nam;
                                                                                var $9048 = self.ini;
                                                                                var $9049 = self.idx;
                                                                                var $9050 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9036, $9046), $9047, $9048, $9049, $9050);
                                                                                var $9051 = Parser$Reply$value$(_reply$pst$44, Pair$new$($9013, $9044));
                                                                                var $9045 = $9051;
                                                                                break;
                                                                        };
                                                                        var $9037 = $9045;
                                                                        break;
                                                                };
                                                                var $9035 = $9037;
                                                                break;
                                                        };
                                                        var $9029 = $9035;
                                                        break;
                                                };
                                                var $9022 = $9029;
                                                break;
                                        };
                                        var $9020 = $9022;
                                        break;
                                };
                                var $9014 = $9020;
                                break;
                        };
                        var $9006 = $9014;
                        break;
                };
                var $9004 = $9006;
                break;
        };
        return $9004;
    };
    const Kind$Parser$name_term = x0 => x1 => Kind$Parser$name_term$(x0, x1);

    function Kind$Binder$new$(_eras$1, _name$2, _term$3) {
        var $9052 = ({
            _: 'Kind.Binder.new',
            'eras': _eras$1,
            'name': _name$2,
            'term': _term$3
        });
        return $9052;
    };
    const Kind$Binder$new = x0 => x1 => x2 => Kind$Binder$new$(x0, x1, x2);

    function Kind$Parser$binder$homo$(_sep$1, _eras$2) {
        var self = _eras$2;
        if (self) {
            var $9054 = "<";
            var _open$3 = $9054;
        } else {
            var $9055 = "(";
            var _open$3 = $9055;
        };
        var self = _eras$2;
        if (self) {
            var $9056 = ">";
            var _clos$4 = $9056;
        } else {
            var $9057 = ")";
            var _clos$4 = $9057;
        };
        var $9053 = (_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $9059 = self.err;
                    var _reply$11 = Kind$Parser$items1$(_open$3, Kind$Parser$name_term(_sep$1), _clos$4)(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $9061 = self.err;
                            var self = $9059;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9063 = self.value;
                                    var $9064 = Parser$Reply$error$(Parser$Error$combine$($9063, $9061));
                                    var $9062 = $9064;
                                    break;
                                case 'Maybe.none':
                                    var $9065 = Parser$Reply$error$($9061);
                                    var $9062 = $9065;
                                    break;
                            };
                            var $9060 = $9062;
                            break;
                        case 'Parser.Reply.value':
                            var $9066 = self.pst;
                            var $9067 = self.val;
                            var self = $9066;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $9069 = self.err;
                                    var $9070 = self.nam;
                                    var $9071 = self.ini;
                                    var $9072 = self.idx;
                                    var $9073 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($9059, $9069), $9070, $9071, $9072, $9073);
                                    var $9074 = Parser$Reply$value$(_reply$pst$19, List$mapped$($9067, (_pair$20 => {
                                        var self = _pair$20;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $9076 = self.fst;
                                                var $9077 = self.snd;
                                                var $9078 = Kind$Binder$new$(_eras$2, $9076, $9077);
                                                var $9075 = $9078;
                                                break;
                                        };
                                        return $9075;
                                    })));
                                    var $9068 = $9074;
                                    break;
                            };
                            var $9060 = $9068;
                            break;
                    };
                    var $9058 = $9060;
                    break;
            };
            return $9058;
        });
        return $9053;
    };
    const Kind$Parser$binder$homo = x0 => x1 => Kind$Parser$binder$homo$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9080 = self.head;
                var $9081 = self.tail;
                var $9082 = List$cons$($9080, List$concat$($9081, _bs$3));
                var $9079 = $9082;
                break;
            case 'List.nil':
                var $9083 = _bs$3;
                var $9079 = $9083;
                break;
        };
        return $9079;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function List$flatten$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $9085 = self.head;
                var $9086 = self.tail;
                var $9087 = List$concat$($9085, List$flatten$($9086));
                var $9084 = $9087;
                break;
            case 'List.nil':
                var $9088 = List$nil;
                var $9084 = $9088;
                break;
        };
        return $9084;
    };
    const List$flatten = x0 => List$flatten$(x0);

    function Kind$Parser$binder$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9090 = self.err;
                var _reply$8 = Parser$many1$(Parser$choice(List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$true), List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$false), List$nil))), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9092 = self.err;
                        var self = $9090;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9094 = self.value;
                                var $9095 = Parser$Reply$error$(Parser$Error$combine$($9094, $9092));
                                var $9093 = $9095;
                                break;
                            case 'Maybe.none':
                                var $9096 = Parser$Reply$error$($9092);
                                var $9093 = $9096;
                                break;
                        };
                        var $9091 = $9093;
                        break;
                    case 'Parser.Reply.value':
                        var $9097 = self.pst;
                        var $9098 = self.val;
                        var self = $9097;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9100 = self.err;
                                var $9101 = self.nam;
                                var $9102 = self.ini;
                                var $9103 = self.idx;
                                var $9104 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9090, $9100), $9101, $9102, $9103, $9104);
                                var $9105 = Parser$Reply$value$(_reply$pst$16, List$flatten$($9098));
                                var $9099 = $9105;
                                break;
                        };
                        var $9091 = $9099;
                        break;
                };
                var $9089 = $9091;
                break;
        };
        return $9089;
    };
    const Kind$Parser$binder = x0 => x1 => Kind$Parser$binder$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function Kind$Parser$forall$make$(_binds$1, _body$2) {
        var self = _binds$1;
        switch (self._) {
            case 'List.cons':
                var $9107 = self.head;
                var $9108 = self.tail;
                var self = $9107;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9110 = self.eras;
                        var $9111 = self.name;
                        var $9112 = self.term;
                        var $9113 = Kind$Term$all$($9110, "", $9111, $9112, (_s$8 => _x$9 => {
                            var $9114 = Kind$Parser$forall$make$($9108, _body$2);
                            return $9114;
                        }));
                        var $9109 = $9113;
                        break;
                };
                var $9106 = $9109;
                break;
            case 'List.nil':
                var $9115 = _body$2;
                var $9106 = $9115;
                break;
        };
        return $9106;
    };
    const Kind$Parser$forall$make = x0 => x1 => Kind$Parser$forall$make$(x0, x1);

    function List$at_last$(_index$2, _list$3) {
        var $9116 = List$at$(_index$2, List$reverse$(_list$3));
        return $9116;
    };
    const List$at_last = x0 => x1 => List$at_last$(x0, x1);

    function Kind$Term$var$(_name$1, _indx$2) {
        var $9117 = ({
            _: 'Kind.Term.var',
            'name': _name$1,
            'indx': _indx$2
        });
        return $9117;
    };
    const Kind$Term$var = x0 => x1 => Kind$Term$var$(x0, x1);

    function Kind$Context$get_name_skips$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $9119 = Pair$new$("", 0n);
            var $9118 = $9119;
        } else {
            var $9120 = self.charCodeAt(0);
            var $9121 = self.slice(1);
            var _name_skips$4 = Kind$Context$get_name_skips$($9121);
            var self = _name_skips$4;
            switch (self._) {
                case 'Pair.new':
                    var $9123 = self.fst;
                    var $9124 = self.snd;
                    var self = ($9120 === 94);
                    if (self) {
                        var $9126 = Pair$new$($9123, Nat$succ$($9124));
                        var $9125 = $9126;
                    } else {
                        var $9127 = Pair$new$(String$cons$($9120, $9123), $9124);
                        var $9125 = $9127;
                    };
                    var $9122 = $9125;
                    break;
            };
            var $9118 = $9122;
        };
        return $9118;
    };
    const Kind$Context$get_name_skips = x0 => Kind$Context$get_name_skips$(x0);

    function Kind$Name$eql$(_a$1, _b$2) {
        var $9128 = (_a$1 === _b$2);
        return $9128;
    };
    const Kind$Name$eql = x0 => x1 => Kind$Name$eql$(x0, x1);

    function Kind$Context$find$go$(_name$1, _skip$2, _ctx$3) {
        var Kind$Context$find$go$ = (_name$1, _skip$2, _ctx$3) => ({
            ctr: 'TCO',
            arg: [_name$1, _skip$2, _ctx$3]
        });
        var Kind$Context$find$go = _name$1 => _skip$2 => _ctx$3 => Kind$Context$find$go$(_name$1, _skip$2, _ctx$3);
        var arg = [_name$1, _skip$2, _ctx$3];
        while (true) {
            let [_name$1, _skip$2, _ctx$3] = arg;
            var R = (() => {
                var self = _ctx$3;
                switch (self._) {
                    case 'List.cons':
                        var $9129 = self.head;
                        var $9130 = self.tail;
                        var self = $9129;
                        switch (self._) {
                            case 'Pair.new':
                                var $9132 = self.fst;
                                var $9133 = self.snd;
                                var self = Kind$Name$eql$(_name$1, $9132);
                                if (self) {
                                    var self = _skip$2;
                                    if (self === 0n) {
                                        var $9136 = Maybe$some$($9133);
                                        var $9135 = $9136;
                                    } else {
                                        var $9137 = (self - 1n);
                                        var $9138 = Kind$Context$find$go$(_name$1, $9137, $9130);
                                        var $9135 = $9138;
                                    };
                                    var $9134 = $9135;
                                } else {
                                    var $9139 = Kind$Context$find$go$(_name$1, _skip$2, $9130);
                                    var $9134 = $9139;
                                };
                                var $9131 = $9134;
                                break;
                        };
                        return $9131;
                    case 'List.nil':
                        var $9140 = Maybe$none;
                        return $9140;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Context$find$go = x0 => x1 => x2 => Kind$Context$find$go$(x0, x1, x2);

    function Kind$Context$find$(_name$1, _ctx$2) {
        var self = Kind$Context$get_name_skips$(_name$1);
        switch (self._) {
            case 'Pair.new':
                var $9142 = self.fst;
                var $9143 = self.snd;
                var $9144 = Kind$Context$find$go$($9142, $9143, _ctx$2);
                var $9141 = $9144;
                break;
        };
        return $9141;
    };
    const Kind$Context$find = x0 => x1 => Kind$Context$find$(x0, x1);

    function Kind$Path$o$(_path$1, _x$2) {
        var $9145 = _path$1((_x$2 + '0'));
        return $9145;
    };
    const Kind$Path$o = x0 => x1 => Kind$Path$o$(x0, x1);

    function Kind$Path$i$(_path$1, _x$2) {
        var $9146 = _path$1((_x$2 + '1'));
        return $9146;
    };
    const Kind$Path$i = x0 => x1 => Kind$Path$i$(x0, x1);

    function Kind$Path$to_bits$(_path$1) {
        var $9147 = _path$1(Bits$e);
        return $9147;
    };
    const Kind$Path$to_bits = x0 => Kind$Path$to_bits$(x0);

    function Kind$Term$bind$(_vars$1, _path$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.var':
                var $9149 = self.name;
                var $9150 = self.indx;
                var self = List$at_last$($9150, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9152 = self.value;
                        var $9153 = Pair$snd$($9152);
                        var $9151 = $9153;
                        break;
                    case 'Maybe.none':
                        var $9154 = Kind$Term$var$($9149, $9150);
                        var $9151 = $9154;
                        break;
                };
                var $9148 = $9151;
                break;
            case 'Kind.Term.ref':
                var $9155 = self.name;
                var self = Kind$Context$find$($9155, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9157 = self.value;
                        var $9158 = $9157;
                        var $9156 = $9158;
                        break;
                    case 'Maybe.none':
                        var $9159 = Kind$Term$ref$($9155);
                        var $9156 = $9159;
                        break;
                };
                var $9148 = $9156;
                break;
            case 'Kind.Term.all':
                var $9160 = self.eras;
                var $9161 = self.self;
                var $9162 = self.name;
                var $9163 = self.xtyp;
                var $9164 = self.body;
                var _vlen$9 = (list_length(_vars$1));
                var $9165 = Kind$Term$all$($9160, $9161, $9162, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9163), (_s$10 => _x$11 => {
                    var $9166 = Kind$Term$bind$(List$cons$(Pair$new$($9162, _x$11), List$cons$(Pair$new$($9161, _s$10), _vars$1)), Kind$Path$i(_path$2), $9164(Kind$Term$var$($9161, _vlen$9))(Kind$Term$var$($9162, Nat$succ$(_vlen$9))));
                    return $9166;
                }));
                var $9148 = $9165;
                break;
            case 'Kind.Term.lam':
                var $9167 = self.name;
                var $9168 = self.body;
                var _vlen$6 = (list_length(_vars$1));
                var $9169 = Kind$Term$lam$($9167, (_x$7 => {
                    var $9170 = Kind$Term$bind$(List$cons$(Pair$new$($9167, _x$7), _vars$1), Kind$Path$o(_path$2), $9168(Kind$Term$var$($9167, _vlen$6)));
                    return $9170;
                }));
                var $9148 = $9169;
                break;
            case 'Kind.Term.app':
                var $9171 = self.func;
                var $9172 = self.argm;
                var $9173 = Kind$Term$app$(Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9171), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9172));
                var $9148 = $9173;
                break;
            case 'Kind.Term.let':
                var $9174 = self.name;
                var $9175 = self.expr;
                var $9176 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9177 = Kind$Term$let$($9174, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9175), (_x$8 => {
                    var $9178 = Kind$Term$bind$(List$cons$(Pair$new$($9174, _x$8), _vars$1), Kind$Path$i(_path$2), $9176(Kind$Term$var$($9174, _vlen$7)));
                    return $9178;
                }));
                var $9148 = $9177;
                break;
            case 'Kind.Term.def':
                var $9179 = self.name;
                var $9180 = self.expr;
                var $9181 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9182 = Kind$Term$def$($9179, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9180), (_x$8 => {
                    var $9183 = Kind$Term$bind$(List$cons$(Pair$new$($9179, _x$8), _vars$1), Kind$Path$i(_path$2), $9181(Kind$Term$var$($9179, _vlen$7)));
                    return $9183;
                }));
                var $9148 = $9182;
                break;
            case 'Kind.Term.ann':
                var $9184 = self.done;
                var $9185 = self.term;
                var $9186 = self.type;
                var $9187 = Kind$Term$ann$($9184, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9185), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9186));
                var $9148 = $9187;
                break;
            case 'Kind.Term.gol':
                var $9188 = self.name;
                var $9189 = self.dref;
                var $9190 = self.verb;
                var $9191 = Kind$Term$gol$($9188, $9189, $9190);
                var $9148 = $9191;
                break;
            case 'Kind.Term.nat':
                var $9192 = self.natx;
                var $9193 = Kind$Term$nat$($9192);
                var $9148 = $9193;
                break;
            case 'Kind.Term.chr':
                var $9194 = self.chrx;
                var $9195 = Kind$Term$chr$($9194);
                var $9148 = $9195;
                break;
            case 'Kind.Term.str':
                var $9196 = self.strx;
                var $9197 = Kind$Term$str$($9196);
                var $9148 = $9197;
                break;
            case 'Kind.Term.num':
                var $9198 = self.sign;
                var $9199 = self.numb;
                var $9200 = self.frac;
                var $9201 = Kind$Term$num$($9198, $9199, $9200);
                var $9148 = $9201;
                break;
            case 'Kind.Term.cse':
                var $9202 = self.expr;
                var $9203 = self.name;
                var $9204 = self.with;
                var $9205 = self.cses;
                var $9206 = self.moti;
                var _expr$10 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9202);
                var _name$11 = $9203;
                var _wyth$12 = List$mapped$($9204, (_with_var$12 => {
                    var self = _with_var$12;
                    switch (self._) {
                        case 'Kind.Ann.new':
                            var $9209 = self.name;
                            var $9210 = self.term;
                            var $9211 = self.type;
                            var _with_var_term$16 = Kind$Term$bind$(_vars$1, _path$2, $9210);
                            var self = $9211;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9213 = self.value;
                                    var $9214 = Maybe$some$(Kind$Term$bind$(_vars$1, _path$2, $9213));
                                    var _with_var_type$17 = $9214;
                                    break;
                                case 'Maybe.none':
                                    var $9215 = Maybe$none;
                                    var _with_var_type$17 = $9215;
                                    break;
                            };
                            var $9212 = Kind$Ann$new$($9209, _with_var_term$16, _with_var_type$17);
                            var $9208 = $9212;
                            break;
                    };
                    return $9208;
                }));
                var _cses$13 = $9205;
                var _moti$14 = $9206;
                var $9207 = Kind$Term$cse$(Kind$Path$to_bits$(_path$2), _expr$10, _name$11, _wyth$12, _cses$13, _moti$14);
                var $9148 = $9207;
                break;
            case 'Kind.Term.new':
                var $9216 = self.args;
                var _args$5 = List$fold$($9216, (_path$5 => {
                    var $9218 = List$nil;
                    return $9218;
                }), (_arg$5 => _res$6 => _path$7 => {
                    var $9219 = List$cons$(Kind$Term$bind$(_vars$1, _path$7, _arg$5), _res$6(Kind$Path$o(_path$7)));
                    return $9219;
                }))(_path$2);
                var $9217 = Kind$Term$new$(_args$5);
                var $9148 = $9217;
                break;
            case 'Kind.Term.get':
                var $9220 = self.expr;
                var $9221 = self.fkey;
                var _expr$6 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9220);
                var $9222 = Kind$Term$get$(_expr$6, $9221);
                var $9148 = $9222;
                break;
            case 'Kind.Term.set':
                var $9223 = self.expr;
                var $9224 = self.fkey;
                var $9225 = self.fval;
                var _expr$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9223);
                var _fval$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9225);
                var $9226 = Kind$Term$set$(_expr$7, $9224, _fval$8);
                var $9148 = $9226;
                break;
            case 'Kind.Term.ope':
                var $9227 = self.name;
                var $9228 = self.arg0;
                var $9229 = self.arg1;
                var _arg0$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9228);
                var _arg1$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9229);
                var $9230 = Kind$Term$ope$($9227, _arg0$7, _arg1$8);
                var $9148 = $9230;
                break;
            case 'Kind.Term.ori':
                var $9231 = self.orig;
                var $9232 = self.expr;
                var $9233 = Kind$Term$ori$($9231, Kind$Term$bind$(_vars$1, _path$2, $9232));
                var $9148 = $9233;
                break;
            case 'Kind.Term.typ':
                var $9234 = Kind$Term$typ;
                var $9148 = $9234;
                break;
            case 'Kind.Term.hol':
                var $9235 = Kind$Term$hol$(Kind$Path$to_bits$(_path$2));
                var $9148 = $9235;
                break;
        };
        return $9148;
    };
    const Kind$Term$bind = x0 => x1 => x2 => Kind$Term$bind$(x0, x1, x2);

    function Trampoline$call$(_t$2) {
        var Trampoline$call$ = (_t$2) => ({
            ctr: 'TCO',
            arg: [_t$2]
        });
        var Trampoline$call = _t$2 => Trampoline$call$(_t$2);
        var arg = [_t$2];
        while (true) {
            let [_t$2] = arg;
            var R = (() => {
                var self = _t$2;
                switch (self._) {
                    case 'Trampoline.done':
                        var $9236 = self.value;
                        var $9237 = $9236;
                        return $9237;
                    case 'Trampoline.wrap':
                        var $9238 = self.value;
                        var $9239 = Trampoline$call$($9238(Unit$new));
                        return $9239;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Trampoline$call = x0 => Trampoline$call$(x0);

    function Trampoline$(_A$1) {
        var $9240 = null;
        return $9240;
    };
    const Trampoline = x0 => Trampoline$(x0);

    function Trampoline$wrap$(_value$2) {
        var $9241 = ({
            _: 'Trampoline.wrap',
            'value': _value$2
        });
        return $9241;
    };
    const Trampoline$wrap = x0 => Trampoline$wrap$(x0);

    function BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5) {
        var BitsMap$set_if_empty$cps$go$ = (_bits$2, _val$3, _map$4, _cont$5) => ({
            ctr: 'TCO',
            arg: [_bits$2, _val$3, _map$4, _cont$5]
        });
        var BitsMap$set_if_empty$cps$go = _bits$2 => _val$3 => _map$4 => _cont$5 => BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5);
        var arg = [_bits$2, _val$3, _map$4, _cont$5];
        while (true) {
            let [_bits$2, _val$3, _map$4, _cont$5] = arg;
            var R = (() => {
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $9242 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9244 = self.val;
                                var $9245 = self.lft;
                                var $9246 = self.rgt;
                                var $9247 = BitsMap$set_if_empty$cps$go$($9242, _val$3, $9245, (_lft$10 => {
                                    var $9248 = Trampoline$wrap$((_$11 => {
                                        var $9249 = _cont$5(BitsMap$tie$($9244, _lft$10, $9246));
                                        return $9249;
                                    }));
                                    return $9248;
                                }));
                                var $9243 = $9247;
                                break;
                            case 'BitsMap.new':
                                var $9250 = BitsMap$set_if_empty$cps$go$($9242, _val$3, BitsMap$new, (_lft$7 => {
                                    var $9251 = Trampoline$wrap$((_$8 => {
                                        var $9252 = _cont$5(BitsMap$tie$(Maybe$none, _lft$7, BitsMap$new));
                                        return $9252;
                                    }));
                                    return $9251;
                                }));
                                var $9243 = $9250;
                                break;
                        };
                        return $9243;
                    case 'i':
                        var $9253 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9255 = self.val;
                                var $9256 = self.lft;
                                var $9257 = self.rgt;
                                var $9258 = BitsMap$set_if_empty$cps$go$($9253, _val$3, $9257, (_rgt$10 => {
                                    var $9259 = Trampoline$wrap$((_$11 => {
                                        var $9260 = _cont$5(BitsMap$tie$($9255, $9256, _rgt$10));
                                        return $9260;
                                    }));
                                    return $9259;
                                }));
                                var $9254 = $9258;
                                break;
                            case 'BitsMap.new':
                                var $9261 = BitsMap$set_if_empty$cps$go$($9253, _val$3, BitsMap$new, (_rgt$7 => {
                                    var $9262 = Trampoline$wrap$((_$8 => {
                                        var $9263 = _cont$5(BitsMap$tie$(Maybe$none, BitsMap$new, _rgt$7));
                                        return $9263;
                                    }));
                                    return $9262;
                                }));
                                var $9254 = $9261;
                                break;
                        };
                        return $9254;
                    case 'e':
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9265 = self.val;
                                var $9266 = self.lft;
                                var $9267 = self.rgt;
                                var $9268 = _cont$5(BitsMap$tie$((() => {
                                    var self = $9265;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9269 = self.value;
                                            var $9270 = Maybe$some$($9269);
                                            return $9270;
                                        case 'Maybe.none':
                                            var $9271 = Maybe$some$(_val$3);
                                            return $9271;
                                    };
                                })(), $9266, $9267));
                                var $9264 = $9268;
                                break;
                            case 'BitsMap.new':
                                var $9272 = _cont$5(BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new));
                                var $9264 = $9272;
                                break;
                        };
                        return $9264;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BitsMap$set_if_empty$cps$go = x0 => x1 => x2 => x3 => BitsMap$set_if_empty$cps$go$(x0, x1, x2, x3);

    function Trampoline$done$(_value$2) {
        var $9273 = ({
            _: 'Trampoline.done',
            'value': _value$2
        });
        return $9273;
    };
    const Trampoline$done = x0 => Trampoline$done$(x0);

    function BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4) {
        var $9274 = Trampoline$call$(BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, Trampoline$done));
        return $9274;
    };
    const BitsMap$set_if_empty$cps = x0 => x1 => x2 => BitsMap$set_if_empty$cps$(x0, x1, x2);

    function BitsMap$set_if_empty$(_bits$2, _val$3, _map$4) {
        var $9275 = BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4);
        return $9275;
    };
    const BitsMap$set_if_empty = x0 => x1 => x2 => BitsMap$set_if_empty$(x0, x1, x2);

    function Kind$Map$set_if_empty$(_name$2, _val$3, _map$4) {
        var $9276 = BitsMap$set_if_empty$((kind_name_to_bits(_name$2)), _val$3, _map$4);
        return $9276;
    };
    const Kind$Map$set_if_empty = x0 => x1 => x2 => Kind$Map$set_if_empty$(x0, x1, x2);
    const Kind$Status$init = ({
        _: 'Kind.Status.init'
    });

    function Kind$Map$def$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _done$9, _defs$10) {
        var _defn$11 = Kind$Def$new(_file$1)(_code$2)(_orig$3)(_name$4)(_term$5)(_type$6)(_isct$7)(_arit$8);
        var self = _done$9;
        if (self) {
            var $9278 = Kind$Map$set$(_name$4, _defn$11(Kind$Status$done$(Bool$false)), _defs$10);
            var $9277 = $9278;
        } else {
            var $9279 = Kind$Map$set_if_empty$(_name$4, _defn$11(Kind$Status$init), _defs$10);
            var $9277 = $9279;
        };
        return $9277;
    };
    const Kind$Map$def = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => Kind$Map$def$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);

    function Kind$Parser$file$def$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $9281 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9283 = self.err;
                        var self = $9281;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9285 = self.value;
                                var $9286 = Parser$Reply$error$(Parser$Error$combine$($9285, $9283));
                                var $9284 = $9286;
                                break;
                            case 'Maybe.none':
                                var $9287 = Parser$Reply$error$($9283);
                                var $9284 = $9287;
                                break;
                        };
                        var $9282 = $9284;
                        break;
                    case 'Parser.Reply.value':
                        var $9288 = self.pst;
                        var self = $9288;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9290 = self.err;
                                var $9291 = self.nam;
                                var $9292 = self.ini;
                                var $9293 = self.idx;
                                var $9294 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($9281, $9290), $9291, $9292, $9293, $9294);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9296 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9298 = self.err;
                                                var self = $9296;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9300 = self.value;
                                                        var $9301 = Parser$Reply$error$(Parser$Error$combine$($9300, $9298));
                                                        var $9299 = $9301;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9302 = Parser$Reply$error$($9298);
                                                        var $9299 = $9302;
                                                        break;
                                                };
                                                var $9297 = $9299;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9303 = self.pst;
                                                var $9304 = self.val;
                                                var self = $9303;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9306 = self.err;
                                                        var $9307 = self.nam;
                                                        var $9308 = self.ini;
                                                        var $9309 = self.idx;
                                                        var $9310 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($9296, $9306), $9307, $9308, $9309, $9310);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9312 = self.err;
                                                                var _reply$38 = Kind$Parser$name1$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9314 = self.err;
                                                                        var self = $9312;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9316 = self.value;
                                                                                var $9317 = Parser$Reply$error$(Parser$Error$combine$($9316, $9314));
                                                                                var $9315 = $9317;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9318 = Parser$Reply$error$($9314);
                                                                                var $9315 = $9318;
                                                                                break;
                                                                        };
                                                                        var $9313 = $9315;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9319 = self.pst;
                                                                        var $9320 = self.val;
                                                                        var self = $9319;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9322 = self.err;
                                                                                var $9323 = self.nam;
                                                                                var $9324 = self.ini;
                                                                                var $9325 = self.idx;
                                                                                var $9326 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($9312, $9322), $9323, $9324, $9325, $9326);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9328 = self.err;
                                                                                        var _reply$52 = Parser$many$(Kind$Parser$binder(":"))(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9330 = self.err;
                                                                                                var self = $9328;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9332 = self.value;
                                                                                                        var $9333 = Parser$Reply$error$(Parser$Error$combine$($9332, $9330));
                                                                                                        var $9331 = $9333;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9334 = Parser$Reply$error$($9330);
                                                                                                        var $9331 = $9334;
                                                                                                        break;
                                                                                                };
                                                                                                var $9329 = $9331;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9335 = self.pst;
                                                                                                var $9336 = self.val;
                                                                                                var self = $9335;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9338 = self.err;
                                                                                                        var $9339 = self.nam;
                                                                                                        var $9340 = self.ini;
                                                                                                        var $9341 = self.idx;
                                                                                                        var $9342 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($9328, $9338), $9339, $9340, $9341, $9342);
                                                                                                        var _args$61 = List$flatten$($9336);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9344 = self.err;
                                                                                                                var _reply$67 = Kind$Parser$text$(":", _reply$pst$60);
                                                                                                                var self = _reply$67;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9346 = self.err;
                                                                                                                        var self = $9344;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9348 = self.value;
                                                                                                                                var $9349 = Parser$Reply$error$(Parser$Error$combine$($9348, $9346));
                                                                                                                                var $9347 = $9349;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9350 = Parser$Reply$error$($9346);
                                                                                                                                var $9347 = $9350;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9345 = $9347;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9351 = self.pst;
                                                                                                                        var self = $9351;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9353 = self.err;
                                                                                                                                var $9354 = self.nam;
                                                                                                                                var $9355 = self.ini;
                                                                                                                                var $9356 = self.idx;
                                                                                                                                var $9357 = self.str;
                                                                                                                                var _reply$pst$75 = Parser$State$new$(Parser$Error$maybe_combine$($9344, $9353), $9354, $9355, $9356, $9357);
                                                                                                                                var self = _reply$pst$75;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9359 = self.err;
                                                                                                                                        var _reply$81 = Kind$Parser$term(_reply$pst$75);
                                                                                                                                        var self = _reply$81;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9361 = self.err;
                                                                                                                                                var self = $9359;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9363 = self.value;
                                                                                                                                                        var $9364 = Parser$Reply$error$(Parser$Error$combine$($9363, $9361));
                                                                                                                                                        var $9362 = $9364;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9365 = Parser$Reply$error$($9361);
                                                                                                                                                        var $9362 = $9365;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9360 = $9362;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9366 = self.pst;
                                                                                                                                                var $9367 = self.val;
                                                                                                                                                var self = $9366;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9369 = self.err;
                                                                                                                                                        var $9370 = self.nam;
                                                                                                                                                        var $9371 = self.ini;
                                                                                                                                                        var $9372 = self.idx;
                                                                                                                                                        var $9373 = self.str;
                                                                                                                                                        var _reply$pst$89 = Parser$State$new$(Parser$Error$maybe_combine$($9359, $9369), $9370, $9371, $9372, $9373);
                                                                                                                                                        var self = _reply$pst$89;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $9375 = self.err;
                                                                                                                                                                var _reply$95 = Kind$Parser$term(_reply$pst$89);
                                                                                                                                                                var self = _reply$95;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $9377 = self.err;
                                                                                                                                                                        var self = $9375;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $9379 = self.value;
                                                                                                                                                                                var $9380 = Parser$Reply$error$(Parser$Error$combine$($9379, $9377));
                                                                                                                                                                                var $9378 = $9380;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $9381 = Parser$Reply$error$($9377);
                                                                                                                                                                                var $9378 = $9381;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9376 = $9378;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $9382 = self.pst;
                                                                                                                                                                        var $9383 = self.val;
                                                                                                                                                                        var self = $9382;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9385 = self.err;
                                                                                                                                                                                var $9386 = self.nam;
                                                                                                                                                                                var $9387 = self.ini;
                                                                                                                                                                                var $9388 = self.idx;
                                                                                                                                                                                var $9389 = self.str;
                                                                                                                                                                                var _reply$pst$103 = Parser$State$new$(Parser$Error$maybe_combine$($9375, $9385), $9386, $9387, $9388, $9389);
                                                                                                                                                                                var self = _reply$pst$103;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $9391 = self.err;
                                                                                                                                                                                        var _reply$109 = Parser$get_idx$(_reply$pst$103);
                                                                                                                                                                                        var self = _reply$109;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $9393 = self.err;
                                                                                                                                                                                                var self = $9391;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $9395 = self.value;
                                                                                                                                                                                                        var $9396 = Parser$Reply$error$(Parser$Error$combine$($9395, $9393));
                                                                                                                                                                                                        var $9394 = $9396;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $9397 = Parser$Reply$error$($9393);
                                                                                                                                                                                                        var $9394 = $9397;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9392 = $9394;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $9398 = self.pst;
                                                                                                                                                                                                var $9399 = self.val;
                                                                                                                                                                                                var self = $9398;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $9401 = self.err;
                                                                                                                                                                                                        var $9402 = self.nam;
                                                                                                                                                                                                        var $9403 = self.ini;
                                                                                                                                                                                                        var $9404 = self.idx;
                                                                                                                                                                                                        var $9405 = self.str;
                                                                                                                                                                                                        var _reply$pst$117 = Parser$State$new$(Parser$Error$maybe_combine$($9391, $9401), $9402, $9403, $9404, $9405);
                                                                                                                                                                                                        var _orig$118 = Pair$new$($9304, $9399);
                                                                                                                                                                                                        var _arit$119 = (list_length(_args$61));
                                                                                                                                                                                                        var _type$120 = Kind$Parser$forall$make$(_args$61, $9367);
                                                                                                                                                                                                        var _term$121 = Kind$Parser$lambda$make$(List$mapped$(_args$61, (_x$121 => {
                                                                                                                                                                                                            var self = _x$121;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Kind.Binder.new':
                                                                                                                                                                                                                    var $9408 = self.name;
                                                                                                                                                                                                                    var $9409 = $9408;
                                                                                                                                                                                                                    var $9407 = $9409;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            return $9407;
                                                                                                                                                                                                        })), $9383);
                                                                                                                                                                                                        var _type$122 = Kind$Term$bind$(List$nil, (_x$122 => {
                                                                                                                                                                                                            var $9410 = (_x$122 + '1');
                                                                                                                                                                                                            return $9410;
                                                                                                                                                                                                        }), _type$120);
                                                                                                                                                                                                        var _term$123 = Kind$Term$bind$(List$nil, (_x$123 => {
                                                                                                                                                                                                            var $9411 = (_x$123 + '0');
                                                                                                                                                                                                            return $9411;
                                                                                                                                                                                                        }), _term$121);
                                                                                                                                                                                                        var _defs$124 = Kind$Map$def$(_file$1, _code$2, _orig$118, $9320, _term$123, _type$122, Bool$false, _arit$119, Bool$false, _defs$3);
                                                                                                                                                                                                        var $9406 = Parser$Reply$value$(_reply$pst$117, _defs$124);
                                                                                                                                                                                                        var $9400 = $9406;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9392 = $9400;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $9390 = $9392;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $9384 = $9390;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9376 = $9384;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $9374 = $9376;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9368 = $9374;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9360 = $9368;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9358 = $9360;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9352 = $9358;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9345 = $9352;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9343 = $9345;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9337 = $9343;
                                                                                                        break;
                                                                                                };
                                                                                                var $9329 = $9337;
                                                                                                break;
                                                                                        };
                                                                                        var $9327 = $9329;
                                                                                        break;
                                                                                };
                                                                                var $9321 = $9327;
                                                                                break;
                                                                        };
                                                                        var $9313 = $9321;
                                                                        break;
                                                                };
                                                                var $9311 = $9313;
                                                                break;
                                                        };
                                                        var $9305 = $9311;
                                                        break;
                                                };
                                                var $9297 = $9305;
                                                break;
                                        };
                                        var $9295 = $9297;
                                        break;
                                };
                                var $9289 = $9295;
                                break;
                        };
                        var $9282 = $9289;
                        break;
                };
                var $9280 = $9282;
                break;
        };
        return $9280;
    };
    const Kind$Parser$file$def = x0 => x1 => x2 => x3 => Kind$Parser$file$def$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Constructor$new$(_name$1, _args$2, _inds$3) {
        var $9412 = ({
            _: 'Kind.Parser.ADT.Constructor.new',
            'name': _name$1,
            'args': _args$2,
            'inds': _inds$3
        });
        return $9412;
    };
    const Kind$Parser$ADT$Constructor$new = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$new$(x0, x1, x2);

    function Kind$Parser$ADT$ctor$(_namespace$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9414 = self.err;
                var _reply$8 = Kind$Parser$name1$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9416 = self.err;
                        var self = $9414;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9418 = self.value;
                                var $9419 = Parser$Reply$error$(Parser$Error$combine$($9418, $9416));
                                var $9417 = $9419;
                                break;
                            case 'Maybe.none':
                                var $9420 = Parser$Reply$error$($9416);
                                var $9417 = $9420;
                                break;
                        };
                        var $9415 = $9417;
                        break;
                    case 'Parser.Reply.value':
                        var $9421 = self.pst;
                        var $9422 = self.val;
                        var self = $9421;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9424 = self.err;
                                var $9425 = self.nam;
                                var $9426 = self.ini;
                                var $9427 = self.idx;
                                var $9428 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9414, $9424), $9425, $9426, $9427, $9428);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9430 = self.err;
                                        var _reply$22 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9432 = self.err;
                                                var self = $9430;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9434 = self.value;
                                                        var $9435 = Parser$Reply$error$(Parser$Error$combine$($9434, $9432));
                                                        var $9433 = $9435;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9436 = Parser$Reply$error$($9432);
                                                        var $9433 = $9436;
                                                        break;
                                                };
                                                var $9431 = $9433;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9437 = self.pst;
                                                var $9438 = self.val;
                                                var self = $9437;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9440 = self.err;
                                                        var $9441 = self.nam;
                                                        var $9442 = self.ini;
                                                        var $9443 = self.idx;
                                                        var $9444 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9430, $9440), $9441, $9442, $9443, $9444);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9446 = self.err;
                                                                var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $9449 = self.err;
                                                                            var _reply$42 = Kind$Parser$text$("~", _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $9451 = self.err;
                                                                                    var self = $9449;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $9453 = self.value;
                                                                                            var $9454 = Parser$Reply$error$(Parser$Error$combine$($9453, $9451));
                                                                                            var $9452 = $9454;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $9455 = Parser$Reply$error$($9451);
                                                                                            var $9452 = $9455;
                                                                                            break;
                                                                                    };
                                                                                    var $9450 = $9452;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $9456 = self.pst;
                                                                                    var self = $9456;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $9458 = self.err;
                                                                                            var $9459 = self.nam;
                                                                                            var $9460 = self.ini;
                                                                                            var $9461 = self.idx;
                                                                                            var $9462 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($9449, $9458), $9459, $9460, $9461, $9462);
                                                                                            var $9463 = Kind$Parser$binder$("=", _reply$pst$50);
                                                                                            var $9457 = $9463;
                                                                                            break;
                                                                                    };
                                                                                    var $9450 = $9457;
                                                                                    break;
                                                                            };
                                                                            var $9448 = $9450;
                                                                            break;
                                                                    };
                                                                    return $9448;
                                                                }), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9464 = self.err;
                                                                        var self = $9446;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9466 = self.value;
                                                                                var $9467 = Parser$Reply$error$(Parser$Error$combine$($9466, $9464));
                                                                                var $9465 = $9467;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9468 = Parser$Reply$error$($9464);
                                                                                var $9465 = $9468;
                                                                                break;
                                                                        };
                                                                        var $9447 = $9465;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9469 = self.pst;
                                                                        var $9470 = self.val;
                                                                        var self = $9469;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9472 = self.err;
                                                                                var $9473 = self.nam;
                                                                                var $9474 = self.ini;
                                                                                var $9475 = self.idx;
                                                                                var $9476 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9446, $9472), $9473, $9474, $9475, $9476);
                                                                                var _args$45 = Maybe$default$($9438, List$nil);
                                                                                var _inds$46 = Maybe$default$($9470, List$nil);
                                                                                var $9477 = Parser$Reply$value$(_reply$pst$44, Kind$Parser$ADT$Constructor$new$($9422, _args$45, _inds$46));
                                                                                var $9471 = $9477;
                                                                                break;
                                                                        };
                                                                        var $9447 = $9471;
                                                                        break;
                                                                };
                                                                var $9445 = $9447;
                                                                break;
                                                        };
                                                        var $9439 = $9445;
                                                        break;
                                                };
                                                var $9431 = $9439;
                                                break;
                                        };
                                        var $9429 = $9431;
                                        break;
                                };
                                var $9423 = $9429;
                                break;
                        };
                        var $9415 = $9423;
                        break;
                };
                var $9413 = $9415;
                break;
        };
        return $9413;
    };
    const Kind$Parser$ADT$ctor = x0 => x1 => Kind$Parser$ADT$ctor$(x0, x1);

    function Kind$Parser$ADT$Datatype$new$(_name$1, _pars$2, _inds$3, _ctrs$4, _deri$5) {
        var $9478 = ({
            _: 'Kind.Parser.ADT.Datatype.new',
            'name': _name$1,
            'pars': _pars$2,
            'inds': _inds$3,
            'ctrs': _ctrs$4,
            'deri': _deri$5
        });
        return $9478;
    };
    const Kind$Parser$ADT$Datatype$new = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Datatype$new$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$adt$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9480 = self.err;
                var _reply$7 = Kind$Parser$text$("type ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9482 = self.err;
                        var self = $9480;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9484 = self.value;
                                var $9485 = Parser$Reply$error$(Parser$Error$combine$($9484, $9482));
                                var $9483 = $9485;
                                break;
                            case 'Maybe.none':
                                var $9486 = Parser$Reply$error$($9482);
                                var $9483 = $9486;
                                break;
                        };
                        var $9481 = $9483;
                        break;
                    case 'Parser.Reply.value':
                        var $9487 = self.pst;
                        var self = $9487;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9489 = self.err;
                                var $9490 = self.nam;
                                var $9491 = self.ini;
                                var $9492 = self.idx;
                                var $9493 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9480, $9489), $9490, $9491, $9492, $9493);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9495 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9497 = self.err;
                                                var self = $9495;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9499 = self.value;
                                                        var $9500 = Parser$Reply$error$(Parser$Error$combine$($9499, $9497));
                                                        var $9498 = $9500;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9501 = Parser$Reply$error$($9497);
                                                        var $9498 = $9501;
                                                        break;
                                                };
                                                var $9496 = $9498;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9502 = self.pst;
                                                var $9503 = self.val;
                                                var self = $9502;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9505 = self.err;
                                                        var $9506 = self.nam;
                                                        var $9507 = self.ini;
                                                        var $9508 = self.idx;
                                                        var $9509 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9495, $9505), $9506, $9507, $9508, $9509);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9511 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9513 = self.err;
                                                                        var self = $9511;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9515 = self.value;
                                                                                var $9516 = Parser$Reply$error$(Parser$Error$combine$($9515, $9513));
                                                                                var $9514 = $9516;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9517 = Parser$Reply$error$($9513);
                                                                                var $9514 = $9517;
                                                                                break;
                                                                        };
                                                                        var $9512 = $9514;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9518 = self.pst;
                                                                        var $9519 = self.val;
                                                                        var self = $9518;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9521 = self.err;
                                                                                var $9522 = self.nam;
                                                                                var $9523 = self.ini;
                                                                                var $9524 = self.idx;
                                                                                var $9525 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($9511, $9521), $9522, $9523, $9524, $9525);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9527 = self.err;
                                                                                        var _reply$49 = Parser$maybe$((_pst$49 => {
                                                                                            var self = _pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $9530 = self.err;
                                                                                                    var _reply$55 = Kind$Parser$text$("~", _pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $9532 = self.err;
                                                                                                            var self = $9530;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $9534 = self.value;
                                                                                                                    var $9535 = Parser$Reply$error$(Parser$Error$combine$($9534, $9532));
                                                                                                                    var $9533 = $9535;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $9536 = Parser$Reply$error$($9532);
                                                                                                                    var $9533 = $9536;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9531 = $9533;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $9537 = self.pst;
                                                                                                            var self = $9537;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $9539 = self.err;
                                                                                                                    var $9540 = self.nam;
                                                                                                                    var $9541 = self.ini;
                                                                                                                    var $9542 = self.idx;
                                                                                                                    var $9543 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($9530, $9539), $9540, $9541, $9542, $9543);
                                                                                                                    var $9544 = Kind$Parser$binder$(":", _reply$pst$63);
                                                                                                                    var $9538 = $9544;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9531 = $9538;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $9529 = $9531;
                                                                                                    break;
                                                                                            };
                                                                                            return $9529;
                                                                                        }), _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9545 = self.err;
                                                                                                var self = $9527;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9547 = self.value;
                                                                                                        var $9548 = Parser$Reply$error$(Parser$Error$combine$($9547, $9545));
                                                                                                        var $9546 = $9548;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9549 = Parser$Reply$error$($9545);
                                                                                                        var $9546 = $9549;
                                                                                                        break;
                                                                                                };
                                                                                                var $9528 = $9546;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9550 = self.pst;
                                                                                                var $9551 = self.val;
                                                                                                var self = $9550;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9553 = self.err;
                                                                                                        var $9554 = self.nam;
                                                                                                        var $9555 = self.ini;
                                                                                                        var $9556 = self.idx;
                                                                                                        var $9557 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($9527, $9553), $9554, $9555, $9556, $9557);
                                                                                                        var _pars$58 = Maybe$default$($9519, List$nil);
                                                                                                        var _inds$59 = Maybe$default$($9551, List$nil);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9559 = self.err;
                                                                                                                var _reply$65 = Kind$Parser$items$("{", Kind$Parser$ADT$ctor($9503), "}")(_reply$pst$57);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9561 = self.err;
                                                                                                                        var self = $9559;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9563 = self.value;
                                                                                                                                var $9564 = Parser$Reply$error$(Parser$Error$combine$($9563, $9561));
                                                                                                                                var $9562 = $9564;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9565 = Parser$Reply$error$($9561);
                                                                                                                                var $9562 = $9565;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9560 = $9562;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9566 = self.pst;
                                                                                                                        var $9567 = self.val;
                                                                                                                        var self = $9566;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9569 = self.err;
                                                                                                                                var $9570 = self.nam;
                                                                                                                                var $9571 = self.ini;
                                                                                                                                var $9572 = self.idx;
                                                                                                                                var $9573 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($9559, $9569), $9570, $9571, $9572, $9573);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9575 = self.err;
                                                                                                                                        var _reply$79 = Parser$maybe$((_pst$79 => {
                                                                                                                                            var self = _pst$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $9578 = self.err;
                                                                                                                                                    var _reply$85 = Kind$Parser$text$("deriving", _pst$79);
                                                                                                                                                    var self = _reply$85;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $9580 = self.err;
                                                                                                                                                            var self = $9578;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $9582 = self.value;
                                                                                                                                                                    var $9583 = Parser$Reply$error$(Parser$Error$combine$($9582, $9580));
                                                                                                                                                                    var $9581 = $9583;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $9584 = Parser$Reply$error$($9580);
                                                                                                                                                                    var $9581 = $9584;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9579 = $9581;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $9585 = self.pst;
                                                                                                                                                            var self = $9585;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $9587 = self.err;
                                                                                                                                                                    var $9588 = self.nam;
                                                                                                                                                                    var $9589 = self.ini;
                                                                                                                                                                    var $9590 = self.idx;
                                                                                                                                                                    var $9591 = self.str;
                                                                                                                                                                    var _reply$pst$93 = Parser$State$new$(Parser$Error$maybe_combine$($9578, $9587), $9588, $9589, $9590, $9591);
                                                                                                                                                                    var $9592 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_reply$pst$93);
                                                                                                                                                                    var $9586 = $9592;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9579 = $9586;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $9577 = $9579;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $9577;
                                                                                                                                        }), _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9593 = self.err;
                                                                                                                                                var self = $9575;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9595 = self.value;
                                                                                                                                                        var $9596 = Parser$Reply$error$(Parser$Error$combine$($9595, $9593));
                                                                                                                                                        var $9594 = $9596;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9597 = Parser$Reply$error$($9593);
                                                                                                                                                        var $9594 = $9597;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9576 = $9594;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9598 = self.pst;
                                                                                                                                                var $9599 = self.val;
                                                                                                                                                var self = $9598;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9601 = self.err;
                                                                                                                                                        var $9602 = self.nam;
                                                                                                                                                        var $9603 = self.ini;
                                                                                                                                                        var $9604 = self.idx;
                                                                                                                                                        var $9605 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($9575, $9601), $9602, $9603, $9604, $9605);
                                                                                                                                                        var self = $9599;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                var $9607 = self.value;
                                                                                                                                                                var $9608 = $9607;
                                                                                                                                                                var _deri$88 = $9608;
                                                                                                                                                                break;
                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                var $9609 = List$nil;
                                                                                                                                                                var _deri$88 = $9609;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9606 = Parser$Reply$value$(_reply$pst$87, Kind$Parser$ADT$Datatype$new$($9503, _pars$58, _inds$59, $9567, _deri$88));
                                                                                                                                                        var $9600 = $9606;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9576 = $9600;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9574 = $9576;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9568 = $9574;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9560 = $9568;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9558 = $9560;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9552 = $9558;
                                                                                                        break;
                                                                                                };
                                                                                                var $9528 = $9552;
                                                                                                break;
                                                                                        };
                                                                                        var $9526 = $9528;
                                                                                        break;
                                                                                };
                                                                                var $9520 = $9526;
                                                                                break;
                                                                        };
                                                                        var $9512 = $9520;
                                                                        break;
                                                                };
                                                                var $9510 = $9512;
                                                                break;
                                                        };
                                                        var $9504 = $9510;
                                                        break;
                                                };
                                                var $9496 = $9504;
                                                break;
                                        };
                                        var $9494 = $9496;
                                        break;
                                };
                                var $9488 = $9494;
                                break;
                        };
                        var $9481 = $9488;
                        break;
                };
                var $9479 = $9481;
                break;
        };
        return $9479;
    };
    const Kind$Parser$ADT$adt = x0 => Kind$Parser$ADT$adt$(x0);

    function Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, _inds$3) {
        var self = _inds$3;
        switch (self._) {
            case 'List.cons':
                var $9611 = self.head;
                var $9612 = self.tail;
                var self = $9611;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9614 = self.eras;
                        var $9615 = self.name;
                        var $9616 = self.term;
                        var $9617 = Kind$Term$all$($9614, "", $9615, $9616, (_s$9 => _x$10 => {
                            var $9618 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, $9612);
                            return $9618;
                        }));
                        var $9613 = $9617;
                        break;
                };
                var $9610 = $9613;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9620 = self.pars;
                        var $9621 = self.inds;
                        var _slf$9 = Kind$Term$ref$(_name$2);
                        var _slf$10 = (() => {
                            var $9624 = _slf$9;
                            var $9625 = $9620;
                            let _slf$11 = $9624;
                            let _v$10;
                            while ($9625._ === 'List.cons') {
                                _v$10 = $9625.head;
                                var $9624 = Kind$Term$app$(_slf$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9626 = self.name;
                                            var $9627 = $9626;
                                            return $9627;
                                    };
                                })()));
                                _slf$11 = $9624;
                                $9625 = $9625.tail;
                            }
                            return _slf$11;
                        })();
                        var _slf$11 = (() => {
                            var $9629 = _slf$10;
                            var $9630 = $9621;
                            let _slf$12 = $9629;
                            let _v$11;
                            while ($9630._ === 'List.cons') {
                                _v$11 = $9630.head;
                                var $9629 = Kind$Term$app$(_slf$12, Kind$Term$ref$((() => {
                                    var self = _v$11;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9631 = self.name;
                                            var $9632 = $9631;
                                            return $9632;
                                    };
                                })()));
                                _slf$12 = $9629;
                                $9630 = $9630.tail;
                            }
                            return _slf$12;
                        })();
                        var $9622 = Kind$Term$all$(Bool$false, "", "", _slf$11, (_s$12 => _x$13 => {
                            var $9633 = Kind$Term$typ;
                            return $9633;
                        }));
                        var $9619 = $9622;
                        break;
                };
                var $9610 = $9619;
                break;
        };
        return $9610;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$motive$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$motive$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9635 = self.name;
                var $9636 = self.inds;
                var $9637 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, $9635, $9636);
                var $9634 = $9637;
                break;
        };
        return $9634;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive = x0 => Kind$Parser$ADT$Datatype$build_term$motive$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $9638 = self.head;
                        var $9639 = self.tail;
                        var $9640 = String$flatten$go$($9639, (_res$2 + $9638));
                        return $9640;
                    case 'List.nil':
                        var $9641 = _res$2;
                        return $9641;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $9642 = String$flatten$go$(_xs$1, "");
        return $9642;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, _args$3) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9644 = self.head;
                var $9645 = self.tail;
                var self = $9644;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9647 = self.eras;
                        var $9648 = self.name;
                        var $9649 = self.term;
                        var _eras$9 = $9647;
                        var _name$10 = $9648;
                        var _xtyp$11 = $9649;
                        var _body$12 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9645);
                        var $9650 = Kind$Term$all$(_eras$9, "", _name$10, _xtyp$11, (_s$13 => _x$14 => {
                            var $9651 = _body$12;
                            return $9651;
                        }));
                        var $9646 = $9650;
                        break;
                };
                var $9643 = $9646;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9653 = self.name;
                        var $9654 = self.pars;
                        var self = _ctor$2;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9656 = self.name;
                                var $9657 = self.args;
                                var $9658 = self.inds;
                                var _ret$12 = Kind$Term$ref$(Kind$Name$read$("P"));
                                var _ret$13 = (() => {
                                    var $9661 = _ret$12;
                                    var $9662 = $9658;
                                    let _ret$14 = $9661;
                                    let _v$13;
                                    while ($9662._ === 'List.cons') {
                                        _v$13 = $9662.head;
                                        var $9661 = Kind$Term$app$(_ret$14, (() => {
                                            var self = _v$13;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9663 = self.term;
                                                    var $9664 = $9663;
                                                    return $9664;
                                            };
                                        })());
                                        _ret$14 = $9661;
                                        $9662 = $9662.tail;
                                    }
                                    return _ret$14;
                                })();
                                var _ctr$14 = String$flatten$(List$cons$($9653, List$cons$(Kind$Name$read$("."), List$cons$($9656, List$nil))));
                                var _slf$15 = Kind$Term$ref$(_ctr$14);
                                var _slf$16 = (() => {
                                    var $9666 = _slf$15;
                                    var $9667 = $9654;
                                    let _slf$17 = $9666;
                                    let _v$16;
                                    while ($9667._ === 'List.cons') {
                                        _v$16 = $9667.head;
                                        var $9666 = Kind$Term$app$(_slf$17, Kind$Term$ref$((() => {
                                            var self = _v$16;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9668 = self.name;
                                                    var $9669 = $9668;
                                                    return $9669;
                                            };
                                        })()));
                                        _slf$17 = $9666;
                                        $9667 = $9667.tail;
                                    }
                                    return _slf$17;
                                })();
                                var _slf$17 = (() => {
                                    var $9671 = _slf$16;
                                    var $9672 = $9657;
                                    let _slf$18 = $9671;
                                    let _v$17;
                                    while ($9672._ === 'List.cons') {
                                        _v$17 = $9672.head;
                                        var $9671 = Kind$Term$app$(_slf$18, Kind$Term$ref$((() => {
                                            var self = _v$17;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9673 = self.name;
                                                    var $9674 = $9673;
                                                    return $9674;
                                            };
                                        })()));
                                        _slf$18 = $9671;
                                        $9672 = $9672.tail;
                                    }
                                    return _slf$18;
                                })();
                                var $9659 = Kind$Term$app$(_ret$13, _slf$17);
                                var $9655 = $9659;
                                break;
                        };
                        var $9652 = $9655;
                        break;
                };
                var $9643 = $9652;
                break;
        };
        return $9643;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructor$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9676 = self.args;
                var $9677 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9676);
                var $9675 = $9677;
                break;
        };
        return $9675;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor = x0 => x1 => Kind$Parser$ADT$Datatype$build_term$constructor$(x0, x1);

    function Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9679 = self.head;
                var $9680 = self.tail;
                var self = $9679;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9682 = self.name;
                        var $9683 = Kind$Term$all$(Bool$false, "", $9682, Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, $9679), (_s$9 => _x$10 => {
                            var $9684 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, $9680);
                            return $9684;
                        }));
                        var $9681 = $9683;
                        break;
                };
                var $9678 = $9681;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9686 = self.inds;
                        var _ret$9 = Kind$Term$ref$(Kind$Name$read$("P"));
                        var _ret$10 = (() => {
                            var $9689 = _ret$9;
                            var $9690 = $9686;
                            let _ret$11 = $9689;
                            let _v$10;
                            while ($9690._ === 'List.cons') {
                                _v$10 = $9690.head;
                                var $9689 = Kind$Term$app$(_ret$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9691 = self.name;
                                            var $9692 = $9691;
                                            return $9692;
                                    };
                                })()));
                                _ret$11 = $9689;
                                $9690 = $9690.tail;
                            }
                            return _ret$11;
                        })();
                        var $9687 = Kind$Term$app$(_ret$10, Kind$Term$ref$((_name$2 + ".Self")));
                        var $9685 = $9687;
                        break;
                };
                var $9678 = $9685;
                break;
        };
        return $9678;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructors$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9694 = self.name;
                var $9695 = self.ctrs;
                var $9696 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, $9694, $9695);
                var $9693 = $9696;
                break;
        };
        return $9693;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors = x0 => Kind$Parser$ADT$Datatype$build_term$constructors$(x0);

    function Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9698 = self.head;
                var $9699 = self.tail;
                var self = $9698;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9701 = self.name;
                        var $9702 = Kind$Term$lam$($9701, (_x$10 => {
                            var $9703 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, $9699, _inds$4);
                            return $9703;
                        }));
                        var $9700 = $9702;
                        break;
                };
                var $9697 = $9700;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9705 = self.head;
                        var $9706 = self.tail;
                        var self = $9705;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9708 = self.name;
                                var $9709 = Kind$Term$lam$($9708, (_x$10 => {
                                    var $9710 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, $9706);
                                    return $9710;
                                }));
                                var $9707 = $9709;
                                break;
                        };
                        var $9704 = $9707;
                        break;
                    case 'List.nil':
                        var $9711 = Kind$Term$all$(Bool$true, (_name$2 + ".Self"), Kind$Name$read$("P"), Kind$Parser$ADT$Datatype$build_term$motive$(_type$1), (_s$5 => _x$6 => {
                            var $9712 = Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1);
                            return $9712;
                        }));
                        var $9704 = $9711;
                        break;
                };
                var $9697 = $9704;
                break;
        };
        return $9697;
    };
    const Kind$Parser$ADT$Datatype$build_term$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_term$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_term$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9714 = self.name;
                var $9715 = self.pars;
                var $9716 = self.inds;
                var $9717 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, $9714, $9715, $9716);
                var $9713 = $9717;
                break;
        };
        return $9713;
    };
    const Kind$Parser$ADT$Datatype$build_term = x0 => Kind$Parser$ADT$Datatype$build_term$(x0);

    function Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9719 = self.head;
                var $9720 = self.tail;
                var self = $9719;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9722 = self.name;
                        var $9723 = self.term;
                        var $9724 = Kind$Term$all$(Bool$false, "", $9722, $9723, (_s$10 => _x$11 => {
                            var $9725 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, $9720, _inds$4);
                            return $9725;
                        }));
                        var $9721 = $9724;
                        break;
                };
                var $9718 = $9721;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9727 = self.head;
                        var $9728 = self.tail;
                        var self = $9727;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9730 = self.name;
                                var $9731 = self.term;
                                var $9732 = Kind$Term$all$(Bool$false, "", $9730, $9731, (_s$10 => _x$11 => {
                                    var $9733 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, $9728);
                                    return $9733;
                                }));
                                var $9729 = $9732;
                                break;
                        };
                        var $9726 = $9729;
                        break;
                    case 'List.nil':
                        var $9734 = Kind$Term$typ;
                        var $9726 = $9734;
                        break;
                };
                var $9718 = $9726;
                break;
        };
        return $9718;
    };
    const Kind$Parser$ADT$Datatype$build_type$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_type$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_type$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9736 = self.name;
                var $9737 = self.pars;
                var $9738 = self.inds;
                var $9739 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, $9736, $9737, $9738);
                var $9735 = $9739;
                break;
        };
        return $9735;
    };
    const Kind$Parser$ADT$Datatype$build_type = x0 => Kind$Parser$ADT$Datatype$build_type$(x0);

    function Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9741 = self.head;
                var $9742 = self.tail;
                var self = $9741;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9744 = self.name;
                        var $9745 = Kind$Term$lam$($9744, (_x$9 => {
                            var $9746 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9742);
                            return $9746;
                        }));
                        var $9743 = $9745;
                        break;
                };
                var $9740 = $9743;
                break;
            case 'List.nil':
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9748 = self.name;
                        var $9749 = self.args;
                        var _ret$7 = Kind$Term$ref$($9748);
                        var _ret$8 = (() => {
                            var $9752 = _ret$7;
                            var $9753 = $9749;
                            let _ret$9 = $9752;
                            let _arg$8;
                            while ($9753._ === 'List.cons') {
                                _arg$8 = $9753.head;
                                var $9752 = Kind$Term$app$(_ret$9, Kind$Term$ref$((() => {
                                    var self = _arg$8;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9754 = self.name;
                                            var $9755 = $9754;
                                            return $9755;
                                    };
                                })()));
                                _ret$9 = $9752;
                                $9753 = $9753.tail;
                            }
                            return _ret$9;
                        })();
                        var $9750 = _ret$8;
                        var $9747 = $9750;
                        break;
                };
                var $9740 = $9747;
                break;
        };
        return $9740;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt$go = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$build_term$opt$go$(x0, x1, x2);

    function Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9757 = self.ctrs;
                var $9758 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9757);
                var $9756 = $9758;
                break;
        };
        return $9756;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$opt$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9760 = self.head;
                var $9761 = self.tail;
                var self = $9760;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9763 = self.name;
                        var $9764 = Kind$Term$lam$($9763, (_x$11 => {
                            var $9765 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, $9761, _args$5);
                            return $9765;
                        }));
                        var $9762 = $9764;
                        break;
                };
                var $9759 = $9762;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9767 = self.head;
                        var $9768 = self.tail;
                        var self = $9767;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9770 = self.name;
                                var $9771 = Kind$Term$lam$($9770, (_x$11 => {
                                    var $9772 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, $9768);
                                    return $9772;
                                }));
                                var $9769 = $9771;
                                break;
                        };
                        var $9766 = $9769;
                        break;
                    case 'List.nil':
                        var $9773 = Kind$Term$lam$(Kind$Name$read$("P"), (_x$6 => {
                            var $9774 = Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2);
                            return $9774;
                        }));
                        var $9766 = $9773;
                        break;
                };
                var $9759 = $9766;
                break;
        };
        return $9759;
    };
    const Kind$Parser$ADT$Constructor$build_term$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_term$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_term$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9776 = self.name;
                var $9777 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9779 = self.args;
                        var $9780 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, $9776, $9777, $9779);
                        var $9778 = $9780;
                        break;
                };
                var $9775 = $9778;
                break;
        };
        return $9775;
    };
    const Kind$Parser$ADT$Constructor$build_term = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9782 = self.head;
                var $9783 = self.tail;
                var self = $9782;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9785 = self.eras;
                        var $9786 = self.name;
                        var $9787 = self.term;
                        var $9788 = Kind$Term$all$($9785, "", $9786, $9787, (_s$11 => _x$12 => {
                            var $9789 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, $9783, _args$5);
                            return $9789;
                        }));
                        var $9784 = $9788;
                        break;
                };
                var $9781 = $9784;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9791 = self.head;
                        var $9792 = self.tail;
                        var self = $9791;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9794 = self.eras;
                                var $9795 = self.name;
                                var $9796 = self.term;
                                var $9797 = Kind$Term$all$($9794, "", $9795, $9796, (_s$11 => _x$12 => {
                                    var $9798 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, $9792);
                                    return $9798;
                                }));
                                var $9793 = $9797;
                                break;
                        };
                        var $9790 = $9793;
                        break;
                    case 'List.nil':
                        var self = _type$1;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Datatype.new':
                                var $9800 = self.pars;
                                var self = _ctor$2;
                                switch (self._) {
                                    case 'Kind.Parser.ADT.Constructor.new':
                                        var $9802 = self.inds;
                                        var _type$14 = Kind$Term$ref$(_name$3);
                                        var _type$15 = (() => {
                                            var $9805 = _type$14;
                                            var $9806 = $9800;
                                            let _type$16 = $9805;
                                            let _v$15;
                                            while ($9806._ === 'List.cons') {
                                                _v$15 = $9806.head;
                                                var $9805 = Kind$Term$app$(_type$16, Kind$Term$ref$((() => {
                                                    var self = _v$15;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9807 = self.name;
                                                            var $9808 = $9807;
                                                            return $9808;
                                                    };
                                                })()));
                                                _type$16 = $9805;
                                                $9806 = $9806.tail;
                                            }
                                            return _type$16;
                                        })();
                                        var _type$16 = (() => {
                                            var $9810 = _type$15;
                                            var $9811 = $9802;
                                            let _type$17 = $9810;
                                            let _v$16;
                                            while ($9811._ === 'List.cons') {
                                                _v$16 = $9811.head;
                                                var $9810 = Kind$Term$app$(_type$17, (() => {
                                                    var self = _v$16;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9812 = self.term;
                                                            var $9813 = $9812;
                                                            return $9813;
                                                    };
                                                })());
                                                _type$17 = $9810;
                                                $9811 = $9811.tail;
                                            }
                                            return _type$17;
                                        })();
                                        var $9803 = _type$16;
                                        var $9801 = $9803;
                                        break;
                                };
                                var $9799 = $9801;
                                break;
                        };
                        var $9790 = $9799;
                        break;
                };
                var $9781 = $9790;
                break;
        };
        return $9781;
    };
    const Kind$Parser$ADT$Constructor$build_type$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_type$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_type$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9815 = self.name;
                var $9816 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9818 = self.args;
                        var $9819 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, $9815, $9816, $9818);
                        var $9817 = $9819;
                        break;
                };
                var $9814 = $9817;
                break;
        };
        return $9814;
    };
    const Kind$Parser$ADT$Constructor$build_type = x0 => x1 => Kind$Parser$ADT$Constructor$build_type$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $9821 = Bool$true;
                var $9820 = $9821;
                break;
            case 'List.cons':
                var $9822 = Bool$false;
                var $9820 = $9822;
                break;
        };
        return $9820;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Kind$Term$get_args$go$(_term$1, _args$2) {
        var Kind$Term$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Term$get_args$go = _term$1 => _args$2 => Kind$Term$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $9823 = self.func;
                        var $9824 = self.argm;
                        var $9825 = Kind$Term$get_args$go$($9823, List$cons$($9824, _args$2));
                        return $9825;
                    case 'Kind.Term.ori':
                        var $9826 = self.expr;
                        var $9827 = Kind$Term$get_args$go$($9826, _args$2);
                        return $9827;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $9828 = Pair$new$(_term$1, _args$2);
                        return $9828;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$get_args$go = x0 => x1 => Kind$Term$get_args$go$(x0, x1);

    function Kind$Term$get_args$(_term$1) {
        var $9829 = Kind$Term$get_args$go$(_term$1, List$nil);
        return $9829;
    };
    const Kind$Term$get_args = x0 => Kind$Term$get_args$(x0);

    function Kind$Parser$ADT$Derive$stringifier$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9831 = self.fst;
                var $9832 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9831) + ".stringifier"));
                var _term$6 = (() => {
                    var $9835 = _term$5;
                    var $9836 = $9832;
                    let _term$7 = $9835;
                    let _par$6;
                    while ($9836._ === 'List.cons') {
                        _par$6 = $9836.head;
                        var $9835 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9835;
                        $9836 = $9836.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9838 = _term$6;
                    var $9839 = $9832;
                    let _term$8 = $9838;
                    let _par$7;
                    while ($9839._ === 'List.cons') {
                        _par$7 = $9839.head;
                        var $9838 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$stringifier$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9838;
                        $9839 = $9839.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9840 = self.value;
                        var self = $9840;
                        switch (self._) {
                            case 'Pair.new':
                                var $9842 = self.fst;
                                var $9843 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9842));
                                var _term$12 = Kind$Term$app$(_term$11, $9843);
                                var $9844 = _term$12;
                                var $9841 = $9844;
                                break;
                        };
                        var $9833 = $9841;
                        break;
                    case 'Maybe.none':
                        var $9845 = _term$7;
                        var $9833 = $9845;
                        break;
                };
                var $9830 = $9833;
                break;
        };
        return $9830;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$args$(_args$1, _fst$2) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9847 = self.head;
                var $9848 = self.tail;
                var self = $9847;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9850 = self.name;
                        var $9851 = self.term;
                        var self = Kind$Term$get_args$($9851);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$10 = Kind$Parser$ADT$Derive$stringifier$term$args$($9848, Bool$false);
                                var _term$11 = Kind$Parser$ADT$Derive$stringifier$term$cont$($9851, Maybe$some$(Pair$new$(("x." + $9850), _rest$10)));
                                var _term$12 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$((() => {
                                    var self = _fst$2;
                                    if (self) {
                                        var $9854 = "(";
                                        return $9854;
                                    } else {
                                        var $9855 = ",";
                                        return $9855;
                                    };
                                })())), _term$11);
                                var $9853 = _term$12;
                                var $9852 = $9853;
                                break;
                        };
                        var $9849 = $9852;
                        break;
                };
                var $9846 = $9849;
                break;
            case 'List.nil':
                var _term$3 = Kind$Term$ref$("str");
                var self = _fst$2;
                if (self) {
                    var $9857 = _term$3;
                    var _term$4 = $9857;
                } else {
                    var $9858 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$(")")), _term$3);
                    var _term$4 = $9858;
                };
                var $9856 = _term$4;
                var $9846 = $9856;
                break;
        };
        return $9846;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$args = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$args$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, _ctr$2) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9860 = self.name;
                var $9861 = self.args;
                var _term$6 = Kind$Term$ref$("Stringifier.text");
                var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$((_adt_name$1 + ("." + $9860))));
                var _term$8 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$stringifier$term$args$($9861, Bool$true));
                var $9862 = Pair$new$($9860, _term$8);
                var $9859 = $9862;
                break;
        };
        return $9859;
    };
    const Kind$Parser$ADT$Derive$stringifier$ctr = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$ctr$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, _ctrs$2) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9864 = self.head;
                var $9865 = self.tail;
                var $9866 = List$cons$(Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, $9864), Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, $9865));
                var $9863 = $9866;
                break;
            case 'List.nil':
                var $9867 = List$nil;
                var $9863 = $9867;
                break;
        };
        return $9863;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$ctrs = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$ctrs$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9869 = self.name;
                var $9870 = self.pars;
                var $9871 = self.inds;
                var $9872 = self.ctrs;
                var self = (List$is_empty$($9870) && List$is_empty$($9871));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9875 = Kind$Term$lam$("str", (_str$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$stringifier$term$ctrs$($9869, $9872);
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $9878 = _cses$10;
                                var $9879 = _ctrs$9;
                                let _cses$12 = $9878;
                                let _ctr$11;
                                while ($9879._ === 'List.cons') {
                                    _ctr$11 = $9879.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $9880 = self.fst;
                                            var $9881 = self.snd;
                                            var $9882 = Kind$Map$set$($9880, $9881, _cses$12);
                                            var $9878 = $9882;
                                            break;
                                    };
                                    _cses$12 = $9878;
                                    $9879 = $9879.tail;
                                }
                                return _cses$12;
                            })();
                            var $9876 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9876;
                        }));
                        return $9875;
                    }));
                    var $9874 = Maybe$some$(_term$7);
                    var $9873 = $9874;
                } else {
                    var $9883 = Maybe$none;
                    var $9873 = $9883;
                };
                var $9868 = $9873;
                break;
        };
        return $9868;
    };
    const Kind$Parser$ADT$Derive$stringifier$term = x0 => Kind$Parser$ADT$Derive$stringifier$term$(x0);

    function Kind$Parser$ADT$Derive$stringifier$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9885 = self.name;
                var $9886 = self.pars;
                var $9887 = self.inds;
                var self = (List$is_empty$($9886) && List$is_empty$($9887));
                if (self) {
                    var $9889 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Stringifier"), Kind$Term$ref$($9885)));
                    var $9888 = $9889;
                } else {
                    var $9890 = Maybe$none;
                    var $9888 = $9890;
                };
                var $9884 = $9888;
                break;
        };
        return $9884;
    };
    const Kind$Parser$ADT$Derive$stringifier$type = x0 => Kind$Parser$ADT$Derive$stringifier$type$(x0);

    function Kind$Parser$ADT$Derived$new$(_name$1, _arit$2, _term$3, _type$4) {
        var $9891 = ({
            _: 'Kind.Parser.ADT.Derived.new',
            'name': _name$1,
            'arit': _arit$2,
            'term': _term$3,
            'type': _type$4
        });
        return $9891;
    };
    const Kind$Parser$ADT$Derived$new = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Derived$new$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Derive$parser$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9893 = self.fst;
                var $9894 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($9893) + ".parser"));
                var _term$5 = (() => {
                    var $9897 = _term$4;
                    var $9898 = $9894;
                    let _term$6 = $9897;
                    let _par$5;
                    while ($9898._ === 'List.cons') {
                        _par$5 = $9898.head;
                        var $9897 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $9897;
                        $9898 = $9898.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $9900 = _term$5;
                    var $9901 = $9894;
                    let _term$7 = $9900;
                    let _par$6;
                    while ($9901._ === 'List.cons') {
                        _par$6 = $9901.head;
                        var $9900 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$parser$term$cont$(_par$6));
                        _term$7 = $9900;
                        $9901 = $9901.tail;
                    }
                    return _term$7;
                })();
                var $9895 = _term$6;
                var $9892 = $9895;
                break;
        };
        return $9892;
    };
    const Kind$Parser$ADT$Derive$parser$term$cont = x0 => Kind$Parser$ADT$Derive$parser$term$cont$(x0);

    function Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9903 = self.head;
                var $9904 = self.tail;
                var self = $9903;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9906 = self.name;
                        var $9907 = self.term;
                        var _term$11 = Kind$Term$ref$("Parser.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _cont$14 = Kind$Term$ref$("Parser.prefix");
                        var _cont$15 = Kind$Term$app$(_cont$14, Kind$Term$hol$(Bits$e));
                        var _cont$16 = Kind$Term$app$(_cont$15, Kind$Term$str$((() => {
                            var self = _fst$5;
                            if (self) {
                                var $9909 = "(";
                                return $9909;
                            } else {
                                var $9910 = ",";
                                return $9910;
                            };
                        })()));
                        var _cont$17 = Kind$Term$app$(_cont$16, Kind$Parser$ADT$Derive$parser$term$cont$($9907));
                        var _term$18 = Kind$Term$app$(_term$13, _cont$17);
                        var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$($9906, (_x$19 => {
                            var $9911 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, $9904, List$cons$(_x$19, _vars$4), Bool$false);
                            return $9911;
                        })));
                        var $9908 = _term$19;
                        var $9905 = $9908;
                        break;
                };
                var $9902 = $9905;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Parser.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $9913 = Kind$Term$app$(_func$10, _var$9);
                    return $9913;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var self = _fst$5;
                if (self) {
                    var $9914 = _body$10;
                    var $9912 = $9914;
                } else {
                    var _term$11 = Kind$Term$ref$("Parser.bind");
                    var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                    var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(")")));
                    var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$("", (_x$15 => {
                        var $9916 = _body$10;
                        return $9916;
                    })));
                    var $9915 = _term$15;
                    var $9912 = $9915;
                };
                var $9902 = $9912;
                break;
        };
        return $9902;
    };
    const Kind$Parser$ADT$Derive$parser$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$parser$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, _cses$2) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9918 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $9920 = self.head;
                        var $9921 = self.tail;
                        var self = $9920;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9923 = self.name;
                                var $9924 = self.args;
                                var _cnam$13 = ($9918 + ("." + $9923));
                                var _term$14 = Kind$Term$ref$("Parser.bind");
                                var _term$15 = Kind$Term$app$(_term$14, Kind$Term$hol$(Bits$e));
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(_cnam$13)));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$lam$("", (_x$18 => {
                                    var $9926 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$13, $9924, List$nil, Bool$true);
                                    return $9926;
                                })));
                                var _list$19 = Kind$Term$ref$("List.cons");
                                var _list$20 = Kind$Term$app$(_list$19, Kind$Term$hol$(Bits$e));
                                var _list$21 = Kind$Term$app$(_list$20, _term$18);
                                var _list$22 = Kind$Term$app$(_list$21, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9921));
                                var $9925 = _list$22;
                                var $9922 = $9925;
                                break;
                        };
                        var $9919 = $9922;
                        break;
                    case 'List.nil':
                        var _fail$8 = Kind$Term$ref$("Parser.fail");
                        var _fail$9 = Kind$Term$app$(_fail$8, Kind$Term$hol$(Bits$e));
                        var _fail$10 = Kind$Term$app$(_fail$9, Kind$Term$str$(""));
                        var _term$11 = Kind$Term$ref$("List.cons");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, _fail$10);
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)));
                        var $9927 = _term$14;
                        var $9919 = $9927;
                        break;
                };
                var $9917 = $9919;
                break;
        };
        return $9917;
    };
    const Kind$Parser$ADT$Derive$parser$term$cses = x0 => x1 => Kind$Parser$ADT$Derive$parser$term$cses$(x0, x1);

    function Kind$Parser$ADT$Derive$parser$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9929 = self.pars;
                var $9930 = self.inds;
                var $9931 = self.ctrs;
                var self = (List$is_empty$($9929) && List$is_empty$($9930));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Parser.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9931));
                    var $9933 = Maybe$some$(_term$9);
                    var $9932 = $9933;
                } else {
                    var $9934 = Maybe$none;
                    var $9932 = $9934;
                };
                var $9928 = $9932;
                break;
        };
        return $9928;
    };
    const Kind$Parser$ADT$Derive$parser$term = x0 => Kind$Parser$ADT$Derive$parser$term$(x0);

    function Kind$Parser$ADT$Derive$parser$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9936 = self.name;
                var $9937 = self.pars;
                var $9938 = self.inds;
                var self = (List$is_empty$($9937) && List$is_empty$($9938));
                if (self) {
                    var $9940 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Parser"), Kind$Term$ref$($9936)));
                    var $9939 = $9940;
                } else {
                    var $9941 = Maybe$none;
                    var $9939 = $9941;
                };
                var $9935 = $9939;
                break;
        };
        return $9935;
    };
    const Kind$Parser$ADT$Derive$parser$type = x0 => Kind$Parser$ADT$Derive$parser$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9943 = self.fst;
                var $9944 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9943) + ".serializer"));
                var _term$6 = (() => {
                    var $9947 = _term$5;
                    var $9948 = $9944;
                    let _term$7 = $9947;
                    let _par$6;
                    while ($9948._ === 'List.cons') {
                        _par$6 = $9948.head;
                        var $9947 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9947;
                        $9948 = $9948.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9950 = _term$6;
                    var $9951 = $9944;
                    let _term$8 = $9950;
                    let _par$7;
                    while ($9951._ === 'List.cons') {
                        _par$7 = $9951.head;
                        var $9950 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$serializer$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9950;
                        $9951 = $9951.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9952 = self.value;
                        var self = $9952;
                        switch (self._) {
                            case 'Pair.new':
                                var $9954 = self.fst;
                                var $9955 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9954));
                                var _term$12 = Kind$Term$app$(_term$11, $9955);
                                var $9956 = _term$12;
                                var $9953 = $9956;
                                break;
                        };
                        var $9945 = $9953;
                        break;
                    case 'Maybe.none':
                        var $9957 = _term$7;
                        var $9945 = $9957;
                        break;
                };
                var $9942 = $9945;
                break;
        };
        return $9942;
    };
    const Kind$Parser$ADT$Derive$serializer$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$serializer$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$term$args$(_args$1) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9959 = self.head;
                var $9960 = self.tail;
                var self = $9959;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9962 = self.name;
                        var $9963 = self.term;
                        var self = Kind$Term$get_args$($9963);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$9 = Kind$Parser$ADT$Derive$serializer$term$args$($9960);
                                var _term$10 = Kind$Parser$ADT$Derive$serializer$term$cont$($9963, Maybe$some$(Pair$new$(("x." + $9962), _rest$9)));
                                var $9965 = _term$10;
                                var $9964 = $9965;
                                break;
                        };
                        var $9961 = $9964;
                        break;
                };
                var $9958 = $9961;
                break;
            case 'List.nil':
                var $9966 = Kind$Term$ref$("bs");
                var $9958 = $9966;
                break;
        };
        return $9958;
    };
    const Kind$Parser$ADT$Derive$serializer$term$args = x0 => Kind$Parser$ADT$Derive$serializer$term$args$(x0);

    function Kind$Parser$ADT$Derive$serializer$ctr$bits$(_bs$1, _rest$2) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9968 = self.slice(0, -1);
                var $9969 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9968, _rest$2));
                var $9967 = $9969;
                break;
            case 'i':
                var $9970 = self.slice(0, -1);
                var $9971 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9970, _rest$2));
                var $9967 = $9971;
                break;
            case 'e':
                var $9972 = _rest$2;
                var $9967 = $9972;
                break;
        };
        return $9967;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr$bits = x0 => x1 => Kind$Parser$ADT$Derive$serializer$ctr$bits$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, _ctr$2, _header$3) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9974 = self.name;
                var $9975 = self.args;
                var _term$7 = Kind$Parser$ADT$Derive$serializer$term$args$($9975);
                var _term$8 = Kind$Parser$ADT$Derive$serializer$ctr$bits$(_header$3, _term$7);
                var $9976 = Pair$new$($9974, _term$8);
                var $9973 = $9976;
                break;
        };
        return $9973;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$ctr$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, _ctrs$2, _header$3) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9978 = self.head;
                var $9979 = self.tail;
                var $9980 = List$cons$(Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, $9978, _header$3), Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, $9979, Bits$inc$(_header$3)));
                var $9977 = $9980;
                break;
            case 'List.nil':
                var $9981 = List$nil;
                var $9977 = $9981;
                break;
        };
        return $9977;
    };
    const Kind$Parser$ADT$Derive$serializer$term$ctrs = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$term$ctrs$(x0, x1, x2);

    function Bits$zeros$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9983 = Bits$e;
            var $9982 = $9983;
        } else {
            var $9984 = (self - 1n);
            var $9985 = (Bits$zeros$($9984) + '0');
            var $9982 = $9985;
        };
        return $9982;
    };
    const Bits$zeros = x0 => Bits$zeros$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);

    function Nat$bitlen$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9987 = 0n;
            var $9986 = $9987;
        } else {
            var $9988 = (self - 1n);
            var $9989 = Nat$succ$(Nat$bitlen$((_n$1 / 2n)));
            var $9986 = $9989;
        };
        return $9986;
    };
    const Nat$bitlen = x0 => Nat$bitlen$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9991 = self.name;
                var $9992 = self.pars;
                var $9993 = self.inds;
                var $9994 = self.ctrs;
                var self = (List$is_empty$($9992) && List$is_empty$($9993));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9997 = Kind$Term$lam$("bs", (_bs$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$serializer$term$ctrs$($9991, $9994, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($9994))))));
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $10000 = _cses$10;
                                var $10001 = _ctrs$9;
                                let _cses$12 = $10000;
                                let _ctr$11;
                                while ($10001._ === 'List.cons') {
                                    _ctr$11 = $10001.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $10002 = self.fst;
                                            var $10003 = self.snd;
                                            var $10004 = Kind$Map$set$($10002, $10003, _cses$12);
                                            var $10000 = $10004;
                                            break;
                                    };
                                    _cses$12 = $10000;
                                    $10001 = $10001.tail;
                                }
                                return _cses$12;
                            })();
                            var $9998 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9998;
                        }));
                        return $9997;
                    }));
                    var $9996 = Maybe$some$(_term$7);
                    var $9995 = $9996;
                } else {
                    var $10005 = Maybe$none;
                    var $9995 = $10005;
                };
                var $9990 = $9995;
                break;
        };
        return $9990;
    };
    const Kind$Parser$ADT$Derive$serializer$term = x0 => Kind$Parser$ADT$Derive$serializer$term$(x0);

    function Kind$Parser$ADT$Derive$serializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10007 = self.name;
                var $10008 = self.pars;
                var $10009 = self.inds;
                var self = (List$is_empty$($10008) && List$is_empty$($10009));
                if (self) {
                    var $10011 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Serializer"), Kind$Term$ref$($10007)));
                    var $10010 = $10011;
                } else {
                    var $10012 = Maybe$none;
                    var $10010 = $10012;
                };
                var $10006 = $10010;
                break;
        };
        return $10006;
    };
    const Kind$Parser$ADT$Derive$serializer$type = x0 => Kind$Parser$ADT$Derive$serializer$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $10014 = self.slice(0, -1);
                var $10015 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$term$bits$($10014));
                var $10013 = $10015;
                break;
            case 'i':
                var $10016 = self.slice(0, -1);
                var $10017 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$term$bits$($10016));
                var $10013 = $10017;
                break;
            case 'e':
                var $10018 = Kind$Term$ref$("Bits.e");
                var $10013 = $10018;
                break;
        };
        return $10013;
    };
    const Kind$Parser$ADT$Derive$serializer$term$bits = x0 => Kind$Parser$ADT$Derive$serializer$term$bits$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $10020 = self.fst;
                var $10021 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($10020) + ".deserializer"));
                var _term$5 = (() => {
                    var $10024 = _term$4;
                    var $10025 = $10021;
                    let _term$6 = $10024;
                    let _par$5;
                    while ($10025._ === 'List.cons') {
                        _par$5 = $10025.head;
                        var $10024 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $10024;
                        $10025 = $10025.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $10027 = _term$5;
                    var $10028 = $10021;
                    let _term$7 = $10027;
                    let _par$6;
                    while ($10028._ === 'List.cons') {
                        _par$6 = $10028.head;
                        var $10027 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$deserializer$term$cont$(_par$6));
                        _term$7 = $10027;
                        $10028 = $10028.tail;
                    }
                    return _term$7;
                })();
                var $10022 = _term$6;
                var $10019 = $10022;
                break;
        };
        return $10019;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cont = x0 => Kind$Parser$ADT$Derive$deserializer$term$cont$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $10030 = self.head;
                var $10031 = self.tail;
                var self = $10030;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $10033 = self.name;
                        var $10034 = self.term;
                        var _term$11 = Kind$Term$ref$("Deserializer.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Parser$ADT$Derive$deserializer$term$cont$($10034));
                        var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$($10033, (_x$15 => {
                            var $10036 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, $10031, List$cons$(_x$15, _vars$4), Bool$false);
                            return $10036;
                        })));
                        var $10035 = _term$15;
                        var $10032 = $10035;
                        break;
                };
                var $10029 = $10032;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Deserializer.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $10038 = Kind$Term$app$(_func$10, _var$9);
                    return $10038;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var $10037 = _body$10;
                var $10029 = $10037;
                break;
        };
        return $10029;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$deserializer$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, _cses$2, _header$3) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10040 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $10042 = self.head;
                        var $10043 = self.tail;
                        var self = $10042;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $10045 = self.name;
                                var $10046 = self.args;
                                var _cnam$14 = ($10040 + ("." + $10045));
                                var _term$15 = Kind$Term$ref$("Deserializer.bind");
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$app$(Kind$Term$ref$("Deserializer.bits"), Kind$Parser$ADT$Derive$serializer$term$bits$(_header$3)));
                                var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$("", (_x$19 => {
                                    var $10048 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$14, $10046, List$nil, Bool$true);
                                    return $10048;
                                })));
                                var _list$20 = Kind$Term$ref$("List.cons");
                                var _list$21 = Kind$Term$app$(_list$20, Kind$Term$hol$(Bits$e));
                                var _list$22 = Kind$Term$app$(_list$21, _term$19);
                                var _list$23 = Kind$Term$app$(_list$22, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10043, Bits$inc$(_header$3)));
                                var $10047 = _list$23;
                                var $10044 = $10047;
                                break;
                        };
                        var $10041 = $10044;
                        break;
                    case 'List.nil':
                        var $10049 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                        var $10041 = $10049;
                        break;
                };
                var $10039 = $10041;
                break;
        };
        return $10039;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cses = x0 => x1 => x2 => Kind$Parser$ADT$Derive$deserializer$term$cses$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$deserializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10051 = self.pars;
                var $10052 = self.inds;
                var $10053 = self.ctrs;
                var self = (List$is_empty$($10051) && List$is_empty$($10052));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Deserializer.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $10053, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($10053)))))));
                    var $10055 = Maybe$some$(_term$9);
                    var $10054 = $10055;
                } else {
                    var $10056 = Maybe$none;
                    var $10054 = $10056;
                };
                var $10050 = $10054;
                break;
        };
        return $10050;
    };
    const Kind$Parser$ADT$Derive$deserializer$term = x0 => Kind$Parser$ADT$Derive$deserializer$term$(x0);

    function Kind$Parser$ADT$Derive$deserializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10058 = self.name;
                var $10059 = self.pars;
                var $10060 = self.inds;
                var self = (List$is_empty$($10059) && List$is_empty$($10060));
                if (self) {
                    var $10062 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Deserializer"), Kind$Term$ref$($10058)));
                    var $10061 = $10062;
                } else {
                    var $10063 = Maybe$none;
                    var $10061 = $10063;
                };
                var $10057 = $10061;
                break;
        };
        return $10057;
    };
    const Kind$Parser$ADT$Derive$deserializer$type = x0 => Kind$Parser$ADT$Derive$deserializer$type$(x0);

    function Kind$Parser$ADT$Derive$by_name$(_deri$1, _adt$2) {
        var self = _adt$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $10065 = self.name;
                var self = (_deri$1 === "stringifier");
                if (self) {
                    var _name$8 = ($10065 + ("." + _deri$1));
                    var $10067 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                        var $10068 = _m$bind$9;
                        return $10068;
                    }))(Kind$Parser$ADT$Derive$stringifier$term$(_adt$2))((_term$9 => {
                        var $10069 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                            var $10070 = _m$bind$10;
                            return $10070;
                        }))(Kind$Parser$ADT$Derive$stringifier$type$(_adt$2))((_type$10 => {
                            var $10071 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                var $10072 = _m$pure$12;
                                return $10072;
                            }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                            return $10071;
                        }));
                        return $10069;
                    }));
                    var $10066 = $10067;
                } else {
                    var self = (_deri$1 === "parser");
                    if (self) {
                        var _name$8 = ($10065 + ("." + _deri$1));
                        var $10074 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                            var $10075 = _m$bind$9;
                            return $10075;
                        }))(Kind$Parser$ADT$Derive$parser$term$(_adt$2))((_term$9 => {
                            var $10076 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                var $10077 = _m$bind$10;
                                return $10077;
                            }))(Kind$Parser$ADT$Derive$parser$type$(_adt$2))((_type$10 => {
                                var $10078 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                    var $10079 = _m$pure$12;
                                    return $10079;
                                }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                return $10078;
                            }));
                            return $10076;
                        }));
                        var $10073 = $10074;
                    } else {
                        var self = (_deri$1 === "serializer");
                        if (self) {
                            var _name$8 = ($10065 + ("." + _deri$1));
                            var $10081 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                var $10082 = _m$bind$9;
                                return $10082;
                            }))(Kind$Parser$ADT$Derive$serializer$term$(_adt$2))((_term$9 => {
                                var $10083 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $10084 = _m$bind$10;
                                    return $10084;
                                }))(Kind$Parser$ADT$Derive$serializer$type$(_adt$2))((_type$10 => {
                                    var $10085 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10086 = _m$pure$12;
                                        return $10086;
                                    }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                    return $10085;
                                }));
                                return $10083;
                            }));
                            var $10080 = $10081;
                        } else {
                            var self = (_deri$1 === "deserializer");
                            if (self) {
                                var _name$8 = ($10065 + ("." + _deri$1));
                                var $10088 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                    var $10089 = _m$bind$9;
                                    return $10089;
                                }))(Kind$Parser$ADT$Derive$deserializer$term$(_adt$2))((_term$9 => {
                                    var $10090 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $10091 = _m$bind$10;
                                        return $10091;
                                    }))(Kind$Parser$ADT$Derive$deserializer$type$(_adt$2))((_type$10 => {
                                        var $10092 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                            var $10093 = _m$pure$12;
                                            return $10093;
                                        }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                        return $10092;
                                    }));
                                    return $10090;
                                }));
                                var $10087 = $10088;
                            } else {
                                var $10094 = Maybe$none;
                                var $10087 = $10094;
                            };
                            var $10080 = $10087;
                        };
                        var $10073 = $10080;
                    };
                    var $10066 = $10073;
                };
                var $10064 = $10066;
                break;
        };
        return $10064;
    };
    const Kind$Parser$ADT$Derive$by_name = x0 => x1 => Kind$Parser$ADT$Derive$by_name$(x0, x1);

    function Kind$Parser$file$adt$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10096 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10098 = self.err;
                        var self = $10096;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10100 = self.value;
                                var $10101 = Parser$Reply$error$(Parser$Error$combine$($10100, $10098));
                                var $10099 = $10101;
                                break;
                            case 'Maybe.none':
                                var $10102 = Parser$Reply$error$($10098);
                                var $10099 = $10102;
                                break;
                        };
                        var $10097 = $10099;
                        break;
                    case 'Parser.Reply.value':
                        var $10103 = self.pst;
                        var self = $10103;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10105 = self.err;
                                var $10106 = self.nam;
                                var $10107 = self.ini;
                                var $10108 = self.idx;
                                var $10109 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10096, $10105), $10106, $10107, $10108, $10109);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10111 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10113 = self.err;
                                                var self = $10111;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10115 = self.value;
                                                        var $10116 = Parser$Reply$error$(Parser$Error$combine$($10115, $10113));
                                                        var $10114 = $10116;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10117 = Parser$Reply$error$($10113);
                                                        var $10114 = $10117;
                                                        break;
                                                };
                                                var $10112 = $10114;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10118 = self.pst;
                                                var $10119 = self.val;
                                                var self = $10118;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10121 = self.err;
                                                        var $10122 = self.nam;
                                                        var $10123 = self.ini;
                                                        var $10124 = self.idx;
                                                        var $10125 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10111, $10121), $10122, $10123, $10124, $10125);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10127 = self.err;
                                                                var _reply$38 = Kind$Parser$ADT$adt$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $10129 = self.err;
                                                                        var self = $10127;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $10131 = self.value;
                                                                                var $10132 = Parser$Reply$error$(Parser$Error$combine$($10131, $10129));
                                                                                var $10130 = $10132;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $10133 = Parser$Reply$error$($10129);
                                                                                var $10130 = $10133;
                                                                                break;
                                                                        };
                                                                        var $10128 = $10130;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $10134 = self.pst;
                                                                        var $10135 = self.val;
                                                                        var self = $10134;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $10137 = self.err;
                                                                                var $10138 = self.nam;
                                                                                var $10139 = self.ini;
                                                                                var $10140 = self.idx;
                                                                                var $10141 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($10127, $10137), $10138, $10139, $10140, $10141);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10143 = self.err;
                                                                                        var _reply$52 = Parser$get_idx$(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $10145 = self.err;
                                                                                                var self = $10143;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $10147 = self.value;
                                                                                                        var $10148 = Parser$Reply$error$(Parser$Error$combine$($10147, $10145));
                                                                                                        var $10146 = $10148;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $10149 = Parser$Reply$error$($10145);
                                                                                                        var $10146 = $10149;
                                                                                                        break;
                                                                                                };
                                                                                                var $10144 = $10146;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $10150 = self.pst;
                                                                                                var $10151 = self.val;
                                                                                                var self = $10150;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $10153 = self.err;
                                                                                                        var $10154 = self.nam;
                                                                                                        var $10155 = self.ini;
                                                                                                        var $10156 = self.idx;
                                                                                                        var $10157 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($10143, $10153), $10154, $10155, $10156, $10157);
                                                                                                        var _orig$61 = Pair$new$($10119, $10151);
                                                                                                        var self = $10135;
                                                                                                        switch (self._) {
                                                                                                            case 'Kind.Parser.ADT.Datatype.new':
                                                                                                                var $10159 = self.name;
                                                                                                                var $10160 = self.pars;
                                                                                                                var $10161 = self.inds;
                                                                                                                var $10162 = self.ctrs;
                                                                                                                var $10163 = self.deri;
                                                                                                                var _term$67 = Kind$Parser$ADT$Datatype$build_term$($10135);
                                                                                                                var _term$68 = Kind$Term$bind$(List$nil, (_x$68 => {
                                                                                                                    var $10165 = (_x$68 + '1');
                                                                                                                    return $10165;
                                                                                                                }), _term$67);
                                                                                                                var _type$69 = Kind$Parser$ADT$Datatype$build_type$($10135);
                                                                                                                var _type$70 = Kind$Term$bind$(List$nil, (_x$70 => {
                                                                                                                    var $10166 = (_x$70 + '0');
                                                                                                                    return $10166;
                                                                                                                }), _type$69);
                                                                                                                var _arit$71 = ((list_length($10160)) + (list_length($10161)));
                                                                                                                var _defs$72 = Kind$Map$def$(_file$1, _code$2, _orig$61, $10159, _term$68, _type$70, Bool$false, _arit$71, Bool$false, _defs$3);
                                                                                                                var _defs$73 = List$fold$($10162, _defs$72, (_ctr$73 => _defs$74 => {
                                                                                                                    var _typ_name$75 = $10159;
                                                                                                                    var _ctr_arit$76 = (_arit$71 + (list_length((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10168 = self.args;
                                                                                                                                var $10169 = $10168;
                                                                                                                                return $10169;
                                                                                                                        };
                                                                                                                    })())));
                                                                                                                    var _ctr_name$77 = String$flatten$(List$cons$(_typ_name$75, List$cons$(Kind$Name$read$("."), List$cons$((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10170 = self.name;
                                                                                                                                var $10171 = $10170;
                                                                                                                                return $10171;
                                                                                                                        };
                                                                                                                    })(), List$nil))));
                                                                                                                    var _ctr_term$78 = Kind$Parser$ADT$Constructor$build_term$($10135, _ctr$73);
                                                                                                                    var _ctr_term$79 = Kind$Term$bind$(List$nil, (_x$79 => {
                                                                                                                        var $10172 = (_x$79 + '1');
                                                                                                                        return $10172;
                                                                                                                    }), _ctr_term$78);
                                                                                                                    var _ctr_type$80 = Kind$Parser$ADT$Constructor$build_type$($10135, _ctr$73);
                                                                                                                    var _ctr_type$81 = Kind$Term$bind$(List$nil, (_x$81 => {
                                                                                                                        var $10173 = (_x$81 + '0');
                                                                                                                        return $10173;
                                                                                                                    }), _ctr_type$80);
                                                                                                                    var $10167 = Kind$Map$def$(_file$1, _code$2, _orig$61, _ctr_name$77, _ctr_term$79, _ctr_type$81, Bool$true, _ctr_arit$76, Bool$false, _defs$74);
                                                                                                                    return $10167;
                                                                                                                }));
                                                                                                                var _defs$74 = List$fold$($10163, Either$right$(_defs$73), (_deri$74 => _defs$75 => {
                                                                                                                    var self = _defs$75;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Either.left':
                                                                                                                            var $10175 = self.value;
                                                                                                                            var $10176 = Either$left$($10175);
                                                                                                                            var $10174 = $10176;
                                                                                                                            break;
                                                                                                                        case 'Either.right':
                                                                                                                            var $10177 = self.value;
                                                                                                                            var self = Kind$Parser$ADT$Derive$by_name$(_deri$74, $10135);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $10179 = self.value;
                                                                                                                                    var self = $10179;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kind.Parser.ADT.Derived.new':
                                                                                                                                            var $10181 = self.name;
                                                                                                                                            var $10182 = self.arit;
                                                                                                                                            var $10183 = self.term;
                                                                                                                                            var $10184 = self.type;
                                                                                                                                            var _name$82 = $10181;
                                                                                                                                            var _term$83 = $10183;
                                                                                                                                            var _term$84 = Kind$Term$bind$(List$nil, (_x$84 => {
                                                                                                                                                var $10186 = (_x$84 + '1');
                                                                                                                                                return $10186;
                                                                                                                                            }), _term$83);
                                                                                                                                            var _type$85 = $10184;
                                                                                                                                            var _type$86 = Kind$Term$bind$(List$nil, (_x$86 => {
                                                                                                                                                var $10187 = (_x$86 + '0');
                                                                                                                                                return $10187;
                                                                                                                                            }), _type$85);
                                                                                                                                            var _arit$87 = $10182;
                                                                                                                                            var $10185 = Either$right$(Kind$Map$def$(_file$1, _code$2, _orig$61, _name$82, _term$84, _type$86, Bool$false, _arit$87, Bool$false, $10177));
                                                                                                                                            var $10180 = $10185;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $10178 = $10180;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $10188 = Either$left$(("Can\'t derive \'" + (_deri$74 + ("\' for \'" + ($10159 + "\' type.")))));
                                                                                                                                    var $10178 = $10188;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $10174 = $10178;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    return $10174;
                                                                                                                }));
                                                                                                                var self = _defs$74;
                                                                                                                switch (self._) {
                                                                                                                    case 'Either.left':
                                                                                                                        var $10189 = self.value;
                                                                                                                        var $10190 = Parser$fail($10189);
                                                                                                                        var $10164 = $10190;
                                                                                                                        break;
                                                                                                                    case 'Either.right':
                                                                                                                        var $10191 = self.value;
                                                                                                                        var $10192 = (_pst$76 => {
                                                                                                                            var $10193 = Parser$Reply$value$(_pst$76, $10191);
                                                                                                                            return $10193;
                                                                                                                        });
                                                                                                                        var $10164 = $10192;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $10158 = $10164;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $10158 = $10158(_reply$pst$60);
                                                                                                        var $10152 = $10158;
                                                                                                        break;
                                                                                                };
                                                                                                var $10144 = $10152;
                                                                                                break;
                                                                                        };
                                                                                        var $10142 = $10144;
                                                                                        break;
                                                                                };
                                                                                var $10136 = $10142;
                                                                                break;
                                                                        };
                                                                        var $10128 = $10136;
                                                                        break;
                                                                };
                                                                var $10126 = $10128;
                                                                break;
                                                        };
                                                        var $10120 = $10126;
                                                        break;
                                                };
                                                var $10112 = $10120;
                                                break;
                                        };
                                        var $10110 = $10112;
                                        break;
                                };
                                var $10104 = $10110;
                                break;
                        };
                        var $10097 = $10104;
                        break;
                };
                var $10095 = $10097;
                break;
        };
        return $10095;
    };
    const Kind$Parser$file$adt = x0 => x1 => x2 => x3 => Kind$Parser$file$adt$(x0, x1, x2, x3);

    function Kind$Parser$file$end$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10195 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10197 = self.err;
                        var self = $10195;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10199 = self.value;
                                var $10200 = Parser$Reply$error$(Parser$Error$combine$($10199, $10197));
                                var $10198 = $10200;
                                break;
                            case 'Maybe.none':
                                var $10201 = Parser$Reply$error$($10197);
                                var $10198 = $10201;
                                break;
                        };
                        var $10196 = $10198;
                        break;
                    case 'Parser.Reply.value':
                        var $10202 = self.pst;
                        var self = $10202;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10204 = self.err;
                                var $10205 = self.nam;
                                var $10206 = self.ini;
                                var $10207 = self.idx;
                                var $10208 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10195, $10204), $10205, $10206, $10207, $10208);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10210 = self.err;
                                        var _reply$24 = Parser$eof$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10212 = self.err;
                                                var self = $10210;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10214 = self.value;
                                                        var $10215 = Parser$Reply$error$(Parser$Error$combine$($10214, $10212));
                                                        var $10213 = $10215;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10216 = Parser$Reply$error$($10212);
                                                        var $10213 = $10216;
                                                        break;
                                                };
                                                var $10211 = $10213;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10217 = self.pst;
                                                var self = $10217;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10219 = self.err;
                                                        var $10220 = self.nam;
                                                        var $10221 = self.ini;
                                                        var $10222 = self.idx;
                                                        var $10223 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10210, $10219), $10220, $10221, $10222, $10223);
                                                        var $10224 = Parser$Reply$value$(_reply$pst$32, _defs$3);
                                                        var $10218 = $10224;
                                                        break;
                                                };
                                                var $10211 = $10218;
                                                break;
                                        };
                                        var $10209 = $10211;
                                        break;
                                };
                                var $10203 = $10209;
                                break;
                        };
                        var $10196 = $10203;
                        break;
                };
                var $10194 = $10196;
                break;
        };
        return $10194;
    };
    const Kind$Parser$file$end = x0 => x1 => x2 => x3 => Kind$Parser$file$end$(x0, x1, x2, x3);

    function Kind$Parser$file$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10226 = self.err;
                var _reply$10 = Parser$is_eof$(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10228 = self.err;
                        var self = $10226;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10230 = self.value;
                                var $10231 = Parser$Reply$error$(Parser$Error$combine$($10230, $10228));
                                var $10229 = $10231;
                                break;
                            case 'Maybe.none':
                                var $10232 = Parser$Reply$error$($10228);
                                var $10229 = $10232;
                                break;
                        };
                        var $10227 = $10229;
                        break;
                    case 'Parser.Reply.value':
                        var $10233 = self.pst;
                        var $10234 = self.val;
                        var self = $10233;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10236 = self.err;
                                var $10237 = self.nam;
                                var $10238 = self.ini;
                                var $10239 = self.idx;
                                var $10240 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10226, $10236), $10237, $10238, $10239, $10240);
                                var self = $10234;
                                if (self) {
                                    var $10242 = (_pst$19 => {
                                        var $10243 = Parser$Reply$value$(_pst$19, _defs$3);
                                        return $10243;
                                    });
                                    var $10241 = $10242;
                                } else {
                                    var $10244 = (_pst$19 => {
                                        var self = _pst$19;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $10246 = self.err;
                                                var _reply$25 = Parser$choice$(List$cons$(Kind$Parser$file$def(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$adt(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$end(_file$1)(_code$2)(_defs$3), List$cons$(Parser$fail("Expected a top-level definition or a type declaration."), List$nil)))), _pst$19);
                                                var self = _reply$25;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $10248 = self.err;
                                                        var self = $10246;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $10250 = self.value;
                                                                var $10251 = Parser$Reply$error$(Parser$Error$combine$($10250, $10248));
                                                                var $10249 = $10251;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $10252 = Parser$Reply$error$($10248);
                                                                var $10249 = $10252;
                                                                break;
                                                        };
                                                        var $10247 = $10249;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $10253 = self.pst;
                                                        var $10254 = self.val;
                                                        var self = $10253;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10256 = self.err;
                                                                var $10257 = self.nam;
                                                                var $10258 = self.ini;
                                                                var $10259 = self.idx;
                                                                var $10260 = self.str;
                                                                var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($10246, $10256), $10257, $10258, $10259, $10260);
                                                                var self = _reply$pst$33;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $10262 = self.err;
                                                                        var _reply$39 = Kind$Parser$file$(_file$1, _code$2, $10254, _reply$pst$33);
                                                                        var self = _reply$39;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $10264 = self.err;
                                                                                var self = $10262;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $10266 = self.value;
                                                                                        var $10267 = Parser$Reply$error$(Parser$Error$combine$($10266, $10264));
                                                                                        var $10265 = $10267;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $10268 = Parser$Reply$error$($10264);
                                                                                        var $10265 = $10268;
                                                                                        break;
                                                                                };
                                                                                var $10263 = $10265;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $10269 = self.pst;
                                                                                var $10270 = self.val;
                                                                                var self = $10269;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10272 = self.err;
                                                                                        var $10273 = self.nam;
                                                                                        var $10274 = self.ini;
                                                                                        var $10275 = self.idx;
                                                                                        var $10276 = self.str;
                                                                                        var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($10262, $10272), $10273, $10274, $10275, $10276);
                                                                                        var $10277 = Parser$Reply$value$(_reply$pst$47, $10270);
                                                                                        var $10271 = $10277;
                                                                                        break;
                                                                                };
                                                                                var $10263 = $10271;
                                                                                break;
                                                                        };
                                                                        var $10261 = $10263;
                                                                        break;
                                                                };
                                                                var $10255 = $10261;
                                                                break;
                                                        };
                                                        var $10247 = $10255;
                                                        break;
                                                };
                                                var $10245 = $10247;
                                                break;
                                        };
                                        return $10245;
                                    });
                                    var $10241 = $10244;
                                };
                                var $10241 = $10241(_reply$pst$18);
                                var $10235 = $10241;
                                break;
                        };
                        var $10227 = $10235;
                        break;
                };
                var $10225 = $10227;
                break;
        };
        return $10225;
    };
    const Kind$Parser$file = x0 => x1 => x2 => x3 => Kind$Parser$file$(x0, x1, x2, x3);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $10279 = self.head;
                var $10280 = self.tail;
                var $10281 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $10282 = "";
                        return $10282;
                    } else {
                        var $10283 = _sep$1;
                        return $10283;
                    };
                })(), List$cons$($10279, List$cons$(String$join$go$(_sep$1, $10280, Bool$false), List$nil))));
                var $10278 = $10281;
                break;
            case 'List.nil':
                var $10284 = "";
                var $10278 = $10284;
                break;
        };
        return $10278;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $10285 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $10285;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $10286 = String$join$("\u{a}", _res$3);
        return $10286;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10288 = self.value;
                var $10289 = _f$5($10288);
                var $10287 = $10289;
                break;
            case 'Maybe.none':
                var $10290 = _a$4;
                var $10287 = $10290;
                break;
        };
        return $10287;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10292 = Bool$true;
            var $10291 = $10292;
        } else {
            var $10293 = (self - 1n);
            var $10294 = Bool$false;
            var $10291 = $10294;
        };
        return $10291;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10296 = Nat$zero;
            var $10295 = $10296;
        } else {
            var $10297 = (self - 1n);
            var $10298 = Nat$succ$(Nat$succ$(Nat$double$($10297)));
            var $10295 = $10298;
        };
        return $10295;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $10300 = _str$3;
            var $10299 = $10300;
        } else {
            var $10301 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $10303 = String$cons$(_chr$2, String$pad_right$($10301, _chr$2, ""));
                var $10302 = $10303;
            } else {
                var $10304 = self.charCodeAt(0);
                var $10305 = self.slice(1);
                var $10306 = String$cons$($10304, String$pad_right$($10301, _chr$2, $10305));
                var $10302 = $10306;
            };
            var $10299 = $10302;
        };
        return $10299;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $10307 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $10307;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Kind$Code$color$(_col$1, _str$2) {
        var $10308 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $10308;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $10310 = self.head;
                var $10311 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $10313 = List$nil;
                    var $10312 = $10313;
                } else {
                    var $10314 = (self - 1n);
                    var $10315 = List$cons$($10310, List$take$($10314, $10311));
                    var $10312 = $10315;
                };
                var $10309 = $10312;
                break;
            case 'List.nil':
                var $10316 = List$nil;
                var $10309 = $10316;
                break;
        };
        return $10309;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $10318 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $10317 = $10318;
                } else {
                    var $10319 = self.charCodeAt(0);
                    var $10320 = self.slice(1);
                    var self = ($10319 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $10323 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $10322 = $10323;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10326 = self.value;
                                        var $10327 = Maybe$some$(Nat$pred$($10326));
                                        var $10325 = $10327;
                                        break;
                                    case 'Maybe.none':
                                        var $10328 = Maybe$some$(_spa$10);
                                        var $10325 = $10328;
                                        break;
                                };
                                var _lft$15 = $10325;
                            } else {
                                var $10329 = (self - 1n);
                                var $10330 = _lft$7;
                                var _lft$15 = $10330;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $10324 = Kind$Code$highlight$go$($10320, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $10322 = $10324;
                        };
                        var $10321 = $10322;
                    } else {
                        var _chr$13 = String$cons$($10319, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $10332 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $10332;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $10334 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $10333 = $10334;
                            } else {
                                var $10335 = _chr$13;
                                var $10333 = $10335;
                            };
                            var _chr$14 = $10333;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $10336 = List$take$(_spa$10, _res$9);
                            var _res$15 = $10336;
                        } else {
                            var $10337 = _res$9;
                            var _res$15 = $10337;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $10331 = Kind$Code$highlight$go$($10320, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $10321 = $10331;
                    };
                    var $10317 = $10321;
                };
                return $10317;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $10338 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $10338;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function Kind$Defs$read$(_file$1, _code$2, _defs$3) {
        var self = Kind$Parser$file$(_file$1, _code$2, _defs$3, Parser$State$new$(Maybe$none, "", 0n, 0n, _code$2));
        switch (self._) {
            case 'Parser.Reply.error':
                var $10340 = self.err;
                var self = $10340;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $10342 = self.nam;
                        var $10343 = self.ini;
                        var $10344 = self.idx;
                        var $10345 = self.msg;
                        var _err$9 = ($10345 + (() => {
                            var self = $10342;
                            if (self.length === 0) {
                                var $10347 = "";
                                return $10347;
                            } else {
                                var $10348 = self.charCodeAt(0);
                                var $10349 = self.slice(1);
                                var $10350 = (" Inside " + ($10342 + ":"));
                                return $10350;
                            };
                        })());
                        var _hig$10 = Kind$Code$highlight$(_code$2, $10343, $10344, Nat$succ$($10344));
                        var _str$11 = String$flatten$(List$cons$(_err$9, List$cons$("\u{a}", List$cons$(_hig$10, List$nil))));
                        var $10346 = Either$left$(_str$11);
                        var $10341 = $10346;
                        break;
                };
                var $10339 = $10341;
                break;
            case 'Parser.Reply.value':
                var $10351 = self.val;
                var $10352 = Either$right$($10351);
                var $10339 = $10352;
                break;
        };
        return $10339;
    };
    const Kind$Defs$read = x0 => x1 => x2 => Kind$Defs$read$(x0, x1, x2);

    function Kind$Synth$load$go$(_name$1, _files$2, _defs$3) {
        var self = _files$2;
        switch (self._) {
            case 'List.cons':
                var $10354 = self.head;
                var $10355 = self.tail;
                var $10356 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                    var $10357 = _m$bind$6;
                    return $10357;
                }))(Kind$Synth$get_kind_code$($10354))((_code$6 => {
                    var _read$7 = Kind$Defs$read$($10354, _code$6, _defs$3);
                    var self = _read$7;
                    switch (self._) {
                        case 'Either.right':
                            var $10359 = self.value;
                            var _defs$9 = $10359;
                            var self = Kind$Map$get$(_name$1, _defs$9);
                            switch (self._) {
                                case 'Maybe.none':
                                    var $10361 = Kind$Synth$load$go$(_name$1, $10355, _defs$9);
                                    var $10360 = $10361;
                                    break;
                                case 'Maybe.some':
                                    var $10362 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10363 = _m$pure$12;
                                        return $10363;
                                    }))(Maybe$some$(_defs$9));
                                    var $10360 = $10362;
                                    break;
                            };
                            var $10358 = $10360;
                            break;
                        case 'Either.left':
                            var $10364 = Kind$Synth$load$go$(_name$1, $10355, _defs$3);
                            var $10358 = $10364;
                            break;
                    };
                    return $10358;
                }));
                var $10353 = $10356;
                break;
            case 'List.nil':
                var $10365 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                    var $10366 = _m$pure$5;
                    return $10366;
                }))(Maybe$none);
                var $10353 = $10365;
                break;
        };
        return $10353;
    };
    const Kind$Synth$load$go = x0 => x1 => x2 => Kind$Synth$load$go$(x0, x1, x2);

    function Kind$Synth$files_of$make$(_names$1, _last$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $10368 = self.head;
                var $10369 = self.tail;
                var _head$5 = (_last$2 + ($10368 + ".kind"));
                var _tail$6 = Kind$Synth$files_of$make$($10369, (_last$2 + ($10368 + "/")));
                var $10370 = List$cons$(_head$5, _tail$6);
                var $10367 = $10370;
                break;
            case 'List.nil':
                var $10371 = List$nil;
                var $10367 = $10371;
                break;
        };
        return $10367;
    };
    const Kind$Synth$files_of$make = x0 => x1 => Kind$Synth$files_of$make$(x0, x1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $10372 = _n$2;
                    return $10372;
                } else {
                    var $10373 = self.charCodeAt(0);
                    var $10374 = self.slice(1);
                    var $10375 = String$length$go$($10374, Nat$succ$(_n$2));
                    return $10375;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $10376 = String$length$go$(_xs$1, 0n);
        return $10376;
    };
    const String$length = x0 => String$length$(x0);

    function String$split$go$(_xs$1, _match$2, _last$3) {
        var self = _xs$1;
        if (self.length === 0) {
            var $10378 = List$cons$(_last$3, List$nil);
            var $10377 = $10378;
        } else {
            var $10379 = self.charCodeAt(0);
            var $10380 = self.slice(1);
            var self = String$starts_with$(_xs$1, _match$2);
            if (self) {
                var _rest$6 = String$drop$(String$length$(_match$2), _xs$1);
                var $10382 = List$cons$(_last$3, String$split$go$(_rest$6, _match$2, ""));
                var $10381 = $10382;
            } else {
                var _next$6 = String$cons$($10379, String$nil);
                var $10383 = String$split$go$($10380, _match$2, (_last$3 + _next$6));
                var $10381 = $10383;
            };
            var $10377 = $10381;
        };
        return $10377;
    };
    const String$split$go = x0 => x1 => x2 => String$split$go$(x0, x1, x2);

    function String$split$(_xs$1, _match$2) {
        var $10384 = String$split$go$(_xs$1, _match$2, "");
        return $10384;
    };
    const String$split = x0 => x1 => String$split$(x0, x1);

    function Kind$Synth$files_of$(_name$1) {
        var $10385 = List$reverse$(Kind$Synth$files_of$make$(String$split$(_name$1, "."), ""));
        return $10385;
    };
    const Kind$Synth$files_of = x0 => Kind$Synth$files_of$(x0);

    function Kind$Synth$load$(_name$1, _defs$2) {
        var $10386 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $10387 = _m$bind$3;
            return $10387;
        }))(Kind$Synth$load$cached$(List$cons$(_name$1, List$nil), _defs$2))((_cached_defs$3 => {
            var self = _cached_defs$3;
            switch (self._) {
                case 'Maybe.some':
                    var $10389 = self.value;
                    var $10390 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $10391 = _m$pure$6;
                        return $10391;
                    }))(Maybe$some$($10389));
                    var $10388 = $10390;
                    break;
                case 'Maybe.none':
                    var $10392 = Kind$Synth$load$go$(_name$1, Kind$Synth$files_of$(_name$1), _defs$2);
                    var $10388 = $10392;
                    break;
            };
            return $10388;
        }));
        return $10386;
    };
    const Kind$Synth$load = x0 => x1 => Kind$Synth$load$(x0, x1);
    const Kind$Status$wait = ({
        _: 'Kind.Status.wait'
    });

    function Kind$Check$(_V$1) {
        var $10393 = null;
        return $10393;
    };
    const Kind$Check = x0 => Kind$Check$(x0);

    function Kind$Check$result$(_value$2, _errors$3) {
        var $10394 = ({
            _: 'Kind.Check.result',
            'value': _value$2,
            'errors': _errors$3
        });
        return $10394;
    };
    const Kind$Check$result = x0 => x1 => Kind$Check$result$(x0, x1);

    function Kind$Error$undefined_reference$(_origin$1, _name$2) {
        var $10395 = ({
            _: 'Kind.Error.undefined_reference',
            'origin': _origin$1,
            'name': _name$2
        });
        return $10395;
    };
    const Kind$Error$undefined_reference = x0 => x1 => Kind$Error$undefined_reference$(x0, x1);

    function Kind$Error$waiting$(_name$1) {
        var $10396 = ({
            _: 'Kind.Error.waiting',
            'name': _name$1
        });
        return $10396;
    };
    const Kind$Error$waiting = x0 => Kind$Error$waiting$(x0);

    function Kind$Error$indirect$(_name$1) {
        var $10397 = ({
            _: 'Kind.Error.indirect',
            'name': _name$1
        });
        return $10397;
    };
    const Kind$Error$indirect = x0 => Kind$Error$indirect$(x0);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10399 = self.value;
                var $10400 = Maybe$some$(_f$4($10399));
                var $10398 = $10400;
                break;
            case 'Maybe.none':
                var $10401 = Maybe$none;
                var $10398 = $10401;
                break;
        };
        return $10398;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function Kind$MPath$o$(_path$1) {
        var $10402 = Maybe$mapped$(_path$1, Kind$Path$o);
        return $10402;
    };
    const Kind$MPath$o = x0 => Kind$MPath$o$(x0);

    function Kind$MPath$i$(_path$1) {
        var $10403 = Maybe$mapped$(_path$1, Kind$Path$i);
        return $10403;
    };
    const Kind$MPath$i = x0 => Kind$MPath$i$(x0);

    function Kind$Error$patch$(_path$1, _term$2) {
        var $10404 = ({
            _: 'Kind.Error.patch',
            'path': _path$1,
            'term': _term$2
        });
        return $10404;
    };
    const Kind$Error$patch = x0 => x1 => Kind$Error$patch$(x0, x1);

    function Kind$MPath$to_bits$(_path$1) {
        var self = _path$1;
        switch (self._) {
            case 'Maybe.some':
                var $10406 = self.value;
                var $10407 = $10406(Bits$e);
                var $10405 = $10407;
                break;
            case 'Maybe.none':
                var $10408 = Bits$e;
                var $10405 = $10408;
                break;
        };
        return $10405;
    };
    const Kind$MPath$to_bits = x0 => Kind$MPath$to_bits$(x0);

    function Kind$Term$check$patch$(_term$1, _type$2, _path$3) {
        var $10409 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$patch$(Kind$MPath$to_bits$(_path$3), _term$1), List$nil));
        return $10409;
    };
    const Kind$Term$check$patch = x0 => x1 => x2 => Kind$Term$check$patch$(x0, x1, x2);

    function Kind$Error$type_mismatch$(_origin$1, _expected$2, _detected$3, _context$4) {
        var $10410 = ({
            _: 'Kind.Error.type_mismatch',
            'origin': _origin$1,
            'expected': _expected$2,
            'detected': _detected$3,
            'context': _context$4
        });
        return $10410;
    };
    const Kind$Error$type_mismatch = x0 => x1 => x2 => x3 => Kind$Error$type_mismatch$(x0, x1, x2, x3);

    function Kind$Error$show_goal$(_name$1, _dref$2, _verb$3, _goal$4, _context$5) {
        var $10411 = ({
            _: 'Kind.Error.show_goal',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3,
            'goal': _goal$4,
            'context': _context$5
        });
        return $10411;
    };
    const Kind$Error$show_goal = x0 => x1 => x2 => x3 => x4 => Kind$Error$show_goal$(x0, x1, x2, x3, x4);

    function Kind$Path$nil$(_x$1) {
        var $10412 = _x$1;
        return $10412;
    };
    const Kind$Path$nil = x0 => Kind$Path$nil$(x0);
    const Kind$MPath$nil = Maybe$some$(Kind$Path$nil);

    function Kind$Term$check$direct$(_term$1, _defs$2) {
        var self = Kind$Term$check$(_term$1, Maybe$none, _defs$2, List$nil, Kind$MPath$nil, Maybe$none);
        switch (self._) {
            case 'Kind.Check.result':
                var $10414 = self.value;
                var $10415 = self.errors;
                var self = $10414;
                switch (self._) {
                    case 'Maybe.none':
                        var $10417 = Kind$Check$result$(Maybe$none, $10415);
                        var $10416 = $10417;
                        break;
                    case 'Maybe.some':
                        var self = Kind$Check$result$(Maybe$some$(_term$1), List$nil);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10419 = self.value;
                                var $10420 = self.errors;
                                var $10421 = Kind$Check$result$($10419, List$concat$($10415, $10420));
                                var $10418 = $10421;
                                break;
                        };
                        var $10416 = $10418;
                        break;
                };
                var $10413 = $10416;
                break;
        };
        return $10413;
    };
    const Kind$Term$check$direct = x0 => x1 => Kind$Term$check$direct$(x0, x1);

    function Kind$Term$check$get_name_of_self_type$slice$(_self$1) {
        var _len$2 = String$length$(_self$1);
        var _ini$3 = String$slice$(0n, (_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _self$1);
        var _end$4 = String$slice$((_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _len$2, _self$1);
        var self = (_end$4 === ".Self");
        if (self) {
            var $10423 = Maybe$some$(_ini$3);
            var $10422 = $10423;
        } else {
            var $10424 = Maybe$none;
            var $10422 = $10424;
        };
        return $10422;
    };
    const Kind$Term$check$get_name_of_self_type$slice = x0 => Kind$Term$check$get_name_of_self_type$slice$(x0);

    function Kind$Term$check$get_name_of_self_type$(_type$1, _defs$2) {
        var self = Kind$Term$reduce$(_type$1, Kind$Map$new);
        switch (self._) {
            case 'Kind.Term.ref':
                var $10426 = self.name;
                var $10427 = Maybe$some$($10426);
                var $10425 = $10427;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10429 = self.name;
                        var $10430 = Maybe$some$($10429);
                        var $10428 = $10430;
                        break;
                    case 'Kind.Term.all':
                        var $10431 = self.self;
                        var $10432 = Kind$Term$check$get_name_of_self_type$slice$($10431);
                        var $10428 = $10432;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10433 = Maybe$none;
                        var $10428 = $10433;
                        break;
                };
                var $10425 = $10428;
                break;
            case 'Kind.Term.typ':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10435 = self.name;
                        var $10436 = Maybe$some$($10435);
                        var $10434 = $10436;
                        break;
                    case 'Kind.Term.all':
                        var $10437 = self.self;
                        var $10438 = Kind$Term$check$get_name_of_self_type$slice$($10437);
                        var $10434 = $10438;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10439 = Maybe$none;
                        var $10434 = $10439;
                        break;
                };
                var $10425 = $10434;
                break;
            case 'Kind.Term.all':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10441 = self.name;
                        var $10442 = Maybe$some$($10441);
                        var $10440 = $10442;
                        break;
                    case 'Kind.Term.all':
                        var $10443 = self.self;
                        var $10444 = Kind$Term$check$get_name_of_self_type$slice$($10443);
                        var $10440 = $10444;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10445 = Maybe$none;
                        var $10440 = $10445;
                        break;
                };
                var $10425 = $10440;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10447 = self.name;
                        var $10448 = Maybe$some$($10447);
                        var $10446 = $10448;
                        break;
                    case 'Kind.Term.all':
                        var $10449 = self.self;
                        var $10450 = Kind$Term$check$get_name_of_self_type$slice$($10449);
                        var $10446 = $10450;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10451 = Maybe$none;
                        var $10446 = $10451;
                        break;
                };
                var $10425 = $10446;
                break;
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10453 = self.name;
                        var $10454 = Maybe$some$($10453);
                        var $10452 = $10454;
                        break;
                    case 'Kind.Term.all':
                        var $10455 = self.self;
                        var $10456 = Kind$Term$check$get_name_of_self_type$slice$($10455);
                        var $10452 = $10456;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10457 = Maybe$none;
                        var $10452 = $10457;
                        break;
                };
                var $10425 = $10452;
                break;
            case 'Kind.Term.cse':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10459 = self.name;
                        var $10460 = Maybe$some$($10459);
                        var $10458 = $10460;
                        break;
                    case 'Kind.Term.all':
                        var $10461 = self.self;
                        var $10462 = Kind$Term$check$get_name_of_self_type$slice$($10461);
                        var $10458 = $10462;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10463 = Maybe$none;
                        var $10458 = $10463;
                        break;
                };
                var $10425 = $10458;
                break;
        };
        return $10425;
    };
    const Kind$Term$check$get_name_of_self_type = x0 => x1 => Kind$Term$check$get_name_of_self_type$(x0, x1);

    function Kind$Term$check$expand$num$nat$(_numb$1) {
        var $10464 = Kind$Term$nat$(_numb$1);
        return $10464;
    };
    const Kind$Term$check$expand$num$nat = x0 => Kind$Term$check$expand$num$nat$(x0);

    function Kind$Term$check$expand$num$int$(_sign$1, _numb$2) {
        var _term$3 = Kind$Term$nat$(_numb$2);
        var _term$4 = Kind$Term$app$(Kind$Term$ref$("Int.from_nat"), _term$3);
        var self = _sign$1;
        switch (self._) {
            case 'Maybe.some':
                var $10466 = self.value;
                var self = $10466;
                if (self) {
                    var $10468 = _term$4;
                    var $10467 = $10468;
                } else {
                    var $10469 = Kind$Term$app$(Kind$Term$ref$("Int.neg"), _term$4);
                    var $10467 = $10469;
                };
                var _term$5 = $10467;
                break;
            case 'Maybe.none':
                var $10470 = _term$4;
                var _term$5 = $10470;
                break;
        };
        var $10465 = _term$5;
        return $10465;
    };
    const Kind$Term$check$expand$num$int = x0 => x1 => Kind$Term$check$expand$num$int$(x0, x1);

    function Kind$Term$check$expand$num$other$(_name$1, _sign$2, _numb$3, _frac$4) {
        var self = _sign$2;
        switch (self._) {
            case 'Maybe.some':
                var $10472 = self.value;
                var self = $10472;
                if (self) {
                    var $10474 = "+";
                    var $10473 = $10474;
                } else {
                    var $10475 = "-";
                    var $10473 = $10475;
                };
                var _text$5 = $10473;
                break;
            case 'Maybe.none':
                var $10476 = "";
                var _text$5 = $10476;
                break;
        };
        var _text$6 = (_text$5 + Nat$show$(_numb$3));
        var _text$7 = (_text$6 + (() => {
            var self = _frac$4;
            switch (self._) {
                case 'Maybe.some':
                    var $10477 = self.value;
                    var $10478 = ("." + Nat$show$($10477));
                    return $10478;
                case 'Maybe.none':
                    var $10479 = "";
                    return $10479;
            };
        })());
        var $10471 = Kind$Term$app$(Kind$Term$ref$((_name$1 + ".read")), Kind$Term$str$(_text$7));
        return $10471;
    };
    const Kind$Term$check$expand$num$other = x0 => x1 => x2 => x3 => Kind$Term$check$expand$num$other$(x0, x1, x2, x3);

    function Kind$Term$check$expand$num$(_sign$1, _numb$2, _frac$3, _type$4, _defs$5) {
        var self = _type$4;
        switch (self._) {
            case 'Maybe.some':
                var $10481 = self.value;
                var self = Kind$Term$check$get_name_of_self_type$($10481, _defs$5);
                switch (self._) {
                    case 'Maybe.some':
                        var $10483 = self.value;
                        var self = ($10483 === "Nat");
                        if (self) {
                            var $10485 = Maybe$some$(Kind$Term$check$expand$num$nat$(_numb$2));
                            var $10484 = $10485;
                        } else {
                            var self = ($10483 === "Int");
                            if (self) {
                                var $10487 = Maybe$some$(Kind$Term$check$expand$num$int$(_sign$1, _numb$2));
                                var $10486 = $10487;
                            } else {
                                var $10488 = Maybe$some$(Kind$Term$check$expand$num$other$($10483, _sign$1, _numb$2, _frac$3));
                                var $10486 = $10488;
                            };
                            var $10484 = $10486;
                        };
                        var $10482 = $10484;
                        break;
                    case 'Maybe.none':
                        var $10489 = Maybe$none;
                        var $10482 = $10489;
                        break;
                };
                var _got$6 = $10482;
                break;
            case 'Maybe.none':
                var $10490 = Maybe$none;
                var _got$6 = $10490;
                break;
        };
        var self = _got$6;
        switch (self._) {
            case 'Maybe.some':
                var $10491 = self.value;
                var $10492 = $10491;
                var $10480 = $10492;
                break;
            case 'Maybe.none':
                var self = _frac$3;
                switch (self._) {
                    case 'Maybe.none':
                        var self = _sign$1;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10495 = Kind$Term$check$expand$num$nat$(_numb$2);
                                var $10494 = $10495;
                                break;
                            case 'Maybe.some':
                                var $10496 = Kind$Term$check$expand$num$int$(_sign$1, _numb$2);
                                var $10494 = $10496;
                                break;
                        };
                        var $10493 = $10494;
                        break;
                    case 'Maybe.some':
                        var $10497 = Kind$Term$check$expand$num$other$("F64", _sign$1, _numb$2, _frac$3);
                        var $10493 = $10497;
                        break;
                };
                var $10480 = $10493;
                break;
        };
        return $10480;
    };
    const Kind$Term$check$expand$num = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$num$(x0, x1, x2, x3, x4);

    function Kind$Term$check$infer_types_of_with$(_vars$1, _defs$2, _ctx$3, _path$4, _orig$5) {
        var self = _vars$1;
        switch (self._) {
            case 'List.cons':
                var $10499 = self.head;
                var $10500 = self.tail;
                var self = $10499;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10502 = self.name;
                        var $10503 = self.term;
                        var $10504 = self.type;
                        var self = $10504;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10506 = self.value;
                                var $10507 = Kind$Check$result$(Maybe$some$(Maybe$some$($10506)), List$nil);
                                var self = $10507;
                                break;
                            case 'Maybe.none':
                                var self = Kind$Term$check$($10503, Maybe$none, _defs$2, _ctx$3, _path$4, _orig$5);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10509 = self.value;
                                        var $10510 = self.errors;
                                        var self = $10509;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $10512 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$(Maybe$some$($10512)), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $10514 = self.value;
                                                        var $10515 = self.errors;
                                                        var $10516 = Kind$Check$result$($10514, List$concat$($10510, $10515));
                                                        var $10513 = $10516;
                                                        break;
                                                };
                                                var $10511 = $10513;
                                                break;
                                            case 'Maybe.none':
                                                var $10517 = Kind$Check$result$(Maybe$none, $10510);
                                                var $10511 = $10517;
                                                break;
                                        };
                                        var $10508 = $10511;
                                        break;
                                };
                                var self = $10508;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10518 = self.value;
                                var $10519 = self.errors;
                                var self = $10518;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10521 = self.value;
                                        var self = Kind$Term$check$infer_types_of_with$($10500, _defs$2, _ctx$3, _path$4, _orig$5);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10523 = self.value;
                                                var $10524 = self.errors;
                                                var self = $10523;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10526 = self.value;
                                                        var self = Kind$Check$result$(Maybe$some$(List$cons$(Kind$Ann$new$($10502, $10503, $10521), $10526)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $10528 = self.value;
                                                                var $10529 = self.errors;
                                                                var $10530 = Kind$Check$result$($10528, List$concat$($10524, $10529));
                                                                var $10527 = $10530;
                                                                break;
                                                        };
                                                        var $10525 = $10527;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10531 = Kind$Check$result$(Maybe$none, $10524);
                                                        var $10525 = $10531;
                                                        break;
                                                };
                                                var self = $10525;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10532 = self.value;
                                                var $10533 = self.errors;
                                                var $10534 = Kind$Check$result$($10532, List$concat$($10519, $10533));
                                                var $10522 = $10534;
                                                break;
                                        };
                                        var $10520 = $10522;
                                        break;
                                    case 'Maybe.none':
                                        var $10535 = Kind$Check$result$(Maybe$none, $10519);
                                        var $10520 = $10535;
                                        break;
                                };
                                var $10505 = $10520;
                                break;
                        };
                        var $10501 = $10505;
                        break;
                };
                var $10498 = $10501;
                break;
            case 'List.nil':
                var $10536 = Kind$Check$result$(Maybe$some$(List$nil), List$nil);
                var $10498 = $10536;
                break;
        };
        return $10498;
    };
    const Kind$Term$check$infer_types_of_with = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$infer_types_of_with$(x0, x1, x2, x3, x4);

    function Kind$Term$normalize$(_term$1, _defs$2) {
        var self = Kind$Term$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $10538 = self.name;
                var $10539 = self.indx;
                var $10540 = Kind$Term$var$($10538, $10539);
                var $10537 = $10540;
                break;
            case 'Kind.Term.ref':
                var $10541 = self.name;
                var $10542 = Kind$Term$ref$($10541);
                var $10537 = $10542;
                break;
            case 'Kind.Term.all':
                var $10543 = self.eras;
                var $10544 = self.self;
                var $10545 = self.name;
                var $10546 = self.xtyp;
                var $10547 = self.body;
                var $10548 = Kind$Term$all$($10543, $10544, $10545, Kind$Term$normalize$($10546, _defs$2), (_s$8 => _x$9 => {
                    var $10549 = Kind$Term$normalize$($10547(_s$8)(_x$9), _defs$2);
                    return $10549;
                }));
                var $10537 = $10548;
                break;
            case 'Kind.Term.lam':
                var $10550 = self.name;
                var $10551 = self.body;
                var $10552 = Kind$Term$lam$($10550, (_x$5 => {
                    var $10553 = Kind$Term$normalize$($10551(_x$5), _defs$2);
                    return $10553;
                }));
                var $10537 = $10552;
                break;
            case 'Kind.Term.app':
                var $10554 = self.func;
                var $10555 = self.argm;
                var $10556 = Kind$Term$app$(Kind$Term$normalize$($10554, _defs$2), Kind$Term$normalize$($10555, _defs$2));
                var $10537 = $10556;
                break;
            case 'Kind.Term.let':
                var $10557 = self.name;
                var $10558 = self.expr;
                var $10559 = self.body;
                var $10560 = Kind$Term$let$($10557, Kind$Term$normalize$($10558, _defs$2), (_x$6 => {
                    var $10561 = Kind$Term$normalize$($10559(_x$6), _defs$2);
                    return $10561;
                }));
                var $10537 = $10560;
                break;
            case 'Kind.Term.def':
                var $10562 = self.name;
                var $10563 = self.expr;
                var $10564 = self.body;
                var $10565 = Kind$Term$def$($10562, Kind$Term$normalize$($10563, _defs$2), (_x$6 => {
                    var $10566 = Kind$Term$normalize$($10564(_x$6), _defs$2);
                    return $10566;
                }));
                var $10537 = $10565;
                break;
            case 'Kind.Term.ann':
                var $10567 = self.done;
                var $10568 = self.term;
                var $10569 = self.type;
                var $10570 = Kind$Term$ann$($10567, Kind$Term$normalize$($10568, _defs$2), Kind$Term$normalize$($10569, _defs$2));
                var $10537 = $10570;
                break;
            case 'Kind.Term.gol':
                var $10571 = self.name;
                var $10572 = self.dref;
                var $10573 = self.verb;
                var $10574 = Kind$Term$gol$($10571, $10572, $10573);
                var $10537 = $10574;
                break;
            case 'Kind.Term.hol':
                var $10575 = self.path;
                var $10576 = Kind$Term$hol$($10575);
                var $10537 = $10576;
                break;
            case 'Kind.Term.nat':
                var $10577 = self.natx;
                var $10578 = Kind$Term$nat$($10577);
                var $10537 = $10578;
                break;
            case 'Kind.Term.chr':
                var $10579 = self.chrx;
                var $10580 = Kind$Term$chr$($10579);
                var $10537 = $10580;
                break;
            case 'Kind.Term.str':
                var $10581 = self.strx;
                var $10582 = Kind$Term$str$($10581);
                var $10537 = $10582;
                break;
            case 'Kind.Term.ori':
                var $10583 = self.expr;
                var $10584 = Kind$Term$normalize$($10583, _defs$2);
                var $10537 = $10584;
                break;
            case 'Kind.Term.typ':
                var $10585 = Kind$Term$typ;
                var $10537 = $10585;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10586 = _term$1;
                var $10537 = $10586;
                break;
        };
        return $10537;
    };
    const Kind$Term$normalize = x0 => x1 => Kind$Term$normalize$(x0, x1);

    function Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var self = _wyth$1;
        switch (self._) {
            case 'List.cons':
                var $10588 = self.head;
                var $10589 = self.tail;
                var self = $10588;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10591 = self.name;
                        var $10592 = self.type;
                        var $10593 = Kind$Term$all$(Bool$false, "", $10591, Maybe$default$($10592, Kind$Term$hol$(Bits$e)), (_s$14 => _x$15 => {
                            var $10594 = Kind$Term$check$expand$cse$motive$($10589, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, Nat$succ$(Nat$succ$(_size$8)));
                            return $10594;
                        }));
                        var $10590 = $10593;
                        break;
                };
                var $10587 = $10590;
                break;
            case 'List.nil':
                var self = _moti$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10596 = self.value;
                        var $10597 = $10596;
                        var $10595 = $10597;
                        break;
                    case 'Maybe.none':
                        var self = _rtyp$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10599 = self.value;
                                var $10600 = Kind$Term$normalize$($10599, Kind$Map$new);
                                var $10598 = $10600;
                                break;
                            case 'Maybe.none':
                                var $10601 = Kind$Term$hol$(Bits$e);
                                var $10598 = $10601;
                                break;
                        };
                        var $10595 = $10598;
                        break;
                };
                var $10587 = $10595;
                break;
        };
        return $10587;
    };
    const Kind$Term$check$expand$cse$motive$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$go$(x0, x1, x2, x3, x4, x5, x6, x7);

    function List$tail$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $10603 = self.tail;
                var $10604 = $10603;
                var $10602 = $10604;
                break;
            case 'List.nil':
                var $10605 = List$nil;
                var $10602 = $10605;
                break;
        };
        return $10602;
    };
    const List$tail = x0 => List$tail$(x0);

    function Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4) {
        var Kind$Term$SmartMotive$vals$cont$ = (_expr$1, _term$2, _args$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_expr$1, _term$2, _args$3, _defs$4]
        });
        var Kind$Term$SmartMotive$vals$cont = _expr$1 => _term$2 => _args$3 => _defs$4 => Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4);
        var arg = [_expr$1, _term$2, _args$3, _defs$4];
        while (true) {
            let [_expr$1, _term$2, _args$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10606 = self.func;
                        var $10607 = self.argm;
                        var $10608 = Kind$Term$SmartMotive$vals$cont$(_expr$1, $10606, List$cons$($10607, _args$3), _defs$4);
                        return $10608;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10609 = List$cons$(_expr$1, List$tail$(List$reverse$(_args$3)));
                        return $10609;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$vals$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3) {
        var Kind$Term$SmartMotive$vals$ = (_expr$1, _type$2, _defs$3) => ({
            ctr: 'TCO',
            arg: [_expr$1, _type$2, _defs$3]
        });
        var Kind$Term$SmartMotive$vals = _expr$1 => _type$2 => _defs$3 => Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3);
        var arg = [_expr$1, _type$2, _defs$3];
        while (true) {
            let [_expr$1, _type$2, _defs$3] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$2, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10610 = self.body;
                        var $10611 = Kind$Term$SmartMotive$vals$(_expr$1, $10610(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        return $10611;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10612 = Kind$Term$SmartMotive$vals$cont$(_expr$1, _type$2, List$nil, _defs$3);
                        return $10612;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals = x0 => x1 => x2 => Kind$Term$SmartMotive$vals$(x0, x1, x2);

    function Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4) {
        var Kind$Term$SmartMotive$nams$cont$ = (_name$1, _term$2, _binds$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_name$1, _term$2, _binds$3, _defs$4]
        });
        var Kind$Term$SmartMotive$nams$cont = _name$1 => _term$2 => _binds$3 => _defs$4 => Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4);
        var arg = [_name$1, _term$2, _binds$3, _defs$4];
        while (true) {
            let [_name$1, _term$2, _binds$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10613 = self.self;
                        var $10614 = self.name;
                        var $10615 = self.body;
                        var $10616 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10615(Kind$Term$ref$($10613))(Kind$Term$ref$($10614)), List$cons$(String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10614, List$nil)))), _binds$3), _defs$4);
                        return $10616;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10617 = List$cons$(_name$1, List$tail$(_binds$3));
                        return $10617;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$nams$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$nams$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$nams$(_name$1, _type$2, _defs$3) {
        var self = Kind$Term$reduce$(_type$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10619 = self.xtyp;
                var $10620 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10619, List$nil, _defs$3);
                var $10618 = $10620;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10621 = List$nil;
                var $10618 = $10621;
                break;
        };
        return $10618;
    };
    const Kind$Term$SmartMotive$nams = x0 => x1 => x2 => Kind$Term$SmartMotive$nams$(x0, x1, x2);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $10623 = self.head;
                var $10624 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $10626 = self.head;
                        var $10627 = self.tail;
                        var $10628 = List$cons$(Pair$new$($10623, $10626), List$zip$($10624, $10627));
                        var $10625 = $10628;
                        break;
                    case 'List.nil':
                        var $10629 = List$nil;
                        var $10625 = $10629;
                        break;
                };
                var $10622 = $10625;
                break;
            case 'List.nil':
                var $10630 = List$nil;
                var $10622 = $10630;
                break;
        };
        return $10622;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kind$Term$serialize$go$(_term$1, _depth$2, _init$3, _diff$4, _x$5) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $10632 = self.indx;
                var self = ($10632 >= _init$3);
                if (self) {
                    var _name$8 = a1 => (a1 + (nat_to_bits(Nat$pred$((_depth$2 - $10632 <= 0n ? 0n : _depth$2 - $10632)))));
                    var $10634 = (((_name$8(_x$5) + '1') + '0') + '0');
                    var $10633 = $10634;
                } else {
                    var _name$8 = a1 => (a1 + (nat_to_bits($10632)));
                    var $10635 = (((_name$8(_x$5) + '0') + '1') + '0');
                    var $10633 = $10635;
                };
                var $10631 = $10633;
                break;
            case 'Kind.Term.ref':
                var $10636 = self.name;
                var _name$7 = a1 => (a1 + (kind_name_to_bits($10636)));
                var $10637 = (((_name$7(_x$5) + '0') + '0') + '0');
                var $10631 = $10637;
                break;
            case 'Kind.Term.all':
                var $10638 = self.eras;
                var $10639 = self.self;
                var $10640 = self.name;
                var $10641 = self.xtyp;
                var $10642 = self.body;
                var self = $10638;
                if (self) {
                    var $10644 = Bits$i;
                    var _eras$11 = $10644;
                } else {
                    var $10645 = Bits$o;
                    var _eras$11 = $10645;
                };
                var _self$12 = a1 => (a1 + (kind_name_to_bits($10639)));
                var _xtyp$13 = Kind$Term$serialize$go($10641)(_depth$2)(_init$3)(_diff$4);
                var _body$14 = Kind$Term$serialize$go($10642(Kind$Term$var$($10639, _depth$2))(Kind$Term$var$($10640, Nat$succ$(_depth$2))))(Nat$succ$(Nat$succ$(_depth$2)))(_init$3)(_diff$4);
                var $10643 = (((_eras$11(_self$12(_xtyp$13(_body$14(_x$5)))) + '0') + '0') + '1');
                var $10631 = $10643;
                break;
            case 'Kind.Term.lam':
                var $10646 = self.name;
                var $10647 = self.body;
                var _body$8 = Kind$Term$serialize$go($10647(Kind$Term$var$($10646, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10648 = (((_body$8(_x$5) + '1') + '0') + '1');
                var $10631 = $10648;
                break;
            case 'Kind.Term.app':
                var $10649 = self.func;
                var $10650 = self.argm;
                var _func$8 = Kind$Term$serialize$go($10649)(_depth$2)(_init$3)(_diff$4);
                var _argm$9 = Kind$Term$serialize$go($10650)(_depth$2)(_init$3)(_diff$4);
                var $10651 = (((_func$8(_argm$9(_x$5)) + '0') + '1') + '1');
                var $10631 = $10651;
                break;
            case 'Kind.Term.let':
                var $10652 = self.name;
                var $10653 = self.expr;
                var $10654 = self.body;
                var _expr$9 = Kind$Term$serialize$go($10653)(_depth$2)(_init$3)(_diff$4);
                var _body$10 = Kind$Term$serialize$go($10654(Kind$Term$var$($10652, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10655 = (((_expr$9(_body$10(_x$5)) + '1') + '1') + '1');
                var $10631 = $10655;
                break;
            case 'Kind.Term.def':
                var $10656 = self.expr;
                var $10657 = self.body;
                var $10658 = Kind$Term$serialize$go$($10657($10656), _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10658;
                break;
            case 'Kind.Term.ann':
                var $10659 = self.term;
                var $10660 = Kind$Term$serialize$go$($10659, _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10660;
                break;
            case 'Kind.Term.gol':
                var $10661 = self.name;
                var _name$9 = a1 => (a1 + (kind_name_to_bits($10661)));
                var $10662 = (((_name$9(_x$5) + '0') + '0') + '0');
                var $10631 = $10662;
                break;
            case 'Kind.Term.nat':
                var $10663 = self.natx;
                var $10664 = Kind$Term$serialize$go$(Kind$Term$unroll_nat$($10663), _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10664;
                break;
            case 'Kind.Term.chr':
                var $10665 = self.chrx;
                var $10666 = Kind$Term$serialize$go$(Kind$Term$unroll_chr$($10665), _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10666;
                break;
            case 'Kind.Term.str':
                var $10667 = self.strx;
                var $10668 = Kind$Term$serialize$go$(Kind$Term$unroll_str$($10667), _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10668;
                break;
            case 'Kind.Term.ori':
                var $10669 = self.expr;
                var $10670 = Kind$Term$serialize$go$($10669, _depth$2, _init$3, _diff$4, _x$5);
                var $10631 = $10670;
                break;
            case 'Kind.Term.typ':
                var $10671 = (((_x$5 + '1') + '1') + '0');
                var $10631 = $10671;
                break;
            case 'Kind.Term.hol':
                var $10672 = _x$5;
                var $10631 = $10672;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10673 = _diff$4(_x$5);
                var $10631 = $10673;
                break;
        };
        return $10631;
    };
    const Kind$Term$serialize$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$serialize$go$(x0, x1, x2, x3, x4);

    function Kind$Term$serialize$(_term$1, _depth$2, _side$3) {
        var self = _side$3;
        if (self) {
            var $10675 = Bits$o;
            var _diff$4 = $10675;
        } else {
            var $10676 = Bits$i;
            var _diff$4 = $10676;
        };
        var $10674 = Kind$Term$serialize$go$(_term$1, _depth$2, _depth$2, _diff$4, Bits$e);
        return $10674;
    };
    const Kind$Term$serialize = x0 => x1 => x2 => Kind$Term$serialize$(x0, x1, x2);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kind$Term$identical$(_a$1, _b$2, _lv$3) {
        var _ah$4 = Kind$Term$serialize$(_a$1, _lv$3, Bool$false);
        var _bh$5 = Kind$Term$serialize$(_b$2, _lv$3, Bool$true);
        var $10677 = (_bh$5 === _ah$4);
        return $10677;
    };
    const Kind$Term$identical = x0 => x1 => x2 => Kind$Term$identical$(x0, x1, x2);

    function Kind$Term$SmartMotive$replace$(_term$1, _from$2, _to$3, _lv$4) {
        var self = Kind$Term$identical$(_term$1, _from$2, _lv$4);
        if (self) {
            var $10679 = _to$3;
            var $10678 = $10679;
        } else {
            var self = _term$1;
            switch (self._) {
                case 'Kind.Term.var':
                    var $10681 = self.name;
                    var $10682 = self.indx;
                    var $10683 = Kind$Term$var$($10681, $10682);
                    var $10680 = $10683;
                    break;
                case 'Kind.Term.ref':
                    var $10684 = self.name;
                    var $10685 = Kind$Term$ref$($10684);
                    var $10680 = $10685;
                    break;
                case 'Kind.Term.all':
                    var $10686 = self.eras;
                    var $10687 = self.self;
                    var $10688 = self.name;
                    var $10689 = self.xtyp;
                    var $10690 = self.body;
                    var _xtyp$10 = Kind$Term$SmartMotive$replace$($10689, _from$2, _to$3, _lv$4);
                    var _body$11 = $10690(Kind$Term$ref$($10687))(Kind$Term$ref$($10688));
                    var _body$12 = Kind$Term$SmartMotive$replace$(_body$11, _from$2, _to$3, Nat$succ$(Nat$succ$(_lv$4)));
                    var $10691 = Kind$Term$all$($10686, $10687, $10688, _xtyp$10, (_s$13 => _x$14 => {
                        var $10692 = _body$12;
                        return $10692;
                    }));
                    var $10680 = $10691;
                    break;
                case 'Kind.Term.lam':
                    var $10693 = self.name;
                    var $10694 = self.body;
                    var _body$7 = $10694(Kind$Term$ref$($10693));
                    var _body$8 = Kind$Term$SmartMotive$replace$(_body$7, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10695 = Kind$Term$lam$($10693, (_x$9 => {
                        var $10696 = _body$8;
                        return $10696;
                    }));
                    var $10680 = $10695;
                    break;
                case 'Kind.Term.app':
                    var $10697 = self.func;
                    var $10698 = self.argm;
                    var _func$7 = Kind$Term$SmartMotive$replace$($10697, _from$2, _to$3, _lv$4);
                    var _argm$8 = Kind$Term$SmartMotive$replace$($10698, _from$2, _to$3, _lv$4);
                    var $10699 = Kind$Term$app$(_func$7, _argm$8);
                    var $10680 = $10699;
                    break;
                case 'Kind.Term.let':
                    var $10700 = self.name;
                    var $10701 = self.expr;
                    var $10702 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10701, _from$2, _to$3, _lv$4);
                    var _body$9 = $10702(Kind$Term$ref$($10700));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10703 = Kind$Term$let$($10700, _expr$8, (_x$11 => {
                        var $10704 = _body$10;
                        return $10704;
                    }));
                    var $10680 = $10703;
                    break;
                case 'Kind.Term.def':
                    var $10705 = self.name;
                    var $10706 = self.expr;
                    var $10707 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10706, _from$2, _to$3, _lv$4);
                    var _body$9 = $10707(Kind$Term$ref$($10705));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10708 = Kind$Term$def$($10705, _expr$8, (_x$11 => {
                        var $10709 = _body$10;
                        return $10709;
                    }));
                    var $10680 = $10708;
                    break;
                case 'Kind.Term.ann':
                    var $10710 = self.done;
                    var $10711 = self.term;
                    var $10712 = self.type;
                    var _term$8 = Kind$Term$SmartMotive$replace$($10711, _from$2, _to$3, _lv$4);
                    var _type$9 = Kind$Term$SmartMotive$replace$($10712, _from$2, _to$3, _lv$4);
                    var $10713 = Kind$Term$ann$($10710, _term$8, _type$9);
                    var $10680 = $10713;
                    break;
                case 'Kind.Term.get':
                    var $10714 = self.expr;
                    var $10715 = self.fkey;
                    var _expr$7 = Kind$Term$SmartMotive$replace$($10714, _from$2, _to$3, _lv$4);
                    var _fkey$8 = $10715;
                    var $10716 = Kind$Term$get$(_expr$7, _fkey$8);
                    var $10680 = $10716;
                    break;
                case 'Kind.Term.set':
                    var $10717 = self.expr;
                    var $10718 = self.fkey;
                    var $10719 = self.fval;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10717, _from$2, _to$3, _lv$4);
                    var _fkey$9 = $10718;
                    var _fval$10 = Kind$Term$SmartMotive$replace$($10719, _from$2, _to$3, _lv$4);
                    var $10720 = Kind$Term$set$(_expr$8, _fkey$9, _fval$10);
                    var $10680 = $10720;
                    break;
                case 'Kind.Term.ope':
                    var $10721 = self.name;
                    var $10722 = self.arg0;
                    var $10723 = self.arg1;
                    var _arg0$8 = Kind$Term$SmartMotive$replace$($10722, _from$2, _to$3, _lv$4);
                    var _arg1$9 = Kind$Term$SmartMotive$replace$($10723, _from$2, _to$3, _lv$4);
                    var $10724 = Kind$Term$ope$($10721, _arg0$8, _arg1$9);
                    var $10680 = $10724;
                    break;
                case 'Kind.Term.ori':
                    var $10725 = self.expr;
                    var $10726 = Kind$Term$SmartMotive$replace$($10725, _from$2, _to$3, _lv$4);
                    var $10680 = $10726;
                    break;
                case 'Kind.Term.typ':
                    var $10727 = Kind$Term$typ;
                    var $10680 = $10727;
                    break;
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                    var $10728 = _term$1;
                    var $10680 = $10728;
                    break;
            };
            var $10678 = $10680;
        };
        return $10678;
    };
    const Kind$Term$SmartMotive$replace = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$replace$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$make$(_name$1, _expr$2, _type$3, _moti$4, _size$5, _defs$6) {
        var _vals$7 = Kind$Term$SmartMotive$vals$(_expr$2, _type$3, _defs$6);
        var _nams$8 = Kind$Term$SmartMotive$nams$(_name$1, _type$3, _defs$6);
        var _subs$9 = List$zip$(_nams$8, _vals$7);
        var $10729 = List$fold$(_subs$9, _moti$4, (_sub$10 => _moti$11 => {
            var self = _sub$10;
            switch (self._) {
                case 'Pair.new':
                    var $10731 = self.fst;
                    var $10732 = self.snd;
                    var $10733 = Kind$Term$SmartMotive$replace$(_moti$11, $10732, Kind$Term$ref$($10731), _size$5);
                    var $10730 = $10733;
                    break;
            };
            return $10730;
        }));
        return $10729;
    };
    const Kind$Term$SmartMotive$make = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$SmartMotive$make$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$check$expand$cse$motive$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var _done$9 = Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8);
        var self = _moti$2;
        switch (self._) {
            case 'Maybe.none':
                var $10735 = Kind$Term$SmartMotive$make$(_name$3, _expr$4, _etyp$5, _done$9, _size$8, _defs$7);
                var $10734 = $10735;
                break;
            case 'Maybe.some':
                var $10736 = _done$9;
                var $10734 = $10736;
                break;
        };
        return $10734;
    };
    const Kind$Term$check$expand$cse$motive = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$(x0, x1, x2, x3, x4, x5, x6, x7);

    function Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, _type$3, _body$4, _defs$5) {
        var self = Kind$Term$reduce$(_type$3, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10738 = self.self;
                var $10739 = self.name;
                var $10740 = self.body;
                var $10741 = Kind$Term$lam$((() => {
                    var self = String$is_empty$($10739);
                    if (self) {
                        var $10742 = _name$1;
                        return $10742;
                    } else {
                        var $10743 = String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10739, List$nil))));
                        return $10743;
                    };
                })(), (_x$11 => {
                    var $10744 = Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, $10740(Kind$Term$var$($10738, 0n))(Kind$Term$var$($10739, 0n)), _body$4, _defs$5);
                    return $10744;
                }));
                var $10737 = $10741;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10746 = self.head;
                        var $10747 = self.tail;
                        var self = $10746;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10749 = self.name;
                                var $10750 = Kind$Term$lam$($10749, (_x$13 => {
                                    var $10751 = Kind$Term$check$expand$cse$argument$(_name$1, $10747, _type$3, _body$4, _defs$5);
                                    return $10751;
                                }));
                                var $10748 = $10750;
                                break;
                        };
                        var $10745 = $10748;
                        break;
                    case 'List.nil':
                        var $10752 = _body$4;
                        var $10745 = $10752;
                        break;
                };
                var $10737 = $10745;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10754 = self.head;
                        var $10755 = self.tail;
                        var self = $10754;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10757 = self.name;
                                var $10758 = Kind$Term$lam$($10757, (_x$12 => {
                                    var $10759 = Kind$Term$check$expand$cse$argument$(_name$1, $10755, _type$3, _body$4, _defs$5);
                                    return $10759;
                                }));
                                var $10756 = $10758;
                                break;
                        };
                        var $10753 = $10756;
                        break;
                    case 'List.nil':
                        var $10760 = _body$4;
                        var $10753 = $10760;
                        break;
                };
                var $10737 = $10753;
                break;
            case 'Kind.Term.typ':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10762 = self.head;
                        var $10763 = self.tail;
                        var self = $10762;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10765 = self.name;
                                var $10766 = Kind$Term$lam$($10765, (_x$11 => {
                                    var $10767 = Kind$Term$check$expand$cse$argument$(_name$1, $10763, _type$3, _body$4, _defs$5);
                                    return $10767;
                                }));
                                var $10764 = $10766;
                                break;
                        };
                        var $10761 = $10764;
                        break;
                    case 'List.nil':
                        var $10768 = _body$4;
                        var $10761 = $10768;
                        break;
                };
                var $10737 = $10761;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10770 = self.head;
                        var $10771 = self.tail;
                        var self = $10770;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10773 = self.name;
                                var $10774 = Kind$Term$lam$($10773, (_x$14 => {
                                    var $10775 = Kind$Term$check$expand$cse$argument$(_name$1, $10771, _type$3, _body$4, _defs$5);
                                    return $10775;
                                }));
                                var $10772 = $10774;
                                break;
                        };
                        var $10769 = $10772;
                        break;
                    case 'List.nil':
                        var $10776 = _body$4;
                        var $10769 = $10776;
                        break;
                };
                var $10737 = $10769;
                break;
            case 'Kind.Term.cse':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10778 = self.head;
                        var $10779 = self.tail;
                        var self = $10778;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10781 = self.name;
                                var $10782 = Kind$Term$lam$($10781, (_x$17 => {
                                    var $10783 = Kind$Term$check$expand$cse$argument$(_name$1, $10779, _type$3, _body$4, _defs$5);
                                    return $10783;
                                }));
                                var $10780 = $10782;
                                break;
                        };
                        var $10777 = $10780;
                        break;
                    case 'List.nil':
                        var $10784 = _body$4;
                        var $10777 = $10784;
                        break;
                };
                var $10737 = $10777;
                break;
        };
        return $10737;
    };
    const Kind$Term$check$expand$cse$argument = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$cse$argument$(x0, x1, x2, x3, x4);

    function Maybe$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Maybe.some':
                var $10786 = self.value;
                var $10787 = Maybe$some$($10786);
                var $10785 = $10787;
                break;
            case 'Maybe.none':
                var $10788 = _b$3;
                var $10785 = $10788;
                break;
        };
        return $10785;
    };
    const Maybe$or = x0 => x1 => Maybe$or$(x0, x1);

    function Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) {
        var Kind$Term$check$expand$cse$cases$ = (_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) => ({
            ctr: 'TCO',
            arg: [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7]
        });
        var Kind$Term$check$expand$cse$cases = _expr$1 => _name$2 => _wyth$3 => _cses$4 => _type$5 => _defs$6 => _ctxt$7 => Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7);
        var arg = [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7];
        while (true) {
            let [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$5, _defs$6);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10789 = self.self;
                        var $10790 = self.name;
                        var $10791 = self.xtyp;
                        var $10792 = self.body;
                        var _argm$13 = Maybe$or$(Kind$Map$get$($10790, _cses$4), Kind$Map$get$("_", _cses$4));
                        var _argm$14 = Maybe$default$(_argm$13, Kind$Term$ref$((_name$2 + ("_" + ($10790 + "_case")))));
                        var _argm$15 = Kind$Term$check$expand$cse$argument$(_name$2, _wyth$3, $10791, _argm$14, _defs$6);
                        var _expr$16 = Kind$Term$app$(_expr$1, _argm$15);
                        var _type$17 = $10792(Kind$Term$var$($10789, 0n))(Kind$Term$var$($10790, 0n));
                        var $10793 = Kind$Term$check$expand$cse$cases$(_expr$16, _name$2, _wyth$3, _cses$4, _type$17, _defs$6, _ctxt$7);
                        return $10793;
                    case 'Kind.Term.var':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                    case 'Kind.Term.ori':
                        var _expr$10 = (() => {
                            var $10796 = _expr$1;
                            var $10797 = _wyth$3;
                            let _expr$11 = $10796;
                            let _defn$10;
                            while ($10797._ === 'List.cons') {
                                _defn$10 = $10797.head;
                                var $10796 = Kind$Term$app$(_expr$11, (() => {
                                    var self = _defn$10;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10798 = self.term;
                                            var $10799 = $10798;
                                            return $10799;
                                    };
                                })());
                                _expr$11 = $10796;
                                $10797 = $10797.tail;
                            }
                            return _expr$11;
                        })();
                        var $10794 = _expr$10;
                        return $10794;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var _expr$9 = (() => {
                            var $10802 = _expr$1;
                            var $10803 = _wyth$3;
                            let _expr$10 = $10802;
                            let _defn$9;
                            while ($10803._ === 'List.cons') {
                                _defn$9 = $10803.head;
                                var $10802 = Kind$Term$app$(_expr$10, (() => {
                                    var self = _defn$9;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10804 = self.term;
                                            var $10805 = $10804;
                                            return $10805;
                                    };
                                })());
                                _expr$10 = $10802;
                                $10803 = $10803.tail;
                            }
                            return _expr$10;
                        })();
                        var $10800 = _expr$9;
                        return $10800;
                    case 'Kind.Term.typ':
                        var _expr$8 = (() => {
                            var $10808 = _expr$1;
                            var $10809 = _wyth$3;
                            let _expr$9 = $10808;
                            let _defn$8;
                            while ($10809._ === 'List.cons') {
                                _defn$8 = $10809.head;
                                var $10808 = Kind$Term$app$(_expr$9, (() => {
                                    var self = _defn$8;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10810 = self.term;
                                            var $10811 = $10810;
                                            return $10811;
                                    };
                                })());
                                _expr$9 = $10808;
                                $10809 = $10809.tail;
                            }
                            return _expr$9;
                        })();
                        var $10806 = _expr$8;
                        return $10806;
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var _expr$11 = (() => {
                            var $10814 = _expr$1;
                            var $10815 = _wyth$3;
                            let _expr$12 = $10814;
                            let _defn$11;
                            while ($10815._ === 'List.cons') {
                                _defn$11 = $10815.head;
                                var $10814 = Kind$Term$app$(_expr$12, (() => {
                                    var self = _defn$11;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10816 = self.term;
                                            var $10817 = $10816;
                                            return $10817;
                                    };
                                })());
                                _expr$12 = $10814;
                                $10815 = $10815.tail;
                            }
                            return _expr$12;
                        })();
                        var $10812 = _expr$11;
                        return $10812;
                    case 'Kind.Term.cse':
                        var _expr$14 = (() => {
                            var $10820 = _expr$1;
                            var $10821 = _wyth$3;
                            let _expr$15 = $10820;
                            let _defn$14;
                            while ($10821._ === 'List.cons') {
                                _defn$14 = $10821.head;
                                var $10820 = Kind$Term$app$(_expr$15, (() => {
                                    var self = _defn$14;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10822 = self.term;
                                            var $10823 = $10822;
                                            return $10823;
                                    };
                                })());
                                _expr$15 = $10820;
                                $10821 = $10821.tail;
                            }
                            return _expr$15;
                        })();
                        var $10818 = _expr$14;
                        return $10818;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$check$expand$cse$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Term$check$expand$cse$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Term$check$expand$cse$(_expr$1, _name$2, _wyth$3, _cses$4, _moti$5, _etyp$6, _rtyp$7, _defs$8, _ctxt$9) {
        var self = Kind$Term$reduce$(_etyp$6, _defs$8);
        switch (self._) {
            case 'Kind.Term.all':
                var $10825 = self.self;
                var $10826 = self.name;
                var $10827 = self.xtyp;
                var $10828 = self.body;
                var _moti$15 = Kind$Term$check$expand$cse$motive$(_wyth$3, _moti$5, _name$2, _expr$1, _etyp$6, _rtyp$7, _defs$8, (list_length(_ctxt$9)));
                var _argm$16 = Kind$Term$check$expand$cse$argument$(_name$2, List$nil, $10827, _moti$15, _defs$8);
                var _expr$17 = Kind$Term$app$(_expr$1, _argm$16);
                var _type$18 = $10828(Kind$Term$var$($10825, 0n))(Kind$Term$var$($10826, 0n));
                var $10829 = Maybe$some$(Kind$Term$check$expand$cse$cases$(_expr$17, _name$2, _wyth$3, _cses$4, _type$18, _defs$8, _ctxt$9));
                var $10824 = $10829;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10830 = Maybe$none;
                var $10824 = $10830;
                break;
        };
        return $10824;
    };
    const Kind$Term$check$expand$cse = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Term$check$expand$cse$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Error$cant_infer$(_origin$1, _term$2, _context$3) {
        var $10831 = ({
            _: 'Kind.Error.cant_infer',
            'origin': _origin$1,
            'term': _term$2,
            'context': _context$3
        });
        return $10831;
    };
    const Kind$Error$cant_infer = x0 => x1 => x2 => Kind$Error$cant_infer$(x0, x1, x2);

    function Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$3, _orig$4) {
        var $10832 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$cant_infer$(_orig$4, _term$1, _ctx$3), List$nil));
        return $10832;
    };
    const Kind$Term$check$cant_infer = x0 => x1 => x2 => x3 => Kind$Term$check$cant_infer$(x0, x1, x2, x3);

    function Kind$Term$get_bnds$(_term$1, _depth$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10834 = self.self;
                var $10835 = self.name;
                var $10836 = self.xtyp;
                var $10837 = self.body;
                var _b$8 = $10837(Kind$Term$var$($10834, _depth$2))(Kind$Term$var$($10835, Nat$succ$(_depth$2)));
                var self = Kind$Term$get_bnds$(_b$8, Nat$succ$(Nat$succ$(_depth$2)));
                switch (self._) {
                    case 'Pair.new':
                        var $10839 = self.fst;
                        var $10840 = self.snd;
                        var $10841 = Pair$new$(List$cons$(Pair$new$($10835, $10836), $10839), $10840);
                        var $10838 = $10841;
                        break;
                };
                var $10833 = $10838;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10842 = Pair$new$(List$nil, _term$1);
                var $10833 = $10842;
                break;
        };
        return $10833;
    };
    const Kind$Term$get_bnds = x0 => x1 => Kind$Term$get_bnds$(x0, x1);

    function List$last$go$(_xs$2, _last$3) {
        var List$last$go$ = (_xs$2, _last$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _last$3]
        });
        var List$last$go = _xs$2 => _last$3 => List$last$go$(_xs$2, _last$3);
        var arg = [_xs$2, _last$3];
        while (true) {
            let [_xs$2, _last$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $10843 = self.head;
                        var $10844 = self.tail;
                        var $10845 = List$last$go$($10844, Maybe$some$($10843));
                        return $10845;
                    case 'List.nil':
                        var $10846 = _last$3;
                        return $10846;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$last$go = x0 => x1 => List$last$go$(x0, x1);

    function List$last$(_xs$2) {
        var $10847 = List$last$go$(_xs$2, Maybe$none);
        return $10847;
    };
    const List$last = x0 => List$last$(x0);

    function Kind$Term$check$expand$set$count_params$(_xtyp$1) {
        var self = Kind$Term$get_bnds$(_xtyp$1, 0n);
        switch (self._) {
            case 'Pair.new':
                var $10849 = self.fst;
                var self = Kind$Term$get_args$(Pair$snd$(Maybe$default$(List$last$($10849), Pair$new$("", Kind$Term$typ))));
                switch (self._) {
                    case 'Pair.new':
                        var $10851 = self.snd;
                        var _indexs$6 = Nat$pred$((list_length($10849)));
                        var _params$7 = ((list_length($10851)) - _indexs$6 <= 0n ? 0n : (list_length($10851)) - _indexs$6);
                        var $10852 = _params$7;
                        var $10850 = $10852;
                        break;
                };
                var $10848 = $10850;
                break;
        };
        return $10848;
    };
    const Kind$Term$check$expand$set$count_params = x0 => Kind$Term$check$expand$set$count_params$(x0);

    function Nat$for$(_state$2, _from$3, _til$4, _func$5) {
        var Nat$for$ = (_state$2, _from$3, _til$4, _func$5) => ({
            ctr: 'TCO',
            arg: [_state$2, _from$3, _til$4, _func$5]
        });
        var Nat$for = _state$2 => _from$3 => _til$4 => _func$5 => Nat$for$(_state$2, _from$3, _til$4, _func$5);
        var arg = [_state$2, _from$3, _til$4, _func$5];
        while (true) {
            let [_state$2, _from$3, _til$4, _func$5] = arg;
            var R = (() => {
                var self = (_from$3 === _til$4);
                if (self) {
                    var $10853 = _state$2;
                    return $10853;
                } else {
                    var $10854 = Nat$for$(_func$5(_from$3)(_state$2), Nat$succ$(_from$3), _til$4, _func$5);
                    return $10854;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$for = x0 => x1 => x2 => x3 => Nat$for$(x0, x1, x2, x3);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $10855 = self.head;
                        var $10856 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $10858 = Maybe$some$($10855);
                            var $10857 = $10858;
                        } else {
                            var $10859 = (self - 1n);
                            var $10860 = List$get$($10859, $10856);
                            var $10857 = $10860;
                        };
                        return $10857;
                    case 'List.nil':
                        var $10861 = Maybe$none;
                        return $10861;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3) {
        var self = ((list_length(_args$1)) === 2n);
        if (self) {
            var _term$4 = Kind$Term$ref$("Pair.new");
            var _term$5 = Kind$Term$app$(_term$4, Kind$Term$hol$(Bits$e));
            var _term$6 = Kind$Term$app$(_term$5, Kind$Term$hol$(Bits$e));
            var _term$7 = Kind$Term$app$(_term$6, Maybe$default$(List$get$(0n, _args$1), Kind$Term$ref$("pair_fst")));
            var _term$8 = Kind$Term$app$(_term$7, Maybe$default$(List$get$(1n, _args$1), Kind$Term$ref$("pair_snd")));
            var $10863 = Maybe$some$(_term$8);
            var $10862 = $10863;
        } else {
            var $10864 = Maybe$none;
            var $10862 = $10864;
        };
        return $10862;
    };
    const Kind$Term$check$expand$new$pair = x0 => x1 => x2 => Kind$Term$check$expand$new$pair$(x0, x1, x2);

    function Kind$Term$check$expand$new$(_args$1, _type$2, _defs$3) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $10866 = self.value;
                var self = Kind$Term$reduce$($10866, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10868 = self.self;
                        var $10869 = self.xtyp;
                        var $10870 = self.body;
                        var self = Kind$Term$reduce$($10870(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $10872 = self.name;
                                var _tnam$15 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10868), "");
                                var _term$16 = Kind$Term$ref$((_tnam$15 + ("." + $10872)));
                                var _pars$17 = Kind$Term$check$expand$set$count_params$($10869);
                                var _term$18 = Nat$for$(_term$16, 0n, _pars$17, (_i$18 => _term$19 => {
                                    var $10874 = Kind$Term$app$(_term$19, Kind$Term$hol$(Bits$e));
                                    return $10874;
                                }));
                                var _term$19 = (() => {
                                    var $10876 = _term$18;
                                    var $10877 = _args$1;
                                    let _term$20 = $10876;
                                    let _arg$19;
                                    while ($10877._ === 'List.cons') {
                                        _arg$19 = $10877.head;
                                        var $10876 = Kind$Term$app$(_term$20, _arg$19);
                                        _term$20 = $10876;
                                        $10877 = $10877.tail;
                                    }
                                    return _term$20;
                                })();
                                var $10873 = Maybe$some$(_term$19);
                                var $10871 = $10873;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $10878 = Maybe$none;
                                var $10871 = $10878;
                                break;
                        };
                        var $10867 = $10871;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10879 = Maybe$none;
                        var $10867 = $10879;
                        break;
                };
                var _got$4 = $10867;
                break;
            case 'Maybe.none':
                var $10880 = Maybe$none;
                var _got$4 = $10880;
                break;
        };
        var self = _got$4;
        switch (self._) {
            case 'Maybe.some':
                var $10881 = self.value;
                var $10882 = Maybe$some$($10881);
                var $10865 = $10882;
                break;
            case 'Maybe.none':
                var $10883 = Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3);
                var $10865 = $10883;
                break;
        };
        return $10865;
    };
    const Kind$Term$check$expand$new = x0 => x1 => x2 => Kind$Term$check$expand$new$(x0, x1, x2);

    function Kind$Term$check$expand$get$selector$(_fkey$1, _ctor$2, _defs$3, _rett$4) {
        var self = Kind$Term$reduce$(_ctor$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10885 = self.name;
                var $10886 = self.body;
                var $10887 = Kind$Term$lam$($10885, (_x$10 => {
                    var _body$11 = $10886(Kind$Term$typ)(Kind$Term$typ);
                    var self = ($10885 === _fkey$1);
                    if (self) {
                        var $10889 = _x$10;
                        var _rett$12 = $10889;
                    } else {
                        var $10890 = _rett$4;
                        var _rett$12 = $10890;
                    };
                    var $10888 = Kind$Term$check$expand$get$selector$(_fkey$1, _body$11, _defs$3, _rett$12);
                    return $10888;
                }));
                var $10884 = $10887;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10891 = _rett$4;
                var $10884 = $10891;
                break;
        };
        return $10884;
    };
    const Kind$Term$check$expand$get$selector = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$selector$(x0, x1, x2, x3);

    function Kind$Term$check$expand$get$(_expr$1, _fkey$2, _etyp$3, _defs$4) {
        var self = Kind$Term$reduce$(_etyp$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10893 = self.body;
                var self = Kind$Term$reduce$($10893(Kind$Term$typ)(Kind$Term$typ), _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10895 = self.xtyp;
                        var _term$15 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$15 => {
                            var $10897 = Kind$Term$hol$(Bits$e);
                            return $10897;
                        })));
                        var _rett$16 = Kind$Term$ref$((_fkey$2 + "_field"));
                        var _sele$17 = Kind$Term$check$expand$get$selector$(_fkey$2, $10895, _defs$4, _rett$16);
                        var $10896 = Maybe$some$(Kind$Term$app$(_term$15, _sele$17));
                        var $10894 = $10896;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10898 = Maybe$none;
                        var $10894 = $10898;
                        break;
                };
                var $10892 = $10894;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10899 = Maybe$none;
                var $10892 = $10899;
                break;
        };
        return $10892;
    };
    const Kind$Term$check$expand$get = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$(x0, x1, x2, x3);

    function Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _ctor$3, _defs$4, _rett$5) {
        var self = Kind$Term$reduce$(_ctor$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10901 = self.name;
                var $10902 = self.body;
                var $10903 = Kind$Term$lam$($10901, (_x$11 => {
                    var _body$12 = $10902(Kind$Term$typ)(Kind$Term$typ);
                    var _rett$13 = Kind$Term$app$(_rett$5, (() => {
                        var self = ($10901 === _fkey$1);
                        if (self) {
                            var $10905 = _fval$2;
                            return $10905;
                        } else {
                            var $10906 = _x$11;
                            return $10906;
                        };
                    })());
                    var $10904 = Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _body$12, _defs$4, _rett$13);
                    return $10904;
                }));
                var $10900 = $10903;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10907 = _rett$5;
                var $10900 = $10907;
                break;
        };
        return $10900;
    };
    const Kind$Term$check$expand$set$selector = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$selector$(x0, x1, x2, x3, x4);

    function Kind$Term$check$expand$set$(_expr$1, _fkey$2, _fval$3, _etyp$4, _defs$5) {
        var self = Kind$Term$reduce$(_etyp$4, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10909 = self.self;
                var $10910 = self.xtyp;
                var $10911 = self.body;
                var self = Kind$Term$reduce$($10911(Kind$Term$typ)(Kind$Term$typ), _defs$5);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10913 = self.name;
                        var $10914 = self.xtyp;
                        var _term$16 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$16 => {
                            var $10916 = Kind$Term$hol$(Bits$e);
                            return $10916;
                        })));
                        var _tnam$17 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10909), "");
                        var _rett$18 = Kind$Term$ref$((_tnam$17 + ("." + $10913)));
                        var _pars$19 = Kind$Term$check$expand$set$count_params$($10910);
                        var _rett$20 = Nat$for$(_rett$18, 0n, _pars$19, (_i$20 => _rett$21 => {
                            var $10917 = Kind$Term$app$(_rett$21, Kind$Term$hol$(Bits$e));
                            return $10917;
                        }));
                        var _sele$21 = Kind$Term$check$expand$set$selector$(_fkey$2, _fval$3, $10914, _defs$5, _rett$20);
                        var $10915 = Maybe$some$(Kind$Term$app$(_term$16, _sele$21));
                        var $10912 = $10915;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10918 = Maybe$none;
                        var $10912 = $10918;
                        break;
                };
                var $10908 = $10912;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10919 = Maybe$none;
                var $10908 = $10919;
                break;
        };
        return $10908;
    };
    const Kind$Term$check$expand$set = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$(x0, x1, x2, x3, x4);

    function String$at$(_index$1, _str$2) {
        var String$at$ = (_index$1, _str$2) => ({
            ctr: 'TCO',
            arg: [_index$1, _str$2]
        });
        var String$at = _index$1 => _str$2 => String$at$(_index$1, _str$2);
        var arg = [_index$1, _str$2];
        while (true) {
            let [_index$1, _str$2] = arg;
            var R = (() => {
                var self = _str$2;
                if (self.length === 0) {
                    var $10920 = Maybe$none;
                    return $10920;
                } else {
                    var $10921 = self.charCodeAt(0);
                    var $10922 = self.slice(1);
                    var self = _index$1;
                    if (self === 0n) {
                        var $10924 = Maybe$some$($10921);
                        var $10923 = $10924;
                    } else {
                        var $10925 = (self - 1n);
                        var $10926 = String$at$($10925, $10922);
                        var $10923 = $10926;
                    };
                    return $10923;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$at = x0 => x1 => String$at$(x0, x1);

    function String$last$(_xs$1) {
        var $10927 = String$at$(Nat$pred$(String$length$(_xs$1)), _xs$1);
        return $10927;
    };
    const String$last = x0 => String$last$(x0);

    function Kind$Term$check$expand$ope$(_skip_cmp$1, _oper$2, _arg0$3, _arg1$4, _otyp$5, _defs$6) {
        var self = ((Maybe$default$(String$last$(_oper$2), 120) === 63) && _skip_cmp$1);
        if (self) {
            var $10929 = Maybe$none;
            var $10928 = $10929;
        } else {
            var _type_name$7 = Kind$Term$check$get_name_of_self_type$(_otyp$5, _defs$6);
            var self = _type_name$7;
            switch (self._) {
                case 'Maybe.some':
                    var $10931 = self.value;
                    var self = (_oper$2 === "+");
                    if (self) {
                        var $10933 = Maybe$some$("add");
                        var _oper_name$9 = $10933;
                    } else {
                        var self = (_oper$2 === "-");
                        if (self) {
                            var $10935 = Maybe$some$("sub");
                            var $10934 = $10935;
                        } else {
                            var self = (_oper$2 === "*");
                            if (self) {
                                var $10937 = Maybe$some$("mul");
                                var $10936 = $10937;
                            } else {
                                var self = (_oper$2 === "/");
                                if (self) {
                                    var $10939 = Maybe$some$("div");
                                    var $10938 = $10939;
                                } else {
                                    var self = (_oper$2 === "**");
                                    if (self) {
                                        var $10941 = Maybe$some$("pow");
                                        var $10940 = $10941;
                                    } else {
                                        var self = (_oper$2 === "%");
                                        if (self) {
                                            var $10943 = Maybe$some$("mod");
                                            var $10942 = $10943;
                                        } else {
                                            var self = (_oper$2 === "<?");
                                            if (self) {
                                                var $10945 = Maybe$some$("ltn");
                                                var $10944 = $10945;
                                            } else {
                                                var self = (_oper$2 === "<=?");
                                                if (self) {
                                                    var $10947 = Maybe$some$("lte");
                                                    var $10946 = $10947;
                                                } else {
                                                    var self = (_oper$2 === "=?");
                                                    if (self) {
                                                        var $10949 = Maybe$some$("eql");
                                                        var $10948 = $10949;
                                                    } else {
                                                        var self = (_oper$2 === ">=?");
                                                        if (self) {
                                                            var $10951 = Maybe$some$("gte");
                                                            var $10950 = $10951;
                                                        } else {
                                                            var self = (_oper$2 === ">?");
                                                            if (self) {
                                                                var $10953 = Maybe$some$("gtn");
                                                                var $10952 = $10953;
                                                            } else {
                                                                var self = (_oper$2 === "&&");
                                                                if (self) {
                                                                    var $10955 = Maybe$some$("and");
                                                                    var $10954 = $10955;
                                                                } else {
                                                                    var self = (_oper$2 === "||");
                                                                    if (self) {
                                                                        var $10957 = Maybe$some$("or");
                                                                        var $10956 = $10957;
                                                                    } else {
                                                                        var $10958 = Maybe$none;
                                                                        var $10956 = $10958;
                                                                    };
                                                                    var $10954 = $10956;
                                                                };
                                                                var $10952 = $10954;
                                                            };
                                                            var $10950 = $10952;
                                                        };
                                                        var $10948 = $10950;
                                                    };
                                                    var $10946 = $10948;
                                                };
                                                var $10944 = $10946;
                                            };
                                            var $10942 = $10944;
                                        };
                                        var $10940 = $10942;
                                    };
                                    var $10938 = $10940;
                                };
                                var $10936 = $10938;
                            };
                            var $10934 = $10936;
                        };
                        var _oper_name$9 = $10934;
                    };
                    var self = _oper_name$9;
                    switch (self._) {
                        case 'Maybe.some':
                            var $10959 = self.value;
                            var _term$11 = Kind$Term$ref$(($10931 + ("." + $10959)));
                            var _term$12 = Kind$Term$app$(_term$11, _arg0$3);
                            var _term$13 = Kind$Term$app$(_term$12, _arg1$4);
                            var $10960 = Maybe$some$(_term$13);
                            var $10932 = $10960;
                            break;
                        case 'Maybe.none':
                            var $10961 = Maybe$none;
                            var $10932 = $10961;
                            break;
                    };
                    var $10930 = $10932;
                    break;
                case 'Maybe.none':
                    var $10962 = Maybe$none;
                    var $10930 = $10962;
                    break;
            };
            var $10928 = $10930;
        };
        return $10928;
    };
    const Kind$Term$check$expand$ope = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$expand$ope$(x0, x1, x2, x3, x4, x5);

    function BitsSet$has$(_bits$1, _set$2) {
        var self = (bitsmap_get(_bits$1, _set$2));
        switch (self._) {
            case 'Maybe.none':
                var $10964 = Bool$false;
                var $10963 = $10964;
                break;
            case 'Maybe.some':
                var $10965 = Bool$true;
                var $10963 = $10965;
                break;
        };
        return $10963;
    };
    const BitsSet$has = x0 => x1 => BitsSet$has$(x0, x1);

    function BitsSet$mut$has$(_bits$1, _set$2) {
        var $10966 = BitsSet$has$(_bits$1, _set$2);
        return $10966;
    };
    const BitsSet$mut$has = x0 => x1 => BitsSet$mut$has$(x0, x1);

    function Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2) {
        var Kind$Term$equal$extra_holes$funari$ = (_term$1, _arity$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _arity$2]
        });
        var Kind$Term$equal$extra_holes$funari = _term$1 => _arity$2 => Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2);
        var arg = [_term$1, _arity$2];
        while (true) {
            let [_term$1, _arity$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $10967 = self.name;
                        var $10968 = Maybe$some$(Pair$new$($10967, _arity$2));
                        return $10968;
                    case 'Kind.Term.ref':
                        var $10969 = self.name;
                        var $10970 = Maybe$some$(Pair$new$($10969, _arity$2));
                        return $10970;
                    case 'Kind.Term.app':
                        var $10971 = self.func;
                        var $10972 = Kind$Term$equal$extra_holes$funari$($10971, Nat$succ$(_arity$2));
                        return $10972;
                    case 'Kind.Term.ori':
                        var $10973 = self.expr;
                        var $10974 = Kind$Term$equal$extra_holes$funari$($10973, _arity$2);
                        return $10974;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10975 = Maybe$none;
                        return $10975;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$equal$extra_holes$funari = x0 => x1 => Kind$Term$equal$extra_holes$funari$(x0, x1);

    function Kind$Term$has_holes$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10977 = self.xtyp;
                var $10978 = self.body;
                var $10979 = (Kind$Term$has_holes$($10977) || Kind$Term$has_holes$($10978(Kind$Term$typ)(Kind$Term$typ)));
                var $10976 = $10979;
                break;
            case 'Kind.Term.lam':
                var $10980 = self.body;
                var $10981 = Kind$Term$has_holes$($10980(Kind$Term$typ));
                var $10976 = $10981;
                break;
            case 'Kind.Term.app':
                var $10982 = self.func;
                var $10983 = self.argm;
                var $10984 = (Kind$Term$has_holes$($10982) || Kind$Term$has_holes$($10983));
                var $10976 = $10984;
                break;
            case 'Kind.Term.let':
                var $10985 = self.expr;
                var $10986 = self.body;
                var $10987 = (Kind$Term$has_holes$($10985) || Kind$Term$has_holes$($10986(Kind$Term$typ)));
                var $10976 = $10987;
                break;
            case 'Kind.Term.def':
                var $10988 = self.expr;
                var $10989 = self.body;
                var $10990 = (Kind$Term$has_holes$($10988) || Kind$Term$has_holes$($10989(Kind$Term$typ)));
                var $10976 = $10990;
                break;
            case 'Kind.Term.ann':
                var $10991 = self.term;
                var $10992 = self.type;
                var $10993 = (Kind$Term$has_holes$($10991) || Kind$Term$has_holes$($10992));
                var $10976 = $10993;
                break;
            case 'Kind.Term.ori':
                var $10994 = self.expr;
                var $10995 = Kind$Term$has_holes$($10994);
                var $10976 = $10995;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10996 = Bool$false;
                var $10976 = $10996;
                break;
            case 'Kind.Term.hol':
                var $10997 = Bool$true;
                var $10976 = $10997;
                break;
        };
        return $10976;
    };
    const Kind$Term$has_holes = x0 => Kind$Term$has_holes$(x0);

    function Kind$Term$equal$hole$(_path$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var self = Kind$Term$has_holes$(_term$2);
                if (self) {
                    var $11000 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                    var $10999 = $11000;
                } else {
                    var $11001 = Kind$Check$result$(Maybe$some$(Bool$true), List$cons$(Kind$Error$patch$(_path$1, Kind$Term$normalize$(_term$2, Kind$Map$new)), List$nil));
                    var $10999 = $11001;
                };
                var $10998 = $10999;
                break;
            case 'Kind.Term.hol':
                var $11002 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $10998 = $11002;
                break;
        };
        return $10998;
    };
    const Kind$Term$equal$hole = x0 => x1 => Kind$Term$equal$hole$(x0, x1);

    function Kind$Term$equal$extra_holes$filler$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Kind.Term.app':
                var $11004 = self.func;
                var $11005 = self.argm;
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $11007 = self.func;
                        var $11008 = self.argm;
                        var self = Kind$Term$equal$extra_holes$filler$($11004, $11007);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11010 = self.value;
                                var $11011 = self.errors;
                                var self = $11010;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11013 = Kind$Check$result$(Maybe$none, $11011);
                                        var $11012 = $11013;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Term$equal$extra_holes$filler$($11005, $11008);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11015 = self.value;
                                                var $11016 = self.errors;
                                                var $11017 = Kind$Check$result$($11015, List$concat$($11011, $11016));
                                                var $11014 = $11017;
                                                break;
                                        };
                                        var $11012 = $11014;
                                        break;
                                };
                                var $11009 = $11012;
                                break;
                        };
                        var $11006 = $11009;
                        break;
                    case 'Kind.Term.hol':
                        var $11018 = self.path;
                        var self = Kind$Term$equal$hole$($11018, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11020 = self.value;
                                var $11021 = self.errors;
                                var self = $11020;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11023 = Kind$Check$result$(Maybe$none, $11021);
                                        var $11022 = $11023;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11025 = self.value;
                                                var $11026 = self.errors;
                                                var $11027 = Kind$Check$result$($11025, List$concat$($11021, $11026));
                                                var $11024 = $11027;
                                                break;
                                        };
                                        var $11022 = $11024;
                                        break;
                                };
                                var $11019 = $11022;
                                break;
                        };
                        var $11006 = $11019;
                        break;
                    case 'Kind.Term.ori':
                        var $11028 = self.expr;
                        var $11029 = Kind$Term$equal$extra_holes$filler$(_a$1, $11028);
                        var $11006 = $11029;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11030 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11006 = $11030;
                        break;
                };
                var $11003 = $11006;
                break;
            case 'Kind.Term.hol':
                var $11031 = self.path;
                var self = Kind$Term$equal$hole$($11031, _b$2);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11033 = self.value;
                        var $11034 = self.errors;
                        var self = $11033;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11036 = Kind$Check$result$(Maybe$none, $11034);
                                var $11035 = $11036;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11038 = self.value;
                                        var $11039 = self.errors;
                                        var $11040 = Kind$Check$result$($11038, List$concat$($11034, $11039));
                                        var $11037 = $11040;
                                        break;
                                };
                                var $11035 = $11037;
                                break;
                        };
                        var $11032 = $11035;
                        break;
                };
                var $11003 = $11032;
                break;
            case 'Kind.Term.ori':
                var $11041 = self.expr;
                var $11042 = Kind$Term$equal$extra_holes$filler$($11041, _b$2);
                var $11003 = $11042;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.get':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11044 = self.path;
                        var self = Kind$Term$equal$hole$($11044, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11046 = self.value;
                                var $11047 = self.errors;
                                var self = $11046;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11049 = Kind$Check$result$(Maybe$none, $11047);
                                        var $11048 = $11049;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11051 = self.value;
                                                var $11052 = self.errors;
                                                var $11053 = Kind$Check$result$($11051, List$concat$($11047, $11052));
                                                var $11050 = $11053;
                                                break;
                                        };
                                        var $11048 = $11050;
                                        break;
                                };
                                var $11045 = $11048;
                                break;
                        };
                        var $11043 = $11045;
                        break;
                    case 'Kind.Term.ori':
                        var $11054 = self.expr;
                        var $11055 = Kind$Term$equal$extra_holes$filler$(_a$1, $11054);
                        var $11043 = $11055;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11056 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11043 = $11056;
                        break;
                };
                var $11003 = $11043;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11058 = self.path;
                        var self = Kind$Term$equal$hole$($11058, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11060 = self.value;
                                var $11061 = self.errors;
                                var self = $11060;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11063 = Kind$Check$result$(Maybe$none, $11061);
                                        var $11062 = $11063;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11065 = self.value;
                                                var $11066 = self.errors;
                                                var $11067 = Kind$Check$result$($11065, List$concat$($11061, $11066));
                                                var $11064 = $11067;
                                                break;
                                        };
                                        var $11062 = $11064;
                                        break;
                                };
                                var $11059 = $11062;
                                break;
                        };
                        var $11057 = $11059;
                        break;
                    case 'Kind.Term.ori':
                        var $11068 = self.expr;
                        var $11069 = Kind$Term$equal$extra_holes$filler$(_a$1, $11068);
                        var $11057 = $11069;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11070 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11057 = $11070;
                        break;
                };
                var $11003 = $11057;
                break;
            case 'Kind.Term.typ':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11072 = self.path;
                        var self = Kind$Term$equal$hole$($11072, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11074 = self.value;
                                var $11075 = self.errors;
                                var self = $11074;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11077 = Kind$Check$result$(Maybe$none, $11075);
                                        var $11076 = $11077;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11079 = self.value;
                                                var $11080 = self.errors;
                                                var $11081 = Kind$Check$result$($11079, List$concat$($11075, $11080));
                                                var $11078 = $11081;
                                                break;
                                        };
                                        var $11076 = $11078;
                                        break;
                                };
                                var $11073 = $11076;
                                break;
                        };
                        var $11071 = $11073;
                        break;
                    case 'Kind.Term.ori':
                        var $11082 = self.expr;
                        var $11083 = Kind$Term$equal$extra_holes$filler$(_a$1, $11082);
                        var $11071 = $11083;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11084 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11071 = $11084;
                        break;
                };
                var $11003 = $11071;
                break;
            case 'Kind.Term.all':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11086 = self.path;
                        var self = Kind$Term$equal$hole$($11086, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11088 = self.value;
                                var $11089 = self.errors;
                                var self = $11088;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11091 = Kind$Check$result$(Maybe$none, $11089);
                                        var $11090 = $11091;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11093 = self.value;
                                                var $11094 = self.errors;
                                                var $11095 = Kind$Check$result$($11093, List$concat$($11089, $11094));
                                                var $11092 = $11095;
                                                break;
                                        };
                                        var $11090 = $11092;
                                        break;
                                };
                                var $11087 = $11090;
                                break;
                        };
                        var $11085 = $11087;
                        break;
                    case 'Kind.Term.ori':
                        var $11096 = self.expr;
                        var $11097 = Kind$Term$equal$extra_holes$filler$(_a$1, $11096);
                        var $11085 = $11097;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11098 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11085 = $11098;
                        break;
                };
                var $11003 = $11085;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11100 = self.path;
                        var self = Kind$Term$equal$hole$($11100, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11102 = self.value;
                                var $11103 = self.errors;
                                var self = $11102;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11105 = Kind$Check$result$(Maybe$none, $11103);
                                        var $11104 = $11105;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11107 = self.value;
                                                var $11108 = self.errors;
                                                var $11109 = Kind$Check$result$($11107, List$concat$($11103, $11108));
                                                var $11106 = $11109;
                                                break;
                                        };
                                        var $11104 = $11106;
                                        break;
                                };
                                var $11101 = $11104;
                                break;
                        };
                        var $11099 = $11101;
                        break;
                    case 'Kind.Term.ori':
                        var $11110 = self.expr;
                        var $11111 = Kind$Term$equal$extra_holes$filler$(_a$1, $11110);
                        var $11099 = $11111;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11112 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11099 = $11112;
                        break;
                };
                var $11003 = $11099;
                break;
            case 'Kind.Term.cse':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11114 = self.path;
                        var self = Kind$Term$equal$hole$($11114, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11116 = self.value;
                                var $11117 = self.errors;
                                var self = $11116;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11119 = Kind$Check$result$(Maybe$none, $11117);
                                        var $11118 = $11119;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11121 = self.value;
                                                var $11122 = self.errors;
                                                var $11123 = Kind$Check$result$($11121, List$concat$($11117, $11122));
                                                var $11120 = $11123;
                                                break;
                                        };
                                        var $11118 = $11120;
                                        break;
                                };
                                var $11115 = $11118;
                                break;
                        };
                        var $11113 = $11115;
                        break;
                    case 'Kind.Term.ori':
                        var $11124 = self.expr;
                        var $11125 = Kind$Term$equal$extra_holes$filler$(_a$1, $11124);
                        var $11113 = $11125;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11126 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11113 = $11126;
                        break;
                };
                var $11003 = $11113;
                break;
        };
        return $11003;
    };
    const Kind$Term$equal$extra_holes$filler = x0 => x1 => Kind$Term$equal$extra_holes$filler$(x0, x1);

    function Kind$Term$equal$extra_holes$(_a$1, _b$2) {
        var self = Kind$Term$equal$extra_holes$funari$(_a$1, 0n);
        switch (self._) {
            case 'Maybe.some':
                var $11128 = self.value;
                var self = Kind$Term$equal$extra_holes$funari$(_b$2, 0n);
                switch (self._) {
                    case 'Maybe.some':
                        var $11130 = self.value;
                        var self = $11128;
                        switch (self._) {
                            case 'Pair.new':
                                var $11132 = self.fst;
                                var $11133 = self.snd;
                                var self = $11130;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11135 = self.fst;
                                        var $11136 = self.snd;
                                        var _same_fun$9 = ($11132 === $11135);
                                        var _same_ari$10 = ($11133 === $11136);
                                        var self = (_same_fun$9 && _same_ari$10);
                                        if (self) {
                                            var $11138 = Kind$Term$equal$extra_holes$filler$(_a$1, _b$2);
                                            var $11137 = $11138;
                                        } else {
                                            var $11139 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                            var $11137 = $11139;
                                        };
                                        var $11134 = $11137;
                                        break;
                                };
                                var $11131 = $11134;
                                break;
                        };
                        var $11129 = $11131;
                        break;
                    case 'Maybe.none':
                        var $11140 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11129 = $11140;
                        break;
                };
                var $11127 = $11129;
                break;
            case 'Maybe.none':
                var $11141 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                var $11127 = $11141;
                break;
        };
        return $11127;
    };
    const Kind$Term$equal$extra_holes = x0 => x1 => Kind$Term$equal$extra_holes$(x0, x1);

    function BitsSet$set$(_bits$1, _set$2) {
        var $11142 = (bitsmap_set(_bits$1, Unit$new, _set$2, 'set'));
        return $11142;
    };
    const BitsSet$set = x0 => x1 => BitsSet$set$(x0, x1);

    function BitsSet$mut$set$(_bits$1, _set$2) {
        var $11143 = BitsSet$set$(_bits$1, _set$2);
        return $11143;
    };
    const BitsSet$mut$set = x0 => x1 => BitsSet$mut$set$(x0, x1);

    function Bool$eql$(_a$1, _b$2) {
        var self = _a$1;
        if (self) {
            var $11145 = _b$2;
            var $11144 = $11145;
        } else {
            var $11146 = (!_b$2);
            var $11144 = $11146;
        };
        return $11144;
    };
    const Bool$eql = x0 => x1 => Bool$eql$(x0, x1);

    function Kind$Term$equal$go$(_a$1, _b$2, _defs$3, _lv$4, _seen$5) {
        var _ah$6 = Kind$Term$serialize$(Kind$Term$reduce$(_a$1, Kind$Map$new), _lv$4, Bool$false);
        var _bh$7 = Kind$Term$serialize$(Kind$Term$reduce$(_b$2, Kind$Map$new), _lv$4, Bool$true);
        var self = (_bh$7 === _ah$6);
        if (self) {
            var $11148 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
            var $11147 = $11148;
        } else {
            var _a1$8 = Kind$Term$reduce$(_a$1, _defs$3);
            var _b1$9 = Kind$Term$reduce$(_b$2, _defs$3);
            var _ah$10 = Kind$Term$serialize$(_a1$8, _lv$4, Bool$false);
            var _bh$11 = Kind$Term$serialize$(_b1$9, _lv$4, Bool$true);
            var self = (_bh$11 === _ah$10);
            if (self) {
                var $11150 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11149 = $11150;
            } else {
                var _id$12 = (_bh$11 + _ah$10);
                var self = BitsSet$mut$has$(_id$12, _seen$5);
                if (self) {
                    var self = Kind$Term$equal$extra_holes$(_a$1, _b$2);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11153 = self.value;
                            var $11154 = self.errors;
                            var self = $11153;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11156 = Kind$Check$result$(Maybe$none, $11154);
                                    var $11155 = $11156;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11158 = self.value;
                                            var $11159 = self.errors;
                                            var $11160 = Kind$Check$result$($11158, List$concat$($11154, $11159));
                                            var $11157 = $11160;
                                            break;
                                    };
                                    var $11155 = $11157;
                                    break;
                            };
                            var $11152 = $11155;
                            break;
                    };
                    var $11151 = $11152;
                } else {
                    var self = _a1$8;
                    switch (self._) {
                        case 'Kind.Term.all':
                            var $11162 = self.eras;
                            var $11163 = self.self;
                            var $11164 = self.name;
                            var $11165 = self.xtyp;
                            var $11166 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.all':
                                    var $11168 = self.eras;
                                    var $11169 = self.self;
                                    var $11170 = self.name;
                                    var $11171 = self.xtyp;
                                    var $11172 = self.body;
                                    var _seen$23 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$24 = $11166(Kind$Term$var$($11163, _lv$4))(Kind$Term$var$($11164, Nat$succ$(_lv$4)));
                                    var _b1_body$25 = $11172(Kind$Term$var$($11169, _lv$4))(Kind$Term$var$($11170, Nat$succ$(_lv$4)));
                                    var _eq_self$26 = ($11163 === $11169);
                                    var _eq_eras$27 = Bool$eql$($11162, $11168);
                                    var self = (_eq_self$26 && _eq_eras$27);
                                    if (self) {
                                        var self = Kind$Term$equal$go$($11165, $11171, _defs$3, _lv$4, _seen$23);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11175 = self.value;
                                                var $11176 = self.errors;
                                                var self = $11175;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11178 = self.value;
                                                        var self = Kind$Term$equal$go$(_a1_body$24, _b1_body$25, _defs$3, Nat$succ$(Nat$succ$(_lv$4)), _seen$23);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11180 = self.value;
                                                                var $11181 = self.errors;
                                                                var self = $11180;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $11183 = self.value;
                                                                        var self = Kind$Check$result$(Maybe$some$(($11178 && $11183)), List$nil);
                                                                        switch (self._) {
                                                                            case 'Kind.Check.result':
                                                                                var $11185 = self.value;
                                                                                var $11186 = self.errors;
                                                                                var $11187 = Kind$Check$result$($11185, List$concat$($11181, $11186));
                                                                                var $11184 = $11187;
                                                                                break;
                                                                        };
                                                                        var $11182 = $11184;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $11188 = Kind$Check$result$(Maybe$none, $11181);
                                                                        var $11182 = $11188;
                                                                        break;
                                                                };
                                                                var self = $11182;
                                                                break;
                                                        };
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11189 = self.value;
                                                                var $11190 = self.errors;
                                                                var $11191 = Kind$Check$result$($11189, List$concat$($11176, $11190));
                                                                var $11179 = $11191;
                                                                break;
                                                        };
                                                        var $11177 = $11179;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11192 = Kind$Check$result$(Maybe$none, $11176);
                                                        var $11177 = $11192;
                                                        break;
                                                };
                                                var $11174 = $11177;
                                                break;
                                        };
                                        var $11173 = $11174;
                                    } else {
                                        var $11193 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                        var $11173 = $11193;
                                    };
                                    var $11167 = $11173;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11194 = self.path;
                                    var $11195 = Kind$Term$equal$hole$($11194, _a$1);
                                    var $11167 = $11195;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11196 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11167 = $11196;
                                    break;
                            };
                            var $11161 = $11167;
                            break;
                        case 'Kind.Term.lam':
                            var $11197 = self.name;
                            var $11198 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.lam':
                                    var $11200 = self.name;
                                    var $11201 = self.body;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$18 = $11198(Kind$Term$var$($11197, _lv$4));
                                    var _b1_body$19 = $11201(Kind$Term$var$($11200, _lv$4));
                                    var self = Kind$Term$equal$go$(_a1_body$18, _b1_body$19, _defs$3, Nat$succ$(_lv$4), _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11203 = self.value;
                                            var $11204 = self.errors;
                                            var self = $11203;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11206 = self.value;
                                                    var self = Kind$Check$result$(Maybe$some$($11206), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11208 = self.value;
                                                            var $11209 = self.errors;
                                                            var $11210 = Kind$Check$result$($11208, List$concat$($11204, $11209));
                                                            var $11207 = $11210;
                                                            break;
                                                    };
                                                    var $11205 = $11207;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11211 = Kind$Check$result$(Maybe$none, $11204);
                                                    var $11205 = $11211;
                                                    break;
                                            };
                                            var $11202 = $11205;
                                            break;
                                    };
                                    var $11199 = $11202;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11212 = self.path;
                                    var $11213 = Kind$Term$equal$hole$($11212, _a$1);
                                    var $11199 = $11213;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11214 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11199 = $11214;
                                    break;
                            };
                            var $11161 = $11199;
                            break;
                        case 'Kind.Term.app':
                            var $11215 = self.func;
                            var $11216 = self.argm;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.app':
                                    var $11218 = self.func;
                                    var $11219 = self.argm;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var self = Kind$Term$equal$go$($11215, $11218, _defs$3, _lv$4, _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11221 = self.value;
                                            var $11222 = self.errors;
                                            var self = $11221;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11224 = self.value;
                                                    var self = Kind$Term$equal$go$($11216, $11219, _defs$3, _lv$4, _seen$17);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11226 = self.value;
                                                            var $11227 = self.errors;
                                                            var self = $11226;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11229 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11224 && $11229)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11231 = self.value;
                                                                            var $11232 = self.errors;
                                                                            var $11233 = Kind$Check$result$($11231, List$concat$($11227, $11232));
                                                                            var $11230 = $11233;
                                                                            break;
                                                                    };
                                                                    var $11228 = $11230;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11234 = Kind$Check$result$(Maybe$none, $11227);
                                                                    var $11228 = $11234;
                                                                    break;
                                                            };
                                                            var self = $11228;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11235 = self.value;
                                                            var $11236 = self.errors;
                                                            var $11237 = Kind$Check$result$($11235, List$concat$($11222, $11236));
                                                            var $11225 = $11237;
                                                            break;
                                                    };
                                                    var $11223 = $11225;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11238 = Kind$Check$result$(Maybe$none, $11222);
                                                    var $11223 = $11238;
                                                    break;
                                            };
                                            var $11220 = $11223;
                                            break;
                                    };
                                    var $11217 = $11220;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11239 = self.path;
                                    var $11240 = Kind$Term$equal$hole$($11239, _a$1);
                                    var $11217 = $11240;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11241 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11217 = $11241;
                                    break;
                            };
                            var $11161 = $11217;
                            break;
                        case 'Kind.Term.let':
                            var $11242 = self.name;
                            var $11243 = self.expr;
                            var $11244 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.let':
                                    var $11246 = self.name;
                                    var $11247 = self.expr;
                                    var $11248 = self.body;
                                    var _seen$19 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$20 = $11244(Kind$Term$var$($11242, _lv$4));
                                    var _b1_body$21 = $11248(Kind$Term$var$($11246, _lv$4));
                                    var self = Kind$Term$equal$go$($11243, $11247, _defs$3, _lv$4, _seen$19);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11250 = self.value;
                                            var $11251 = self.errors;
                                            var self = $11250;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11253 = self.value;
                                                    var self = Kind$Term$equal$go$(_a1_body$20, _b1_body$21, _defs$3, Nat$succ$(_lv$4), _seen$19);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11255 = self.value;
                                                            var $11256 = self.errors;
                                                            var self = $11255;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11258 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11253 && $11258)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11260 = self.value;
                                                                            var $11261 = self.errors;
                                                                            var $11262 = Kind$Check$result$($11260, List$concat$($11256, $11261));
                                                                            var $11259 = $11262;
                                                                            break;
                                                                    };
                                                                    var $11257 = $11259;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11263 = Kind$Check$result$(Maybe$none, $11256);
                                                                    var $11257 = $11263;
                                                                    break;
                                                            };
                                                            var self = $11257;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11264 = self.value;
                                                            var $11265 = self.errors;
                                                            var $11266 = Kind$Check$result$($11264, List$concat$($11251, $11265));
                                                            var $11254 = $11266;
                                                            break;
                                                    };
                                                    var $11252 = $11254;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11267 = Kind$Check$result$(Maybe$none, $11251);
                                                    var $11252 = $11267;
                                                    break;
                                            };
                                            var $11249 = $11252;
                                            break;
                                    };
                                    var $11245 = $11249;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11268 = self.path;
                                    var $11269 = Kind$Term$equal$hole$($11268, _a$1);
                                    var $11245 = $11269;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11270 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11245 = $11270;
                                    break;
                            };
                            var $11161 = $11245;
                            break;
                        case 'Kind.Term.hol':
                            var $11271 = self.path;
                            var $11272 = Kind$Term$equal$hole$($11271, _b$2);
                            var $11161 = $11272;
                            break;
                        case 'Kind.Term.var':
                        case 'Kind.Term.get':
                        case 'Kind.Term.ori':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11274 = self.path;
                                    var $11275 = Kind$Term$equal$hole$($11274, _a$1);
                                    var $11273 = $11275;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11276 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11273 = $11276;
                                    break;
                            };
                            var $11161 = $11273;
                            break;
                        case 'Kind.Term.ref':
                        case 'Kind.Term.nat':
                        case 'Kind.Term.chr':
                        case 'Kind.Term.str':
                        case 'Kind.Term.new':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11278 = self.path;
                                    var $11279 = Kind$Term$equal$hole$($11278, _a$1);
                                    var $11277 = $11279;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11280 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11277 = $11280;
                                    break;
                            };
                            var $11161 = $11277;
                            break;
                        case 'Kind.Term.typ':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11282 = self.path;
                                    var $11283 = Kind$Term$equal$hole$($11282, _a$1);
                                    var $11281 = $11283;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11284 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11281 = $11284;
                                    break;
                            };
                            var $11161 = $11281;
                            break;
                        case 'Kind.Term.def':
                        case 'Kind.Term.ann':
                        case 'Kind.Term.gol':
                        case 'Kind.Term.num':
                        case 'Kind.Term.set':
                        case 'Kind.Term.ope':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11286 = self.path;
                                    var $11287 = Kind$Term$equal$hole$($11286, _a$1);
                                    var $11285 = $11287;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11288 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11285 = $11288;
                                    break;
                            };
                            var $11161 = $11285;
                            break;
                        case 'Kind.Term.cse':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11290 = self.path;
                                    var $11291 = Kind$Term$equal$hole$($11290, _a$1);
                                    var $11289 = $11291;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11292 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11289 = $11292;
                                    break;
                            };
                            var $11161 = $11289;
                            break;
                    };
                    var $11151 = $11161;
                };
                var $11149 = $11151;
            };
            var $11147 = $11149;
        };
        return $11147;
    };
    const Kind$Term$equal$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$equal$go$(x0, x1, x2, x3, x4);
    const BitsSet$new = BitsMap$new;

    function BitsSet$mut$new$(_a$1) {
        var $11293 = BitsSet$new;
        return $11293;
    };
    const BitsSet$mut$new = x0 => BitsSet$mut$new$(x0);

    function Kind$Term$check$(_term$1, _type$2, _defs$3, _ctx$4, _path$5, _orig$6) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11295 = self.name;
                var $11296 = self.indx;
                var self = List$at_last$($11296, _ctx$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $11298 = self.value;
                        var $11299 = Kind$Check$result$(Maybe$some$((() => {
                            var self = $11298;
                            switch (self._) {
                                case 'Pair.new':
                                    var $11300 = self.snd;
                                    var $11301 = $11300;
                                    return $11301;
                            };
                        })()), List$nil);
                        var $11297 = $11299;
                        break;
                    case 'Maybe.none':
                        var $11302 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11295), List$nil));
                        var $11297 = $11302;
                        break;
                };
                var self = $11297;
                break;
            case 'Kind.Term.ref':
                var $11303 = self.name;
                var self = Kind$Map$get$($11303, _defs$3);
                switch (self._) {
                    case 'Maybe.some':
                        var $11305 = self.value;
                        var self = $11305;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $11307 = self.name;
                                var $11308 = self.term;
                                var $11309 = self.type;
                                var $11310 = self.stat;
                                var _ref_name$18 = $11307;
                                var _ref_type$19 = $11309;
                                var _ref_term$20 = $11308;
                                var _ref_stat$21 = $11310;
                                var self = _ref_stat$21;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                        var $11312 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$waiting$(_ref_name$18), List$nil));
                                        var $11311 = $11312;
                                        break;
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $11313 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$nil);
                                        var $11311 = $11313;
                                        break;
                                    case 'Kind.Status.fail':
                                        var $11314 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$indirect$(_ref_name$18), List$nil));
                                        var $11311 = $11314;
                                        break;
                                };
                                var $11306 = $11311;
                                break;
                        };
                        var $11304 = $11306;
                        break;
                    case 'Maybe.none':
                        var $11315 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11303), List$nil));
                        var $11304 = $11315;
                        break;
                };
                var self = $11304;
                break;
            case 'Kind.Term.all':
                var $11316 = self.self;
                var $11317 = self.name;
                var $11318 = self.xtyp;
                var $11319 = self.body;
                var _ctx_size$12 = (list_length(_ctx$4));
                var _self_var$13 = Kind$Term$var$($11316, _ctx_size$12);
                var _body_var$14 = Kind$Term$var$($11317, Nat$succ$(_ctx_size$12));
                var _body_ctx$15 = List$cons$(Pair$new$($11317, $11318), List$cons$(Pair$new$($11316, _term$1), _ctx$4));
                var self = Kind$Term$check$($11318, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11321 = self.value;
                        var $11322 = self.errors;
                        var self = $11321;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11324 = Kind$Check$result$(Maybe$none, $11322);
                                var $11323 = $11324;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Term$check$($11319(_self_var$13)(_body_var$14), Maybe$some$(Kind$Term$typ), _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11326 = self.value;
                                        var $11327 = self.errors;
                                        var self = $11326;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11329 = Kind$Check$result$(Maybe$none, $11327);
                                                var $11328 = $11329;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11331 = self.value;
                                                        var $11332 = self.errors;
                                                        var $11333 = Kind$Check$result$($11331, List$concat$($11327, $11332));
                                                        var $11330 = $11333;
                                                        break;
                                                };
                                                var $11328 = $11330;
                                                break;
                                        };
                                        var self = $11328;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11334 = self.value;
                                        var $11335 = self.errors;
                                        var $11336 = Kind$Check$result$($11334, List$concat$($11322, $11335));
                                        var $11325 = $11336;
                                        break;
                                };
                                var $11323 = $11325;
                                break;
                        };
                        var $11320 = $11323;
                        break;
                };
                var self = $11320;
                break;
            case 'Kind.Term.lam':
                var $11337 = self.name;
                var $11338 = self.body;
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11340 = self.value;
                        var _typv$10 = Kind$Term$reduce$($11340, _defs$3);
                        var self = _typv$10;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11342 = self.xtyp;
                                var $11343 = self.body;
                                var _ctx_size$16 = (list_length(_ctx$4));
                                var _self_var$17 = _term$1;
                                var _body_var$18 = Kind$Term$var$($11337, _ctx_size$16);
                                var _body_typ$19 = $11343(_self_var$17)(_body_var$18);
                                var _body_ctx$20 = List$cons$(Pair$new$($11337, $11342), _ctx$4);
                                var self = Kind$Term$check$($11338(_body_var$18), Maybe$some$(_body_typ$19), _defs$3, _body_ctx$20, Kind$MPath$o$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11345 = self.value;
                                        var $11346 = self.errors;
                                        var self = $11345;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11348 = Kind$Check$result$(Maybe$none, $11346);
                                                var $11347 = $11348;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$($11340), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11350 = self.value;
                                                        var $11351 = self.errors;
                                                        var $11352 = Kind$Check$result$($11350, List$concat$($11346, $11351));
                                                        var $11349 = $11352;
                                                        break;
                                                };
                                                var $11347 = $11349;
                                                break;
                                        };
                                        var $11344 = $11347;
                                        break;
                                };
                                var $11341 = $11344;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.get':
                            case 'Kind.Term.ori':
                                var _expected$13 = Either$left$("function");
                                var _detected$14 = Either$right$($11340);
                                var $11353 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$13, _detected$14, _ctx$4), List$nil));
                                var $11341 = $11353;
                                break;
                            case 'Kind.Term.ref':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.new':
                                var _expected$12 = Either$left$("function");
                                var _detected$13 = Either$right$($11340);
                                var $11354 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$12, _detected$13, _ctx$4), List$nil));
                                var $11341 = $11354;
                                break;
                            case 'Kind.Term.typ':
                                var _expected$11 = Either$left$("function");
                                var _detected$12 = Either$right$($11340);
                                var $11355 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$11, _detected$12, _ctx$4), List$nil));
                                var $11341 = $11355;
                                break;
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.num':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                                var _expected$14 = Either$left$("function");
                                var _detected$15 = Either$right$($11340);
                                var $11356 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$14, _detected$15, _ctx$4), List$nil));
                                var $11341 = $11356;
                                break;
                            case 'Kind.Term.cse':
                                var _expected$17 = Either$left$("function");
                                var _detected$18 = Either$right$($11340);
                                var $11357 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$17, _detected$18, _ctx$4), List$nil));
                                var $11341 = $11357;
                                break;
                        };
                        var $11339 = $11341;
                        break;
                    case 'Maybe.none':
                        var _lam_type$9 = Kind$Term$hol$(Bits$e);
                        var _lam_term$10 = Kind$Term$ann$(Bool$false, _term$1, _lam_type$9);
                        var $11358 = Kind$Term$check$patch$(_lam_term$10, _type$2, _path$5);
                        var $11339 = $11358;
                        break;
                };
                var self = $11339;
                break;
            case 'Kind.Term.app':
                var $11359 = self.func;
                var $11360 = self.argm;
                var self = Kind$Term$check$($11359, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11362 = self.value;
                        var $11363 = self.errors;
                        var self = $11362;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11365 = self.value;
                                var _func_typ$12 = Kind$Term$reduce$($11365, _defs$3);
                                var self = _func_typ$12;
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $11367 = self.xtyp;
                                        var $11368 = self.body;
                                        var self = Kind$Term$check$($11360, Maybe$some$($11367), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11370 = self.value;
                                                var $11371 = self.errors;
                                                var self = $11370;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $11373 = Kind$Check$result$(Maybe$none, $11371);
                                                        var $11372 = $11373;
                                                        break;
                                                    case 'Maybe.some':
                                                        var self = Kind$Check$result$(Maybe$some$($11368($11359)($11360)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11375 = self.value;
                                                                var $11376 = self.errors;
                                                                var $11377 = Kind$Check$result$($11375, List$concat$($11371, $11376));
                                                                var $11374 = $11377;
                                                                break;
                                                        };
                                                        var $11372 = $11374;
                                                        break;
                                                };
                                                var $11369 = $11372;
                                                break;
                                        };
                                        var self = $11369;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.ori':
                                        var _expected$15 = Either$left$("function");
                                        var _detected$16 = Either$right$(_func_typ$12);
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11379 = self.orig;
                                                var $11380 = Maybe$some$($11379);
                                                var _orig$17 = $11380;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11381 = _orig$6;
                                                var _orig$17 = $11381;
                                                break;
                                        };
                                        var $11378 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$17, _expected$15, _detected$16, _ctx$4), List$nil));
                                        var self = $11378;
                                        break;
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.new':
                                        var _expected$14 = Either$left$("function");
                                        var _detected$15 = Either$right$(_func_typ$12);
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11383 = self.orig;
                                                var $11384 = Maybe$some$($11383);
                                                var _orig$16 = $11384;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11385 = _orig$6;
                                                var _orig$16 = $11385;
                                                break;
                                        };
                                        var $11382 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$16, _expected$14, _detected$15, _ctx$4), List$nil));
                                        var self = $11382;
                                        break;
                                    case 'Kind.Term.typ':
                                        var _expected$13 = Either$left$("function");
                                        var _detected$14 = Either$right$(_func_typ$12);
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11387 = self.orig;
                                                var $11388 = Maybe$some$($11387);
                                                var _orig$15 = $11388;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11389 = _orig$6;
                                                var _orig$15 = $11389;
                                                break;
                                        };
                                        var $11386 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$15, _expected$13, _detected$14, _ctx$4), List$nil));
                                        var self = $11386;
                                        break;
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                        var _expected$16 = Either$left$("function");
                                        var _detected$17 = Either$right$(_func_typ$12);
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11391 = self.orig;
                                                var $11392 = Maybe$some$($11391);
                                                var _orig$18 = $11392;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11393 = _orig$6;
                                                var _orig$18 = $11393;
                                                break;
                                        };
                                        var $11390 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$18, _expected$16, _detected$17, _ctx$4), List$nil));
                                        var self = $11390;
                                        break;
                                    case 'Kind.Term.cse':
                                        var _expected$19 = Either$left$("function");
                                        var _detected$20 = Either$right$(_func_typ$12);
                                        var self = $11359;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11395 = self.orig;
                                                var $11396 = Maybe$some$($11395);
                                                var _orig$21 = $11396;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11397 = _orig$6;
                                                var _orig$21 = $11397;
                                                break;
                                        };
                                        var $11394 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$21, _expected$19, _detected$20, _ctx$4), List$nil));
                                        var self = $11394;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11398 = self.value;
                                        var $11399 = self.errors;
                                        var $11400 = Kind$Check$result$($11398, List$concat$($11363, $11399));
                                        var $11366 = $11400;
                                        break;
                                };
                                var $11364 = $11366;
                                break;
                            case 'Maybe.none':
                                var $11401 = Kind$Check$result$(Maybe$none, $11363);
                                var $11364 = $11401;
                                break;
                        };
                        var $11361 = $11364;
                        break;
                };
                var self = $11361;
                break;
            case 'Kind.Term.let':
                var $11402 = self.name;
                var $11403 = self.expr;
                var $11404 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11403, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11406 = self.value;
                        var $11407 = self.errors;
                        var self = $11406;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11409 = self.value;
                                var _body_val$14 = $11404(Kind$Term$var$($11402, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11402, $11409), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11411 = self.value;
                                        var $11412 = self.errors;
                                        var self = $11411;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11414 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11414), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11416 = self.value;
                                                        var $11417 = self.errors;
                                                        var $11418 = Kind$Check$result$($11416, List$concat$($11412, $11417));
                                                        var $11415 = $11418;
                                                        break;
                                                };
                                                var $11413 = $11415;
                                                break;
                                            case 'Maybe.none':
                                                var $11419 = Kind$Check$result$(Maybe$none, $11412);
                                                var $11413 = $11419;
                                                break;
                                        };
                                        var self = $11413;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11420 = self.value;
                                        var $11421 = self.errors;
                                        var $11422 = Kind$Check$result$($11420, List$concat$($11407, $11421));
                                        var $11410 = $11422;
                                        break;
                                };
                                var $11408 = $11410;
                                break;
                            case 'Maybe.none':
                                var $11423 = Kind$Check$result$(Maybe$none, $11407);
                                var $11408 = $11423;
                                break;
                        };
                        var $11405 = $11408;
                        break;
                };
                var self = $11405;
                break;
            case 'Kind.Term.def':
                var $11424 = self.name;
                var $11425 = self.expr;
                var $11426 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11425, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11428 = self.value;
                        var $11429 = self.errors;
                        var self = $11428;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11431 = self.value;
                                var _body_val$14 = $11426($11425);
                                var _body_ctx$15 = List$cons$(Pair$new$($11424, $11431), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11433 = self.value;
                                        var $11434 = self.errors;
                                        var self = $11433;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11436 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11436), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11438 = self.value;
                                                        var $11439 = self.errors;
                                                        var $11440 = Kind$Check$result$($11438, List$concat$($11434, $11439));
                                                        var $11437 = $11440;
                                                        break;
                                                };
                                                var $11435 = $11437;
                                                break;
                                            case 'Maybe.none':
                                                var $11441 = Kind$Check$result$(Maybe$none, $11434);
                                                var $11435 = $11441;
                                                break;
                                        };
                                        var self = $11435;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11442 = self.value;
                                        var $11443 = self.errors;
                                        var $11444 = Kind$Check$result$($11442, List$concat$($11429, $11443));
                                        var $11432 = $11444;
                                        break;
                                };
                                var $11430 = $11432;
                                break;
                            case 'Maybe.none':
                                var $11445 = Kind$Check$result$(Maybe$none, $11429);
                                var $11430 = $11445;
                                break;
                        };
                        var $11427 = $11430;
                        break;
                };
                var self = $11427;
                break;
            case 'Kind.Term.ann':
                var $11446 = self.done;
                var $11447 = self.term;
                var $11448 = self.type;
                var self = $11446;
                if (self) {
                    var $11450 = Kind$Check$result$(Maybe$some$($11448), List$nil);
                    var $11449 = $11450;
                } else {
                    var self = Kind$Term$check$($11447, Maybe$some$($11448), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11452 = self.value;
                            var $11453 = self.errors;
                            var self = $11452;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11455 = Kind$Check$result$(Maybe$none, $11453);
                                    var $11454 = $11455;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Term$check$($11448, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11457 = self.value;
                                            var $11458 = self.errors;
                                            var self = $11457;
                                            switch (self._) {
                                                case 'Maybe.none':
                                                    var $11460 = Kind$Check$result$(Maybe$none, $11458);
                                                    var $11459 = $11460;
                                                    break;
                                                case 'Maybe.some':
                                                    var self = Kind$Check$result$(Maybe$some$($11448), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11462 = self.value;
                                                            var $11463 = self.errors;
                                                            var $11464 = Kind$Check$result$($11462, List$concat$($11458, $11463));
                                                            var $11461 = $11464;
                                                            break;
                                                    };
                                                    var $11459 = $11461;
                                                    break;
                                            };
                                            var self = $11459;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11465 = self.value;
                                            var $11466 = self.errors;
                                            var $11467 = Kind$Check$result$($11465, List$concat$($11453, $11466));
                                            var $11456 = $11467;
                                            break;
                                    };
                                    var $11454 = $11456;
                                    break;
                            };
                            var $11451 = $11454;
                            break;
                    };
                    var $11449 = $11451;
                };
                var self = $11449;
                break;
            case 'Kind.Term.gol':
                var $11468 = self.name;
                var $11469 = self.dref;
                var $11470 = self.verb;
                var $11471 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$show_goal$($11468, $11469, $11470, _type$2, _ctx$4), List$nil));
                var self = $11471;
                break;
            case 'Kind.Term.num':
                var $11472 = self.sign;
                var $11473 = self.numb;
                var $11474 = self.frac;
                var _dsug$10 = Kind$Term$check$expand$num$($11472, $11473, $11474, _type$2, _defs$3);
                var $11475 = Kind$Term$check$patch$(_dsug$10, _type$2, _path$5);
                var self = $11475;
                break;
            case 'Kind.Term.cse':
                var $11476 = self.expr;
                var $11477 = self.name;
                var $11478 = self.with;
                var $11479 = self.cses;
                var $11480 = self.moti;
                var _expr$13 = $11476;
                var self = Kind$Term$check$(_expr$13, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11482 = self.value;
                        var $11483 = self.errors;
                        var self = $11482;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11485 = self.value;
                                var self = Kind$Term$check$infer_types_of_with$($11478, _defs$3, _ctx$4, _path$5, _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11487 = self.value;
                                        var $11488 = self.errors;
                                        var self = $11487;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11490 = self.value;
                                                var _dsug$20 = Kind$Term$check$expand$cse$($11476, $11477, $11490, $11479, $11480, $11485, _type$2, _defs$3, _ctx$4);
                                                var self = _dsug$20;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11492 = self.value;
                                                        var $11493 = Kind$Term$check$patch$($11492, _type$2, _path$5);
                                                        var self = $11493;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11494 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                        var self = $11494;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11495 = self.value;
                                                        var $11496 = self.errors;
                                                        var $11497 = Kind$Check$result$($11495, List$concat$($11488, $11496));
                                                        var $11491 = $11497;
                                                        break;
                                                };
                                                var $11489 = $11491;
                                                break;
                                            case 'Maybe.none':
                                                var $11498 = Kind$Check$result$(Maybe$none, $11488);
                                                var $11489 = $11498;
                                                break;
                                        };
                                        var self = $11489;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11499 = self.value;
                                        var $11500 = self.errors;
                                        var $11501 = Kind$Check$result$($11499, List$concat$($11483, $11500));
                                        var $11486 = $11501;
                                        break;
                                };
                                var $11484 = $11486;
                                break;
                            case 'Maybe.none':
                                var $11502 = Kind$Check$result$(Maybe$none, $11483);
                                var $11484 = $11502;
                                break;
                        };
                        var $11481 = $11484;
                        break;
                };
                var self = $11481;
                break;
            case 'Kind.Term.new':
                var $11503 = self.args;
                var _dsug$8 = Kind$Term$check$expand$new$($11503, _type$2, _defs$3);
                var self = _dsug$8;
                switch (self._) {
                    case 'Maybe.some':
                        var $11505 = self.value;
                        var $11506 = Kind$Term$check$patch$($11505, _type$2, _path$5);
                        var $11504 = $11506;
                        break;
                    case 'Maybe.none':
                        var $11507 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                        var $11504 = $11507;
                        break;
                };
                var self = $11504;
                break;
            case 'Kind.Term.get':
                var $11508 = self.expr;
                var $11509 = self.fkey;
                var _expr$9 = $11508;
                var self = Kind$Term$check$(_expr$9, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11511 = self.value;
                        var $11512 = self.errors;
                        var self = $11511;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11514 = self.value;
                                var _dsug$13 = Kind$Term$check$expand$get$($11508, $11509, $11514, _defs$3);
                                var self = _dsug$13;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11516 = self.value;
                                        var $11517 = Kind$Term$check$patch$($11516, _type$2, _path$5);
                                        var self = $11517;
                                        break;
                                    case 'Maybe.none':
                                        var $11518 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11518;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11519 = self.value;
                                        var $11520 = self.errors;
                                        var $11521 = Kind$Check$result$($11519, List$concat$($11512, $11520));
                                        var $11515 = $11521;
                                        break;
                                };
                                var $11513 = $11515;
                                break;
                            case 'Maybe.none':
                                var $11522 = Kind$Check$result$(Maybe$none, $11512);
                                var $11513 = $11522;
                                break;
                        };
                        var $11510 = $11513;
                        break;
                };
                var self = $11510;
                break;
            case 'Kind.Term.set':
                var $11523 = self.expr;
                var $11524 = self.fkey;
                var $11525 = self.fval;
                var _expr$10 = $11523;
                var self = Kind$Term$check$(_expr$10, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11527 = self.value;
                        var $11528 = self.errors;
                        var self = $11527;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11530 = self.value;
                                var _dsug$14 = Kind$Term$check$expand$set$($11523, $11524, $11525, $11530, _defs$3);
                                var self = _dsug$14;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11532 = self.value;
                                        var $11533 = Kind$Term$check$patch$($11532, _type$2, _path$5);
                                        var self = $11533;
                                        break;
                                    case 'Maybe.none':
                                        var $11534 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11534;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11535 = self.value;
                                        var $11536 = self.errors;
                                        var $11537 = Kind$Check$result$($11535, List$concat$($11528, $11536));
                                        var $11531 = $11537;
                                        break;
                                };
                                var $11529 = $11531;
                                break;
                            case 'Maybe.none':
                                var $11538 = Kind$Check$result$(Maybe$none, $11528);
                                var $11529 = $11538;
                                break;
                        };
                        var $11526 = $11529;
                        break;
                };
                var self = $11526;
                break;
            case 'Kind.Term.ope':
                var $11539 = self.name;
                var $11540 = self.arg0;
                var $11541 = self.arg1;
                var _otyp$10 = Maybe$default$(_type$2, Kind$Term$hol$(Bits$e));
                var _dsug$11 = Kind$Term$check$expand$ope$(Bool$true, $11539, $11540, $11541, _otyp$10, _defs$3);
                var self = _dsug$11;
                switch (self._) {
                    case 'Maybe.some':
                        var $11543 = self.value;
                        var $11544 = Kind$Term$check$patch$($11543, _type$2, _path$5);
                        var $11542 = $11544;
                        break;
                    case 'Maybe.none':
                        var self = Kind$Term$check$($11540, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11546 = self.value;
                                var $11547 = self.errors;
                                var self = $11546;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11549 = self.value;
                                        var _dsug$15 = Kind$Term$check$expand$ope$(Bool$false, $11539, $11540, $11541, $11549, _defs$3);
                                        var self = _dsug$15;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11551 = self.value;
                                                var $11552 = Kind$Term$check$patch$($11551, _type$2, _path$5);
                                                var self = $11552;
                                                break;
                                            case 'Maybe.none':
                                                var $11553 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                var self = $11553;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11554 = self.value;
                                                var $11555 = self.errors;
                                                var $11556 = Kind$Check$result$($11554, List$concat$($11547, $11555));
                                                var $11550 = $11556;
                                                break;
                                        };
                                        var $11548 = $11550;
                                        break;
                                    case 'Maybe.none':
                                        var $11557 = Kind$Check$result$(Maybe$none, $11547);
                                        var $11548 = $11557;
                                        break;
                                };
                                var $11545 = $11548;
                                break;
                        };
                        var $11542 = $11545;
                        break;
                };
                var self = $11542;
                break;
            case 'Kind.Term.ori':
                var $11558 = self.orig;
                var $11559 = self.expr;
                var $11560 = Kind$Term$check$($11559, _type$2, _defs$3, _ctx$4, _path$5, Maybe$some$($11558));
                var self = $11560;
                break;
            case 'Kind.Term.typ':
                var $11561 = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                var self = $11561;
                break;
            case 'Kind.Term.hol':
                var $11562 = Kind$Check$result$(_type$2, List$nil);
                var self = $11562;
                break;
            case 'Kind.Term.nat':
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11564 = self.value;
                        var _tnam$9 = Kind$Term$check$get_name_of_self_type$($11564, _defs$3);
                        var self = _tnam$9;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11566 = self.value;
                                var self = ($11566 === "Nat");
                                if (self) {
                                    var $11568 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                    var $11567 = $11568;
                                } else {
                                    var _cast$11 = Kind$Term$ref$(($11566 + ".from_nat"));
                                    var _cast$12 = Kind$Term$app$(_cast$11, _term$1);
                                    var $11569 = Kind$Term$check$patch$(_cast$12, _type$2, _path$5);
                                    var $11567 = $11569;
                                };
                                var $11565 = $11567;
                                break;
                            case 'Maybe.none':
                                var $11570 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                var $11565 = $11570;
                                break;
                        };
                        var $11563 = $11565;
                        break;
                    case 'Maybe.none':
                        var $11571 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                        var $11563 = $11571;
                        break;
                };
                var self = $11563;
                break;
            case 'Kind.Term.chr':
                var $11572 = Kind$Term$check$direct$(Kind$Term$ref$("Char"), _defs$3);
                var self = $11572;
                break;
            case 'Kind.Term.str':
                var $11573 = Kind$Term$check$direct$(Kind$Term$ref$("String"), _defs$3);
                var self = $11573;
                break;
        };
        switch (self._) {
            case 'Kind.Check.result':
                var $11574 = self.value;
                var $11575 = self.errors;
                var self = $11574;
                switch (self._) {
                    case 'Maybe.some':
                        var $11577 = self.value;
                        var self = _type$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11579 = self.value;
                                var self = Kind$Term$equal$go$($11579, $11577, _defs$3, (list_length(_ctx$4)), BitsSet$mut$new$(Unit$new));
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11581 = self.value;
                                        var $11582 = self.errors;
                                        var self = $11581;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11584 = self.value;
                                                var self = $11584;
                                                if (self) {
                                                    var $11586 = Kind$Check$result$(Maybe$some$($11579), List$nil);
                                                    var self = $11586;
                                                } else {
                                                    var $11587 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, Either$right$($11579), Either$right$($11577), _ctx$4), List$nil));
                                                    var self = $11587;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11588 = self.value;
                                                        var $11589 = self.errors;
                                                        var $11590 = Kind$Check$result$($11588, List$concat$($11582, $11589));
                                                        var $11585 = $11590;
                                                        break;
                                                };
                                                var $11583 = $11585;
                                                break;
                                            case 'Maybe.none':
                                                var $11591 = Kind$Check$result$(Maybe$none, $11582);
                                                var $11583 = $11591;
                                                break;
                                        };
                                        var $11580 = $11583;
                                        break;
                                };
                                var self = $11580;
                                break;
                            case 'Maybe.none':
                                var $11592 = Kind$Check$result$(Maybe$some$($11577), List$nil);
                                var self = $11592;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11593 = self.value;
                                var $11594 = self.errors;
                                var $11595 = Kind$Check$result$($11593, List$concat$($11575, $11594));
                                var $11578 = $11595;
                                break;
                        };
                        var $11576 = $11578;
                        break;
                    case 'Maybe.none':
                        var $11596 = Kind$Check$result$(Maybe$none, $11575);
                        var $11576 = $11596;
                        break;
                };
                var $11294 = $11576;
                break;
        };
        return $11294;
    };
    const Kind$Term$check = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$patch_at$(_path$1, _term$2, _fn$3) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.all':
                var $11598 = self.eras;
                var $11599 = self.self;
                var $11600 = self.name;
                var $11601 = self.xtyp;
                var $11602 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11604 = self.slice(0, -1);
                        var $11605 = Kind$Term$all$($11598, $11599, $11600, Kind$Term$patch_at$($11604, $11601, _fn$3), $11602);
                        var $11603 = $11605;
                        break;
                    case 'i':
                        var $11606 = self.slice(0, -1);
                        var $11607 = Kind$Term$all$($11598, $11599, $11600, $11601, (_s$10 => _x$11 => {
                            var $11608 = Kind$Term$patch_at$($11606, $11602(_s$10)(_x$11), _fn$3);
                            return $11608;
                        }));
                        var $11603 = $11607;
                        break;
                    case 'e':
                        var $11609 = _fn$3(_term$2);
                        var $11603 = $11609;
                        break;
                };
                var $11597 = $11603;
                break;
            case 'Kind.Term.lam':
                var $11610 = self.name;
                var $11611 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11613 = _fn$3(_term$2);
                        var $11612 = $11613;
                        break;
                    case 'o':
                    case 'i':
                        var $11614 = Kind$Term$lam$($11610, (_x$7 => {
                            var $11615 = Kind$Term$patch_at$(Bits$tail$(_path$1), $11611(_x$7), _fn$3);
                            return $11615;
                        }));
                        var $11612 = $11614;
                        break;
                };
                var $11597 = $11612;
                break;
            case 'Kind.Term.app':
                var $11616 = self.func;
                var $11617 = self.argm;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11619 = self.slice(0, -1);
                        var $11620 = Kind$Term$app$(Kind$Term$patch_at$($11619, $11616, _fn$3), $11617);
                        var $11618 = $11620;
                        break;
                    case 'i':
                        var $11621 = self.slice(0, -1);
                        var $11622 = Kind$Term$app$($11616, Kind$Term$patch_at$($11621, $11617, _fn$3));
                        var $11618 = $11622;
                        break;
                    case 'e':
                        var $11623 = _fn$3(_term$2);
                        var $11618 = $11623;
                        break;
                };
                var $11597 = $11618;
                break;
            case 'Kind.Term.let':
                var $11624 = self.name;
                var $11625 = self.expr;
                var $11626 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11628 = self.slice(0, -1);
                        var $11629 = Kind$Term$let$($11624, Kind$Term$patch_at$($11628, $11625, _fn$3), $11626);
                        var $11627 = $11629;
                        break;
                    case 'i':
                        var $11630 = self.slice(0, -1);
                        var $11631 = Kind$Term$let$($11624, $11625, (_x$8 => {
                            var $11632 = Kind$Term$patch_at$($11630, $11626(_x$8), _fn$3);
                            return $11632;
                        }));
                        var $11627 = $11631;
                        break;
                    case 'e':
                        var $11633 = _fn$3(_term$2);
                        var $11627 = $11633;
                        break;
                };
                var $11597 = $11627;
                break;
            case 'Kind.Term.def':
                var $11634 = self.name;
                var $11635 = self.expr;
                var $11636 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11638 = self.slice(0, -1);
                        var $11639 = Kind$Term$def$($11634, Kind$Term$patch_at$($11638, $11635, _fn$3), $11636);
                        var $11637 = $11639;
                        break;
                    case 'i':
                        var $11640 = self.slice(0, -1);
                        var $11641 = Kind$Term$def$($11634, $11635, (_x$8 => {
                            var $11642 = Kind$Term$patch_at$($11640, $11636(_x$8), _fn$3);
                            return $11642;
                        }));
                        var $11637 = $11641;
                        break;
                    case 'e':
                        var $11643 = _fn$3(_term$2);
                        var $11637 = $11643;
                        break;
                };
                var $11597 = $11637;
                break;
            case 'Kind.Term.ann':
                var $11644 = self.done;
                var $11645 = self.term;
                var $11646 = self.type;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11648 = self.slice(0, -1);
                        var $11649 = Kind$Term$ann$($11644, Kind$Term$patch_at$($11648, $11645, _fn$3), $11646);
                        var $11647 = $11649;
                        break;
                    case 'i':
                        var $11650 = self.slice(0, -1);
                        var $11651 = Kind$Term$ann$($11644, $11645, Kind$Term$patch_at$($11650, $11646, _fn$3));
                        var $11647 = $11651;
                        break;
                    case 'e':
                        var $11652 = _fn$3(_term$2);
                        var $11647 = $11652;
                        break;
                };
                var $11597 = $11647;
                break;
            case 'Kind.Term.get':
                var $11653 = self.expr;
                var $11654 = self.fkey;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11656 = self.slice(0, -1);
                        var $11657 = Kind$Term$get$(Kind$Term$patch_at$($11656, $11653, _fn$3), $11654);
                        var $11655 = $11657;
                        break;
                    case 'i':
                        var $11658 = self.slice(0, -1);
                        var $11659 = Kind$Term$get$(Kind$Term$patch_at$($11658, $11653, _fn$3), $11654);
                        var $11655 = $11659;
                        break;
                    case 'e':
                        var $11660 = _fn$3(_term$2);
                        var $11655 = $11660;
                        break;
                };
                var $11597 = $11655;
                break;
            case 'Kind.Term.set':
                var $11661 = self.expr;
                var $11662 = self.fkey;
                var $11663 = self.fval;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11665 = self.slice(0, -1);
                        var $11666 = Kind$Term$set$(Kind$Term$patch_at$($11665, $11661, _fn$3), $11662, $11663);
                        var $11664 = $11666;
                        break;
                    case 'i':
                        var $11667 = self.slice(0, -1);
                        var $11668 = Kind$Term$set$($11661, $11662, Kind$Term$patch_at$($11667, $11663, _fn$3));
                        var $11664 = $11668;
                        break;
                    case 'e':
                        var $11669 = _fn$3(_term$2);
                        var $11664 = $11669;
                        break;
                };
                var $11597 = $11664;
                break;
            case 'Kind.Term.ope':
                var $11670 = self.name;
                var $11671 = self.arg0;
                var $11672 = self.arg1;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11674 = self.slice(0, -1);
                        var $11675 = Kind$Term$ope$($11670, Kind$Term$patch_at$($11674, $11671, _fn$3), $11672);
                        var $11673 = $11675;
                        break;
                    case 'i':
                        var $11676 = self.slice(0, -1);
                        var $11677 = Kind$Term$ope$($11670, $11671, Kind$Term$patch_at$($11676, $11672, _fn$3));
                        var $11673 = $11677;
                        break;
                    case 'e':
                        var $11678 = _fn$3(_term$2);
                        var $11673 = $11678;
                        break;
                };
                var $11597 = $11673;
                break;
            case 'Kind.Term.ori':
                var $11679 = self.orig;
                var $11680 = self.expr;
                var $11681 = Kind$Term$ori$($11679, Kind$Term$patch_at$(_path$1, $11680, _fn$3));
                var $11597 = $11681;
                break;
            case 'Kind.Term.var':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11683 = _fn$3(_term$2);
                        var $11682 = $11683;
                        break;
                    case 'o':
                    case 'i':
                        var $11684 = _term$2;
                        var $11682 = $11684;
                        break;
                };
                var $11597 = $11682;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11686 = _fn$3(_term$2);
                        var $11685 = $11686;
                        break;
                    case 'o':
                    case 'i':
                        var $11687 = _term$2;
                        var $11685 = $11687;
                        break;
                };
                var $11597 = $11685;
                break;
            case 'Kind.Term.typ':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11689 = _fn$3(_term$2);
                        var $11688 = $11689;
                        break;
                    case 'o':
                    case 'i':
                        var $11690 = _term$2;
                        var $11688 = $11690;
                        break;
                };
                var $11597 = $11688;
                break;
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11692 = _fn$3(_term$2);
                        var $11691 = $11692;
                        break;
                    case 'o':
                    case 'i':
                        var $11693 = _term$2;
                        var $11691 = $11693;
                        break;
                };
                var $11597 = $11691;
                break;
            case 'Kind.Term.cse':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11695 = _fn$3(_term$2);
                        var $11694 = $11695;
                        break;
                    case 'o':
                    case 'i':
                        var $11696 = _term$2;
                        var $11694 = $11696;
                        break;
                };
                var $11597 = $11694;
                break;
        };
        return $11597;
    };
    const Kind$Term$patch_at = x0 => x1 => x2 => Kind$Term$patch_at$(x0, x1, x2);

    function Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, _errs$10, _fixd$11) {
        var self = _errs$10;
        switch (self._) {
            case 'List.cons':
                var $11698 = self.head;
                var $11699 = self.tail;
                var self = $11698;
                switch (self._) {
                    case 'Kind.Error.waiting':
                        var $11701 = self.name;
                        var $11702 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                            var $11703 = _m$bind$15;
                            return $11703;
                        }))(Kind$Synth$one$($11701, _defs$9))((_new_defs$15 => {
                            var self = _new_defs$15;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11705 = self.value;
                                    var $11706 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11705, $11699, Bool$true);
                                    var $11704 = $11706;
                                    break;
                                case 'Maybe.none':
                                    var $11707 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11699, _fixd$11);
                                    var $11704 = $11707;
                                    break;
                            };
                            return $11704;
                        }));
                        var $11700 = $11702;
                        break;
                    case 'Kind.Error.patch':
                        var $11708 = self.path;
                        var $11709 = self.term;
                        var self = $11708;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11711 = self.slice(0, -1);
                                var _term$17 = Kind$Term$patch_at$($11711, _term$5, (_x$17 => {
                                    var $11713 = $11709;
                                    return $11713;
                                }));
                                var $11712 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$17, _type$6, _isct$7, _arit$8, _defs$9, $11699, Bool$true);
                                var $11710 = $11712;
                                break;
                            case 'i':
                                var $11714 = self.slice(0, -1);
                                var _type$17 = Kind$Term$patch_at$($11714, _type$6, (_x$17 => {
                                    var $11716 = $11709;
                                    return $11716;
                                }));
                                var $11715 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$17, _isct$7, _arit$8, _defs$9, $11699, Bool$true);
                                var $11710 = $11715;
                                break;
                            case 'e':
                                var $11717 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                    var $11718 = _m$pure$17;
                                    return $11718;
                                }))(Maybe$none);
                                var $11710 = $11717;
                                break;
                        };
                        var $11700 = $11710;
                        break;
                    case 'Kind.Error.undefined_reference':
                        var $11719 = self.name;
                        var $11720 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                            var $11721 = _m$bind$16;
                            return $11721;
                        }))(Kind$Synth$one$($11719, _defs$9))((_new_defs$16 => {
                            var self = _new_defs$16;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11723 = self.value;
                                    var $11724 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11723, $11699, Bool$true);
                                    var $11722 = $11724;
                                    break;
                                case 'Maybe.none':
                                    var $11725 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11699, _fixd$11);
                                    var $11722 = $11725;
                                    break;
                            };
                            return $11722;
                        }));
                        var $11700 = $11720;
                        break;
                    case 'Kind.Error.type_mismatch':
                    case 'Kind.Error.show_goal':
                    case 'Kind.Error.indirect':
                    case 'Kind.Error.cant_infer':
                        var $11726 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11699, _fixd$11);
                        var $11700 = $11726;
                        break;
                };
                var $11697 = $11700;
                break;
            case 'List.nil':
                var self = _fixd$11;
                if (self) {
                    var _type$12 = Kind$Term$bind$(List$nil, (_x$12 => {
                        var $11729 = (_x$12 + '1');
                        return $11729;
                    }), _type$6);
                    var _term$13 = Kind$Term$bind$(List$nil, (_x$13 => {
                        var $11730 = (_x$13 + '0');
                        return $11730;
                    }), _term$5);
                    var _defs$14 = Kind$Map$set$(_name$4, Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$13, _type$12, _isct$7, _arit$8, Kind$Status$init), _defs$9);
                    var $11728 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                        var $11731 = _m$pure$16;
                        return $11731;
                    }))(Maybe$some$(_defs$14));
                    var $11727 = $11728;
                } else {
                    var $11732 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                        var $11733 = _m$pure$13;
                        return $11733;
                    }))(Maybe$none);
                    var $11727 = $11732;
                };
                var $11697 = $11727;
                break;
        };
        return $11697;
    };
    const Kind$Synth$fix = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => Kind$Synth$fix$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);

    function Kind$Status$fail$(_errors$1) {
        var $11734 = ({
            _: 'Kind.Status.fail',
            'errors': _errors$1
        });
        return $11734;
    };
    const Kind$Status$fail = x0 => Kind$Status$fail$(x0);

    function Kind$Synth$one$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $11736 = self.value;
                var self = $11736;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11738 = self.file;
                        var $11739 = self.code;
                        var $11740 = self.orig;
                        var $11741 = self.name;
                        var $11742 = self.term;
                        var $11743 = self.type;
                        var $11744 = self.isct;
                        var $11745 = self.arit;
                        var $11746 = self.stat;
                        var _file$13 = $11738;
                        var _code$14 = $11739;
                        var _orig$15 = $11740;
                        var _name$16 = $11741;
                        var _term$17 = $11742;
                        var _type$18 = $11743;
                        var _isct$19 = $11744;
                        var _arit$20 = $11745;
                        var _stat$21 = $11746;
                        var self = _stat$21;
                        switch (self._) {
                            case 'Kind.Status.init':
                                var _defs$22 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Kind$Status$wait), _defs$2);
                                var self = Kind$Term$check$(_type$18, Maybe$some$(Kind$Term$typ), _defs$22, List$nil, Kind$MPath$i$(Kind$MPath$nil), Maybe$none);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11749 = self.value;
                                        var $11750 = self.errors;
                                        var self = $11749;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11752 = Kind$Check$result$(Maybe$none, $11750);
                                                var $11751 = $11752;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Term$check$(_term$17, Maybe$some$(_type$18), _defs$22, List$nil, Kind$MPath$o$(Kind$MPath$nil), Maybe$none);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11754 = self.value;
                                                        var $11755 = self.errors;
                                                        var self = $11754;
                                                        switch (self._) {
                                                            case 'Maybe.none':
                                                                var $11757 = Kind$Check$result$(Maybe$none, $11755);
                                                                var $11756 = $11757;
                                                                break;
                                                            case 'Maybe.some':
                                                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                                                switch (self._) {
                                                                    case 'Kind.Check.result':
                                                                        var $11759 = self.value;
                                                                        var $11760 = self.errors;
                                                                        var $11761 = Kind$Check$result$($11759, List$concat$($11755, $11760));
                                                                        var $11758 = $11761;
                                                                        break;
                                                                };
                                                                var $11756 = $11758;
                                                                break;
                                                        };
                                                        var self = $11756;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11762 = self.value;
                                                        var $11763 = self.errors;
                                                        var $11764 = Kind$Check$result$($11762, List$concat$($11750, $11763));
                                                        var $11753 = $11764;
                                                        break;
                                                };
                                                var $11751 = $11753;
                                                break;
                                        };
                                        var _checked$23 = $11751;
                                        break;
                                };
                                var self = _checked$23;
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11765 = self.errors;
                                        var self = List$is_empty$($11765);
                                        if (self) {
                                            var _defs$26 = Kind$Map$def$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Bool$true, _defs$22);
                                            var $11767 = IO$monad$((_m$bind$27 => _m$pure$28 => {
                                                var $11768 = _m$pure$28;
                                                return $11768;
                                            }))(Maybe$some$(_defs$26));
                                            var $11766 = $11767;
                                        } else {
                                            var $11769 = IO$monad$((_m$bind$26 => _m$pure$27 => {
                                                var $11770 = _m$bind$26;
                                                return $11770;
                                            }))(Kind$Synth$fix$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _defs$22, $11765, Bool$false))((_fixed$26 => {
                                                var self = _fixed$26;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11772 = self.value;
                                                        var $11773 = Kind$Synth$one$(_name$16, $11772);
                                                        var $11771 = $11773;
                                                        break;
                                                    case 'Maybe.none':
                                                        var _stat$27 = Kind$Status$fail$($11765);
                                                        var _defs$28 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _stat$27), _defs$22);
                                                        var $11774 = IO$monad$((_m$bind$29 => _m$pure$30 => {
                                                            var $11775 = _m$pure$30;
                                                            return $11775;
                                                        }))(Maybe$some$(_defs$28));
                                                        var $11771 = $11774;
                                                        break;
                                                };
                                                return $11771;
                                            }));
                                            var $11766 = $11769;
                                        };
                                        var $11748 = $11766;
                                        break;
                                };
                                var $11747 = $11748;
                                break;
                            case 'Kind.Status.wait':
                                var $11776 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                    var $11777 = _m$pure$23;
                                    return $11777;
                                }))(Maybe$some$(_defs$2));
                                var $11747 = $11776;
                                break;
                            case 'Kind.Status.done':
                            case 'Kind.Status.fail':
                                var $11778 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                    var $11779 = _m$pure$24;
                                    return $11779;
                                }))(Maybe$some$(_defs$2));
                                var $11747 = $11778;
                                break;
                        };
                        var $11737 = $11747;
                        break;
                };
                var $11735 = $11737;
                break;
            case 'Maybe.none':
                var $11780 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $11781 = _m$bind$3;
                    return $11781;
                }))(IO$get_time)((_time_a$3 => {
                    var $11782 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $11783 = _m$bind$4;
                        return $11783;
                    }))(Kind$Synth$load$(_name$1, _defs$2))((_loaded$4 => {
                        var self = _loaded$4;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11785 = self.value;
                                var $11786 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $11787 = _m$bind$6;
                                    return $11787;
                                }))(IO$get_time)((_time_b$6 => {
                                    var $11788 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $11789 = _m$bind$7;
                                        return $11789;
                                    }))(Kind$Synth$one$(_name$1, $11785))((_result$7 => {
                                        var $11790 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $11791 = _m$bind$8;
                                            return $11791;
                                        }))(IO$get_time)((_time_c$8 => {
                                            var $11792 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $11793 = _m$pure$10;
                                                return $11793;
                                            }))(_result$7);
                                            return $11792;
                                        }));
                                        return $11790;
                                    }));
                                    return $11788;
                                }));
                                var $11784 = $11786;
                                break;
                            case 'Maybe.none':
                                var $11794 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                    var $11795 = _m$pure$6;
                                    return $11795;
                                }))(Maybe$none);
                                var $11784 = $11794;
                                break;
                        };
                        return $11784;
                    }));
                    return $11782;
                }));
                var $11735 = $11780;
                break;
        };
        return $11735;
    };
    const Kind$Synth$one = x0 => x1 => Kind$Synth$one$(x0, x1);

    function BitsMap$from_list$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $11797 = self.head;
                var $11798 = self.tail;
                var self = $11797;
                switch (self._) {
                    case 'Pair.new':
                        var $11800 = self.fst;
                        var $11801 = self.snd;
                        var $11802 = (bitsmap_set($11800, $11801, BitsMap$from_list$($11798), 'set'));
                        var $11799 = $11802;
                        break;
                };
                var $11796 = $11799;
                break;
            case 'List.nil':
                var $11803 = BitsMap$new;
                var $11796 = $11803;
                break;
        };
        return $11796;
    };
    const BitsMap$from_list = x0 => BitsMap$from_list$(x0);
    const Kind$Term$inline$names = (() => {
        var _inl$1 = List$cons$("Monad.pure", List$cons$("Monad.bind", List$cons$("Monad.new", List$cons$("Parser.monad", List$cons$("Parser.bind", List$cons$("Parser.pure", List$cons$("Kind.Check.pure", List$cons$("Kind.Check.bind", List$cons$("Kind.Check.monad", List$cons$("Kind.Check.value", List$cons$("Kind.Check.none", List$nil)))))))))));
        var _kvs$2 = List$mapped$(_inl$1, (_x$2 => {
            var $11805 = Pair$new$((kind_name_to_bits(_x$2)), Unit$new);
            return $11805;
        }));
        var $11804 = BitsMap$from_list$(_kvs$2);
        return $11804;
    })();

    function Kind$Term$inline$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $11807 = self.name;
                var _inli$4 = BitsSet$has$((kind_name_to_bits($11807)), Kind$Term$inline$names);
                var self = _inli$4;
                if (self) {
                    var self = Kind$Map$get$($11807, _defs$2);
                    switch (self._) {
                        case 'Maybe.some':
                            var $11810 = self.value;
                            var self = $11810;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $11812 = self.term;
                                    var $11813 = Kind$Term$inline$reduce$($11812, _defs$2);
                                    var $11811 = $11813;
                                    break;
                            };
                            var $11809 = $11811;
                            break;
                        case 'Maybe.none':
                            var $11814 = Kind$Term$ref$($11807);
                            var $11809 = $11814;
                            break;
                    };
                    var $11808 = $11809;
                } else {
                    var $11815 = _term$1;
                    var $11808 = $11815;
                };
                var $11806 = $11808;
                break;
            case 'Kind.Term.app':
                var $11816 = self.func;
                var $11817 = self.argm;
                var _func$5 = Kind$Term$inline$reduce$($11816, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11819 = self.body;
                        var $11820 = Kind$Term$inline$reduce$($11819($11817), _defs$2);
                        var $11818 = $11820;
                        break;
                    case 'Kind.Term.let':
                        var $11821 = self.name;
                        var $11822 = self.expr;
                        var $11823 = self.body;
                        var $11824 = Kind$Term$let$($11821, $11822, (_x$9 => {
                            var $11825 = Kind$Term$inline$reduce$(Kind$Term$app$($11823(_x$9), $11817), _defs$2);
                            return $11825;
                        }));
                        var $11818 = $11824;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11826 = _term$1;
                        var $11818 = $11826;
                        break;
                };
                var $11806 = $11818;
                break;
            case 'Kind.Term.ori':
                var $11827 = self.expr;
                var $11828 = Kind$Term$inline$reduce$($11827, _defs$2);
                var $11806 = $11828;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11829 = _term$1;
                var $11806 = $11829;
                break;
        };
        return $11806;
    };
    const Kind$Term$inline$reduce = x0 => x1 => Kind$Term$inline$reduce$(x0, x1);

    function Kind$Term$inline$(_term$1, _defs$2) {
        var self = Kind$Term$inline$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $11831 = self.name;
                var $11832 = self.indx;
                var $11833 = Kind$Term$var$($11831, $11832);
                var $11830 = $11833;
                break;
            case 'Kind.Term.ref':
                var $11834 = self.name;
                var $11835 = Kind$Term$ref$($11834);
                var $11830 = $11835;
                break;
            case 'Kind.Term.all':
                var $11836 = self.eras;
                var $11837 = self.self;
                var $11838 = self.name;
                var $11839 = self.xtyp;
                var $11840 = self.body;
                var $11841 = Kind$Term$all$($11836, $11837, $11838, Kind$Term$inline$($11839, _defs$2), (_s$8 => _x$9 => {
                    var $11842 = Kind$Term$inline$($11840(_s$8)(_x$9), _defs$2);
                    return $11842;
                }));
                var $11830 = $11841;
                break;
            case 'Kind.Term.lam':
                var $11843 = self.name;
                var $11844 = self.body;
                var $11845 = Kind$Term$lam$($11843, (_x$5 => {
                    var $11846 = Kind$Term$inline$($11844(_x$5), _defs$2);
                    return $11846;
                }));
                var $11830 = $11845;
                break;
            case 'Kind.Term.app':
                var $11847 = self.func;
                var $11848 = self.argm;
                var $11849 = Kind$Term$app$(Kind$Term$inline$($11847, _defs$2), Kind$Term$inline$($11848, _defs$2));
                var $11830 = $11849;
                break;
            case 'Kind.Term.let':
                var $11850 = self.name;
                var $11851 = self.expr;
                var $11852 = self.body;
                var $11853 = Kind$Term$let$($11850, Kind$Term$inline$($11851, _defs$2), (_x$6 => {
                    var $11854 = Kind$Term$inline$($11852(_x$6), _defs$2);
                    return $11854;
                }));
                var $11830 = $11853;
                break;
            case 'Kind.Term.def':
                var $11855 = self.name;
                var $11856 = self.expr;
                var $11857 = self.body;
                var $11858 = Kind$Term$def$($11855, Kind$Term$inline$($11856, _defs$2), (_x$6 => {
                    var $11859 = Kind$Term$inline$($11857(_x$6), _defs$2);
                    return $11859;
                }));
                var $11830 = $11858;
                break;
            case 'Kind.Term.ann':
                var $11860 = self.done;
                var $11861 = self.term;
                var $11862 = self.type;
                var $11863 = Kind$Term$ann$($11860, Kind$Term$inline$($11861, _defs$2), Kind$Term$inline$($11862, _defs$2));
                var $11830 = $11863;
                break;
            case 'Kind.Term.gol':
                var $11864 = self.name;
                var $11865 = self.dref;
                var $11866 = self.verb;
                var $11867 = Kind$Term$gol$($11864, $11865, $11866);
                var $11830 = $11867;
                break;
            case 'Kind.Term.hol':
                var $11868 = self.path;
                var $11869 = Kind$Term$hol$($11868);
                var $11830 = $11869;
                break;
            case 'Kind.Term.nat':
                var $11870 = self.natx;
                var $11871 = Kind$Term$nat$($11870);
                var $11830 = $11871;
                break;
            case 'Kind.Term.chr':
                var $11872 = self.chrx;
                var $11873 = Kind$Term$chr$($11872);
                var $11830 = $11873;
                break;
            case 'Kind.Term.str':
                var $11874 = self.strx;
                var $11875 = Kind$Term$str$($11874);
                var $11830 = $11875;
                break;
            case 'Kind.Term.ori':
                var $11876 = self.expr;
                var $11877 = Kind$Term$inline$($11876, _defs$2);
                var $11830 = $11877;
                break;
            case 'Kind.Term.typ':
                var $11878 = Kind$Term$typ;
                var $11830 = $11878;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11879 = _term$1;
                var $11830 = $11879;
                break;
        };
        return $11830;
    };
    const Kind$Term$inline = x0 => x1 => Kind$Term$inline$(x0, x1);

    function BitsMap$values$go$(_xs$2, _list$3) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $11881 = self.val;
                var $11882 = self.lft;
                var $11883 = self.rgt;
                var self = $11881;
                switch (self._) {
                    case 'Maybe.some':
                        var $11885 = self.value;
                        var $11886 = List$cons$($11885, _list$3);
                        var _list0$7 = $11886;
                        break;
                    case 'Maybe.none':
                        var $11887 = _list$3;
                        var _list0$7 = $11887;
                        break;
                };
                var _list1$8 = BitsMap$values$go$($11882, _list0$7);
                var _list2$9 = BitsMap$values$go$($11883, _list1$8);
                var $11884 = _list2$9;
                var $11880 = $11884;
                break;
            case 'BitsMap.new':
                var $11888 = _list$3;
                var $11880 = $11888;
                break;
        };
        return $11880;
    };
    const BitsMap$values$go = x0 => x1 => BitsMap$values$go$(x0, x1);

    function BitsMap$values$(_xs$2) {
        var $11889 = BitsMap$values$go$(_xs$2, List$nil);
        return $11889;
    };
    const BitsMap$values = x0 => BitsMap$values$(x0);

    function Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4) {
        var Kind$Core$var_name$ = (_indx$1, _name$2, _brui$3, _vars$4) => ({
            ctr: 'TCO',
            arg: [_indx$1, _name$2, _brui$3, _vars$4]
        });
        var Kind$Core$var_name = _indx$1 => _name$2 => _brui$3 => _vars$4 => Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4);
        var arg = [_indx$1, _name$2, _brui$3, _vars$4];
        while (true) {
            let [_indx$1, _name$2, _brui$3, _vars$4] = arg;
            var R = (() => {
                var self = _indx$1;
                if (self === 0n) {
                    var self = _brui$3;
                    if (self === 0n) {
                        var $11891 = _name$2;
                        var $11890 = $11891;
                    } else {
                        var $11892 = (self - 1n);
                        var $11893 = (_name$2 + ("^" + Nat$show$(_brui$3)));
                        var $11890 = $11893;
                    };
                    return $11890;
                } else {
                    var $11894 = (self - 1n);
                    var self = _vars$4;
                    switch (self._) {
                        case 'List.cons':
                            var $11896 = self.head;
                            var $11897 = self.tail;
                            var self = (_name$2 === $11896);
                            if (self) {
                                var $11899 = Nat$succ$(_brui$3);
                                var _brui$8 = $11899;
                            } else {
                                var $11900 = _brui$3;
                                var _brui$8 = $11900;
                            };
                            var $11898 = Kind$Core$var_name$($11894, _name$2, _brui$8, $11897);
                            var $11895 = $11898;
                            break;
                        case 'List.nil':
                            var $11901 = "unbound";
                            var $11895 = $11901;
                            break;
                    };
                    return $11895;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$var_name = x0 => x1 => x2 => x3 => Kind$Core$var_name$(x0, x1, x2, x3);

    function Kind$Name$show$(_name$1) {
        var $11902 = _name$1;
        return $11902;
    };
    const Kind$Name$show = x0 => Kind$Name$show$(x0);

    function Bits$to_nat$(_b$1) {
        var self = _b$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $11904 = self.slice(0, -1);
                var $11905 = (2n * Bits$to_nat$($11904));
                var $11903 = $11905;
                break;
            case 'i':
                var $11906 = self.slice(0, -1);
                var $11907 = Nat$succ$((2n * Bits$to_nat$($11906)));
                var $11903 = $11907;
                break;
            case 'e':
                var $11908 = 0n;
                var $11903 = $11908;
                break;
        };
        return $11903;
    };
    const Bits$to_nat = x0 => Bits$to_nat$(x0);

    function U16$show_hex$(_a$1) {
        var self = _a$1;
        switch ('u16') {
            case 'u16':
                var $11910 = u16_to_word(self);
                var $11911 = Nat$to_string_base$(16n, Bits$to_nat$(Word$to_bits$($11910)));
                var $11909 = $11911;
                break;
        };
        return $11909;
    };
    const U16$show_hex = x0 => U16$show_hex$(x0);

    function Kind$Code$escape$char$(_chr$1) {
        var self = (_chr$1 === Kind$Code$backslash);
        if (self) {
            var $11913 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
            var $11912 = $11913;
        } else {
            var self = (_chr$1 === 34);
            if (self) {
                var $11915 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                var $11914 = $11915;
            } else {
                var self = (_chr$1 === 39);
                if (self) {
                    var $11917 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                    var $11916 = $11917;
                } else {
                    var self = U16$btw$(32, _chr$1, 126);
                    if (self) {
                        var $11919 = String$cons$(_chr$1, String$nil);
                        var $11918 = $11919;
                    } else {
                        var $11920 = (String$cons$(Kind$Code$backslash, String$nil) + ("u{" + (U16$show_hex$(_chr$1) + "}")));
                        var $11918 = $11920;
                    };
                    var $11916 = $11918;
                };
                var $11914 = $11916;
            };
            var $11912 = $11914;
        };
        return $11912;
    };
    const Kind$Code$escape$char = x0 => Kind$Code$escape$char$(x0);

    function Kind$Code$escape$go$(_str$1, _result$2) {
        var Kind$Code$escape$go$ = (_str$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_str$1, _result$2]
        });
        var Kind$Code$escape$go = _str$1 => _result$2 => Kind$Code$escape$go$(_str$1, _result$2);
        var arg = [_str$1, _result$2];
        while (true) {
            let [_str$1, _result$2] = arg;
            var R = (() => {
                var self = _str$1;
                if (self.length === 0) {
                    var $11921 = String$reverse$(_result$2);
                    return $11921;
                } else {
                    var $11922 = self.charCodeAt(0);
                    var $11923 = self.slice(1);
                    var $11924 = Kind$Code$escape$go$($11923, (String$reverse$(Kind$Code$escape$char$($11922)) + _result$2));
                    return $11924;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$escape$go = x0 => x1 => Kind$Code$escape$go$(x0, x1);

    function Kind$Code$escape$(_str$1) {
        var $11925 = Kind$Code$escape$go$(_str$1, "");
        return $11925;
    };
    const Kind$Code$escape = x0 => Kind$Code$escape$(x0);

    function Kind$Core$show$go$(_term$1, _indx$2, _vars$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11927 = self.name;
                var $11928 = self.indx;
                var $11929 = Kind$Core$var_name$(Nat$pred$((_indx$2 - $11928 <= 0n ? 0n : _indx$2 - $11928)), $11927, 0n, _vars$3);
                var $11926 = $11929;
                break;
            case 'Kind.Term.ref':
                var $11930 = self.name;
                var $11931 = Kind$Name$show$($11930);
                var $11926 = $11931;
                break;
            case 'Kind.Term.all':
                var $11932 = self.eras;
                var $11933 = self.self;
                var $11934 = self.name;
                var $11935 = self.xtyp;
                var $11936 = self.body;
                var _eras$9 = $11932;
                var self = _eras$9;
                if (self) {
                    var $11938 = "%";
                    var _init$10 = $11938;
                } else {
                    var $11939 = "@";
                    var _init$10 = $11939;
                };
                var _self$11 = Kind$Name$show$($11933);
                var _name$12 = Kind$Name$show$($11934);
                var _xtyp$13 = Kind$Core$show$go$($11935, _indx$2, _vars$3);
                var _body$14 = Kind$Core$show$go$($11936(Kind$Term$var$($11933, _indx$2))(Kind$Term$var$($11934, Nat$succ$(_indx$2))), Nat$succ$(Nat$succ$(_indx$2)), List$cons$($11934, List$cons$($11933, _vars$3)));
                var $11937 = String$flatten$(List$cons$(_init$10, List$cons$(_self$11, List$cons$("(", List$cons$(_name$12, List$cons$(":", List$cons$(_xtyp$13, List$cons$(") ", List$cons$(_body$14, List$nil)))))))));
                var $11926 = $11937;
                break;
            case 'Kind.Term.lam':
                var $11940 = self.name;
                var $11941 = self.body;
                var _name$6 = Kind$Name$show$($11940);
                var _body$7 = Kind$Core$show$go$($11941(Kind$Term$var$($11940, _indx$2)), Nat$succ$(_indx$2), List$cons$($11940, _vars$3));
                var $11942 = String$flatten$(List$cons$("#", List$cons$(_name$6, List$cons$(" ", List$cons$(_body$7, List$nil)))));
                var $11926 = $11942;
                break;
            case 'Kind.Term.app':
                var $11943 = self.func;
                var $11944 = self.argm;
                var _func$6 = Kind$Core$show$go$($11943, _indx$2, _vars$3);
                var _argm$7 = Kind$Core$show$go$($11944, _indx$2, _vars$3);
                var $11945 = String$flatten$(List$cons$("(", List$cons$(_func$6, List$cons$(" ", List$cons$(_argm$7, List$cons$(")", List$nil))))));
                var $11926 = $11945;
                break;
            case 'Kind.Term.let':
                var $11946 = self.name;
                var $11947 = self.expr;
                var $11948 = self.body;
                var _name$7 = Kind$Name$show$($11946);
                var _expr$8 = Kind$Core$show$go$($11947, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11948(Kind$Term$var$($11946, _indx$2)), Nat$succ$(_indx$2), List$cons$($11946, _vars$3));
                var $11949 = String$flatten$(List$cons$("!", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11926 = $11949;
                break;
            case 'Kind.Term.def':
                var $11950 = self.name;
                var $11951 = self.expr;
                var $11952 = self.body;
                var _name$7 = Kind$Name$show$($11950);
                var _expr$8 = Kind$Core$show$go$($11951, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11952(Kind$Term$var$($11950, _indx$2)), Nat$succ$(_indx$2), List$cons$($11950, _vars$3));
                var $11953 = String$flatten$(List$cons$("$", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11926 = $11953;
                break;
            case 'Kind.Term.ann':
                var $11954 = self.term;
                var $11955 = self.type;
                var _term$7 = Kind$Core$show$go$($11954, _indx$2, _vars$3);
                var _type$8 = Kind$Core$show$go$($11955, _indx$2, _vars$3);
                var $11956 = String$flatten$(List$cons$("{", List$cons$(_term$7, List$cons$(":", List$cons$(_type$8, List$cons$("}", List$nil))))));
                var $11926 = $11956;
                break;
            case 'Kind.Term.nat':
                var $11957 = self.natx;
                var $11958 = String$flatten$(List$cons$("+", List$cons$(Nat$show$($11957), List$nil)));
                var $11926 = $11958;
                break;
            case 'Kind.Term.chr':
                var $11959 = self.chrx;
                var $11960 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($11959), List$cons$("\'", List$nil))));
                var $11926 = $11960;
                break;
            case 'Kind.Term.str':
                var $11961 = self.strx;
                var $11962 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($11961), List$cons$("\"", List$nil))));
                var $11926 = $11962;
                break;
            case 'Kind.Term.ori':
                var $11963 = self.expr;
                var $11964 = Kind$Core$show$go$($11963, _indx$2, _vars$3);
                var $11926 = $11964;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11965 = "*";
                var $11926 = $11965;
                break;
        };
        return $11926;
    };
    const Kind$Core$show$go = x0 => x1 => x2 => Kind$Core$show$go$(x0, x1, x2);

    function Kind$Core$show$(_term$1) {
        var $11966 = Kind$Core$show$go$(_term$1, 0n, List$nil);
        return $11966;
    };
    const Kind$Core$show = x0 => Kind$Core$show$(x0);

    function Kind$Defs$core$(_defs$1) {
        var _result$2 = "";
        var _result$3 = (() => {
            var $11969 = _result$2;
            var $11970 = BitsMap$values$(_defs$1);
            let _result$4 = $11969;
            let _defn$3;
            while ($11970._ === 'List.cons') {
                _defn$3 = $11970.head;
                var self = _defn$3;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11971 = self.name;
                        var $11972 = self.term;
                        var $11973 = self.type;
                        var $11974 = self.stat;
                        var self = $11974;
                        switch (self._) {
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $11976 = _result$4;
                                var $11975 = $11976;
                                break;
                            case 'Kind.Status.done':
                                var _name$15 = $11971;
                                var _term$16 = Kind$Core$show$($11972);
                                var _type$17 = Kind$Core$show$($11973);
                                var $11977 = String$flatten$(List$cons$(_result$4, List$cons$(_name$15, List$cons$(" : ", List$cons$(_type$17, List$cons$(" = ", List$cons$(_term$16, List$cons$(";\u{a}", List$nil))))))));
                                var $11975 = $11977;
                                break;
                        };
                        var $11969 = $11975;
                        break;
                };
                _result$4 = $11969;
                $11970 = $11970.tail;
            }
            return _result$4;
        })();
        var $11967 = _result$3;
        return $11967;
    };
    const Kind$Defs$core = x0 => Kind$Defs$core$(x0);

    function Kind$api$io$term_to_core$(_name$1) {
        var $11978 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $11979 = _m$bind$2;
            return $11979;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var self = _new_defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $11981 = self.value;
                    var $11982 = $11981;
                    var _defs$3 = $11982;
                    break;
                case 'Maybe.none':
                    var $11983 = Kind$Map$new;
                    var _defs$3 = $11983;
                    break;
            };
            var _defs$4 = BitsMap$map$((_defn$4 => {
                var self = _defn$4;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11985 = self.file;
                        var $11986 = self.code;
                        var $11987 = self.orig;
                        var $11988 = self.name;
                        var $11989 = self.term;
                        var $11990 = self.type;
                        var $11991 = self.isct;
                        var $11992 = self.arit;
                        var $11993 = self.stat;
                        var _term$14 = Kind$Term$inline$($11989, _defs$3);
                        var _type$15 = Kind$Term$inline$($11990, _defs$3);
                        var $11994 = Kind$Def$new$($11985, $11986, $11987, $11988, _term$14, _type$15, $11991, $11992, $11993);
                        var $11984 = $11994;
                        break;
                };
                return $11984;
            }), _defs$3);
            var $11980 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                var $11995 = _m$pure$6;
                return $11995;
            }))(Kind$Defs$core$(_defs$4));
            return $11980;
        }));
        return $11978;
    };
    const Kind$api$io$term_to_core = x0 => Kind$api$io$term_to_core$(x0);

    function Kind$Comp$Defs$compile$defn$adjust$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $11997 = self.file;
                var $11998 = self.code;
                var $11999 = self.orig;
                var $12000 = self.name;
                var $12001 = self.term;
                var $12002 = self.type;
                var $12003 = self.isct;
                var $12004 = self.arit;
                var $12005 = self.stat;
                var _term$12 = Kind$Term$inline$($12001, _defs$2);
                var _type$13 = Kind$Term$inline$($12002, _defs$2);
                var $12006 = Kind$Def$new$($11997, $11998, $11999, $12000, _term$12, _type$13, $12003, $12004, $12005);
                var $11996 = $12006;
                break;
        };
        return $11996;
    };
    const Kind$Comp$Defs$compile$defn$adjust = x0 => x1 => Kind$Comp$Defs$compile$defn$adjust$(x0, x1);

    function Kind$Comp$var$(_name$1) {
        var $12007 = ({
            _: 'Kind.Comp.var',
            'name': _name$1
        });
        return $12007;
    };
    const Kind$Comp$var = x0 => Kind$Comp$var$(x0);
    const Kind$Comp$nil = ({
        _: 'Kind.Comp.nil'
    });

    function Kind$Comp$ref$(_name$1) {
        var $12008 = ({
            _: 'Kind.Comp.ref',
            'name': _name$1
        });
        return $12008;
    };
    const Kind$Comp$ref = x0 => Kind$Comp$ref$(x0);
    const Kind$Comp$Prim$bool = ({
        _: 'Kind.Comp.Prim.bool'
    });
    const Kind$Comp$Prim$nat = ({
        _: 'Kind.Comp.Prim.nat'
    });
    const Kind$Comp$Prim$bits = ({
        _: 'Kind.Comp.Prim.bits'
    });
    const Kind$Comp$Prim$u16 = ({
        _: 'Kind.Comp.Prim.u16'
    });
    const Kind$Comp$Prim$u32 = ({
        _: 'Kind.Comp.Prim.u32'
    });
    const Kind$Comp$Prim$string = ({
        _: 'Kind.Comp.Prim.string'
    });
    const Kind$Comp$Prim$natives = List$cons$(Pair$new$("Bool", Kind$Comp$Prim$bool), List$cons$(Pair$new$("Nat", Kind$Comp$Prim$nat), List$cons$(Pair$new$("Bits", Kind$Comp$Prim$bits), List$cons$(Pair$new$("U16", Kind$Comp$Prim$u16), List$cons$(Pair$new$("U32", Kind$Comp$Prim$u32), List$cons$(Pair$new$("String", Kind$Comp$Prim$string), List$nil))))));

    function Kind$Term$equal$(_a$1, _b$2, _defs$3) {
        var self = Kind$Term$equal$go$(_a$1, _b$2, _defs$3, 0n, BitsSet$new);
        switch (self._) {
            case 'Kind.Check.result':
                var $12010 = self.value;
                var $12011 = Maybe$default$($12010, Bool$false);
                var $12009 = $12011;
                break;
        };
        return $12009;
    };
    const Kind$Term$equal = x0 => x1 => x2 => Kind$Term$equal$(x0, x1, x2);

    function Kind$Comp$compile$prim_of$(_type$1, _defs$2) {
        var _result$3 = Maybe$none;
        var _result$4 = (() => {
            var $12014 = _result$3;
            var $12015 = Kind$Comp$Prim$natives;
            let _result$5 = $12014;
            let _prim$4;
            while ($12015._ === 'List.cons') {
                _prim$4 = $12015.head;
                var self = _prim$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12016 = self.fst;
                        var $12017 = self.snd;
                        var self = _result$5;
                        switch (self._) {
                            case 'Maybe.none':
                                var self = Kind$Term$equal$(_type$1, Kind$Term$ref$($12016), _defs$2);
                                if (self) {
                                    var $12020 = Maybe$some$($12017);
                                    var $12019 = $12020;
                                } else {
                                    var $12021 = Maybe$none;
                                    var $12019 = $12021;
                                };
                                var $12018 = $12019;
                                break;
                            case 'Maybe.some':
                                var $12022 = _result$5;
                                var $12018 = $12022;
                                break;
                        };
                        var $12014 = $12018;
                        break;
                };
                _result$5 = $12014;
                $12015 = $12015.tail;
            }
            return _result$5;
        })();
        var $12012 = _result$4;
        return $12012;
    };
    const Kind$Comp$compile$prim_of = x0 => x1 => Kind$Comp$compile$prim_of$(x0, x1);

    function String$ends_with$(_xs$1, _match$2) {
        var _xs_reserved$3 = String$reverse$(_xs$1);
        var _match_reversed$4 = String$reverse$(_match$2);
        var $12023 = String$starts_with$(_xs_reserved$3, _match_reversed$4);
        return $12023;
    };
    const String$ends_with = x0 => x1 => String$ends_with$(x0, x1);

    function Kind$Comp$compile$adt$get_fields$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12025 = self.eras;
                var $12026 = self.name;
                var $12027 = self.body;
                var _head$7 = $12026;
                var _tail$8 = Kind$Comp$compile$adt$get_fields$($12027(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var self = $12025;
                if (self) {
                    var $12029 = _tail$8;
                    var $12028 = $12029;
                } else {
                    var $12030 = List$cons$(_head$7, _tail$8);
                    var $12028 = $12030;
                };
                var $12024 = $12028;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12031 = List$nil;
                var $12024 = $12031;
                break;
        };
        return $12024;
    };
    const Kind$Comp$compile$adt$get_fields = x0 => Kind$Comp$compile$adt$get_fields$(x0);

    function Kind$Comp$compile$adt$get_constructors$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $12033 = self.name;
                var $12034 = self.xtyp;
                var $12035 = self.body;
                var _tail$7 = Kind$Comp$compile$adt$get_constructors$($12035(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var _name$8 = $12033;
                var _flds$9 = Kind$Comp$compile$adt$get_fields$($12034);
                var $12036 = List$cons$(Pair$new$(_name$8, _flds$9), _tail$7);
                var $12032 = $12036;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12037 = List$nil;
                var $12032 = $12037;
                break;
        };
        return $12032;
    };
    const Kind$Comp$compile$adt$get_constructors = x0 => Kind$Comp$compile$adt$get_constructors$(x0);

    function Kind$Comp$Prim$data$(_name$1, _ctrs$2) {
        var $12038 = ({
            _: 'Kind.Comp.Prim.data',
            'name': _name$1,
            'ctrs': _ctrs$2
        });
        return $12038;
    };
    const Kind$Comp$Prim$data = x0 => x1 => Kind$Comp$Prim$data$(x0, x1);

    function Kind$Comp$compile$adt$(_term$1, _defs$2) {
        var _term$3 = Kind$Term$reduce$(_term$1, _defs$2);
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.all':
                var $12040 = self.self;
                var $12041 = self.body;
                var self = String$ends_with$($12040, ".Self");
                if (self) {
                    var _body$9 = $12041(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n));
                    var _data$10 = Kind$Comp$compile$adt$get_constructors$(_body$9);
                    var _name$11 = String$take$((String$length$($12040) - 5n <= 0n ? 0n : String$length$($12040) - 5n), $12040);
                    var $12043 = Maybe$some$(Kind$Comp$Prim$data$(_name$11, _data$10));
                    var $12042 = $12043;
                } else {
                    var $12044 = Maybe$none;
                    var $12042 = $12044;
                };
                var $12039 = $12042;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12045 = Maybe$none;
                var $12039 = $12045;
                break;
        };
        return $12039;
    };
    const Kind$Comp$compile$adt = x0 => x1 => Kind$Comp$compile$adt$(x0, x1);

    function Kind$Comp$eli$(_prim$1, _expr$2) {
        var $12046 = ({
            _: 'Kind.Comp.eli',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12046;
    };
    const Kind$Comp$eli = x0 => x1 => Kind$Comp$eli$(x0, x1);

    function Kind$Comp$app$(_func$1, _argm$2) {
        var $12047 = ({
            _: 'Kind.Comp.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $12047;
    };
    const Kind$Comp$app = x0 => x1 => Kind$Comp$app$(x0, x1);

    function Kind$Comp$let$(_name$1, _expr$2, _body$3) {
        var $12048 = ({
            _: 'Kind.Comp.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $12048;
    };
    const Kind$Comp$let = x0 => x1 => x2 => Kind$Comp$let$(x0, x1, x2);

    function Kind$Comp$nat$(_natx$1) {
        var $12049 = ({
            _: 'Kind.Comp.nat',
            'natx': _natx$1
        });
        return $12049;
    };
    const Kind$Comp$nat = x0 => Kind$Comp$nat$(x0);

    function Kind$Comp$chr$(_chrx$1) {
        var $12050 = ({
            _: 'Kind.Comp.chr',
            'chrx': _chrx$1
        });
        return $12050;
    };
    const Kind$Comp$chr = x0 => Kind$Comp$chr$(x0);

    function Kind$Comp$str$(_strx$1) {
        var $12051 = ({
            _: 'Kind.Comp.str',
            'strx': _strx$1
        });
        return $12051;
    };
    const Kind$Comp$str = x0 => Kind$Comp$str$(x0);

    function Kind$Comp$lam$(_name$1, _body$2) {
        var $12052 = ({
            _: 'Kind.Comp.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $12052;
    };
    const Kind$Comp$lam = x0 => x1 => Kind$Comp$lam$(x0, x1);

    function Kind$Comp$ins$(_prim$1, _expr$2) {
        var $12053 = ({
            _: 'Kind.Comp.ins',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $12053;
    };
    const Kind$Comp$ins = x0 => x1 => Kind$Comp$ins$(x0, x1);

    function Kind$Comp$compile$(_term$1, _type$2, _defs$3, _size$4) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $12055 = self.value;
                var _typv$6 = Kind$Term$reduce$($12055, _defs$3);
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $12057 = self.name;
                        var $12058 = self.body;
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $12060 = self.eras;
                                var $12061 = self.xtyp;
                                var $12062 = self.body;
                                var _self_var$14 = Kind$Term$ann$(Bool$true, _term$1, $12055);
                                var _name_uid$15 = ($12057 + ("$" + Nat$show$(_size$4)));
                                var _name_var$16 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$15, (_size$4 + 1n)), $12061);
                                var _body_typ$17 = $12062(_self_var$14)(_name_var$16);
                                var self = Kind$Comp$compile$($12058(_name_var$16), Maybe$some$(_body_typ$17), _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12064 = self.fst;
                                        var self = $12060;
                                        if (self) {
                                            var $12066 = $12064;
                                            var _term_cmp$20 = $12066;
                                        } else {
                                            var $12067 = Kind$Comp$lam$(_name_uid$15, $12064);
                                            var _term_cmp$20 = $12067;
                                        };
                                        var self = Kind$Comp$compile$prim_of$($12055, _defs$3);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $12068 = self.value;
                                                var $12069 = Kind$Comp$ins$($12068, _term_cmp$20);
                                                var _term_cmp$21 = $12069;
                                                break;
                                            case 'Maybe.none':
                                                var self = Kind$Comp$compile$adt$($12055, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12071 = self.value;
                                                        var $12072 = Kind$Comp$ins$($12071, _term_cmp$20);
                                                        var $12070 = $12072;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $12073 = _term_cmp$20;
                                                        var $12070 = $12073;
                                                        break;
                                                };
                                                var _term_cmp$21 = $12070;
                                                break;
                                        };
                                        var $12065 = Pair$new$(_term_cmp$21, $12055);
                                        var $12063 = $12065;
                                        break;
                                };
                                var $12059 = $12063;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12074 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12059 = $12074;
                                break;
                        };
                        var $12056 = $12059;
                        break;
                    case 'Kind.Term.let':
                        var $12075 = self.name;
                        var $12076 = self.expr;
                        var $12077 = self.body;
                        var self = Kind$Comp$compile$($12076, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12079 = self.fst;
                                var $12080 = self.snd;
                                var _name_uid$12 = ($12075 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$13 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$12, (_size$4 + 1n)), $12080);
                                var self = Kind$Comp$compile$($12077(_expr_var$13), _type$2, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12082 = self.fst;
                                        var $12083 = self.snd;
                                        var _term_cmp$16 = Kind$Comp$let$(_name_uid$12, $12079, $12082);
                                        var _term_typ$17 = $12083;
                                        var $12084 = Pair$new$(_term_cmp$16, _term_typ$17);
                                        var $12081 = $12084;
                                        break;
                                };
                                var $12078 = $12081;
                                break;
                        };
                        var $12056 = $12078;
                        break;
                    case 'Kind.Term.ori':
                        var $12085 = self.expr;
                        var $12086 = Kind$Comp$compile$($12085, _type$2, _defs$3, _size$4);
                        var $12056 = $12086;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12088 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12087 = $12088;
                                break;
                            case 'Kind.Term.typ':
                                var $12089 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12087 = $12089;
                                break;
                        };
                        var $12056 = $12087;
                        break;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12091 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12090 = $12091;
                                break;
                            case 'Kind.Term.typ':
                                var $12092 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12090 = $12092;
                                break;
                        };
                        var $12056 = $12090;
                        break;
                    case 'Kind.Term.typ':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12094 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12093 = $12094;
                                break;
                            case 'Kind.Term.typ':
                                var $12095 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12093 = $12095;
                                break;
                        };
                        var $12056 = $12093;
                        break;
                    case 'Kind.Term.all':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12097 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12096 = $12097;
                                break;
                            case 'Kind.Term.typ':
                                var $12098 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12096 = $12098;
                                break;
                        };
                        var $12056 = $12096;
                        break;
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12100 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12099 = $12100;
                                break;
                            case 'Kind.Term.typ':
                                var $12101 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12099 = $12101;
                                break;
                        };
                        var $12056 = $12099;
                        break;
                    case 'Kind.Term.cse':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12103 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $12055);
                                var $12102 = $12103;
                                break;
                            case 'Kind.Term.typ':
                                var $12104 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12102 = $12104;
                                break;
                        };
                        var $12056 = $12102;
                        break;
                };
                var $12054 = $12056;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12106 = self.name;
                        var $12107 = self.indx;
                        var $12108 = Pair$new$(Kind$Comp$var$($12106), Kind$Term$var$($12106, $12107));
                        var $12105 = $12108;
                        break;
                    case 'Kind.Term.ref':
                        var $12109 = self.name;
                        var self = Kind$Map$get$($12109, _defs$3);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12111 = self.value;
                                var $12112 = Pair$new$(Kind$Comp$ref$($12109), (() => {
                                    var self = $12111;
                                    switch (self._) {
                                        case 'Kind.Def.new':
                                            var $12113 = self.type;
                                            var $12114 = $12113;
                                            return $12114;
                                    };
                                })());
                                var $12110 = $12112;
                                break;
                            case 'Maybe.none':
                                var $12115 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12110 = $12115;
                                break;
                        };
                        var $12105 = $12110;
                        break;
                    case 'Kind.Term.app':
                        var $12116 = self.func;
                        var $12117 = self.argm;
                        var self = Kind$Comp$compile$($12116, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12119 = self.fst;
                                var $12120 = self.snd;
                                var self = Kind$Term$reduce$($12120, _defs$3);
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $12122 = self.eras;
                                        var $12123 = self.xtyp;
                                        var $12124 = self.body;
                                        var self = Kind$Comp$compile$($12117, Maybe$some$($12123), _defs$3, _size$4);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $12126 = self.fst;
                                                var _term_typ$16 = $12124($12116)($12117);
                                                var self = Kind$Comp$compile$prim_of$($12120, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12128 = self.value;
                                                        var $12129 = Kind$Comp$eli$($12128, $12119);
                                                        var _term_cmp$17 = $12129;
                                                        break;
                                                    case 'Maybe.none':
                                                        var self = Kind$Comp$compile$adt$($12120, _defs$3);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $12131 = self.value;
                                                                var $12132 = Kind$Comp$eli$($12131, $12119);
                                                                var $12130 = $12132;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $12133 = $12119;
                                                                var $12130 = $12133;
                                                                break;
                                                        };
                                                        var _term_cmp$17 = $12130;
                                                        break;
                                                };
                                                var self = $12122;
                                                if (self) {
                                                    var $12134 = _term_cmp$17;
                                                    var _term_cmp$18 = $12134;
                                                } else {
                                                    var $12135 = Kind$Comp$app$(_term_cmp$17, $12126);
                                                    var _term_cmp$18 = $12135;
                                                };
                                                var $12127 = Pair$new$(_term_cmp$18, _term_typ$16);
                                                var $12125 = $12127;
                                                break;
                                        };
                                        var $12121 = $12125;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.typ':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.cse':
                                    case 'Kind.Term.new':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                    case 'Kind.Term.ori':
                                        var $12136 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                        var $12121 = $12136;
                                        break;
                                };
                                var $12118 = $12121;
                                break;
                        };
                        var $12105 = $12118;
                        break;
                    case 'Kind.Term.let':
                        var $12137 = self.name;
                        var $12138 = self.expr;
                        var $12139 = self.body;
                        var self = Kind$Comp$compile$($12138, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12141 = self.fst;
                                var $12142 = self.snd;
                                var _name_uid$10 = ($12137 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$11 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$10, (_size$4 + 1n)), $12142);
                                var self = Kind$Comp$compile$($12139(_expr_var$11), Maybe$none, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12144 = self.fst;
                                        var $12145 = self.snd;
                                        var $12146 = Pair$new$(Kind$Comp$let$(_name_uid$10, $12141, $12144), $12145);
                                        var $12143 = $12146;
                                        break;
                                };
                                var $12140 = $12143;
                                break;
                        };
                        var $12105 = $12140;
                        break;
                    case 'Kind.Term.def':
                        var $12147 = self.expr;
                        var $12148 = self.body;
                        var $12149 = Kind$Comp$compile$($12148($12147), Maybe$none, _defs$3, _size$4);
                        var $12105 = $12149;
                        break;
                    case 'Kind.Term.ann':
                        var $12150 = self.term;
                        var $12151 = self.type;
                        var $12152 = Kind$Comp$compile$($12150, Maybe$some$($12151), _defs$3, _size$4);
                        var $12105 = $12152;
                        break;
                    case 'Kind.Term.nat':
                        var $12153 = self.natx;
                        var $12154 = Pair$new$(Kind$Comp$nat$($12153), Kind$Term$ref$("Nat"));
                        var $12105 = $12154;
                        break;
                    case 'Kind.Term.chr':
                        var $12155 = self.chrx;
                        var $12156 = Pair$new$(Kind$Comp$chr$($12155), Kind$Term$ref$("Char"));
                        var $12105 = $12156;
                        break;
                    case 'Kind.Term.str':
                        var $12157 = self.strx;
                        var $12158 = Pair$new$(Kind$Comp$str$($12157), Kind$Term$ref$("String"));
                        var $12105 = $12158;
                        break;
                    case 'Kind.Term.ori':
                        var $12159 = self.expr;
                        var $12160 = Kind$Comp$compile$($12159, Maybe$none, _defs$3, _size$4);
                        var $12105 = $12160;
                        break;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12161 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                        var $12105 = $12161;
                        break;
                };
                var $12054 = $12105;
                break;
        };
        return $12054;
    };
    const Kind$Comp$compile = x0 => x1 => x2 => x3 => Kind$Comp$compile$(x0, x1, x2, x3);

    function Kind$Comp$Defs$compile$defn$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12163 = self.term;
                var $12164 = self.type;
                var self = Kind$Comp$compile$($12163, Maybe$some$($12164), _defs$2, 0n);
                switch (self._) {
                    case 'Pair.new':
                        var $12166 = self.fst;
                        var $12167 = $12166;
                        var $12165 = $12167;
                        break;
                };
                var $12162 = $12165;
                break;
        };
        return $12162;
    };
    const Kind$Comp$Defs$compile$defn = x0 => x1 => Kind$Comp$Defs$compile$defn$(x0, x1);

    function Kind$Comp$Defs$compile$(_defs$1) {
        var _defs$2 = BitsMap$map$((_x$2 => {
            var $12169 = Kind$Comp$Defs$compile$defn$adjust$(_x$2, _defs$1);
            return $12169;
        }), _defs$1);
        var _defs$3 = BitsMap$map$((_x$3 => {
            var $12170 = Kind$Comp$Defs$compile$defn$(_x$3, _defs$2);
            return $12170;
        }), _defs$2);
        var $12168 = _defs$3;
        return $12168;
    };
    const Kind$Comp$Defs$compile = x0 => Kind$Comp$Defs$compile$(x0);

    function Kind$Comp$dependency_sort$go$(_term$1, _defs$2, _seen$3, _list$4) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.ref':
                var $12172 = self.name;
                var self = Kind$Map$get$($12172, _seen$3);
                switch (self._) {
                    case 'Maybe.none':
                        var self = Kind$Map$get$($12172, _defs$2);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12175 = self.value;
                                var _term$7 = $12175;
                                var _seen$8 = Kind$Map$set$($12172, Unit$new, _seen$3);
                                var self = Kind$Comp$dependency_sort$go$(_term$7, _defs$2, _seen$8, _list$4);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12177 = self.fst;
                                        var $12178 = self.snd;
                                        var _list$11 = List$cons$(Pair$new$($12172, $12175), $12178);
                                        var $12179 = Pair$new$($12177, _list$11);
                                        var $12176 = $12179;
                                        break;
                                };
                                var $12174 = $12176;
                                break;
                            case 'Maybe.none':
                                var $12180 = Pair$new$(_seen$3, _list$4);
                                var $12174 = $12180;
                                break;
                        };
                        var $12173 = $12174;
                        break;
                    case 'Maybe.some':
                        var $12181 = Pair$new$(_seen$3, _list$4);
                        var $12173 = $12181;
                        break;
                };
                var $12171 = $12173;
                break;
            case 'Kind.Comp.lam':
                var $12182 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12182, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12184 = self.fst;
                        var $12185 = self.snd;
                        var $12186 = Pair$new$($12184, $12185);
                        var $12183 = $12186;
                        break;
                };
                var $12171 = $12183;
                break;
            case 'Kind.Comp.app':
                var $12187 = self.func;
                var $12188 = self.argm;
                var self = Kind$Comp$dependency_sort$go$($12187, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12190 = self.fst;
                        var $12191 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12188, _defs$2, $12190, $12191);
                        switch (self._) {
                            case 'Pair.new':
                                var $12193 = self.fst;
                                var $12194 = self.snd;
                                var $12195 = Pair$new$($12193, $12194);
                                var $12192 = $12195;
                                break;
                        };
                        var $12189 = $12192;
                        break;
                };
                var $12171 = $12189;
                break;
            case 'Kind.Comp.let':
                var $12196 = self.expr;
                var $12197 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12196, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12199 = self.fst;
                        var $12200 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12197, _defs$2, $12199, $12200);
                        switch (self._) {
                            case 'Pair.new':
                                var $12202 = self.fst;
                                var $12203 = self.snd;
                                var $12204 = Pair$new$($12202, $12203);
                                var $12201 = $12204;
                                break;
                        };
                        var $12198 = $12201;
                        break;
                };
                var $12171 = $12198;
                break;
            case 'Kind.Comp.eli':
                var $12205 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12205, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12207 = self.fst;
                        var $12208 = self.snd;
                        var $12209 = Pair$new$($12207, $12208);
                        var $12206 = $12209;
                        break;
                };
                var $12171 = $12206;
                break;
            case 'Kind.Comp.ins':
                var $12210 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12210, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12212 = self.fst;
                        var $12213 = self.snd;
                        var $12214 = Pair$new$($12212, $12213);
                        var $12211 = $12214;
                        break;
                };
                var $12171 = $12211;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12215 = Pair$new$(_seen$3, _list$4);
                var $12171 = $12215;
                break;
        };
        return $12171;
    };
    const Kind$Comp$dependency_sort$go = x0 => x1 => x2 => x3 => Kind$Comp$dependency_sort$go$(x0, x1, x2, x3);

    function Kind$Comp$dependency_sort$(_main$1, _defs$2) {
        var _term$3 = Kind$Comp$ref$(_main$1);
        var _seen$4 = Kind$Map$new;
        var _list$5 = List$nil;
        var self = Kind$Comp$dependency_sort$go$(_term$3, _defs$2, _seen$4, _list$5);
        switch (self._) {
            case 'Pair.new':
                var $12217 = self.snd;
                var $12218 = List$reverse$($12217);
                var $12216 = $12218;
                break;
        };
        return $12216;
    };
    const Kind$Comp$dependency_sort = x0 => x1 => Kind$Comp$dependency_sort$(x0, x1);

    function String$take_while$(_f$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $12220 = String$nil;
            var $12219 = $12220;
        } else {
            var $12221 = self.charCodeAt(0);
            var $12222 = self.slice(1);
            var self = _f$1($12221);
            if (self) {
                var $12224 = String$cons$($12221, String$take_while$(_f$1, $12222));
                var $12223 = $12224;
            } else {
                var $12225 = String$nil;
                var $12223 = $12225;
            };
            var $12219 = $12223;
        };
        return $12219;
    };
    const String$take_while = x0 => x1 => String$take_while$(x0, x1);

    function String$drop_while$(_f$1, _xs$2) {
        var String$drop_while$ = (_f$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_f$1, _xs$2]
        });
        var String$drop_while = _f$1 => _xs$2 => String$drop_while$(_f$1, _xs$2);
        var arg = [_f$1, _xs$2];
        while (true) {
            let [_f$1, _xs$2] = arg;
            var R = (() => {
                var self = _xs$2;
                if (self.length === 0) {
                    var $12226 = String$nil;
                    return $12226;
                } else {
                    var $12227 = self.charCodeAt(0);
                    var $12228 = self.slice(1);
                    var self = _f$1($12227);
                    if (self) {
                        var $12230 = String$drop_while$(_f$1, $12228);
                        var $12229 = $12230;
                    } else {
                        var $12231 = _xs$2;
                        var $12229 = $12231;
                    };
                    return $12229;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop_while = x0 => x1 => String$drop_while$(x0, x1);

    function Kind$Comp$replace$(_str$1, _vars$2) {
        var self = _str$1;
        if (self.length === 0) {
            var $12233 = _str$1;
            var $12232 = $12233;
        } else {
            var $12234 = self.charCodeAt(0);
            var $12235 = self.slice(1);
            var _a$5 = $12234;
            var self = (_a$5 === 36);
            if (self) {
                var _n_str$6 = String$take_while$((_b$6 => {
                    var $12238 = ((_b$6 >= 48) && (_b$6 <= 57));
                    return $12238;
                }), $12235);
                var self = (String$length$(_n_str$6) > 0n);
                if (self) {
                    var _n_str$tail$7 = String$drop_while$((_b$7 => {
                        var $12240 = ((_b$7 >= 48) && (_b$7 <= 57));
                        return $12240;
                    }), $12235);
                    var $12239 = (Maybe$default$(List$get$((BigInt(_n_str$6)), _vars$2), "?") + Kind$Comp$replace$(_n_str$tail$7, _vars$2));
                    var $12237 = $12239;
                } else {
                    var $12241 = String$cons$(_a$5, Kind$Comp$replace$($12235, _vars$2));
                    var $12237 = $12241;
                };
                var $12236 = $12237;
            } else {
                var $12242 = String$cons$(_a$5, Kind$Comp$replace$($12235, _vars$2));
                var $12236 = $12242;
            };
            var $12232 = $12236;
        };
        return $12232;
    };
    const Kind$Comp$replace = x0 => x1 => Kind$Comp$replace$(x0, x1);

    function List$create$go$(_len$2, _create_value$3, _result$4) {
        var List$create$go$ = (_len$2, _create_value$3, _result$4) => ({
            ctr: 'TCO',
            arg: [_len$2, _create_value$3, _result$4]
        });
        var List$create$go = _len$2 => _create_value$3 => _result$4 => List$create$go$(_len$2, _create_value$3, _result$4);
        var arg = [_len$2, _create_value$3, _result$4];
        while (true) {
            let [_len$2, _create_value$3, _result$4] = arg;
            var R = (() => {
                var self = _len$2;
                if (self === 0n) {
                    var $12243 = _result$4;
                    return $12243;
                } else {
                    var $12244 = (self - 1n);
                    var $12245 = List$create$go$($12244, _create_value$3, List$cons$(_create_value$3($12244), _result$4));
                    return $12245;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$create$go = x0 => x1 => x2 => List$create$go$(x0, x1, x2);

    function List$create$(_len$2, _create_value$3) {
        var $12246 = List$create$go$(_len$2, _create_value$3, List$nil);
        return $12246;
    };
    const List$create = x0 => x1 => List$create$(x0, x1);

    function Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, _j$6) {
        var self = _ctor$5;
        switch (self._) {
            case 'Pair.new':
                var $12248 = self.fst;
                var $12249 = self.snd;
                var self = (_j$6 === $12248);
                if (self) {
                    var $12251 = Kind$Comp$replace$($12249, List$create$($12248, (_j$9 => {
                        var $12252 = ("x" + Nat$show$(_j$9));
                        return $12252;
                    })));
                    var $12250 = $12251;
                } else {
                    var self = _lang$1;
                    switch (self._) {
                        case 'Kind.Comp.Language.new':
                            var $12254 = self.gram;
                            var $12255 = $12254;
                            var self = $12255;
                            break;
                    };
                    switch (self._) {
                        case 'Kind.Comp.Grammar.new':
                            var $12256 = self.lambda;
                            var $12257 = $12256;
                            var $12253 = $12257;
                            break;
                    };
                    var $12253 = $12253(("x" + Nat$show$(_j$6)))(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, Nat$succ$(_j$6)));
                    var $12250 = $12253;
                };
                var $12247 = $12250;
                break;
        };
        return $12247;
    };
    const Kind$Comp$Prim$instantiator$go = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Comp$Prim$instantiator$go$(x0, x1, x2, x3, x4, x5);

    function Kind$Comp$Prim$instantiator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12259 = self.nati;
                var $12260 = $12259;
                var _shape$5 = $12260;
                break;
        };
        var _shape$5 = _shape$5(_prim$2);
        var self = _shape$5;
        switch (self._) {
            case 'Kind.Comp.Native.new':
                var $12261 = self.inst;
                var _text$8 = "x";
                var _text$9 = (() => {
                    var $12264 = _text$8;
                    var $12265 = $12261;
                    let _text$10 = $12264;
                    let _ctor$9;
                    while ($12265._ === 'List.cons') {
                        _ctor$9 = $12265.head;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12266 = self.gram;
                                var $12267 = $12266;
                                var self = $12267;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Comp.Grammar.new':
                                var $12268 = self.application;
                                var $12269 = $12268;
                                var $12264 = $12269;
                                break;
                        };
                        var $12264 = $12264(_text$10)(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$9, 0n));
                        _text$10 = $12264;
                        $12265 = $12265.tail;
                    }
                    return _text$10;
                })();
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12270 = self.gram;
                        var $12271 = $12270;
                        var self = $12271;
                        break;
                };
                switch (self._) {
                    case 'Kind.Comp.Grammar.new':
                        var $12272 = self.lambda;
                        var $12273 = $12272;
                        var $12262 = $12273;
                        break;
                };
                var $12262 = $12262("x")(_text$9);
                var $12258 = $12262;
                break;
        };
        return $12258;
    };
    const Kind$Comp$Prim$instantiator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$instantiator$(x0, x1, x2, x3);

    function Kind$Comp$get_args$go$(_term$1, _args$2) {
        var Kind$Comp$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$get_args$go = _term$1 => _args$2 => Kind$Comp$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Comp.app':
                        var $12274 = self.func;
                        var $12275 = self.argm;
                        var $12276 = Kind$Comp$get_args$go$($12274, List$cons$($12275, _args$2));
                        return $12276;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.ref':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.eli':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12277 = Pair$new$(_term$1, _args$2);
                        return $12277;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$get_args$go = x0 => x1 => Kind$Comp$get_args$go$(x0, x1);

    function Kind$Comp$get_args$(_term$1) {
        var $12278 = Kind$Comp$get_args$go$(_term$1, List$nil);
        return $12278;
    };
    const Kind$Comp$get_args = x0 => Kind$Comp$get_args$(x0);

    function Kind$Comp$get_arity$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12280 = self.body;
                var $12281 = (1n + Kind$Comp$get_arity$($12280));
                var $12279 = $12281;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12282 = 0n;
                var $12279 = $12282;
                break;
        };
        return $12279;
    };
    const Kind$Comp$get_arity = x0 => Kind$Comp$get_arity$(x0);

    function Kind$Comp$get_vars$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12284 = self.name;
                var $12285 = self.body;
                var self = Kind$Comp$get_vars$($12285);
                switch (self._) {
                    case 'Pair.new':
                        var $12287 = self.fst;
                        var $12288 = self.snd;
                        var $12289 = Pair$new$(List$cons$($12284, $12287), $12288);
                        var $12286 = $12289;
                        break;
                };
                var $12283 = $12286;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12290 = Pair$new$(List$nil, _term$1);
                var $12283 = $12290;
                break;
        };
        return $12283;
    };
    const Kind$Comp$get_vars = x0 => Kind$Comp$get_vars$(x0);

    function Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) {
        var Kind$Comp$Prim$inst$go$ = (_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) => ({
            ctr: 'TCO',
            arg: [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7]
        });
        var Kind$Comp$Prim$inst$go = _lang$1 => _name$2 => _inst$3 => _vars$4 => _args$5 => _depth$6 => _defs$7 => Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7);
        var arg = [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7];
        while (true) {
            let [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7] = arg;
            var R = (() => {
                var self = _inst$3;
                switch (self._) {
                    case 'List.cons':
                        var $12291 = self.head;
                        var $12292 = self.tail;
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.cons':
                                var $12294 = self.head;
                                var $12295 = self.tail;
                                var self = (_name$2 === $12294);
                                if (self) {
                                    var self = $12291;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12298 = self.fst;
                                            var $12299 = self.snd;
                                            var self = ($12298 === (list_length(_args$5)));
                                            if (self) {
                                                var $12301 = Maybe$some$(Kind$Comp$replace$($12299, List$mapped$(_args$5, (_x$14 => {
                                                    var $12302 = Kind$Comp$transpile$term$(_lang$1, _x$14, _depth$6, _defs$7);
                                                    return $12302;
                                                }))));
                                                var $12300 = $12301;
                                            } else {
                                                var $12303 = Maybe$none;
                                                var $12300 = $12303;
                                            };
                                            var $12297 = $12300;
                                            break;
                                    };
                                    var $12296 = $12297;
                                } else {
                                    var $12304 = Kind$Comp$Prim$inst$go$(_lang$1, _name$2, $12292, $12295, _args$5, _depth$6, _defs$7);
                                    var $12296 = $12304;
                                };
                                var $12293 = $12296;
                                break;
                            case 'List.nil':
                                var $12305 = Maybe$none;
                                var $12293 = $12305;
                                break;
                        };
                        return $12293;
                    case 'List.nil':
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $12307 = Maybe$none;
                                var $12306 = $12307;
                                break;
                        };
                        return $12306;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$Prim$inst$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Comp$Prim$inst$go$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Comp$Prim$inst$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Comp.ins':
                var $12309 = self.prim;
                var $12310 = self.expr;
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12312 = self.nati;
                        var $12313 = $12312;
                        var _shape$7 = $12313;
                        break;
                };
                var _shape$7 = _shape$7($12309);
                var self = _shape$7;
                switch (self._) {
                    case 'Kind.Comp.Native.new':
                        var $12314 = self.inst;
                        var self = Kind$Comp$get_vars$($12310);
                        switch (self._) {
                            case 'Pair.new':
                                var $12316 = self.fst;
                                var $12317 = self.snd;
                                var self = ((list_length($12314)) === (list_length($12316)));
                                if (self) {
                                    var self = Kind$Comp$get_args$($12317);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12320 = self.fst;
                                            var $12321 = self.snd;
                                            var self = $12320;
                                            switch (self._) {
                                                case 'Kind.Comp.var':
                                                    var $12323 = self.name;
                                                    var $12324 = Kind$Comp$Prim$inst$go$(_lang$1, $12323, $12314, $12316, $12321, _depth$3, _defs$4);
                                                    var $12322 = $12324;
                                                    break;
                                                case 'Kind.Comp.ref':
                                                    var $12325 = self.name;
                                                    var $12326 = Kind$Comp$Prim$inst$go$(_lang$1, $12325, $12314, $12316, $12321, _depth$3, _defs$4);
                                                    var $12322 = $12326;
                                                    break;
                                                case 'Kind.Comp.nil':
                                                case 'Kind.Comp.lam':
                                                case 'Kind.Comp.app':
                                                case 'Kind.Comp.let':
                                                case 'Kind.Comp.eli':
                                                case 'Kind.Comp.ins':
                                                case 'Kind.Comp.nat':
                                                case 'Kind.Comp.chr':
                                                case 'Kind.Comp.str':
                                                case 'Kind.Comp.txt':
                                                    var $12327 = Maybe$none;
                                                    var $12322 = $12327;
                                                    break;
                                            };
                                            var $12319 = $12322;
                                            break;
                                    };
                                    var $12318 = $12319;
                                } else {
                                    var $12328 = Maybe$none;
                                    var $12318 = $12328;
                                };
                                var $12315 = $12318;
                                break;
                        };
                        var $12311 = $12315;
                        break;
                };
                var $12308 = $12311;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.lam':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12329 = Maybe$none;
                var $12308 = $12329;
                break;
        };
        return $12308;
    };
    const Kind$Comp$Prim$inst = x0 => x1 => x2 => x3 => Kind$Comp$Prim$inst$(x0, x1, x2, x3);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $12331 = self.pred;
                var $12332 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $12331));
                var $12330 = $12332;
                break;
            case 'Word.i':
                var $12333 = self.pred;
                var $12334 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $12333));
                var $12330 = $12334;
                break;
            case 'Word.e':
                var $12335 = _nil$3;
                var $12330 = $12335;
                break;
        };
        return $12330;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $12336 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $12337 = Nat$succ$((2n * _x$4));
            return $12337;
        }), _word$2);
        return $12336;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));

    function Kind$Comp$transpile$term$(_lang$1, _comp$2, _depth$3, _defs$4) {
        var _go$5 = Kind$Comp$transpile$term(_lang$1);
        var self = Kind$Comp$Prim$inst$(_lang$1, _comp$2, _depth$3, _defs$4);
        switch (self._) {
            case 'Maybe.some':
                var $12339 = self.value;
                var $12340 = $12339;
                var $12338 = $12340;
                break;
            case 'Maybe.none':
                var self = Kind$Comp$Prim$elim$(_lang$1, _comp$2, _depth$3, _defs$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $12342 = self.value;
                        var $12343 = $12342;
                        var $12341 = $12343;
                        break;
                    case 'Maybe.none':
                        var self = _comp$2;
                        switch (self._) {
                            case 'Kind.Comp.var':
                                var $12345 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12347 = self.gram;
                                        var $12348 = $12347;
                                        var self = $12348;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12349 = self.name;
                                        var $12350 = $12349;
                                        var $12346 = $12350;
                                        break;
                                };
                                var $12346 = $12346($12345);
                                var $12344 = $12346;
                                break;
                            case 'Kind.Comp.ref':
                                var $12351 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12353 = self.gram;
                                        var $12354 = $12353;
                                        var self = $12354;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12355 = self.name;
                                        var $12356 = $12355;
                                        var $12352 = $12356;
                                        break;
                                };
                                var $12352 = $12352($12351);
                                var $12344 = $12352;
                                break;
                            case 'Kind.Comp.lam':
                                var $12357 = self.name;
                                var $12358 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12360 = self.gram;
                                        var $12361 = $12360;
                                        var self = $12361;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12362 = self.lambda;
                                        var $12363 = $12362;
                                        var $12359 = $12363;
                                        break;
                                };
                                var $12359 = $12359((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12364 = self.gram;
                                            var $12365 = $12364;
                                            var self = $12365;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12366 = self.name;
                                            var $12367 = $12366;
                                            return $12367;
                                    };
                                })()($12357))(_go$5($12358)(Nat$succ$(_depth$3))(_defs$4));
                                var $12344 = $12359;
                                break;
                            case 'Kind.Comp.app':
                                var $12368 = self.func;
                                var $12369 = self.argm;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12371 = self.gram;
                                        var $12372 = $12371;
                                        var self = $12372;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12373 = self.application;
                                        var $12374 = $12373;
                                        var $12370 = $12374;
                                        break;
                                };
                                var $12370 = $12370(_go$5($12368)(_depth$3)(_defs$4))(_go$5($12369)(_depth$3)(_defs$4));
                                var $12344 = $12370;
                                break;
                            case 'Kind.Comp.let':
                                var $12375 = self.name;
                                var $12376 = self.expr;
                                var $12377 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12379 = self.gram;
                                        var $12380 = $12379;
                                        var self = $12380;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12381 = self.local_definition;
                                        var $12382 = $12381;
                                        var $12378 = $12382;
                                        break;
                                };
                                var $12378 = $12378((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12383 = self.gram;
                                            var $12384 = $12383;
                                            var self = $12384;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12385 = self.name;
                                            var $12386 = $12385;
                                            return $12386;
                                    };
                                })()($12375))(_go$5($12376)(_depth$3)(_defs$4))(_go$5($12377)(Nat$succ$(_depth$3))(_defs$4));
                                var $12344 = $12378;
                                break;
                            case 'Kind.Comp.eli':
                                var $12387 = self.prim;
                                var $12388 = self.expr;
                                var self = $12387;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12391 = self.gram;
                                                var $12392 = $12391;
                                                var self = $12392;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12393 = self.application;
                                                var $12394 = $12393;
                                                var $12390 = $12394;
                                                break;
                                        };
                                        var $12390 = $12390((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12395 = self.gram;
                                                    var $12396 = $12395;
                                                    var self = $12396;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12397 = self.elim_name;
                                                    var $12398 = $12397;
                                                    return $12398;
                                            };
                                        })()("Bool"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12390;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12400 = self.gram;
                                                var $12401 = $12400;
                                                var self = $12401;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12402 = self.application;
                                                var $12403 = $12402;
                                                var $12399 = $12403;
                                                break;
                                        };
                                        var $12399 = $12399((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12404 = self.gram;
                                                    var $12405 = $12404;
                                                    var self = $12405;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12406 = self.elim_name;
                                                    var $12407 = $12406;
                                                    return $12407;
                                            };
                                        })()("Bits"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12399;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12409 = self.gram;
                                                var $12410 = $12409;
                                                var self = $12410;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12411 = self.application;
                                                var $12412 = $12411;
                                                var $12408 = $12412;
                                                break;
                                        };
                                        var $12408 = $12408((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12413 = self.gram;
                                                    var $12414 = $12413;
                                                    var self = $12414;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12415 = self.elim_name;
                                                    var $12416 = $12415;
                                                    return $12416;
                                            };
                                        })()("Unit"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12408;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12418 = self.gram;
                                                var $12419 = $12418;
                                                var self = $12419;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12420 = self.application;
                                                var $12421 = $12420;
                                                var $12417 = $12421;
                                                break;
                                        };
                                        var $12417 = $12417((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12422 = self.gram;
                                                    var $12423 = $12422;
                                                    var self = $12423;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12424 = self.elim_name;
                                                    var $12425 = $12424;
                                                    return $12425;
                                            };
                                        })()("Nat"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12417;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12427 = self.gram;
                                                var $12428 = $12427;
                                                var self = $12428;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12429 = self.application;
                                                var $12430 = $12429;
                                                var $12426 = $12430;
                                                break;
                                        };
                                        var $12426 = $12426((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12431 = self.gram;
                                                    var $12432 = $12431;
                                                    var self = $12432;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12433 = self.elim_name;
                                                    var $12434 = $12433;
                                                    return $12434;
                                            };
                                        })()("U16"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12426;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12436 = self.gram;
                                                var $12437 = $12436;
                                                var self = $12437;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12438 = self.application;
                                                var $12439 = $12438;
                                                var $12435 = $12439;
                                                break;
                                        };
                                        var $12435 = $12435((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12440 = self.gram;
                                                    var $12441 = $12440;
                                                    var self = $12441;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12442 = self.elim_name;
                                                    var $12443 = $12442;
                                                    return $12443;
                                            };
                                        })()("U32"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12435;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12445 = self.gram;
                                                var $12446 = $12445;
                                                var self = $12446;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12447 = self.application;
                                                var $12448 = $12447;
                                                var $12444 = $12448;
                                                break;
                                        };
                                        var $12444 = $12444((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12449 = self.gram;
                                                    var $12450 = $12449;
                                                    var self = $12450;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12451 = self.elim_name;
                                                    var $12452 = $12451;
                                                    return $12452;
                                            };
                                        })()("String"))(_go$5($12388)(_depth$3)(_defs$4));
                                        var $12389 = $12444;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12453 = _go$5($12388)(_depth$3)(_defs$4);
                                        var $12389 = $12453;
                                        break;
                                };
                                var $12344 = $12389;
                                break;
                            case 'Kind.Comp.ins':
                                var $12454 = self.prim;
                                var $12455 = self.expr;
                                var self = $12454;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12458 = self.gram;
                                                var $12459 = $12458;
                                                var self = $12459;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12460 = self.application;
                                                var $12461 = $12460;
                                                var $12457 = $12461;
                                                break;
                                        };
                                        var $12457 = $12457((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12462 = self.gram;
                                                    var $12463 = $12462;
                                                    var self = $12463;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12464 = self.inst_name;
                                                    var $12465 = $12464;
                                                    return $12465;
                                            };
                                        })()("Bool"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12457;
                                        break;
                                    case 'Kind.Comp.Prim.bits':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12467 = self.gram;
                                                var $12468 = $12467;
                                                var self = $12468;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12469 = self.application;
                                                var $12470 = $12469;
                                                var $12466 = $12470;
                                                break;
                                        };
                                        var $12466 = $12466((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12471 = self.gram;
                                                    var $12472 = $12471;
                                                    var self = $12472;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12473 = self.inst_name;
                                                    var $12474 = $12473;
                                                    return $12474;
                                            };
                                        })()("Bits"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12466;
                                        break;
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12476 = self.gram;
                                                var $12477 = $12476;
                                                var self = $12477;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12478 = self.application;
                                                var $12479 = $12478;
                                                var $12475 = $12479;
                                                break;
                                        };
                                        var $12475 = $12475((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12480 = self.gram;
                                                    var $12481 = $12480;
                                                    var self = $12481;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12482 = self.inst_name;
                                                    var $12483 = $12482;
                                                    return $12483;
                                            };
                                        })()("Unit"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12475;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12485 = self.gram;
                                                var $12486 = $12485;
                                                var self = $12486;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12487 = self.application;
                                                var $12488 = $12487;
                                                var $12484 = $12488;
                                                break;
                                        };
                                        var $12484 = $12484((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12489 = self.gram;
                                                    var $12490 = $12489;
                                                    var self = $12490;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12491 = self.inst_name;
                                                    var $12492 = $12491;
                                                    return $12492;
                                            };
                                        })()("Nat"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12484;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12494 = self.gram;
                                                var $12495 = $12494;
                                                var self = $12495;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12496 = self.application;
                                                var $12497 = $12496;
                                                var $12493 = $12497;
                                                break;
                                        };
                                        var $12493 = $12493((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12498 = self.gram;
                                                    var $12499 = $12498;
                                                    var self = $12499;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12500 = self.inst_name;
                                                    var $12501 = $12500;
                                                    return $12501;
                                            };
                                        })()("U16"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12493;
                                        break;
                                    case 'Kind.Comp.Prim.u32':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12503 = self.gram;
                                                var $12504 = $12503;
                                                var self = $12504;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12505 = self.application;
                                                var $12506 = $12505;
                                                var $12502 = $12506;
                                                break;
                                        };
                                        var $12502 = $12502((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12507 = self.gram;
                                                    var $12508 = $12507;
                                                    var self = $12508;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12509 = self.inst_name;
                                                    var $12510 = $12509;
                                                    return $12510;
                                            };
                                        })()("U32"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12502;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12512 = self.gram;
                                                var $12513 = $12512;
                                                var self = $12513;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12514 = self.application;
                                                var $12515 = $12514;
                                                var $12511 = $12515;
                                                break;
                                        };
                                        var $12511 = $12511((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12516 = self.gram;
                                                    var $12517 = $12516;
                                                    var self = $12517;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12518 = self.inst_name;
                                                    var $12519 = $12518;
                                                    return $12519;
                                            };
                                        })()("String"))(_go$5($12455)(_depth$3)(_defs$4));
                                        var $12456 = $12511;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12520 = _go$5($12455)(_depth$3)(_defs$4);
                                        var $12456 = $12520;
                                        break;
                                };
                                var $12344 = $12456;
                                break;
                            case 'Kind.Comp.nat':
                                var $12521 = self.natx;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12523 = self.gram;
                                        var $12524 = $12523;
                                        var self = $12524;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12525 = self.nat;
                                        var $12526 = $12525;
                                        var $12522 = $12526;
                                        break;
                                };
                                var $12522 = $12522($12521);
                                var $12344 = $12522;
                                break;
                            case 'Kind.Comp.chr':
                                var $12527 = self.chrx;
                                var $12528 = Nat$show$((BigInt($12527)));
                                var $12344 = $12528;
                                break;
                            case 'Kind.Comp.str':
                                var $12529 = self.strx;
                                var $12530 = ("\"" + ((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12531 = self.gram;
                                            var $12532 = $12531;
                                            var self = $12532;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12533 = self.string_literal;
                                            var $12534 = $12533;
                                            return $12534;
                                    };
                                })()($12529) + "\""));
                                var $12344 = $12530;
                                break;
                            case 'Kind.Comp.txt':
                                var $12535 = self.text;
                                var $12536 = $12535;
                                var $12344 = $12536;
                                break;
                            case 'Kind.Comp.nil':
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12538 = self.gram;
                                        var $12539 = $12538;
                                        var self = $12539;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12540 = self.null;
                                        var $12541 = $12540;
                                        var $12537 = $12541;
                                        break;
                                };
                                var $12344 = $12537;
                                break;
                        };
                        var $12341 = $12344;
                        break;
                };
                var $12338 = $12341;
                break;
        };
        return $12338;
    };
    const Kind$Comp$transpile$term = x0 => x1 => x2 => x3 => Kind$Comp$transpile$term$(x0, x1, x2, x3);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $12543 = self.head;
                var $12544 = self.tail;
                var $12545 = List$cons$(_f$3($12543), List$map$(_f$3, $12544));
                var $12542 = $12545;
                break;
            case 'List.nil':
                var $12546 = List$nil;
                var $12542 = $12546;
                break;
        };
        return $12542;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$seq$go$(_n$1, _xs$2) {
        var List$seq$go$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var List$seq$go = _n$1 => _xs$2 => List$seq$go$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $12547 = _xs$2;
                    return $12547;
                } else {
                    var $12548 = (self - 1n);
                    var $12549 = List$seq$go$($12548, List$cons$($12548, _xs$2));
                    return $12549;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$seq$go = x0 => x1 => List$seq$go$(x0, x1);

    function List$seq$(_n$1) {
        var $12550 = List$seq$go$(_n$1, List$nil);
        return $12550;
    };
    const List$seq = x0 => List$seq$(x0);

    function Kind$Comp$txt$(_text$1) {
        var $12551 = ({
            _: 'Kind.Comp.txt',
            'text': _text$1
        });
        return $12551;
    };
    const Kind$Comp$txt = x0 => Kind$Comp$txt$(x0);

    function Kind$Comp$subst$(_name$1, _value$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Comp.var':
                var $12553 = self.name;
                var self = (_name$1 === $12553);
                if (self) {
                    var $12555 = _value$2;
                    var $12554 = $12555;
                } else {
                    var $12556 = Kind$Comp$var$($12553);
                    var $12554 = $12556;
                };
                var $12552 = $12554;
                break;
            case 'Kind.Comp.ref':
                var $12557 = self.name;
                var $12558 = Kind$Comp$ref$($12557);
                var $12552 = $12558;
                break;
            case 'Kind.Comp.lam':
                var $12559 = self.name;
                var $12560 = self.body;
                var $12561 = Kind$Comp$lam$($12559, (() => {
                    var self = (_name$1 === $12559);
                    if (self) {
                        var $12562 = $12560;
                        return $12562;
                    } else {
                        var $12563 = Kind$Comp$subst$(_name$1, _value$2, $12560);
                        return $12563;
                    };
                })());
                var $12552 = $12561;
                break;
            case 'Kind.Comp.app':
                var $12564 = self.func;
                var $12565 = self.argm;
                var $12566 = Kind$Comp$app$(Kind$Comp$subst$(_name$1, _value$2, $12564), Kind$Comp$subst$(_name$1, _value$2, $12565));
                var $12552 = $12566;
                break;
            case 'Kind.Comp.let':
                var $12567 = self.name;
                var $12568 = self.expr;
                var $12569 = self.body;
                var $12570 = Kind$Comp$let$($12567, Kind$Comp$subst$(_name$1, _value$2, $12568), (() => {
                    var self = (_name$1 === $12567);
                    if (self) {
                        var $12571 = $12569;
                        return $12571;
                    } else {
                        var $12572 = Kind$Comp$subst$(_name$1, _value$2, $12569);
                        return $12572;
                    };
                })());
                var $12552 = $12570;
                break;
            case 'Kind.Comp.eli':
                var $12573 = self.prim;
                var $12574 = self.expr;
                var $12575 = Kind$Comp$eli$($12573, Kind$Comp$subst$(_name$1, _value$2, $12574));
                var $12552 = $12575;
                break;
            case 'Kind.Comp.ins':
                var $12576 = self.prim;
                var $12577 = self.expr;
                var $12578 = Kind$Comp$ins$($12576, Kind$Comp$subst$(_name$1, _value$2, $12577));
                var $12552 = $12578;
                break;
            case 'Kind.Comp.nat':
                var $12579 = self.natx;
                var $12580 = Kind$Comp$nat$($12579);
                var $12552 = $12580;
                break;
            case 'Kind.Comp.chr':
                var $12581 = self.chrx;
                var $12582 = Kind$Comp$chr$($12581);
                var $12552 = $12582;
                break;
            case 'Kind.Comp.str':
                var $12583 = self.strx;
                var $12584 = Kind$Comp$str$($12583);
                var $12552 = $12584;
                break;
            case 'Kind.Comp.txt':
                var $12585 = self.text;
                var $12586 = Kind$Comp$txt$($12585);
                var $12552 = $12586;
                break;
            case 'Kind.Comp.nil':
                var $12587 = Kind$Comp$nil;
                var $12552 = $12587;
                break;
        };
        return $12552;
    };
    const Kind$Comp$subst = x0 => x1 => x2 => Kind$Comp$subst$(x0, x1, x2);

    function Kind$Comp$apply$(_term$1, _args$2) {
        var Kind$Comp$apply$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$apply = _term$1 => _args$2 => Kind$Comp$apply$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _args$2;
                switch (self._) {
                    case 'List.cons':
                        var $12588 = self.head;
                        var $12589 = self.tail;
                        var self = _term$1;
                        switch (self._) {
                            case 'Kind.Comp.lam':
                                var $12591 = self.name;
                                var $12592 = self.body;
                                var $12593 = Kind$Comp$apply$(Kind$Comp$subst$($12591, $12588, $12592), $12589);
                                var $12590 = $12593;
                                break;
                            case 'Kind.Comp.nil':
                            case 'Kind.Comp.var':
                            case 'Kind.Comp.ref':
                            case 'Kind.Comp.app':
                            case 'Kind.Comp.let':
                            case 'Kind.Comp.eli':
                            case 'Kind.Comp.ins':
                            case 'Kind.Comp.nat':
                            case 'Kind.Comp.chr':
                            case 'Kind.Comp.str':
                            case 'Kind.Comp.txt':
                                var $12594 = Kind$Comp$apply$(Kind$Comp$app$(_term$1, $12588), $12589);
                                var $12590 = $12594;
                                break;
                        };
                        return $12590;
                    case 'List.nil':
                        var $12595 = _term$1;
                        return $12595;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$apply = x0 => x1 => Kind$Comp$apply$(x0, x1);

    function Kind$Comp$Prim$elim$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = Kind$Comp$get_args$(_term$2);
        switch (self._) {
            case 'Pair.new':
                var $12597 = self.fst;
                var $12598 = self.snd;
                var self = $12597;
                switch (self._) {
                    case 'Kind.Comp.ref':
                        var $12600 = self.name;
                        var self = Kind$Map$get$($12600, _defs$4);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12602 = self.value;
                                var _arity$9 = Kind$Comp$get_arity$($12602);
                                var self = ((_arity$9 === (list_length($12598))) && (_arity$9 > 0n));
                                if (self) {
                                    var _inlined_args$10 = List$map$((_arg$10 => {
                                        var $12605 = Kind$Comp$transpile$term$(_lang$1, _arg$10, _depth$3, _defs$4);
                                        return $12605;
                                    }), $12598);
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12606 = self.gram;
                                            var $12607 = $12606;
                                            var self = $12607;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12608 = self.global_application;
                                            var $12609 = $12608;
                                            var _code$11 = $12609;
                                            break;
                                    };
                                    var _code$11 = _code$11($12600)(_inlined_args$10);
                                    var $12604 = Maybe$some$(_code$11);
                                    var $12603 = $12604;
                                } else {
                                    var $12610 = Maybe$none;
                                    var $12603 = $12610;
                                };
                                var $12601 = $12603;
                                break;
                            case 'Maybe.none':
                                var $12611 = Maybe$none;
                                var $12601 = $12611;
                                break;
                        };
                        var $12599 = $12601;
                        break;
                    case 'Kind.Comp.eli':
                        var $12612 = self.prim;
                        var $12613 = self.expr;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12615 = self.nati;
                                var $12616 = $12615;
                                var _shape$9 = $12616;
                                break;
                        };
                        var _shape$9 = _shape$9($12612);
                        var self = _shape$9;
                        switch (self._) {
                            case 'Kind.Comp.Native.new':
                                var $12617 = self.elim;
                                var self = $12617;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12619 = self.fst;
                                        var $12620 = self.snd;
                                        var _args_len$14 = (list_length($12598));
                                        var _cses_len$15 = (list_length($12620));
                                        var self = (_args_len$14 > _cses_len$15);
                                        if (self) {
                                            var $12622 = Maybe$none;
                                            var $12621 = $12622;
                                        } else {
                                            var _lams_len$16 = (_cses_len$15 - _args_len$14 <= 0n ? 0n : _cses_len$15 - _args_len$14);
                                            var _args$17 = Nat$for$($12598, 0n, _lams_len$16, (_i$17 => _args$18 => {
                                                var $12624 = List$concat$(_args$18, List$cons$(Kind$Comp$var$(("c" + Nat$show$(_i$17))), List$nil));
                                                return $12624;
                                            }));
                                            var _self$18 = ("self" + Nat$show$(_depth$3));
                                            var _cse_body_list$19 = List$map$((_item$19 => {
                                                var self = _item$19;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $12626 = self.fst;
                                                        var $12627 = self.snd;
                                                        var self = $12626;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $12629 = self.fst;
                                                                var $12630 = self.snd;
                                                                var _flds_len$24 = (list_length($12630));
                                                                var _let_args_n$25 = List$reverse$(List$seq$(_flds_len$24));
                                                                var _lam_args_n$26 = List$reverse$(List$seq$(_lams_len$16));
                                                                var _keys$27 = List$create$(_flds_len$24, (_k$27 => {
                                                                    var $12632 = Kind$Comp$var$(("f" + Nat$show$((_depth$3 + _k$27))));
                                                                    return $12632;
                                                                }));
                                                                var _argj$28 = Kind$Comp$apply$($12627, _keys$27);
                                                                var _body$29 = Kind$Comp$transpile$term$(_lang$1, _argj$28, ((_depth$3 + _flds_len$24) + _lams_len$16), _defs$4);
                                                                var _body$30 = (() => {
                                                                    var $12634 = _body$29;
                                                                    var $12635 = _lam_args_n$26;
                                                                    let _body$31 = $12634;
                                                                    let _i$30;
                                                                    while ($12635._ === 'List.cons') {
                                                                        _i$30 = $12635.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12636 = self.gram;
                                                                                var $12637 = $12636;
                                                                                var self = $12637;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12638 = self.lambda;
                                                                                var $12639 = $12638;
                                                                                var $12634 = $12639;
                                                                                break;
                                                                        };
                                                                        var $12634 = $12634(("c" + Nat$show$(_i$30)))(_body$31);
                                                                        _body$31 = $12634;
                                                                        $12635 = $12635.tail;
                                                                    }
                                                                    return _body$31;
                                                                })();
                                                                var _text$31 = _body$30;
                                                                var _text$32 = (() => {
                                                                    var $12641 = _text$31;
                                                                    var $12642 = _let_args_n$25;
                                                                    let _text$33 = $12641;
                                                                    let _k$32;
                                                                    while ($12642._ === 'List.cons') {
                                                                        _k$32 = $12642.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12643 = self.gram;
                                                                                var $12644 = $12643;
                                                                                var self = $12644;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12645 = self.local_definition;
                                                                                var $12646 = $12645;
                                                                                var $12641 = $12646;
                                                                                break;
                                                                        };
                                                                        var $12641 = $12641(("f" + Nat$show$((_depth$3 + _k$32))))(Kind$Comp$replace$(Maybe$default$(List$get$(_k$32, $12630), ""), List$cons$(_self$18, List$nil)))(_text$33);
                                                                        _text$33 = $12641;
                                                                        $12642 = $12642.tail;
                                                                    }
                                                                    return _text$33;
                                                                })();
                                                                var $12631 = Pair$new$($12629, _text$32);
                                                                var $12628 = $12631;
                                                                break;
                                                        };
                                                        var $12625 = $12628;
                                                        break;
                                                };
                                                return $12625;
                                            }), List$zip$($12620, _args$17));
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12647 = self.gram;
                                                    var $12648 = $12647;
                                                    var self = $12648;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12649 = self.select;
                                                    var $12650 = $12649;
                                                    var _ret$20 = $12650;
                                                    break;
                                            };
                                            var _ret$20 = _ret$20(Kind$Comp$replace$($12619, List$cons$(_self$18, List$nil)))(_cse_body_list$19);
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12651 = self.gram;
                                                    var $12652 = $12651;
                                                    var self = $12652;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12653 = self.local_definition;
                                                    var $12654 = $12653;
                                                    var _ret$21 = $12654;
                                                    break;
                                            };
                                            var _ret$21 = _ret$21(_self$18)(Kind$Comp$transpile$term$(_lang$1, $12613, _depth$3, _defs$4))(_ret$20);
                                            var $12623 = Maybe$some$(_ret$21);
                                            var $12621 = $12623;
                                        };
                                        var $12618 = $12621;
                                        break;
                                };
                                var $12614 = $12618;
                                break;
                        };
                        var $12599 = $12614;
                        break;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.app':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12655 = Maybe$none;
                        var $12599 = $12655;
                        break;
                };
                var $12596 = $12599;
                break;
        };
        return $12596;
    };
    const Kind$Comp$Prim$elim = x0 => x1 => x2 => x3 => Kind$Comp$Prim$elim$(x0, x1, x2, x3);

    function Kind$Comp$Prim$eliminator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var _term$5 = Kind$Comp$eli$(_prim$2, Kind$Comp$var$("x"));
        var _text$6 = Maybe$default$(Kind$Comp$Prim$elim$(_lang$1, _term$5, 0n, _defs$4), "");
        var _term$7 = Kind$Comp$lam$("x", Kind$Comp$txt$(_text$6));
        var $12656 = Kind$Comp$transpile$term$(_lang$1, _term$7, _depth$3, _defs$4);
        return $12656;
    };
    const Kind$Comp$Prim$eliminator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$eliminator$(x0, x1, x2, x3);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $12657 = self.key;
                        var $12658 = self.val;
                        var $12659 = self.left;
                        var $12660 = self.right;
                        var self = _cmp$3(_key$4)($12657);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12662 = BBT$lookup$(_cmp$3, _key$4, $12659);
                                var $12661 = $12662;
                                break;
                            case 'Cmp.eql':
                                var $12663 = Maybe$some$($12658);
                                var $12661 = $12663;
                                break;
                            case 'Cmp.gtn':
                                var $12664 = BBT$lookup$(_cmp$3, _key$4, $12660);
                                var $12661 = $12664;
                                break;
                        };
                        return $12661;
                    case 'BBT.tip':
                        var $12665 = Maybe$none;
                        return $12665;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $12667 = Cmp$ltn;
            var $12666 = $12667;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $12669 = Cmp$eql;
                var $12668 = $12669;
            } else {
                var $12670 = Cmp$gtn;
                var $12668 = $12670;
            };
            var $12666 = $12668;
        };
        return $12666;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12672 = Cmp$eql;
                        var $12671 = $12672;
                    } else {
                        var $12673 = self.charCodeAt(0);
                        var $12674 = self.slice(1);
                        var $12675 = Cmp$ltn;
                        var $12671 = $12675;
                    };
                    return $12671;
                } else {
                    var $12676 = self.charCodeAt(0);
                    var $12677 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12679 = Cmp$gtn;
                        var $12678 = $12679;
                    } else {
                        var $12680 = self.charCodeAt(0);
                        var $12681 = self.slice(1);
                        var self = U16$cmp$($12676, $12680);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12683 = Cmp$ltn;
                                var $12682 = $12683;
                                break;
                            case 'Cmp.eql':
                                var $12684 = String$cmp$($12677, $12681);
                                var $12682 = $12684;
                                break;
                            case 'Cmp.gtn':
                                var $12685 = Cmp$gtn;
                                var $12682 = $12685;
                                break;
                        };
                        var $12678 = $12682;
                    };
                    return $12678;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $12686 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $12686;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function BBT$(_K$1, _V$2) {
        var $12687 = null;
        return $12687;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $12688 = null;
        return $12688;
    };
    const Map = x0 => Map$(x0);

    function Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$2, _defs$3) {
        var _code$4 = "";
        var _code$5 = (() => {
            var $12691 = _code$4;
            var $12692 = Kind$Comp$Prim$natives;
            let _code$6 = $12691;
            let _nati$5;
            while ($12692._ === 'List.cons') {
                _nati$5 = $12692.head;
                var self = _nati$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12693 = self.fst;
                        var $12694 = self.snd;
                        var _code$9 = (_code$6 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12696 = self.gram;
                                    var $12697 = $12696;
                                    var self = $12697;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12698 = self.global_function;
                                    var $12699 = $12698;
                                    return $12699;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12700 = self.gram;
                                    var $12701 = $12700;
                                    var self = $12701;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12702 = self.inst_name;
                                    var $12703 = $12702;
                                    return $12703;
                            };
                        })()($12693))(List$nil)(Kind$Comp$Prim$instantiator$(_lang$1, $12694, 0n, _defs$3)));
                        var _code$10 = (_code$9 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12704 = self.gram;
                                    var $12705 = $12704;
                                    var self = $12705;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12706 = self.global_function;
                                    var $12707 = $12706;
                                    return $12707;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12708 = self.gram;
                                    var $12709 = $12708;
                                    var self = $12709;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12710 = self.elim_name;
                                    var $12711 = $12710;
                                    return $12711;
                            };
                        })()($12693))(List$nil)(Kind$Comp$Prim$eliminator$(_lang$1, $12694, 0n, _defs$3)));
                        var $12695 = _code$10;
                        var $12691 = $12695;
                        break;
                };
                _code$6 = $12691;
                $12692 = $12692.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12713 = _code$5;
            var $12714 = _defs_list$2;
            let _code$7 = $12713;
            let _defn$6;
            while ($12714._ === 'List.cons') {
                _defn$6 = $12714.head;
                var self = _defn$6;
                switch (self._) {
                    case 'Pair.new':
                        var $12715 = self.fst;
                        var $12716 = self.snd;
                        var self = Kind$Comp$get_vars$($12716);
                        switch (self._) {
                            case 'Pair.new':
                                var $12718 = self.fst;
                                var $12719 = self.snd;
                                var self = Map$get$($12715, (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12721 = self.opts;
                                            var $12722 = $12721;
                                            return $12722;
                                    };
                                })());
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $12723 = self.value;
                                        var $12724 = Kind$Comp$replace$(Pair$snd$($12723), $12718);
                                        var _inlined_body$12 = $12724;
                                        break;
                                    case 'Maybe.none':
                                        var $12725 = Kind$Comp$transpile$term$(_lang$1, $12719, 0n, _defs$3);
                                        var _inlined_body$12 = $12725;
                                        break;
                                };
                                var _code$13 = (_code$7 + (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12726 = self.gram;
                                            var $12727 = $12726;
                                            var self = $12727;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12728 = self.global_function;
                                            var $12729 = $12728;
                                            return $12729;
                                    };
                                })()($12715)($12718)(_inlined_body$12));
                                var $12720 = _code$13;
                                var $12717 = $12720;
                                break;
                        };
                        var $12713 = $12717;
                        break;
                };
                _code$7 = $12713;
                $12714 = $12714.tail;
            }
            return _code$7;
        })();
        var $12689 = _code$6;
        return $12689;
    };
    const Kind$Comp$transpile$global_definitions = x0 => x1 => x2 => Kind$Comp$transpile$global_definitions$(x0, x1, x2);

    function Kind$Comp$transpile$(_lang$1, _main$2, _defs$3) {
        var _defs_list$4 = Kind$Comp$dependency_sort$(_main$2, _defs$3);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12731 = self.gram;
                var $12732 = $12731;
                var self = $12732;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12733 = self.program;
                var $12734 = $12733;
                var _code$5 = $12734;
                break;
        };
        var _code$5 = _code$5(_main$2)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12735 = self.base;
                    var $12736 = $12735;
                    return $12736;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$4, _defs$3))));
        var $12730 = _code$5;
        return $12730;
    };
    const Kind$Comp$transpile = x0 => x1 => x2 => Kind$Comp$transpile$(x0, x1, x2);

    function Kind$Comp$Language$new$(_gram$1, _nati$2, _opts$3, _base$4) {
        var $12737 = ({
            _: 'Kind.Comp.Language.new',
            'gram': _gram$1,
            'nati': _nati$2,
            'opts': _opts$3,
            'base': _base$4
        });
        return $12737;
    };
    const Kind$Comp$Language$new = x0 => x1 => x2 => x3 => Kind$Comp$Language$new$(x0, x1, x2, x3);

    function Kind$Comp$Grammar$new$(_null$1, _name$2, _inst_name$3, _elim_name$4, _lambda$5, _application$6, _local_definition$7, _global_function$8, _global_application$9, _select$10, _string_literal$11, _nat$12, _module$13, _program$14) {
        var $12738 = ({
            _: 'Kind.Comp.Grammar.new',
            'null': _null$1,
            'name': _name$2,
            'inst_name': _inst_name$3,
            'elim_name': _elim_name$4,
            'lambda': _lambda$5,
            'application': _application$6,
            'local_definition': _local_definition$7,
            'global_function': _global_function$8,
            'global_application': _global_application$9,
            'select': _select$10,
            'string_literal': _string_literal$11,
            'nat': _nat$12,
            'module': _module$13,
            'program': _program$14
        });
        return $12738;
    };
    const Kind$Comp$Grammar$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => x11 => x12 => x13 => Kind$Comp$Grammar$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13);
    const Kind$Comp$Target$Scheme$null = "\'()";

    function Kind$Comp$Target$Scheme$name$(_name$1) {
        var self = String$is_empty$(_name$1);
        if (self) {
            var $12740 = "-";
            var $12739 = $12740;
        } else {
            var $12741 = _name$1;
            var $12739 = $12741;
        };
        return $12739;
    };
    const Kind$Comp$Target$Scheme$name = x0 => Kind$Comp$Target$Scheme$name$(x0);

    function Kind$Comp$Target$Scheme$inst_name$(_name$1) {
        var $12742 = (_name$1 + "-inst");
        return $12742;
    };
    const Kind$Comp$Target$Scheme$inst_name = x0 => Kind$Comp$Target$Scheme$inst_name$(x0);

    function Kind$Comp$Target$Scheme$elim_name$(_name$1) {
        var $12743 = (_name$1 + "-elim");
        return $12743;
    };
    const Kind$Comp$Target$Scheme$elim_name = x0 => Kind$Comp$Target$Scheme$elim_name$(x0);

    function Kind$Comp$Target$Scheme$lambda$(_name$1, _body$2) {
        var $12744 = ("(lambda (" + (_name$1 + (") " + (_body$2 + ")"))));
        return $12744;
    };
    const Kind$Comp$Target$Scheme$lambda = x0 => x1 => Kind$Comp$Target$Scheme$lambda$(x0, x1);

    function Kind$Comp$Target$Scheme$application$(_func$1, _argm$2) {
        var $12745 = ("(" + (_func$1 + (" " + (_argm$2 + ")"))));
        return $12745;
    };
    const Kind$Comp$Target$Scheme$application = x0 => x1 => Kind$Comp$Target$Scheme$application$(x0, x1);

    function Kind$Comp$Target$Scheme$local_definition$(_name$1, _expr$2, _body$3) {
        var $12746 = ("(let ((" + (_name$1 + (" " + (_expr$2 + (")) " + (_body$3 + ")"))))));
        return $12746;
    };
    const Kind$Comp$Target$Scheme$local_definition = x0 => x1 => x2 => Kind$Comp$Target$Scheme$local_definition$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$global_application$(_name$1, _args$2) {
        var $12747 = ("($" + (_name$1 + (" " + (String$join$(" ", _args$2) + ")"))));
        return $12747;
    };
    const Kind$Comp$Target$Scheme$global_application = x0 => x1 => Kind$Comp$Target$Scheme$global_application$(x0, x1);

    function Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, _rem_args$3) {
        var self = _rem_args$3;
        switch (self._) {
            case 'List.cons':
                var $12749 = self.head;
                var $12750 = self.tail;
                var $12751 = Kind$Comp$Target$Scheme$lambda$($12749, Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, $12750));
                var $12748 = $12751;
                break;
            case 'List.nil':
                var $12752 = Kind$Comp$Target$Scheme$global_application$(_fun$1, _args$2);
                var $12748 = $12752;
                break;
        };
        return $12748;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas$aux = x0 => x1 => x2 => Kind$Comp$Target$Scheme$nest_lambdas$aux$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2) {
        var _body$3 = Kind$Comp$Target$Scheme$nest_lambdas$aux$(_name$1, _args$2, _args$2);
        var $12753 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
        return $12753;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas = x0 => x1 => Kind$Comp$Target$Scheme$nest_lambdas$(x0, x1);

    function Kind$Comp$Target$Scheme$global_function$(_name$1, _args$2, _body$3) {
        var self = _args$2;
        switch (self._) {
            case 'List.nil':
                var $12755 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
                var $12754 = $12755;
                break;
            case 'List.cons':
                var $12756 = ("(define ($" + (_name$1 + (" " + (String$join$(" ", _args$2) + (") " + (_body$3 + (")\u{a}" + Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2))))))));
                var $12754 = $12756;
                break;
        };
        return $12754;
    };
    const Kind$Comp$Target$Scheme$global_function = x0 => x1 => x2 => Kind$Comp$Target$Scheme$global_function$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$select$(_term$1, _cse_body_list$2) {
        var _cses$3 = "";
        var _cses$4 = (() => {
            var $12759 = _cses$3;
            var $12760 = _cse_body_list$2;
            let _cses$5 = $12759;
            let _cse_body$4;
            while ($12760._ === 'List.cons') {
                _cse_body$4 = $12760.head;
                var self = _cse_body$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12761 = self.fst;
                        var $12762 = self.snd;
                        var $12763 = (_cses$5 + (" (" + ($12761 + (" " + ($12762 + ")")))));
                        var $12759 = $12763;
                        break;
                };
                _cses$5 = $12759;
                $12760 = $12760.tail;
            }
            return _cses$5;
        })();
        var $12757 = ("(case " + (_term$1 + (_cses$4 + ")")));
        return $12757;
    };
    const Kind$Comp$Target$Scheme$select = x0 => x1 => Kind$Comp$Target$Scheme$select$(x0, x1);

    function Char$to_string$(_chr$1) {
        var $12764 = String$cons$(_chr$1, String$nil);
        return $12764;
    };
    const Char$to_string = x0 => Char$to_string$(x0);

    function Kind$Comp$Target$Scheme$string_literal$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $12766 = "";
            var $12765 = $12766;
        } else {
            var $12767 = self.charCodeAt(0);
            var $12768 = self.slice(1);
            var $12769 = ((() => {
                var self = (($12767 === 92) || ($12767 === 34));
                if (self) {
                    var $12770 = ("\\" + Char$to_string$($12767));
                    return $12770;
                } else {
                    var self = (($12767 >= 32) && ($12767 <= 126));
                    if (self) {
                        var $12772 = Char$to_string$($12767);
                        var $12771 = $12772;
                    } else {
                        var $12773 = ("\\x" + (U16$show_hex$($12767) + ";"));
                        var $12771 = $12773;
                    };
                    return $12771;
                };
            })() + Kind$Comp$Target$Scheme$string_literal$($12768));
            var $12765 = $12769;
        };
        return $12765;
    };
    const Kind$Comp$Target$Scheme$string_literal = x0 => Kind$Comp$Target$Scheme$string_literal$(x0);

    function Kind$Comp$Target$Scheme$nat$(_nat$1) {
        var $12774 = Nat$show$(_nat$1);
        return $12774;
    };
    const Kind$Comp$Target$Scheme$nat = x0 => Kind$Comp$Target$Scheme$nat$(x0);
    const Kind$Comp$Target$Scheme$exports = List$cons$("suffix?", List$cons$("prefix?", List$cons$("run-all", List$cons$("run_io", List$cons$("print-lines", List$cons$("run_kind", List$cons$("make-string-view", List$cons$("string-view?", List$cons$("string-view-end", List$cons$("string-view-start", List$cons$("kstring-length", List$cons$("kstring-head", List$cons$("kstring-tail", List$cons$("string-view-ref", List$cons$("kstring?", List$cons$("kstring->string", List$cons$("kstring-append", List$cons$("kstring-getter", List$cons$("kstring_join", List$nil)))))))))))))))))));

    function Kind$Comp$Target$Scheme$module$(_name$1, _exports$2, _defs$3) {
        var _code$4 = ("#!chezscheme\u{a}(library (" + (_name$1 + ") (export"));
        var _code$5 = (() => {
            var $12777 = _code$4;
            var $12778 = Kind$Comp$Target$Scheme$exports;
            let _code$6 = $12777;
            let _export$5;
            while ($12778._ === 'List.cons') {
                _export$5 = $12778.head;
                var $12777 = (_code$6 + (" " + _export$5));
                _code$6 = $12777;
                $12778 = $12778.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12780 = _code$5;
            var $12781 = _exports$2;
            let _code$7 = $12780;
            let _export$6;
            while ($12781._ === 'List.cons') {
                _export$6 = $12781.head;
                var $12780 = (_code$7 + (" " + _export$6));
                _code$7 = $12780;
                $12781 = $12781.tail;
            }
            return _code$7;
        })();
        var _code$7 = (_code$6 + ")\u{a}");
        var _code$8 = (_code$7 + "(import (chezscheme))\u{a}");
        var _code$9 = (_code$8 + (_defs$3 + ")"));
        var $12775 = _code$9;
        return $12775;
    };
    const Kind$Comp$Target$Scheme$module = x0 => x1 => x2 => Kind$Comp$Target$Scheme$module$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$program$(_main$1, _defs$2) {
        var _code$3 = (_defs$2 + ("(run_kind " + (_main$1 + ")")));
        var $12782 = _code$3;
        return $12782;
    };
    const Kind$Comp$Target$Scheme$program = x0 => x1 => Kind$Comp$Target$Scheme$program$(x0, x1);
    const Kind$Comp$Target$Scheme$grammar = Kind$Comp$Grammar$new$(Kind$Comp$Target$Scheme$null, Kind$Comp$Target$Scheme$name, Kind$Comp$Target$Scheme$inst_name, Kind$Comp$Target$Scheme$elim_name, Kind$Comp$Target$Scheme$lambda, Kind$Comp$Target$Scheme$application, Kind$Comp$Target$Scheme$local_definition, Kind$Comp$Target$Scheme$global_function, Kind$Comp$Target$Scheme$global_application, Kind$Comp$Target$Scheme$select, Kind$Comp$Target$Scheme$string_literal, Kind$Comp$Target$Scheme$nat, Kind$Comp$Target$Scheme$module, Kind$Comp$Target$Scheme$program);

    function Kind$Comp$Native$new$(_inst$1, _elim$2) {
        var $12783 = ({
            _: 'Kind.Comp.Native.new',
            'inst': _inst$1,
            'elim': _elim$2
        });
        return $12783;
    };
    const Kind$Comp$Native$new = x0 => x1 => Kind$Comp$Native$new$(x0, x1);

    function Kind$Comp$Target$Scheme$natives$(_prim$1) {
        var self = _prim$1;
        switch (self._) {
            case 'Kind.Comp.Prim.data':
                var $12785 = self.name;
                var $12786 = self.ctrs;
                var $12787 = Kind$Comp$Native$new$(List$fold$($12786, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12789 = self.fst;
                            var $12790 = self.snd;
                            var _fields_size$8 = (list_length($12790));
                            var _fields_vars$9 = String$join$("", List$create$(_fields_size$8, (_x$9 => {
                                var $12792 = (" $" + Nat$show$(_x$9));
                                return $12792;
                            })));
                            var $12791 = List$cons$(Pair$new$(_fields_size$8, ("(vector \'" + ($12785 + ("." + ($12789 + (_fields_vars$9 + ")")))))), _result$5);
                            var $12788 = $12791;
                            break;
                    };
                    return $12788;
                })), Pair$new$("(get $0 0)", List$fold$($12786, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12794 = self.fst;
                            var $12795 = self.snd;
                            var _fields_size$8 = (list_length($12795));
                            var _fields_gets$9 = List$create$(_fields_size$8, (_i$9 => {
                                var $12797 = ("(get $0 " + (Nat$show$(Nat$succ$(_i$9)) + ")"));
                                return $12797;
                            }));
                            var $12796 = List$cons$(Pair$new$(("\'" + ($12785 + ("." + $12794))), _fields_gets$9), _result$5);
                            var $12793 = $12796;
                            break;
                    };
                    return $12793;
                }))));
                var $12784 = $12787;
                break;
            case 'Kind.Comp.Prim.bool':
                var $12798 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$cons$(Pair$new$(0n, "#f"), List$nil)), Pair$new$("$0", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$nil), List$nil))));
                var $12784 = $12798;
                break;
            case 'Kind.Comp.Prim.bits':
                var $12799 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#b1"), List$cons$(Pair$new$(1n, "(bitwise-arithmetic-shift-left $0 #b1)"), List$cons$(Pair$new$(1n, "(bitwise-ior (bitwise-arithmetic-shift-left $0 #b1) #b1)"), List$nil))), Pair$new$("(if (eq? $0 #b1) 2 (bitwise-and $0 #b1))", List$cons$(Pair$new$("2", List$nil), List$cons$(Pair$new$("0", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$cons$(Pair$new$("1", List$cons$("(bitwise-arithmetic-shift-right $0 #b1)", List$nil)), List$nil)))));
                var $12784 = $12799;
                break;
            case 'Kind.Comp.Prim.unit':
                var $12800 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$nil), List$nil)));
                var $12784 = $12800;
                break;
            case 'Kind.Comp.Prim.nat':
                var $12801 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "0"), List$cons$(Pair$new$(1n, "(+ $0 1)"), List$nil)), Pair$new$("(= $0 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(- $0 1)", List$nil)), List$nil))));
                var $12784 = $12801;
                break;
            case 'Kind.Comp.Prim.u16':
                var $12802 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u16 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u16-to-word $0)", List$nil)), List$nil)));
                var $12784 = $12802;
                break;
            case 'Kind.Comp.Prim.u32':
                var $12803 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u 32 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u-to-word 32 $0)", List$nil)), List$nil)));
                var $12784 = $12803;
                break;
            case 'Kind.Comp.Prim.string':
                var $12804 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "\"\""), List$cons$(Pair$new$(2n, "(kstring-append (make-string 1 (integer->char $0)) $1)"), List$nil)), Pair$new$("(<= (kstring-length $0) 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(char->integer (kstring-head $0))", List$cons$("(kstring-tail $0)", List$nil))), List$nil))));
                var $12784 = $12804;
                break;
        };
        return $12784;
    };
    const Kind$Comp$Target$Scheme$natives = x0 => Kind$Comp$Target$Scheme$natives$(x0);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $12805 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $12805;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $12806 = word_to_u32(_value$1);
        return $12806;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $12807 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $12807;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $12809 = self.size;
                var $12810 = $12809;
                var $12808 = $12810;
                break;
            case 'BBT.tip':
                var $12811 = 0;
                var $12808 = $12811;
                break;
        };
        return $12808;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $12812 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $12812;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $12814 = Bool$false;
                var $12813 = $12814;
                break;
            case 'Cmp.gtn':
                var $12815 = Bool$true;
                var $12813 = $12815;
                break;
        };
        return $12813;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $12816 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $12816;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $12818 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $12817 = $12818;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $12821 = self.key;
                        var $12822 = self.val;
                        var $12823 = self.left;
                        var $12824 = self.right;
                        var _size_rl$17 = BBT$size$($12823);
                        var _size_rr$18 = BBT$size$($12824);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $12821;
                            var _new_val$20 = $12822;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $12823);
                            var _new_right$22 = $12824;
                            var $12826 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $12825 = $12826;
                        } else {
                            var self = $12823;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $12828 = self.key;
                                    var $12829 = self.val;
                                    var $12830 = self.left;
                                    var $12831 = self.right;
                                    var _new_key$24 = $12828;
                                    var _new_val$25 = $12829;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $12830);
                                    var _new_right$27 = BBT$node$($12821, $12822, $12831, $12824);
                                    var $12832 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $12827 = $12832;
                                    break;
                                case 'BBT.tip':
                                    var $12833 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $12827 = $12833;
                                    break;
                            };
                            var $12825 = $12827;
                        };
                        var $12820 = $12825;
                        break;
                    case 'BBT.tip':
                        var $12834 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $12820 = $12834;
                        break;
                };
                var $12819 = $12820;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $12837 = self.key;
                            var $12838 = self.val;
                            var $12839 = self.left;
                            var $12840 = self.right;
                            var _size_ll$17 = BBT$size$($12839);
                            var _size_lr$18 = BBT$size$($12840);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $12837;
                                var _new_val$20 = $12838;
                                var _new_left$21 = $12839;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $12840, _r$6);
                                var $12842 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $12841 = $12842;
                            } else {
                                var self = $12840;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $12844 = self.key;
                                        var $12845 = self.val;
                                        var $12846 = self.left;
                                        var $12847 = self.right;
                                        var _new_key$24 = $12844;
                                        var _new_val$25 = $12845;
                                        var _new_left$26 = BBT$node$($12837, $12838, $12839, $12846);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $12847, _r$6);
                                        var $12848 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $12843 = $12848;
                                        break;
                                    case 'BBT.tip':
                                        var $12849 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $12843 = $12849;
                                        break;
                                };
                                var $12841 = $12843;
                            };
                            var $12836 = $12841;
                            break;
                        case 'BBT.tip':
                            var $12850 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $12836 = $12850;
                            break;
                    };
                    var $12835 = $12836;
                } else {
                    var $12851 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $12835 = $12851;
                };
                var $12819 = $12835;
            };
            var $12817 = $12819;
        };
        return $12817;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $12853 = self.key;
                var $12854 = self.val;
                var $12855 = self.left;
                var $12856 = self.right;
                var self = _cmp$3(_key$4)($12853);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $12853;
                        var _new_val$13 = $12854;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $12855);
                        var _new_right$15 = $12856;
                        var $12858 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12857 = $12858;
                        break;
                    case 'Cmp.eql':
                        var $12859 = BBT$node$(_key$4, _val$5, $12855, $12856);
                        var $12857 = $12859;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $12853;
                        var _new_val$13 = $12854;
                        var _new_left$14 = $12855;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $12856);
                        var $12860 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12857 = $12860;
                        break;
                };
                var $12852 = $12857;
                break;
            case 'BBT.tip':
                var $12861 = BBT$singleton$(_key$4, _val$5);
                var $12852 = $12861;
                break;
        };
        return $12852;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $12862 = self.head;
                        var $12863 = self.tail;
                        var _key$8 = Pair$fst$($12862);
                        var _val$9 = Pair$snd$($12862);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $12864 = BBT$from_list$go$(_cmp$3, _new_acc$10, $12863);
                        return $12864;
                    case 'List.nil':
                        var $12865 = _acc$4;
                        return $12865;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $12866 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $12866;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $12867 = BBT$from_list$(String$cmp, _xs$2);
        return $12867;
    };
    const Map$from_list = x0 => Map$from_list$(x0);
    const Kind$Comp$Target$Scheme$optimizeds = Map$from_list$(List$cons$(Pair$new$("Bool.not", Pair$new$(1n, "(not $0)")), List$cons$(Pair$new$("Bool.and", Pair$new$(2n, "(and $0 $1)")), List$cons$(Pair$new$("Bool.if", Pair$new$(3n, "(if $0 $1 $2)")), List$cons$(Pair$new$("Bool.or", Pair$new$(2n, "(or $0 $1)")), List$cons$(Pair$new$("Nat.add", Pair$new$(2n, "(+ $0 $1)")), List$cons$(Pair$new$("Nat.sub", Pair$new$(2n, "(max (- $0 $1) 0)")), List$cons$(Pair$new$("Nat.mul", Pair$new$(2n, "(* $0 $1)")), List$cons$(Pair$new$("Nat.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("Nat.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("Nat.pow", Pair$new$(2n, "(expt $0 $1)")), List$cons$(Pair$new$("Nat.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("Nat.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("Nat.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("Nat.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("Nat.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("Nat.to_u16", Pair$new$(1n, "$0")), List$cons$(Pair$new$("Nat.show", Pair$new$(1n, "(number->string $0)")), List$cons$(Pair$new$("U16.add", Pair$new$(2n, "(mod (+ $0 $1) 65536)")), List$cons$(Pair$new$("U16.sub", Pair$new$(2n, "(mod (- $0 $1) 65536)")), List$cons$(Pair$new$("U16.mul", Pair$new$(2n, "(mod (* $0 $1) 65536)")), List$cons$(Pair$new$("U16.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("U16.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("U16.pow", Pair$new$(2n, "(mod (expt $0 $1) 65536)")), List$cons$(Pair$new$("U16.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("U16.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("U16.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("U16.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("U16.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("U16.inc", Pair$new$(2n, "(+ $0 1)")), List$cons$(Pair$new$("U16.to_nat", Pair$new$(1n, "$0")), List$cons$(Pair$new$("String.eql", Pair$new$(2n, "(string=? (kstring->string $0) (kstring->string $1))")), List$cons$(Pair$new$("String.concat", Pair$new$(2n, "(kstring-append $0 $1)")), List$nil)))))))))))))))))))))))))))))))));
    const Kind$Comp$Target$Scheme$basics = "; string-view record type (fast way to get a tail)\u{a}(define-record string-view\u{a}  ((immutable data)  ; underlying string\u{a}   (immutable start) ; start position (inclusive)\u{a}   (immutable end))) ; end position (exclusive)\u{a}\u{a}(define string-view-ref\u{a}  (lambda (x y)\u{a}    (string-ref (string-view-data x) (+ (string-view-start x) y))))\u{a}\u{a}(define kstring-tail\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (make-string-view\u{a}        (string-view-data x)\u{a}        (+ (string-view-start x) 1)\u{a}        (string-view-end x))\u{a}      (make-string-view\u{a}        x\u{a}        1\u{a}        (string-length x)))))\u{a}\u{a}(define kstring-head\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (string-ref (string-view-data x) (string-view-start x))\u{a}      (string-ref x 0))))\u{a}\u{a}(define kstring-length\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (- (string-view-end x) (string-view-start x))\u{a}      (string-length x))))\u{a}\u{a}(define kstring?\u{a}  (lambda (x)\u{a}    (or (string-view? x) (string? x))))\u{a}\u{a}(define kstring->string\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (substring (string-view-data x) (string-view-start x) (string-view-end x))\u{a}      x)))\u{a}\u{a}; TODO depending on x, we could safely append data at the end\u{a}(define kstring-append\u{a}  (lambda (x y)\u{a}    (string-append (kstring->string x) (kstring->string y))))\u{a}\u{a}(define kstring-getter\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      string-view-ref\u{a}      string-ref)))\u{a}\u{a}; Joins a list of strings with an intercalated separator\u{a}(define (kstring_join sep strs fst)\u{a}  (if (null? strs) \u{a}    \"\"\u{a}    (kstring-append\u{a}      (if fst \"\" sep)\u{a}      (car strs)\u{a}      (kstring_join sep (cdr strs) #f))))\u{a}\u{a}; Short alias to vector-ref\u{a}(define get vector-ref)\u{a}\u{a}; Converts a Kind word to a native integer\u{a}(define (word-to-u16 w)\u{a}  (define (word-to-u16-go i w x)\u{a}    (cond ((= 16 i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u16-go (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u16-go (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u16-go (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u16-go 0 w 0))\u{a}\u{a}(define (word-to-u n w)\u{a}  (define (word-to-u-go n i w x)\u{a}    (cond ((= n i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u-go n (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u-go n (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u-go n (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u-go n 0 w 0))\u{a}\u{a}; Converts a native integer to a Kind word\u{a}(define (u16-to-word x)\u{a}  (define (u16-to-word-go i x w)\u{a}    (if (= 16 i) w (u16-to-word-go (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- 15 i)) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u16-to-word-go 0 x (vector \'Word.e)))\u{a}\u{a}(define (u-to-word n x)\u{a}  (define (u-to-word-go n i x w)\u{a}    (if (= n i) w (u-to-word-go n (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- n (+ i 1))) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u-to-word-go n 0 x (vector \'Word.e)))\u{a}\u{a}(define suffix?\u{a}  (lambda (str suff)\u{a}    (let ((suff_length (string-length suff))\u{a}          (str_length (string-length str)))\u{a}      (if (<= suff_length str_length)\u{a}        (string=?\u{a}          (substring str (- str_length suff_length) str_length)\u{a}          suff)\u{a}        #f))))\u{a}\u{a}(define prefix?\u{a}  (lambda (str pref)\u{a}    (let ((pref_length (string-length pref))\u{a}          (str_length (string-length str)))\u{a}      (if (<= pref_length str_length)\u{a}        (string=?\u{a}          (substring str 0 pref_length)\u{a}          pref)\u{a}        #f))))\u{a}\u{a}; Returns the last index that chr occurs in str, -1 otherwise\u{a}(define (last_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (kstring-length str))\u{a}      -1\u{a}      (let ((rest (last_index_of chr str (+ idx 1))))\u{a}        (if (char=? (string-ref str idx) chr)\u{a}          (max idx rest)\u{a}          rest)))))\u{a}\u{a}; Returns the first index that chr occurs in str, -1 otherwise\u{a}(define (first_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (string-length str))\u{a}      -1\u{a}      (if (char=? (string-ref str idx) chr)\u{a}        idx\u{a}        (first_index_of chr str (+ idx 1))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_first chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (first_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_last chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (last_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Converts a date to a string, in milliseconds\u{a}(define (time_to_string time)\u{a}  (number->string\u{a}    (+ (* (time-second time) 1000)\u{a}      (div (time-nanosecond time) 1000000))))\u{a}\u{a}; Prints a text with a newline\u{a}(define (print txt)\u{a}  (display (kstring->string txt))\u{a}  (display \"\u{a}\"))\u{a}\u{a}; Gets a line from stdin\u{a}(define (get_line)\u{a}  (let ((port (current-input-port)))\u{a}    (get-line port)))\u{a}\u{a}; Deletes a file\u{a}(define (del_file file)\u{a}  (delete-file (kstring->string file)))\u{a}\u{a}; Gets the contents of a file as a string\u{a}; If it doesn\'t exist, returns empty\u{a}(define (get_file ifile)\u{a}  (let ((file (kstring->string ifile)))\u{a}    (if (file-exists? file)\u{a}      (let ((port (open-input-file file)))\u{a}        (let ((text (get-string-all port)))\u{a}          (begin\u{a}            (close-input-port port)\u{a}            text)))\u{a}      \"\")))\u{a}\u{a}; Sets the contents of a file\u{a}(define (set_file file text)\u{a}  (system (string-append \"mkdir -p \" (car (split_at_last #\\/ file))))\u{a}  (if (file-exists? file) (delete-file file))\u{a}  (let ((port (open-output-file file)))\u{a}    (begin\u{a}      (display text port)\u{a}      (close-output-port port))))\u{a}\u{a}; Returns a list of files in a directory\u{a}(define (get_dir path)\u{a}  (directory-list path)) \u{a}\u{a}; Returns the time a file was modified. TODO: test on Windows/Linux\u{a}(define (get_file_mtime file)\u{a}  (time_to_string (file-modification-time (kstring->string file))))\u{a}\u{a}; Returns the current time\u{a}(define (get_time)\u{a}  (time_to_string (current-time)))\u{a}\u{a}; Performs a single Kind IO action\u{a}(define (io_action iname)\u{a}  (let ((name (kstring->string iname)))\u{a}  (case name\u{a}    (\"print\" (lambda (x) (print x)))\u{a}    (\"put_string\" (lambda (x) (display x)))\u{a}    (\"get_line\" (lambda (x) (get_line)))\u{a}    (\"del_file\" (lambda (x) (del_file x)))\u{a}    (\"get_file\" (lambda (x) (get_file x)))\u{a}    (\"set_file\" (lambda (x) (let ((file_text (split_at_first #\\= (kstring->string x)))) (set_file (car file_text) (cdr file_text)))))\u{a}    (\"get_dir\" (lambda (x) (get_dir x)))\u{a}    (\"get_file_mtime\" (lambda (x) (get_file_mtime x)))\u{a}    (\"get_time\" (lambda (x) (get_time)))\u{a}    (\"request\" (lambda (x) \"\"))\u{a}    (else (display (string-append \"IO action not found: \" name))))))\u{a}\u{a}; Runs a Kind IO program\u{a}(define (run_io io)\u{a}  (case (vector-ref io 0)\u{a}    (\'IO.end (vector-ref io 1))\u{a}    (\'IO.ask (let (\u{a}      (io_query (vector-ref io 1))\u{a}      (io_param (vector-ref io 2))\u{a}      (io_then (vector-ref io 3)))\u{a}      (run_io (io_then ((io_action io_query) io_param)))))))\u{a}\u{a}(define (run_kind term)\u{a}  (if\u{a}    (and\u{a}      (vector? term)\u{a}      (or\u{a}        (eq? (vector-ref term 0) \'IO.ask)\u{a}        (eq? (vector-ref term 0) \'IO.end)))\u{a}    (run_io term)\u{a}    (print term)))\u{a}\u{a}(define (print-lines args)\u{a}  (unless (null? args)\u{a}    (display (car args))\u{a}    (newline)\u{a}    (print-lines (cdr args))))\u{a}\u{a}(define run-all\u{a}    (lambda (p)\u{a}      (let ((code (get-datum p)))\u{a}        (unless (eq? code #!eof)\u{a}          (compile code)\u{a}          (run-all p)))))\u{a}";
    const Kind$Comp$Target$Scheme$Language = Kind$Comp$Language$new$(Kind$Comp$Target$Scheme$grammar, Kind$Comp$Target$Scheme$natives, Kind$Comp$Target$Scheme$optimizeds, Kind$Comp$Target$Scheme$basics);

    function Kind$api$io$term_to_scheme$(_name$1) {
        var $12868 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $12869 = _m$bind$2;
            return $12869;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var _defs$3 = Maybe$default$(_defs$2, Kind$Map$new);
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$(Kind$Comp$Target$Scheme$Language, _name$1, _compiled$4);
            var $12870 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12871 = _m$pure$7;
                return $12871;
            }))(_schemed$5);
            return $12870;
        }));
        return $12868;
    };
    const Kind$api$io$term_to_scheme = x0 => Kind$api$io$term_to_scheme$(x0);

    function Kind$Synth$many$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $12873 = self.head;
                var $12874 = self.tail;
                var $12875 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $12876 = _m$bind$5;
                    return $12876;
                }))(Kind$Synth$one$($12873, _defs$2))((_new_defs$5 => {
                    var self = _new_defs$5;
                    switch (self._) {
                        case 'Maybe.some':
                            var $12878 = self.value;
                            var $12879 = Kind$Synth$many$($12874, $12878);
                            var $12877 = $12879;
                            break;
                        case 'Maybe.none':
                            var $12880 = Kind$Synth$many$($12874, _defs$2);
                            var $12877 = $12880;
                            break;
                    };
                    return $12877;
                }));
                var $12872 = $12875;
                break;
            case 'List.nil':
                var $12881 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $12882 = _m$pure$4;
                    return $12882;
                }))(_defs$2);
                var $12872 = $12881;
                break;
        };
        return $12872;
    };
    const Kind$Synth$many = x0 => x1 => Kind$Synth$many$(x0, x1);

    function Kind$Comp$dependency_sort$module$(_exports$1, _defs$2) {
        var _ret$3 = Pair$new$(Kind$Map$new, List$nil);
        var _ret$4 = (() => {
            var $12885 = _ret$3;
            var $12886 = _exports$1;
            let _ret$5 = $12885;
            let _export$4;
            while ($12886._ === 'List.cons') {
                _export$4 = $12886.head;
                var _term$6 = Kind$Comp$ref$(_export$4);
                var self = _ret$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12887 = self.fst;
                        var $12888 = self.snd;
                        var $12889 = Kind$Comp$dependency_sort$go$(_term$6, _defs$2, $12887, $12888);
                        var $12885 = $12889;
                        break;
                };
                _ret$5 = $12885;
                $12886 = $12886.tail;
            }
            return _ret$5;
        })();
        var self = _ret$4;
        switch (self._) {
            case 'Pair.new':
                var $12890 = self.snd;
                var $12891 = List$reverse$($12890);
                var $12883 = $12891;
                break;
        };
        return $12883;
    };
    const Kind$Comp$dependency_sort$module = x0 => x1 => Kind$Comp$dependency_sort$module$(x0, x1);

    function Kind$Comp$transpile$module$(_lang$1, _name$2, _exports$3, _defs$4) {
        var _defs_list$5 = Kind$Comp$dependency_sort$module$(_exports$3, _defs$4);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12893 = self.gram;
                var $12894 = $12893;
                var self = $12894;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12895 = self.module;
                var $12896 = $12895;
                var _code$6 = $12896;
                break;
        };
        var _code$6 = _code$6(_name$2)(_exports$3)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12897 = self.base;
                    var $12898 = $12897;
                    return $12898;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$5, _defs$4))));
        var $12892 = _code$6;
        return $12892;
    };
    const Kind$Comp$transpile$module = x0 => x1 => x2 => x3 => Kind$Comp$transpile$module$(x0, x1, x2, x3);

    function Kind$api$io$terms_to_scheme_lib$(_name$1, _exports$2) {
        var $12899 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12900 = _m$bind$3;
            return $12900;
        }))(Kind$Synth$many$(_exports$2, Kind$Map$new))((_defs$3 => {
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$module$(Kind$Comp$Target$Scheme$Language, _name$1, _exports$2, _compiled$4);
            var $12901 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12902 = _m$pure$7;
                return $12902;
            }))(_schemed$5);
            return $12901;
        }));
        return $12899;
    };
    const Kind$api$io$terms_to_scheme_lib = x0 => x1 => Kind$api$io$terms_to_scheme_lib$(x0, x1);

    function BitsMap$keys$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $12904 = self.val;
                var $12905 = self.lft;
                var $12906 = self.rgt;
                var self = $12904;
                switch (self._) {
                    case 'Maybe.none':
                        var $12908 = _list$4;
                        var _list0$8 = $12908;
                        break;
                    case 'Maybe.some':
                        var $12909 = List$cons$(Bits$reverse$(_key$3), _list$4);
                        var _list0$8 = $12909;
                        break;
                };
                var _list1$9 = BitsMap$keys$go$($12905, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$keys$go$($12906, (_key$3 + '1'), _list1$9);
                var $12907 = _list2$10;
                var $12903 = $12907;
                break;
            case 'BitsMap.new':
                var $12910 = _list$4;
                var $12903 = $12910;
                break;
        };
        return $12903;
    };
    const BitsMap$keys$go = x0 => x1 => x2 => BitsMap$keys$go$(x0, x1, x2);

    function BitsMap$keys$(_xs$2) {
        var $12911 = List$reverse$(BitsMap$keys$go$(_xs$2, Bits$e, List$nil));
        return $12911;
    };
    const BitsMap$keys = x0 => BitsMap$keys$(x0);

    function Kind$Synth$file$(_file$1, _defs$2) {
        var $12912 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12913 = _m$bind$3;
            return $12913;
        }))(IO$get_file$(_file$1))((_code$3 => {
            var _read$4 = Kind$Defs$read$(_file$1, _code$3, _defs$2);
            var self = _read$4;
            switch (self._) {
                case 'Either.left':
                    var $12915 = self.value;
                    var $12916 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $12917 = _m$pure$7;
                        return $12917;
                    }))(Either$left$($12915));
                    var $12914 = $12916;
                    break;
                case 'Either.right':
                    var $12918 = self.value;
                    var _file_defs$6 = $12918;
                    var _file_keys$7 = BitsMap$keys$(_file_defs$6);
                    var _file_nams$8 = List$mapped$(_file_keys$7, Kind$Name$from_bits);
                    var $12919 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                        var $12920 = _m$bind$9;
                        return $12920;
                    }))(Kind$Synth$many$(_file_nams$8, _file_defs$6))((_defs$9 => {
                        var $12921 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                            var $12922 = _m$pure$11;
                            return $12922;
                        }))(Either$right$(Pair$new$(_file_nams$8, _defs$9)));
                        return $12921;
                    }));
                    var $12914 = $12919;
                    break;
            };
            return $12914;
        }));
        return $12912;
    };
    const Kind$Synth$file = x0 => x1 => Kind$Synth$file$(x0, x1);

    function IO$put_string$(_text$1) {
        var $12923 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $12924 = IO$end$(Unit$new);
            return $12924;
        }));
        return $12923;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $12925 = IO$put_string$((_text$1 + "\u{a}"));
        return $12925;
    };
    const IO$print = x0 => IO$print$(x0);

    function Kind$Term$show$as_nat$go$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12927 = self.name;
                var self = ($12927 === "Nat.zero");
                if (self) {
                    var $12929 = Maybe$some$(0n);
                    var $12928 = $12929;
                } else {
                    var $12930 = Maybe$none;
                    var $12928 = $12930;
                };
                var $12926 = $12928;
                break;
            case 'Kind.Term.app':
                var $12931 = self.func;
                var $12932 = self.argm;
                var self = $12931;
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $12934 = self.name;
                        var self = ($12934 === "Nat.succ");
                        if (self) {
                            var $12936 = Maybe$monad$((_m$bind$5 => _m$pure$6 => {
                                var $12937 = _m$bind$5;
                                return $12937;
                            }))(Kind$Term$show$as_nat$go$($12932))((_pred$5 => {
                                var $12938 = Maybe$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $12939 = _m$pure$7;
                                    return $12939;
                                }))(Nat$succ$(_pred$5));
                                return $12938;
                            }));
                            var $12935 = $12936;
                        } else {
                            var $12940 = Maybe$none;
                            var $12935 = $12940;
                        };
                        var $12933 = $12935;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $12941 = Maybe$none;
                        var $12933 = $12941;
                        break;
                };
                var $12926 = $12933;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12942 = Maybe$none;
                var $12926 = $12942;
                break;
        };
        return $12926;
    };
    const Kind$Term$show$as_nat$go = x0 => Kind$Term$show$as_nat$go$(x0);

    function Kind$Term$show$as_nat$(_term$1) {
        var $12943 = Maybe$mapped$(Kind$Term$show$as_nat$go$(_term$1), Nat$show);
        return $12943;
    };
    const Kind$Term$show$as_nat = x0 => Kind$Term$show$as_nat$(x0);

    function Kind$Term$show$is_ref$(_term$1, _name$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12945 = self.name;
                var $12946 = (_name$2 === $12945);
                var $12944 = $12946;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12947 = Bool$false;
                var $12944 = $12947;
                break;
        };
        return $12944;
    };
    const Kind$Term$show$is_ref = x0 => x1 => Kind$Term$show$is_ref$(x0, x1);

    function Kind$Term$show$app$done$(_term$1, _path$2, _args$3) {
        var _arity$4 = (list_length(_args$3));
        var self = (Kind$Term$show$is_ref$(_term$1, "Equal") && (_arity$4 === 3n));
        if (self) {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var _eq_lft$6 = Maybe$default$(List$at$(1n, _args$3), "?");
            var _eq_rgt$7 = Maybe$default$(List$at$(2n, _args$3), "?");
            var $12949 = String$flatten$(List$cons$(_eq_lft$6, List$cons$(" == ", List$cons$(_eq_rgt$7, List$nil))));
            var $12948 = $12949;
        } else {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var self = _func$5;
            if (self.length === 0) {
                var $12951 = Bool$false;
                var _wrap$6 = $12951;
            } else {
                var $12952 = self.charCodeAt(0);
                var $12953 = self.slice(1);
                var $12954 = ($12952 === 40);
                var _wrap$6 = $12954;
            };
            var _args$7 = String$join$(",", _args$3);
            var self = _wrap$6;
            if (self) {
                var $12955 = String$flatten$(List$cons$("(", List$cons$(_func$5, List$cons$(")", List$nil))));
                var _func$8 = $12955;
            } else {
                var $12956 = _func$5;
                var _func$8 = $12956;
            };
            var $12950 = String$flatten$(List$cons$(_func$8, List$cons$("(", List$cons$(_args$7, List$cons$(")", List$nil)))));
            var $12948 = $12950;
        };
        return $12948;
    };
    const Kind$Term$show$app$done = x0 => x1 => x2 => Kind$Term$show$app$done$(x0, x1, x2);

    function Kind$Term$show$app$(_term$1, _path$2, _args$3) {
        var Kind$Term$show$app$ = (_term$1, _path$2, _args$3) => ({
            ctr: 'TCO',
            arg: [_term$1, _path$2, _args$3]
        });
        var Kind$Term$show$app = _term$1 => _path$2 => _args$3 => Kind$Term$show$app$(_term$1, _path$2, _args$3);
        var arg = [_term$1, _path$2, _args$3];
        while (true) {
            let [_term$1, _path$2, _args$3] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $12957 = self.func;
                        var $12958 = self.argm;
                        var $12959 = Kind$Term$show$app$($12957, Kind$MPath$o$(_path$2), List$cons$(Kind$Term$show$go$($12958, Kind$MPath$i$(_path$2)), _args$3));
                        return $12959;
                    case 'Kind.Term.ori':
                        var $12960 = self.expr;
                        var $12961 = Kind$Term$show$app$($12960, _path$2, _args$3);
                        return $12961;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12962 = Kind$Term$show$app$done$(_term$1, _path$2, _args$3);
                        return $12962;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$show$app = x0 => x1 => x2 => Kind$Term$show$app$(x0, x1, x2);

    function BitsMap$to_list$(_xs$2) {
        var $12963 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        return $12963;
    };
    const BitsMap$to_list = x0 => BitsMap$to_list$(x0);

    function Kind$Term$show$go$(_term$1, _path$2) {
        var self = Kind$Term$show$as_nat$(_term$1);
        switch (self._) {
            case 'Maybe.some':
                var $12965 = self.value;
                var $12966 = $12965;
                var $12964 = $12966;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12968 = self.name;
                        var $12969 = Kind$Name$show$($12968);
                        var $12967 = $12969;
                        break;
                    case 'Kind.Term.ref':
                        var $12970 = self.name;
                        var _name$4 = Kind$Name$show$($12970);
                        var self = _path$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $12972 = self.value;
                                var _path_val$6 = ((Bits$e + '1') + Kind$Path$to_bits$($12972));
                                var _path_str$7 = Nat$show$(Bits$to_nat$(_path_val$6));
                                var $12973 = String$flatten$(List$cons$(_name$4, List$cons$(Kind$Code$color$("2", ("-" + _path_str$7)), List$nil)));
                                var $12971 = $12973;
                                break;
                            case 'Maybe.none':
                                var $12974 = _name$4;
                                var $12971 = $12974;
                                break;
                        };
                        var $12967 = $12971;
                        break;
                    case 'Kind.Term.all':
                        var $12975 = self.eras;
                        var $12976 = self.self;
                        var $12977 = self.name;
                        var $12978 = self.xtyp;
                        var $12979 = self.body;
                        var _eras$8 = $12975;
                        var _self$9 = Kind$Name$show$($12976);
                        var _name$10 = Kind$Name$show$($12977);
                        var _type$11 = Kind$Term$show$go$($12978, Kind$MPath$o$(_path$2));
                        var self = _eras$8;
                        if (self) {
                            var $12981 = "<";
                            var _open$12 = $12981;
                        } else {
                            var $12982 = "(";
                            var _open$12 = $12982;
                        };
                        var self = _eras$8;
                        if (self) {
                            var $12983 = ">";
                            var _clos$13 = $12983;
                        } else {
                            var $12984 = ")";
                            var _clos$13 = $12984;
                        };
                        var _body$14 = Kind$Term$show$go$($12979(Kind$Term$var$($12976, 0n))(Kind$Term$var$($12977, 0n)), Kind$MPath$i$(_path$2));
                        var $12980 = String$flatten$(List$cons$(_self$9, List$cons$(_open$12, List$cons$(_name$10, List$cons$(":", List$cons$(_type$11, List$cons$(_clos$13, List$cons$(" ", List$cons$(_body$14, List$nil)))))))));
                        var $12967 = $12980;
                        break;
                    case 'Kind.Term.lam':
                        var $12985 = self.name;
                        var $12986 = self.body;
                        var _name$5 = Kind$Name$show$($12985);
                        var _body$6 = Kind$Term$show$go$($12986(Kind$Term$var$($12985, 0n)), Kind$MPath$o$(_path$2));
                        var $12987 = String$flatten$(List$cons$("(", List$cons$(_name$5, List$cons$(") ", List$cons$(_body$6, List$nil)))));
                        var $12967 = $12987;
                        break;
                    case 'Kind.Term.let':
                        var $12988 = self.name;
                        var $12989 = self.expr;
                        var $12990 = self.body;
                        var _name$6 = Kind$Name$show$($12988);
                        var _expr$7 = Kind$Term$show$go$($12989, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12990(Kind$Term$var$($12988, 0n)), Kind$MPath$i$(_path$2));
                        var $12991 = String$flatten$(List$cons$("let ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12967 = $12991;
                        break;
                    case 'Kind.Term.def':
                        var $12992 = self.name;
                        var $12993 = self.expr;
                        var $12994 = self.body;
                        var _name$6 = Kind$Name$show$($12992);
                        var _expr$7 = Kind$Term$show$go$($12993, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12994(Kind$Term$var$($12992, 0n)), Kind$MPath$i$(_path$2));
                        var $12995 = String$flatten$(List$cons$("def ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12967 = $12995;
                        break;
                    case 'Kind.Term.ann':
                        var $12996 = self.term;
                        var $12997 = self.type;
                        var _term$6 = Kind$Term$show$go$($12996, Kind$MPath$o$(_path$2));
                        var _type$7 = Kind$Term$show$go$($12997, Kind$MPath$i$(_path$2));
                        var $12998 = String$flatten$(List$cons$(_term$6, List$cons$("::", List$cons$(_type$7, List$nil))));
                        var $12967 = $12998;
                        break;
                    case 'Kind.Term.gol':
                        var $12999 = self.name;
                        var _name$6 = Kind$Name$show$($12999);
                        var $13000 = String$flatten$(List$cons$("?", List$cons$(_name$6, List$nil)));
                        var $12967 = $13000;
                        break;
                    case 'Kind.Term.nat':
                        var $13001 = self.natx;
                        var $13002 = String$flatten$(List$cons$(Nat$show$($13001), List$nil));
                        var $12967 = $13002;
                        break;
                    case 'Kind.Term.chr':
                        var $13003 = self.chrx;
                        var $13004 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($13003), List$cons$("\'", List$nil))));
                        var $12967 = $13004;
                        break;
                    case 'Kind.Term.str':
                        var $13005 = self.strx;
                        var $13006 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($13005), List$cons$("\"", List$nil))));
                        var $12967 = $13006;
                        break;
                    case 'Kind.Term.num':
                        var $13007 = self.sign;
                        var $13008 = self.numb;
                        var $13009 = self.frac;
                        var $13010 = String$flatten$(List$cons$((() => {
                            var self = $13007;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13011 = self.value;
                                    var self = $13011;
                                    if (self) {
                                        var $13013 = "+";
                                        var $13012 = $13013;
                                    } else {
                                        var $13014 = "-";
                                        var $13012 = $13014;
                                    };
                                    return $13012;
                                case 'Maybe.none':
                                    var $13015 = "";
                                    return $13015;
                            };
                        })(), List$cons$(Nat$show$($13008), List$cons$((() => {
                            var self = $13009;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $13016 = self.value;
                                    var $13017 = ("." + Nat$show$($13016));
                                    return $13017;
                                case 'Maybe.none':
                                    var $13018 = "";
                                    return $13018;
                            };
                        })(), List$nil))));
                        var $12967 = $13010;
                        break;
                    case 'Kind.Term.cse':
                        var $13019 = self.expr;
                        var $13020 = self.name;
                        var $13021 = self.with;
                        var $13022 = self.cses;
                        var $13023 = self.moti;
                        var _expr$9 = Kind$Term$show$go$($13019, Kind$MPath$o$(_path$2));
                        var _name$10 = Kind$Name$show$($13020);
                        var _wyth$11 = String$join$("; ", List$mapped$($13021, (_with_var$11 => {
                            var self = _with_var$11;
                            switch (self._) {
                                case 'Kind.Ann.new':
                                    var $13026 = self.name;
                                    var $13027 = self.type;
                                    var self = $13027;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $13029 = self.value;
                                            var $13030 = ($13026 + (": " + Kind$Term$show$go$($13029, Maybe$none)));
                                            var $13028 = $13030;
                                            break;
                                        case 'Maybe.none':
                                            var $13031 = $13026;
                                            var $13028 = $13031;
                                            break;
                                    };
                                    var $13025 = $13028;
                                    break;
                            };
                            return $13025;
                        })));
                        var _cses$12 = BitsMap$to_list$($13022);
                        var _cses$13 = String$join$("", List$mapped$(_cses$12, (_x$13 => {
                            var _name$14 = Kind$Name$from_bits$(Pair$fst$(_x$13));
                            var _term$15 = Kind$Term$show$go$(Pair$snd$(_x$13), Maybe$none);
                            var $13032 = String$flatten$(List$cons$(_name$14, List$cons$(": ", List$cons$(_term$15, List$cons$(", ", List$nil)))));
                            return $13032;
                        })));
                        var self = $13023;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13033 = self.value;
                                var $13034 = String$flatten$(List$cons$(": ", List$cons$(Kind$Term$show$go$($13033, Maybe$none), List$nil)));
                                var _moti$14 = $13034;
                                break;
                            case 'Maybe.none':
                                var $13035 = "";
                                var _moti$14 = $13035;
                                break;
                        };
                        var $13024 = String$flatten$(List$cons$("case ", List$cons$(_expr$9, List$cons$(" as ", List$cons$(_name$10, List$cons$(_wyth$11, List$cons$(" { ", List$cons$(_cses$13, List$cons$("}", List$cons$(_moti$14, List$nil))))))))));
                        var $12967 = $13024;
                        break;
                    case 'Kind.Term.new':
                        var $13036 = self.args;
                        var _args$4 = List$fold$($13036, (_path$4 => {
                            var $13038 = List$nil;
                            return $13038;
                        }), (_arg$4 => _res$5 => _path$6 => {
                            var $13039 = List$cons$(Kind$Term$show$go$(_arg$4, _path$6), _res$5(Kind$MPath$o$(_path$6)));
                            return $13039;
                        }))(_path$2);
                        var $13037 = String$flatten$(List$cons$("{", List$cons$(String$join$(",", _args$4), List$cons$("}", List$nil))));
                        var $12967 = $13037;
                        break;
                    case 'Kind.Term.get':
                        var $13040 = self.expr;
                        var $13041 = self.fkey;
                        var _expr$5 = Kind$Term$show$go$($13040, Kind$MPath$o$(_path$2));
                        var $13042 = String$flatten$(List$cons$(_expr$5, List$cons$("@", List$cons$($13041, List$nil))));
                        var $12967 = $13042;
                        break;
                    case 'Kind.Term.set':
                        var $13043 = self.expr;
                        var $13044 = self.fkey;
                        var $13045 = self.fval;
                        var _expr$6 = Kind$Term$show$go$($13043, Kind$MPath$o$(_path$2));
                        var _fval$7 = Kind$Term$show$go$($13045, Kind$MPath$i$(_path$2));
                        var $13046 = String$flatten$(List$cons$(_expr$6, List$cons$("@", List$cons$($13044, List$cons$(" <- ", List$cons$(_fval$7, List$nil))))));
                        var $12967 = $13046;
                        break;
                    case 'Kind.Term.ope':
                        var $13047 = self.name;
                        var $13048 = self.arg0;
                        var $13049 = self.arg1;
                        var _arg0$6 = Kind$Term$show$go$($13048, Kind$MPath$o$(_path$2));
                        var _arg1$7 = Kind$Term$show$go$($13049, Kind$MPath$i$(_path$2));
                        var $13050 = String$flatten$(List$cons$("(", List$cons$(_arg0$6, List$cons$(" ", List$cons$($13047, List$cons$(" ", List$cons$(_arg1$7, List$cons$(")", List$nil))))))));
                        var $12967 = $13050;
                        break;
                    case 'Kind.Term.ori':
                        var $13051 = self.expr;
                        var $13052 = Kind$Term$show$go$($13051, _path$2);
                        var $12967 = $13052;
                        break;
                    case 'Kind.Term.typ':
                        var $13053 = "Type";
                        var $12967 = $13053;
                        break;
                    case 'Kind.Term.app':
                        var $13054 = Kind$Term$show$app$(_term$1, _path$2, List$nil);
                        var $12967 = $13054;
                        break;
                    case 'Kind.Term.hol':
                        var $13055 = "_";
                        var $12967 = $13055;
                        break;
                };
                var $12964 = $12967;
                break;
        };
        return $12964;
    };
    const Kind$Term$show$go = x0 => x1 => Kind$Term$show$go$(x0, x1);

    function Kind$Term$show$(_term$1) {
        var $13056 = Kind$Term$show$go$(_term$1, Maybe$none);
        return $13056;
    };
    const Kind$Term$show = x0 => Kind$Term$show$(x0);

    function Kind$Defs$report$types$(_defs$1, _names$2) {
        var _types$3 = "";
        var _types$4 = (() => {
            var $13059 = _types$3;
            var $13060 = _names$2;
            let _types$5 = $13059;
            let _name$4;
            while ($13060._ === 'List.cons') {
                _name$4 = $13060.head;
                var self = Kind$Map$get$(_name$4, _defs$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $13061 = self.value;
                        var self = $13061;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13063 = self.type;
                                var $13064 = (_types$5 + (_name$4 + (": " + (Kind$Term$show$($13063) + "\u{a}"))));
                                var $13062 = $13064;
                                break;
                        };
                        var $13059 = $13062;
                        break;
                    case 'Maybe.none':
                        var $13065 = _types$5;
                        var $13059 = $13065;
                        break;
                };
                _types$5 = $13059;
                $13060 = $13060.tail;
            }
            return _types$5;
        })();
        var $13057 = _types$4;
        return $13057;
    };
    const Kind$Defs$report$types = x0 => x1 => Kind$Defs$report$types$(x0, x1);

    function List$filter$(_f$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $13067 = self.head;
                var $13068 = self.tail;
                var self = _f$2($13067);
                if (self) {
                    var $13070 = List$cons$($13067, List$filter$(_f$2, $13068));
                    var $13069 = $13070;
                } else {
                    var $13071 = List$filter$(_f$2, $13068);
                    var $13069 = $13071;
                };
                var $13066 = $13069;
                break;
            case 'List.nil':
                var $13072 = List$nil;
                var $13066 = $13072;
                break;
        };
        return $13066;
    };
    const List$filter = x0 => x1 => List$filter$(x0, x1);

    function Kind$Error$is_undef$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.cant_infer':
                var $13074 = Bool$false;
                var $13073 = $13074;
                break;
            case 'Kind.Error.undefined_reference':
                var $13075 = Bool$true;
                var $13073 = $13075;
                break;
        };
        return $13073;
    };
    const Kind$Error$is_undef = x0 => Kind$Error$is_undef$(x0);

    function Kind$Error$is_mistake$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.cant_infer':
                var $13077 = Bool$true;
                var $13076 = $13077;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
                var $13078 = Bool$false;
                var $13076 = $13078;
                break;
        };
        return $13076;
    };
    const Kind$Error$is_mistake = x0 => Kind$Error$is_mistake$(x0);

    function Kind$Error$is_goal$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
            case 'Kind.Error.cant_infer':
                var $13080 = Bool$false;
                var $13079 = $13080;
                break;
            case 'Kind.Error.show_goal':
                var $13081 = Bool$true;
                var $13079 = $13081;
                break;
        };
        return $13079;
    };
    const Kind$Error$is_goal = x0 => Kind$Error$is_goal$(x0);

    function Kind$Error$relevant$(_errors$1) {
        var _undefs$2 = List$filter$(Kind$Error$is_undef, _errors$1);
        var _mistakes$3 = List$filter$(Kind$Error$is_mistake, _errors$1);
        var _goals$4 = List$filter$(Kind$Error$is_goal, _errors$1);
        var self = _undefs$2;
        switch (self._) {
            case 'List.nil':
                var self = _mistakes$3;
                switch (self._) {
                    case 'List.cons':
                        var $13084 = self.head;
                        var $13085 = List$concat$(List$cons$($13084, List$nil), _goals$4);
                        var $13083 = $13085;
                        break;
                    case 'List.nil':
                        var $13086 = _goals$4;
                        var $13083 = $13086;
                        break;
                };
                var $13082 = $13083;
                break;
            case 'List.cons':
                var $13087 = List$concat$(_undefs$2, _goals$4);
                var $13082 = $13087;
                break;
        };
        return $13082;
    };
    const Kind$Error$relevant = x0 => Kind$Error$relevant$(x0);

    function Kind$Context$show$(_context$1) {
        var self = _context$1;
        switch (self._) {
            case 'List.cons':
                var $13089 = self.head;
                var $13090 = self.tail;
                var self = $13089;
                switch (self._) {
                    case 'Pair.new':
                        var $13092 = self.fst;
                        var $13093 = self.snd;
                        var _name$6 = Kind$Name$show$($13092);
                        var _type$7 = Kind$Term$show$(Kind$Term$normalize$($13093, Kind$Map$new));
                        var _rest$8 = Kind$Context$show$($13090);
                        var $13094 = (_rest$8 + ("- " + (_name$6 + (": " + (_type$7 + "\u{a}")))));
                        var $13091 = $13094;
                        break;
                };
                var $13088 = $13091;
                break;
            case 'List.nil':
                var $13095 = "";
                var $13088 = $13095;
                break;
        };
        return $13088;
    };
    const Kind$Context$show = x0 => Kind$Context$show$(x0);

    function Kind$Term$expand_at$(_path$1, _term$2, _defs$3) {
        var $13096 = Kind$Term$patch_at$(_path$1, _term$2, (_term$4 => {
            var self = _term$4;
            switch (self._) {
                case 'Kind.Term.ref':
                    var $13098 = self.name;
                    var self = Kind$Map$get$($13098, _defs$3);
                    switch (self._) {
                        case 'Maybe.some':
                            var $13100 = self.value;
                            var self = $13100;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $13102 = self.term;
                                    var $13103 = $13102;
                                    var $13101 = $13103;
                                    break;
                            };
                            var $13099 = $13101;
                            break;
                        case 'Maybe.none':
                            var $13104 = Kind$Term$ref$($13098);
                            var $13099 = $13104;
                            break;
                    };
                    var $13097 = $13099;
                    break;
                case 'Kind.Term.var':
                case 'Kind.Term.typ':
                case 'Kind.Term.all':
                case 'Kind.Term.lam':
                case 'Kind.Term.app':
                case 'Kind.Term.let':
                case 'Kind.Term.def':
                case 'Kind.Term.ann':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                case 'Kind.Term.get':
                case 'Kind.Term.set':
                case 'Kind.Term.ope':
                case 'Kind.Term.ori':
                    var $13105 = _term$4;
                    var $13097 = $13105;
                    break;
            };
            return $13097;
        }));
        return $13096;
    };
    const Kind$Term$expand_at = x0 => x1 => x2 => Kind$Term$expand_at$(x0, x1, x2);

    function Kind$Term$expand_ct$(_term$1, _defs$2, _arity$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $13107 = self.name;
                var $13108 = self.indx;
                var $13109 = Kind$Term$var$($13107, $13108);
                var $13106 = $13109;
                break;
            case 'Kind.Term.ref':
                var $13110 = self.name;
                var self = Kind$Map$get$($13110, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $13112 = self.value;
                        var self = $13112;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13114 = self.term;
                                var $13115 = self.isct;
                                var $13116 = self.arit;
                                var self = ($13115 && (_arity$3 > $13116));
                                if (self) {
                                    var $13118 = $13114;
                                    var $13117 = $13118;
                                } else {
                                    var $13119 = Kind$Term$ref$($13110);
                                    var $13117 = $13119;
                                };
                                var $13113 = $13117;
                                break;
                        };
                        var $13111 = $13113;
                        break;
                    case 'Maybe.none':
                        var $13120 = Kind$Term$ref$($13110);
                        var $13111 = $13120;
                        break;
                };
                var $13106 = $13111;
                break;
            case 'Kind.Term.all':
                var $13121 = self.eras;
                var $13122 = self.self;
                var $13123 = self.name;
                var $13124 = self.xtyp;
                var $13125 = self.body;
                var $13126 = Kind$Term$all$($13121, $13122, $13123, Kind$Term$expand_ct$($13124, _defs$2, 0n), (_s$9 => _x$10 => {
                    var $13127 = Kind$Term$expand_ct$($13125(_s$9)(_x$10), _defs$2, 0n);
                    return $13127;
                }));
                var $13106 = $13126;
                break;
            case 'Kind.Term.lam':
                var $13128 = self.name;
                var $13129 = self.body;
                var $13130 = Kind$Term$lam$($13128, (_x$6 => {
                    var $13131 = Kind$Term$expand_ct$($13129(_x$6), _defs$2, 0n);
                    return $13131;
                }));
                var $13106 = $13130;
                break;
            case 'Kind.Term.app':
                var $13132 = self.func;
                var $13133 = self.argm;
                var $13134 = Kind$Term$app$(Kind$Term$expand_ct$($13132, _defs$2, Nat$succ$(_arity$3)), Kind$Term$expand_ct$($13133, _defs$2, 0n));
                var $13106 = $13134;
                break;
            case 'Kind.Term.let':
                var $13135 = self.name;
                var $13136 = self.expr;
                var $13137 = self.body;
                var $13138 = Kind$Term$let$($13135, Kind$Term$expand_ct$($13136, _defs$2, 0n), (_x$7 => {
                    var $13139 = Kind$Term$expand_ct$($13137(_x$7), _defs$2, 0n);
                    return $13139;
                }));
                var $13106 = $13138;
                break;
            case 'Kind.Term.def':
                var $13140 = self.name;
                var $13141 = self.expr;
                var $13142 = self.body;
                var $13143 = Kind$Term$def$($13140, Kind$Term$expand_ct$($13141, _defs$2, 0n), (_x$7 => {
                    var $13144 = Kind$Term$expand_ct$($13142(_x$7), _defs$2, 0n);
                    return $13144;
                }));
                var $13106 = $13143;
                break;
            case 'Kind.Term.ann':
                var $13145 = self.done;
                var $13146 = self.term;
                var $13147 = self.type;
                var $13148 = Kind$Term$ann$($13145, Kind$Term$expand_ct$($13146, _defs$2, 0n), Kind$Term$expand_ct$($13147, _defs$2, 0n));
                var $13106 = $13148;
                break;
            case 'Kind.Term.gol':
                var $13149 = self.name;
                var $13150 = self.dref;
                var $13151 = self.verb;
                var $13152 = Kind$Term$gol$($13149, $13150, $13151);
                var $13106 = $13152;
                break;
            case 'Kind.Term.hol':
                var $13153 = self.path;
                var $13154 = Kind$Term$hol$($13153);
                var $13106 = $13154;
                break;
            case 'Kind.Term.nat':
                var $13155 = self.natx;
                var $13156 = Kind$Term$nat$($13155);
                var $13106 = $13156;
                break;
            case 'Kind.Term.chr':
                var $13157 = self.chrx;
                var $13158 = Kind$Term$chr$($13157);
                var $13106 = $13158;
                break;
            case 'Kind.Term.str':
                var $13159 = self.strx;
                var $13160 = Kind$Term$str$($13159);
                var $13106 = $13160;
                break;
            case 'Kind.Term.ori':
                var $13161 = self.orig;
                var $13162 = self.expr;
                var $13163 = Kind$Term$ori$($13161, $13162);
                var $13106 = $13163;
                break;
            case 'Kind.Term.typ':
                var $13164 = Kind$Term$typ;
                var $13106 = $13164;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $13165 = _term$1;
                var $13106 = $13165;
                break;
        };
        return $13106;
    };
    const Kind$Term$expand_ct = x0 => x1 => x2 => Kind$Term$expand_ct$(x0, x1, x2);

    function Kind$Term$expand$(_dref$1, _term$2, _defs$3) {
        var _term$4 = Kind$Term$normalize$(_term$2, Kind$Map$new);
        var _term$5 = (() => {
            var $13168 = _term$4;
            var $13169 = _dref$1;
            let _term$6 = $13168;
            let _path$5;
            while ($13169._ === 'List.cons') {
                _path$5 = $13169.head;
                var _term$7 = Kind$Term$expand_at$(_path$5, _term$6, _defs$3);
                var _term$8 = Kind$Term$normalize$(_term$7, Kind$Map$new);
                var _term$9 = Kind$Term$expand_ct$(_term$8, _defs$3, 0n);
                var _term$10 = Kind$Term$normalize$(_term$9, Kind$Map$new);
                var $13168 = _term$10;
                _term$6 = $13168;
                $13169 = $13169.tail;
            }
            return _term$6;
        })();
        var $13166 = _term$5;
        return $13166;
    };
    const Kind$Term$expand = x0 => x1 => x2 => Kind$Term$expand$(x0, x1, x2);

    function Kind$Error$show$(_error$1, _defs$2) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13171 = self.expected;
                var $13172 = self.detected;
                var $13173 = self.context;
                var self = $13171;
                switch (self._) {
                    case 'Either.left':
                        var $13175 = self.value;
                        var $13176 = $13175;
                        var _expected$7 = $13176;
                        break;
                    case 'Either.right':
                        var $13177 = self.value;
                        var $13178 = Kind$Term$show$(Kind$Term$normalize$($13177, BitsMap$new));
                        var _expected$7 = $13178;
                        break;
                };
                var self = $13172;
                switch (self._) {
                    case 'Either.left':
                        var $13179 = self.value;
                        var $13180 = $13179;
                        var _detected$8 = $13180;
                        break;
                    case 'Either.right':
                        var $13181 = self.value;
                        var $13182 = Kind$Term$show$(Kind$Term$normalize$($13181, BitsMap$new));
                        var _detected$8 = $13182;
                        break;
                };
                var $13174 = ("Type mismatch.\u{a}" + ("- Expected: " + (_expected$7 + ("\u{a}" + ("- Detected: " + (_detected$8 + ("\u{a}" + (() => {
                    var self = $13173;
                    switch (self._) {
                        case 'List.nil':
                            var $13183 = "";
                            return $13183;
                        case 'List.cons':
                            var $13184 = ("With context:\u{a}" + Kind$Context$show$($13173));
                            return $13184;
                    };
                })())))))));
                var $13170 = $13174;
                break;
            case 'Kind.Error.show_goal':
                var $13185 = self.name;
                var $13186 = self.dref;
                var $13187 = self.verb;
                var $13188 = self.goal;
                var $13189 = self.context;
                var _goal_name$8 = ("Goal ?" + (Kind$Name$show$($13185) + ":\u{a}"));
                var self = $13188;
                switch (self._) {
                    case 'Maybe.some':
                        var $13191 = self.value;
                        var _goal$10 = Kind$Term$expand$($13186, $13191, _defs$2);
                        var $13192 = ("With type: " + ((() => {
                            var self = $13187;
                            if (self) {
                                var $13193 = Kind$Term$show$go$(_goal$10, Maybe$some$((_x$11 => {
                                    var $13194 = _x$11;
                                    return $13194;
                                })));
                                return $13193;
                            } else {
                                var $13195 = Kind$Term$show$(_goal$10);
                                return $13195;
                            };
                        })() + "\u{a}"));
                        var _with_type$9 = $13192;
                        break;
                    case 'Maybe.none':
                        var $13196 = "";
                        var _with_type$9 = $13196;
                        break;
                };
                var self = $13189;
                switch (self._) {
                    case 'List.nil':
                        var $13197 = "";
                        var _with_ctxt$10 = $13197;
                        break;
                    case 'List.cons':
                        var $13198 = ("With context:\u{a}" + Kind$Context$show$($13189));
                        var _with_ctxt$10 = $13198;
                        break;
                };
                var $13190 = String$flatten$(List$cons$(_goal_name$8, List$cons$(_with_type$9, List$cons$(_with_ctxt$10, List$nil))));
                var $13170 = $13190;
                break;
            case 'Kind.Error.waiting':
                var $13199 = self.name;
                var $13200 = ("Waiting for \'" + ($13199 + "\'."));
                var $13170 = $13200;
                break;
            case 'Kind.Error.indirect':
                var $13201 = self.name;
                var $13202 = ("Error on dependency \'" + ($13201 + "\'."));
                var $13170 = $13202;
                break;
            case 'Kind.Error.patch':
                var $13203 = self.term;
                var $13204 = ("Patching: " + Kind$Term$show$($13203));
                var $13170 = $13204;
                break;
            case 'Kind.Error.undefined_reference':
                var $13205 = self.name;
                var $13206 = ("Undefined reference: " + (Kind$Name$show$($13205) + "\u{a}"));
                var $13170 = $13206;
                break;
            case 'Kind.Error.cant_infer':
                var $13207 = self.term;
                var $13208 = self.context;
                var _term$6 = Kind$Term$show$($13207);
                var _context$7 = Kind$Context$show$($13208);
                var $13209 = ("Can\'t infer type of: " + (_term$6 + ("\u{a}" + ("With context:\u{a}" + _context$7))));
                var $13170 = $13209;
                break;
        };
        return $13170;
    };
    const Kind$Error$show = x0 => x1 => Kind$Error$show$(x0, x1);

    function Kind$Error$origin$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13211 = self.origin;
                var $13212 = $13211;
                var $13210 = $13212;
                break;
            case 'Kind.Error.undefined_reference':
                var $13213 = self.origin;
                var $13214 = $13213;
                var $13210 = $13214;
                break;
            case 'Kind.Error.cant_infer':
                var $13215 = self.origin;
                var $13216 = $13215;
                var $13210 = $13216;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
                var $13217 = Maybe$none;
                var $13210 = $13217;
                break;
        };
        return $13210;
    };
    const Kind$Error$origin = x0 => Kind$Error$origin$(x0);

    function Kind$Defs$report$errors$(_defs$1) {
        var _errors$2 = "";
        var _errors$3 = (() => {
            var $13220 = _errors$2;
            var $13221 = BitsMap$keys$(_defs$1);
            let _errors$4 = $13220;
            let _key$3;
            while ($13221._ === 'List.cons') {
                _key$3 = $13221.head;
                var _name$5 = Kind$Name$from_bits$(_key$3);
                var _defn$6 = Kind$Map$get$(_name$5, _defs$1);
                var self = _defn$6;
                switch (self._) {
                    case 'Maybe.some':
                        var $13222 = self.value;
                        var self = $13222;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13224 = self.file;
                                var $13225 = self.code;
                                var $13226 = self.name;
                                var $13227 = self.stat;
                                var self = $13227;
                                switch (self._) {
                                    case 'Kind.Status.fail':
                                        var $13229 = self.errors;
                                        var self = $13229;
                                        switch (self._) {
                                            case 'List.nil':
                                                var $13231 = _errors$4;
                                                var $13230 = $13231;
                                                break;
                                            case 'List.cons':
                                                var _name_str$20 = $13226;
                                                var _rel_errs$21 = Kind$Error$relevant$($13229);
                                                var _errors$22 = (() => {
                                                    var $13234 = _errors$4;
                                                    var $13235 = _rel_errs$21;
                                                    let _errors$23 = $13234;
                                                    let _err$22;
                                                    while ($13235._ === 'List.cons') {
                                                        _err$22 = $13235.head;
                                                        var _err_msg$24 = Kind$Error$show$(_err$22, _defs$1);
                                                        var _ori_val$25 = Kind$Error$origin$(_err$22);
                                                        var self = _ori_val$25;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $13236 = self.value;
                                                                var self = $13236;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $13238 = self.fst;
                                                                        var $13239 = self.snd;
                                                                        var _inside$29 = ("Inside \'" + ($13224 + "\':\u{a}"));
                                                                        var _source$30 = Kind$Code$highlight$($13225, $13238, $13238, $13239);
                                                                        var $13240 = (_errors$23 + (_err_msg$24 + (_inside$29 + (_source$30 + ("\u{a}" + "\u{a}")))));
                                                                        var $13237 = $13240;
                                                                        break;
                                                                };
                                                                var $13234 = $13237;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $13241 = (_errors$23 + (_err_msg$24 + "\u{a}"));
                                                                var $13234 = $13241;
                                                                break;
                                                        };
                                                        _errors$23 = $13234;
                                                        $13235 = $13235.tail;
                                                    }
                                                    return _errors$23;
                                                })();
                                                var $13232 = _errors$22;
                                                var $13230 = $13232;
                                                break;
                                        };
                                        var $13228 = $13230;
                                        break;
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $13242 = _errors$4;
                                        var $13228 = $13242;
                                        break;
                                };
                                var $13223 = $13228;
                                break;
                        };
                        var $13220 = $13223;
                        break;
                    case 'Maybe.none':
                        var $13243 = _errors$4;
                        var $13220 = $13243;
                        break;
                };
                _errors$4 = $13220;
                $13221 = $13221.tail;
            }
            return _errors$4;
        })();
        var $13218 = _errors$3;
        return $13218;
    };
    const Kind$Defs$report$errors = x0 => Kind$Defs$report$errors$(x0);

    function Kind$Defs$report$(_defs$1, _names$2) {
        var _types$3 = Kind$Defs$report$types$(_defs$1, _names$2);
        var _errors$4 = Kind$Defs$report$errors$(_defs$1);
        var self = _errors$4;
        if (self.length === 0) {
            var $13245 = "All terms check.";
            var _errors$5 = $13245;
        } else {
            var $13246 = self.charCodeAt(0);
            var $13247 = self.slice(1);
            var $13248 = _errors$4;
            var _errors$5 = $13248;
        };
        var $13244 = (_types$3 + ("\u{a}" + _errors$5));
        return $13244;
    };
    const Kind$Defs$report = x0 => x1 => Kind$Defs$report$(x0, x1);

    function IO$set_file$(_name$1, _content$2) {
        var $13249 = IO$ask$("set_file", (_name$1 + ("=" + _content$2)), (_ok$3 => {
            var $13250 = IO$end$(Unit$new);
            return $13250;
        }));
        return $13249;
    };
    const IO$set_file = x0 => x1 => IO$set_file$(x0, x1);

    function Kind$Synth$load$cached$set_file$(_name$1, _value$2) {
        var $13251 = IO$set_file$(Kind$Synth$load$cached$name$(_name$1), _value$2);
        return $13251;
    };
    const Kind$Synth$load$cached$set_file = x0 => x1 => Kind$Synth$load$cached$set_file$(x0, x1);

    function Bool$show$(_b$1) {
        var self = _b$1;
        if (self) {
            var $13253 = "Bool.true";
            var $13252 = $13253;
        } else {
            var $13254 = "Bool.false";
            var $13252 = $13254;
        };
        return $13252;
    };
    const Bool$show = x0 => Bool$show$(x0);

    function Kind$Defs$cache$go$(_kvs$1) {
        var self = _kvs$1;
        switch (self._) {
            case 'List.cons':
                var $13256 = self.head;
                var $13257 = self.tail;
                var self = $13256;
                switch (self._) {
                    case 'Pair.new':
                        var $13259 = self.fst;
                        var $13260 = self.snd;
                        var self = $13260;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13262 = self.file;
                                var $13263 = self.term;
                                var $13264 = self.type;
                                var $13265 = self.isct;
                                var $13266 = self.arit;
                                var $13267 = self.stat;
                                var self = $13267;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.fail':
                                        var $13269 = Kind$Defs$cache$go$($13257);
                                        var $13268 = $13269;
                                        break;
                                    case 'Kind.Status.done':
                                        var $13270 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                            var $13271 = _m$bind$16;
                                            return $13271;
                                        }))(IO$get_file_mtime$($13262))((_time$16 => {
                                            var $13272 = IO$monad$((_m$bind$17 => _m$pure$18 => {
                                                var $13273 = _m$bind$17;
                                                return $13273;
                                            }))(Kind$Synth$load$cached$set_file$(($13259 + ".term"), Kind$Core$show$($13263)))((_$17 => {
                                                var $13274 = IO$monad$((_m$bind$18 => _m$pure$19 => {
                                                    var $13275 = _m$bind$18;
                                                    return $13275;
                                                }))(Kind$Synth$load$cached$set_file$(($13259 + ".type"), Kind$Core$show$($13264)))((_$18 => {
                                                    var $13276 = IO$monad$((_m$bind$19 => _m$pure$20 => {
                                                        var $13277 = _m$bind$19;
                                                        return $13277;
                                                    }))(Kind$Synth$load$cached$set_file$(($13259 + ".isct"), Bool$show$($13265)))((_$19 => {
                                                        var $13278 = IO$monad$((_m$bind$20 => _m$pure$21 => {
                                                            var $13279 = _m$bind$20;
                                                            return $13279;
                                                        }))(Kind$Synth$load$cached$set_file$(($13259 + ".arit"), Nat$show$($13266)))((_$20 => {
                                                            var $13280 = IO$monad$((_m$bind$21 => _m$pure$22 => {
                                                                var $13281 = _m$bind$21;
                                                                return $13281;
                                                            }))(Kind$Synth$load$cached$set_file$(($13259 + ".file"), $13262))((_$21 => {
                                                                var $13282 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                                                    var $13283 = _m$bind$22;
                                                                    return $13283;
                                                                }))(Kind$Synth$load$cached$set_file$(($13259 + ".time"), _time$16))((_$22 => {
                                                                    var $13284 = Kind$Defs$cache$go$($13257);
                                                                    return $13284;
                                                                }));
                                                                return $13282;
                                                            }));
                                                            return $13280;
                                                        }));
                                                        return $13278;
                                                    }));
                                                    return $13276;
                                                }));
                                                return $13274;
                                            }));
                                            return $13272;
                                        }));
                                        var $13268 = $13270;
                                        break;
                                };
                                var $13261 = $13268;
                                break;
                        };
                        var $13258 = $13261;
                        break;
                };
                var $13255 = $13258;
                break;
            case 'List.nil':
                var $13285 = IO$monad$((_m$bind$2 => _m$pure$3 => {
                    var $13286 = _m$pure$3;
                    return $13286;
                }))(Unit$new);
                var $13255 = $13285;
                break;
        };
        return $13255;
    };
    const Kind$Defs$cache$go = x0 => Kind$Defs$cache$go$(x0);

    function Kind$Defs$cache$(_defs$1) {
        var $13287 = Kind$Defs$cache$go$(Kind$Map$to_list$(_defs$1));
        return $13287;
    };
    const Kind$Defs$cache = x0 => Kind$Defs$cache$(x0);

    function Kind$api$io$check_file$(_file$1) {
        var $13288 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13289 = _m$bind$2;
            return $13289;
        }))(Kind$Synth$file$(_file$1, Kind$Map$new))((_loaded$2 => {
            var self = _loaded$2;
            switch (self._) {
                case 'Either.left':
                    var $13291 = self.value;
                    var $13292 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13293 = _m$bind$4;
                        return $13293;
                    }))(IO$print$(String$flatten$(List$cons$("On \'", List$cons$(_file$1, List$cons$("\':", List$nil))))))((_$4 => {
                        var $13294 = IO$print$($13291);
                        return $13294;
                    }));
                    var $13290 = $13292;
                    break;
                case 'Either.right':
                    var $13295 = self.value;
                    var self = $13295;
                    switch (self._) {
                        case 'Pair.new':
                            var $13297 = self.fst;
                            var $13298 = self.snd;
                            var _nams$6 = $13297;
                            var _defs$7 = $13298;
                            var self = _nams$6;
                            switch (self._) {
                                case 'List.nil':
                                    var $13300 = IO$print$(("File not found or empty: \'" + (_file$1 + "\'.")));
                                    var $13299 = $13300;
                                    break;
                                case 'List.cons':
                                    var $13301 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $13302 = _m$bind$10;
                                        return $13302;
                                    }))(IO$print$(Kind$Defs$report$(_defs$7, _nams$6)))((_$10 => {
                                        var $13303 = Kind$Defs$cache$(_defs$7);
                                        return $13303;
                                    }));
                                    var $13299 = $13301;
                                    break;
                            };
                            var $13296 = $13299;
                            break;
                    };
                    var $13290 = $13296;
                    break;
            };
            return $13290;
        }));
        return $13288;
    };
    const Kind$api$io$check_file = x0 => Kind$api$io$check_file$(x0);

    function Kind$Synth$files$go$(_files$1, _defs$2) {
        var self = _files$1;
        switch (self._) {
            case 'List.cons':
                var $13305 = self.head;
                var $13306 = self.tail;
                var $13307 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13308 = _m$bind$5;
                    return $13308;
                }))(Kind$Synth$file$($13305, _defs$2))((_file_synth$5 => {
                    var self = _file_synth$5;
                    switch (self._) {
                        case 'Either.right':
                            var $13310 = self.value;
                            var _nams$7 = Pair$fst$($13310);
                            var _defs$8 = Pair$snd$($13310);
                            var $13311 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                var $13312 = _m$bind$9;
                                return $13312;
                            }))(Kind$Synth$files$go$($13306, _defs$8))((_rest$9 => {
                                var _nams$10 = List$concat$(_nams$7, Pair$fst$(_rest$9));
                                var _defs$11 = Pair$snd$(_rest$9);
                                var $13313 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                                    var $13314 = _m$pure$13;
                                    return $13314;
                                }))(Pair$new$(_nams$10, _defs$11));
                                return $13313;
                            }));
                            var $13309 = $13311;
                            break;
                        case 'Either.left':
                            var $13315 = Kind$Synth$files$go$($13306, _defs$2);
                            var $13309 = $13315;
                            break;
                    };
                    return $13309;
                }));
                var $13304 = $13307;
                break;
            case 'List.nil':
                var $13316 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13317 = _m$pure$4;
                    return $13317;
                }))(Pair$new$(List$nil, _defs$2));
                var $13304 = $13316;
                break;
        };
        return $13304;
    };
    const Kind$Synth$files$go = x0 => x1 => Kind$Synth$files$go$(x0, x1);

    function Kind$Synth$remove_duplicate_names$(_names$1) {
        var _map$2 = List$fold$(_names$1, Kind$Map$new, (_name$2 => {
            var $13319 = Kind$Map$set(_name$2)(Unit$new);
            return $13319;
        }));
        var $13318 = List$mapped$(BitsMap$keys$(_map$2), Kind$Name$from_bits);
        return $13318;
    };
    const Kind$Synth$remove_duplicate_names = x0 => Kind$Synth$remove_duplicate_names$(x0);

    function Kind$Synth$files$(_files$1, _defs$2) {
        var $13320 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13321 = _m$bind$3;
            return $13321;
        }))(Kind$Synth$files$go$(_files$1, _defs$2))((_got$3 => {
            var _nams$4 = Kind$Synth$remove_duplicate_names$(Pair$fst$(_got$3));
            var _defs$5 = Pair$snd$(_got$3);
            var $13322 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13323 = _m$pure$7;
                return $13323;
            }))(Pair$new$(_nams$4, _defs$5));
            return $13322;
        }));
        return $13320;
    };
    const Kind$Synth$files = x0 => x1 => Kind$Synth$files$(x0, x1);

    function Kind$api$io$check_files$(_files$1) {
        var $13324 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13325 = _m$bind$2;
            return $13325;
        }))(Kind$Synth$files$(_files$1, Kind$Map$new))((_loaded$2 => {
            var _nams$3 = Pair$fst$(_loaded$2);
            var _defs$4 = Pair$snd$(_loaded$2);
            var self = _nams$3;
            switch (self._) {
                case 'List.nil':
                    var $13327 = IO$print$("No valid Kind file found.");
                    var $13326 = $13327;
                    break;
                case 'List.cons':
                    var $13328 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                        var $13329 = _m$bind$7;
                        return $13329;
                    }))(IO$print$(Kind$Defs$report$(_defs$4, _nams$3)))((_$7 => {
                        var $13330 = Kind$Defs$cache$(_defs$4);
                        return $13330;
                    }));
                    var $13326 = $13328;
                    break;
            };
            return $13326;
        }));
        return $13324;
    };
    const Kind$api$io$check_files = x0 => Kind$api$io$check_files$(x0);

    function Kind$api$io$check_term$(_name$1) {
        var $13331 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13332 = _m$bind$2;
            return $13332;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var self = _defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $13334 = self.value;
                    var $13335 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13336 = _m$bind$4;
                        return $13336;
                    }))(IO$print$(Kind$Defs$report$($13334, List$cons$(_name$1, List$nil))))((_$4 => {
                        var $13337 = Kind$Defs$cache$($13334);
                        return $13337;
                    }));
                    var $13333 = $13335;
                    break;
                case 'Maybe.none':
                    var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                    var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                        var $13339 = ("\'" + (_x$4 + "\'"));
                        return $13339;
                    }));
                    var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                    var $13338 = IO$print$((_notfound$3 + ("\u{a}" + _searched$5)));
                    var $13333 = $13338;
                    break;
            };
            return $13333;
        }));
        return $13331;
    };
    const Kind$api$io$check_term = x0 => Kind$api$io$check_term$(x0);

    function Kind$api$io$show_term$(_name$1) {
        var $13340 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13341 = _m$bind$2;
            return $13341;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13342 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13343 = self.value;
                        var _defs$4 = $13343;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13345 = self.value;
                                var self = $13345;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13347 = self.term;
                                        var _term$16 = $13347;
                                        var $13348 = Kind$Term$show$(_term$16);
                                        var $13346 = $13348;
                                        break;
                                };
                                var $13344 = $13346;
                                break;
                            case 'Maybe.none':
                                var $13349 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13344 = $13349;
                                break;
                        };
                        return $13344;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13351 = ("\'" + (_x$4 + "\'"));
                            return $13351;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13350 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13350;
                };
            })());
            return $13342;
        }));
        return $13340;
    };
    const Kind$api$io$show_term = x0 => Kind$api$io$show_term$(x0);

    function Kind$api$io$show_term_normal$(_name$1) {
        var $13352 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13353 = _m$bind$2;
            return $13353;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13354 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13355 = self.value;
                        var _defs$4 = $13355;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13357 = self.value;
                                var self = $13357;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13359 = self.term;
                                        var _term$16 = $13359;
                                        var _norm$17 = Kind$Term$normalize$(_term$16, _defs$4);
                                        var $13360 = Kind$Term$show$(_norm$17);
                                        var $13358 = $13360;
                                        break;
                                };
                                var $13356 = $13358;
                                break;
                            case 'Maybe.none':
                                var $13361 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13356 = $13361;
                                break;
                        };
                        return $13356;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13363 = ("\'" + (_x$4 + "\'"));
                            return $13363;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13362 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13362;
                };
            })());
            return $13354;
        }));
        return $13352;
    };
    const Kind$api$io$show_term_normal = x0 => Kind$api$io$show_term_normal$(x0);

    function IO$purify$(_io$2) {
        var IO$purify$ = (_io$2) => ({
            ctr: 'TCO',
            arg: [_io$2]
        });
        var IO$purify = _io$2 => IO$purify$(_io$2);
        var arg = [_io$2];
        while (true) {
            let [_io$2] = arg;
            var R = (() => {
                var self = _io$2;
                switch (self._) {
                    case 'IO.end':
                        var $13364 = self.value;
                        var $13365 = $13364;
                        return $13365;
                    case 'IO.ask':
                        var $13366 = self.then;
                        var $13367 = IO$purify$($13366(""));
                        return $13367;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const IO$purify = x0 => IO$purify$(x0);

    function Kind$api$check_code$(_code$1) {
        var self = Kind$Defs$read$("Main.kind", _code$1, Kind$Map$new);
        switch (self._) {
            case 'Either.left':
                var $13369 = self.value;
                var $13370 = $13369;
                var $13368 = $13370;
                break;
            case 'Either.right':
                var $13371 = self.value;
                var $13372 = IO$purify$((() => {
                    var _defs$3 = $13371;
                    var _nams$4 = List$mapped$(BitsMap$keys$(_defs$3), Kind$Name$from_bits);
                    var $13373 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $13374 = _m$bind$5;
                        return $13374;
                    }))(Kind$Synth$many$(_nams$4, _defs$3))((_defs$5 => {
                        var $13375 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                            var $13376 = _m$pure$7;
                            return $13376;
                        }))(Kind$Defs$report$(_defs$5, _nams$4));
                        return $13375;
                    }));
                    return $13373;
                })());
                var $13368 = $13372;
                break;
        };
        return $13368;
    };
    const Kind$api$check_code = x0 => Kind$api$check_code$(x0);

    function Kind$Term$read$(_code$1) {
        var self = Kind$Parser$term(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$1));
        switch (self._) {
            case 'Parser.Reply.value':
                var $13378 = self.val;
                var $13379 = Maybe$some$($13378);
                var $13377 = $13379;
                break;
            case 'Parser.Reply.error':
                var $13380 = Maybe$none;
                var $13377 = $13380;
                break;
        };
        return $13377;
    };
    const Kind$Term$read = x0 => Kind$Term$read$(x0);
    const Kind$api$export = (() => {
        var _e$1 = Kind$api$io$term_to_core;
        var _e$2 = Kind$api$io$term_to_scheme;
        var _e$3 = Kind$api$io$terms_to_scheme_lib;
        var _e$4 = Kind$api$io$check_file;
        var _e$5 = Kind$api$io$check_files;
        var _e$6 = Kind$api$io$check_term;
        var _e$7 = Kind$api$io$show_term;
        var _e$8 = Kind$api$io$show_term_normal;
        var _e$9 = Kind$api$check_code;
        var _e$10 = Kind$Term$read;
        var $13381 = IO$monad$((_m$bind$11 => _m$pure$12 => {
            var $13382 = _m$pure$12;
            return $13382;
        }))(Unit$new);
        return $13381;
    })();
    return {
        '$main$': () => run(Kind$api$export),
        'run': run,
        'IO': IO,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'Maybe': Maybe,
        'BitsMap': BitsMap,
        'Maybe.none': Maybe$none,
        'BitsMap.get': BitsMap$get,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Bits.i': Bits$i,
        'Bool.true': Bool$true,
        'Bool.false': Bool$false,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.ltn': Word$ltn,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.ltn': U16$ltn,
        'U16.new': U16$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Name.to_bits': Kind$Name$to_bits,
        'Kind.Map.get': Kind$Map$get,
        'Maybe.default': Maybe$default,
        'Parser.State.new': Parser$State$new,
        'Maybe.some': Maybe$some,
        'Parser.run': Parser$run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.Reply.value': Parser$Reply$value,
        'List.nil': List$nil,
        'List.cons': List$cons,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.many1': Parser$many1,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Cmp.as_eql': Cmp$as_eql,
        'Word.eql': Word$eql,
        'U16.eql': U16$eql,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'List.reverse.go': List$reverse$go,
        'List.reverse': List$reverse,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.read': Nat$read,
        'IO.get_time': IO$get_time,
        'Kind.Synth.load.cached.is_loop': Kind$Synth$load$cached$is_loop,
        'IO.get_file': IO$get_file,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Bits.hex.encode': Bits$hex$encode,
        'Kind.Synth.load.cached.name': Kind$Synth$load$cached$name,
        'Kind.Synth.load.cached.get_file': Kind$Synth$load$cached$get_file,
        'Bool.not': Bool$not,
        'String.is_empty': String$is_empty,
        'IO.get_file_mtime': IO$get_file_mtime,
        'Bool.and': Bool$and,
        'String.eql': String$eql,
        'Pair.new': Pair$new,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'Pair': Pair,
        'Unit.new': Unit$new,
        'Bool.or': Bool$or,
        'Kind.Core.read.spaces': Kind$Core$read$spaces,
        'Kind.Term.ref': Kind$Term$ref,
        'Char.eql': Char$eql,
        'Kind.Term.typ': Kind$Term$typ,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'U16.gte': U16$gte,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'Kind.Core.read.is_name': Kind$Core$read$is_name,
        'Kind.Core.read.name': Kind$Core$read$name,
        'Kind.Core.read.char': Kind$Core$read$char,
        'Kind.Term.all': Kind$Term$all,
        'Kind.Term.lam': Kind$Term$lam,
        'Kind.Term.app': Kind$Term$app,
        'Kind.Term.let': Kind$Term$let,
        'Kind.Term.def': Kind$Term$def,
        'Kind.Term.ann': Kind$Term$ann,
        'String.starts_with': String$starts_with,
        'String.nil': String$nil,
        'String.drop': String$drop,
        'Char.is_hex': Char$is_hex,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U16.mul': U16$mul,
        'U16.inc': U16$inc,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'U16.zero': U16$zero,
        'Char.hex_value16': Char$hex_value16,
        'Kind.Core.read.u16': Kind$Core$read$u16,
        'Kind.Core.read.chrx': Kind$Core$read$chrx,
        'Kind.Term.chr': Kind$Term$chr,
        'Kind.Core.read.strx': Kind$Core$read$strx,
        'Kind.Term.str': Kind$Term$str,
        'Char.dec_value': Char$dec_value,
        'Kind.Core.read.natx': Kind$Core$read$natx,
        'Kind.Term.nat': Kind$Term$nat,
        'Pair.fst': Pair$fst,
        'Nat.eql': Nat$eql,
        'Nat.pred': Nat$pred,
        'Kind.Core.read.find': Kind$Core$read$find,
        'Pair.snd': Pair$snd,
        'Kind.Core.read.term': Kind$Core$read$term,
        'Kind.Core.read': Kind$Core$read,
        'Bool.read': Bool$read,
        'Kind.Status.done': Kind$Status$done,
        'Kind.Def.new': Kind$Def$new,
        'Kind.Synth.load.cached.def': Kind$Synth$load$cached$def,
        'BitsMap.tie': BitsMap$tie,
        'BitsMap.new': BitsMap$new,
        'BitsMap.set': BitsMap$set,
        'Kind.Map.set': Kind$Map$set,
        'Kind.Map.new': Kind$Map$new,
        'Kind.Map': Kind$Map,
        'Kind.Core.dependencies.go': Kind$Core$dependencies$go,
        'List.mapped': List$mapped,
        'Bits.reverse.tco': Bits$reverse$tco,
        'Bits.reverse': Bits$reverse,
        'BitsMap.to_list.go': BitsMap$to_list$go,
        'Kind.Name.from_bits': Kind$Name$from_bits,
        'Kind.Map.to_list': Kind$Map$to_list,
        'Kind.Map.keys': Kind$Map$keys,
        'Kind.Synth.load.cached': Kind$Synth$load$cached,
        'IO.request': IO$request,
        'Kind.Synth.get_kind_code': Kind$Synth$get_kind_code,
        'Parser.is_eof': Parser$is_eof,
        'Parser': Parser,
        'Parser.choice': Parser$choice,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.one': Parser$one,
        'Kind.Parser.comment': Kind$Parser$comment,
        'Kind.Parser.spaces': Kind$Parser$spaces,
        'Parser.get_idx': Parser$get_idx,
        'U16.btw': U16$btw,
        'Kind.Name.is_letter': Kind$Name$is_letter,
        'Kind.Parser.letter': Kind$Parser$letter,
        'List.fold': List$fold,
        'Parser.fail': Parser$fail,
        'String.head': String$head,
        'Kind.Parser.name1': Kind$Parser$name1,
        'Parser.until1': Parser$until1,
        'Parser.wrap1': Parser$wrap1,
        'Kind.Parser.text': Kind$Parser$text,
        'Parser.maybe': Parser$maybe,
        'Kind.Parser.items1': Kind$Parser$items1,
        'Kind.Parser.name': Kind$Parser$name,
        'Kind.Term.ori': Kind$Term$ori,
        'Kind.Parser.block': Kind$Parser$block,
        'Kind.Parser.dom.prop': Kind$Parser$dom$prop,
        'Kind.Term.hol': Kind$Term$hol,
        'Kind.Parser.dom.gen_prop.go': Kind$Parser$dom$gen_prop$go,
        'Kind.Parser.dom.gen_prop': Kind$Parser$dom$gen_prop,
        'Kind.Parser.dom.for': Kind$Parser$dom$for,
        'Kind.Parser.dom.dynamic': Kind$Parser$dom$dynamic,
        'Kind.Parser.dom.text': Kind$Parser$dom$text,
        'Kind.Parser.dom.leaf': Kind$Parser$dom$leaf,
        'Kind.Parser.dom.transform_children': Kind$Parser$dom$transform_children,
        'Kind.Parser.dom.node': Kind$Parser$dom$node,
        'Kind.Parser.dom': Kind$Parser$dom,
        'Kind.Parser.forall': Kind$Parser$forall,
        'Parser.wrap': Parser$wrap,
        'Kind.Parser.items': Kind$Parser$items,
        'Kind.Parser.lambda.make': Kind$Parser$lambda$make,
        'Kind.Parser.lambda.make.start': Kind$Parser$lambda$make$start,
        'Kind.Parser.lambda': Kind$Parser$lambda,
        'Kind.Parser.lambda.erased': Kind$Parser$lambda$erased,
        'Kind.Parser.parenthesis': Kind$Parser$parenthesis,
        'Kind.Parser.letforrange': Kind$Parser$letforrange,
        'Kind.Parser.letforrange.u32': Kind$Parser$letforrange$u32,
        'Kind.Parser.letforrange.with': Kind$Parser$letforrange$with,
        'Kind.Parser.letforrange.u32.with': Kind$Parser$letforrange$u32$with,
        'Kind.Parser.letforrange.i32': Kind$Parser$letforrange$i32,
        'Kind.Parser.letforrange.i32.with': Kind$Parser$letforrange$i32$with,
        'Kind.Parser.letforrange.nat': Kind$Parser$letforrange$nat,
        'Kind.Parser.letforrange.nat.with': Kind$Parser$letforrange$nat$with,
        'Kind.Parser.letforin': Kind$Parser$letforin,
        'Kind.Parser.letforin.with': Kind$Parser$letforin$with,
        'Kind.Parser.letwhile': Kind$Parser$letwhile,
        'Kind.Parser.letwhile.with': Kind$Parser$letwhile$with,
        'Kind.Parser.let': Kind$Parser$let,
        'Kind.Parser.let.omit': Kind$Parser$let$omit,
        'Kind.Parser.getwhile': Kind$Parser$getwhile,
        'Kind.Parser.getwhile.with': Kind$Parser$getwhile$with,
        'Kind.Parser.get': Kind$Parser$get,
        'Kind.Parser.get.omit': Kind$Parser$get$omit,
        'Kind.Parser.def': Kind$Parser$def,
        'Kind.Parser.goal_rewrite': Kind$Parser$goal_rewrite,
        'Kind.Parser.if': Kind$Parser$if,
        'Kind.Code.backslash': Kind$Code$backslash,
        'Kind.Code.escapes': Kind$Code$escapes,
        'Kind.Parser.char.single': Kind$Parser$char$single,
        'Kind.Parser.char': Kind$Parser$char,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'Kind.Parser.string.go': Kind$Parser$string$go,
        'Kind.Parser.string': Kind$Parser$string,
        'Kind.Term.new': Kind$Term$new,
        'Kind.Parser.new': Kind$Parser$new,
        'Kind.Parser.sigma.type': Kind$Parser$sigma$type,
        'Kind.Parser.some': Kind$Parser$some,
        'Kind.Parser.not': Kind$Parser$not,
        'Kind.Parser.left': Kind$Parser$left,
        'Kind.Parser.right': Kind$Parser$right,
        'Kind.Parser.apply': Kind$Parser$apply,
        'Kind.Parser.chain': Kind$Parser$chain,
        'Kind.Parser.mirror': Kind$Parser$mirror,
        'Kind.Name.read': Kind$Name$read,
        'Kind.Parser.list': Kind$Parser$list,
        'Kind.Parser.map': Kind$Parser$map,
        'Kind.Parser.log': Kind$Parser$log,
        'String.map': String$map,
        'Char.to_upper': Char$to_upper,
        'String.to_upper': String$to_upper,
        'String.is_upper': String$is_upper,
        'String.take': String$take,
        'Nat.sub': Nat$sub,
        'String.slice': String$slice,
        'Kind.Term.unroll_nat': Kind$Term$unroll_nat,
        'Word.to_bits': Word$to_bits,
        'U16.to_bits': U16$to_bits,
        'Kind.Term.unroll_chr.bits': Kind$Term$unroll_chr$bits,
        'Kind.Term.unroll_chr': Kind$Term$unroll_chr,
        'Kind.Term.unroll_str': Kind$Term$unroll_str,
        'Kind.Term.reduce': Kind$Term$reduce,
        'Kind.Term.cse': Kind$Term$cse,
        'Kind.Parser.open': Kind$Parser$open,
        'Kind.Parser.do.statements': Kind$Parser$do$statements,
        'Kind.Parser.do': Kind$Parser$do,
        'Parser.try': Parser$try,
        'Parser.avoiding': Parser$avoiding,
        'Kind.Term.extract_name': Kind$Term$extract_name,
        'Kind.Ann.new': Kind$Ann$new,
        'Kind.Parser.case.with': Kind$Parser$case$with,
        'Kind.Parser.case.case': Kind$Parser$case$case,
        'Parser.append_error': Parser$append_error,
        'Kind.Parser.case.group': Kind$Parser$case$group,
        'BitsMap.map': BitsMap$map,
        'Kind.Map.map': Kind$Map$map,
        'Kind.Parser.case.build': Kind$Parser$case$build,
        'Kind.Parser.case': Kind$Parser$case,
        'Kind.Parser.without': Kind$Parser$without,
        'Kind.Parser.switch.case': Kind$Parser$switch$case,
        'Kind.Parser.switch': Kind$Parser$switch,
        'Bits.tail': Bits$tail,
        'Bits.inc': Bits$inc,
        'Nat.to_bits': Nat$to_bits,
        'Maybe.is_some': Maybe$is_some,
        'Kind.Term.gol': Kind$Term$gol,
        'Kind.Parser.goal': Kind$Parser$goal,
        'Kind.Parser.hole': Kind$Parser$hole,
        'Kind.Parser.float.sign': Kind$Parser$float$sign,
        'List.any': List$any,
        'Kind.Parser.float.str_digit': Kind$Parser$float$str_digit,
        'String.from_list': String$from_list,
        'Kind.Parser.float.64': Kind$Parser$float$64,
        'Kind.Parser.float.32': Kind$Parser$float$32,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Kind.Parser.int_pos': Kind$Parser$int_pos,
        'Kind.Parser.int_neg': Kind$Parser$int_neg,
        'Kind.Parser.machine_integer.signed': Kind$Parser$machine_integer$signed,
        'Parser.hex_digit': Parser$hex_digit,
        'Parser.hex_nat': Parser$hex_nat,
        'Kind.Parser.nat': Kind$Parser$nat,
        'Kind.Parser.machine_integer.unsigned': Kind$Parser$machine_integer$unsigned,
        'Kind.Parser.u64': Kind$Parser$u64,
        'Kind.Parser.u32': Kind$Parser$u32,
        'Kind.Parser.u16': Kind$Parser$u16,
        'Kind.Parser.u8': Kind$Parser$u8,
        'Parser.Number.new': Parser$Number$new,
        'Parser.num': Parser$num,
        'Kind.Term.num': Kind$Term$num,
        'Kind.Parser.num': Kind$Parser$num,
        'Kind.Parser.reference': Kind$Parser$reference,
        'Kind.Parser.text_now': Kind$Parser$text_now,
        'Kind.Parser.items_now': Kind$Parser$items_now,
        'List.for': List$for,
        'Kind.Parser.application': Kind$Parser$application,
        'Kind.Parser.application.erased': Kind$Parser$application$erased,
        'Kind.Parser.list_set': Kind$Parser$list_set,
        'Kind.Parser.list_get': Kind$Parser$list_get,
        'Kind.Parser.map_set': Kind$Parser$map_set,
        'Kind.Parser.map_get': Kind$Parser$map_get,
        'Kind.Term.set': Kind$Term$set,
        'Kind.Parser.field_set': Kind$Parser$field_set,
        'Kind.Term.get': Kind$Term$get,
        'Kind.Parser.field_get': Kind$Parser$field_get,
        'Kind.Parser.arrow': Kind$Parser$arrow,
        'Kind.Parser.concat': Kind$Parser$concat,
        'Kind.Parser.equality': Kind$Parser$equality,
        'Kind.Term.ope': Kind$Term$ope,
        'Kind.Parser.op': Kind$Parser$op,
        'Kind.Parser.add': Kind$Parser$add,
        'Kind.Parser.sub': Kind$Parser$sub,
        'Kind.Parser.mul': Kind$Parser$mul,
        'Kind.Parser.div': Kind$Parser$div,
        'Kind.Parser.mod': Kind$Parser$mod,
        'Kind.Parser.ltn': Kind$Parser$ltn,
        'Kind.Parser.lte': Kind$Parser$lte,
        'Kind.Parser.eql': Kind$Parser$eql,
        'Kind.Parser.gte': Kind$Parser$gte,
        'Kind.Parser.gtn': Kind$Parser$gtn,
        'Kind.Parser.and': Kind$Parser$and,
        'Kind.Parser.or': Kind$Parser$or,
        'Kind.Parser.default': Kind$Parser$default,
        'Kind.Parser.cons': Kind$Parser$cons,
        'Kind.Parser.string_concat': Kind$Parser$string_concat,
        'Kind.Parser.sigma': Kind$Parser$sigma,
        'Kind.Parser.inequality': Kind$Parser$inequality,
        'Kind.Parser.rewrite': Kind$Parser$rewrite,
        'Kind.Parser.annotation': Kind$Parser$annotation,
        'Kind.Parser.application.hole': Kind$Parser$application$hole,
        'Kind.Parser.term.suffix': Kind$Parser$term$suffix,
        'Kind.Parser.term': Kind$Parser$term,
        'Kind.Parser.name_term': Kind$Parser$name_term,
        'Kind.Binder.new': Kind$Binder$new,
        'Kind.Parser.binder.homo': Kind$Parser$binder$homo,
        'List.concat': List$concat,
        'List.flatten': List$flatten,
        'Kind.Parser.binder': Kind$Parser$binder,
        'List.length': List$length,
        'Kind.Parser.forall.make': Kind$Parser$forall$make,
        'List.at_last': List$at_last,
        'Kind.Term.var': Kind$Term$var,
        'Kind.Context.get_name_skips': Kind$Context$get_name_skips,
        'Kind.Name.eql': Kind$Name$eql,
        'Kind.Context.find.go': Kind$Context$find$go,
        'Kind.Context.find': Kind$Context$find,
        'Kind.Path.o': Kind$Path$o,
        'Kind.Path.i': Kind$Path$i,
        'Kind.Path.to_bits': Kind$Path$to_bits,
        'Kind.Term.bind': Kind$Term$bind,
        'Trampoline.call': Trampoline$call,
        'Trampoline': Trampoline,
        'Trampoline.wrap': Trampoline$wrap,
        'BitsMap.set_if_empty.cps.go': BitsMap$set_if_empty$cps$go,
        'Trampoline.done': Trampoline$done,
        'BitsMap.set_if_empty.cps': BitsMap$set_if_empty$cps,
        'BitsMap.set_if_empty': BitsMap$set_if_empty,
        'Kind.Map.set_if_empty': Kind$Map$set_if_empty,
        'Kind.Status.init': Kind$Status$init,
        'Kind.Map.def': Kind$Map$def,
        'Kind.Parser.file.def': Kind$Parser$file$def,
        'Kind.Parser.ADT.Constructor.new': Kind$Parser$ADT$Constructor$new,
        'Kind.Parser.ADT.ctor': Kind$Parser$ADT$ctor,
        'Kind.Parser.ADT.Datatype.new': Kind$Parser$ADT$Datatype$new,
        'Kind.Parser.ADT.adt': Kind$Parser$ADT$adt,
        'Kind.Parser.ADT.Datatype.build_term.motive.go': Kind$Parser$ADT$Datatype$build_term$motive$go,
        'Kind.Parser.ADT.Datatype.build_term.motive': Kind$Parser$ADT$Datatype$build_term$motive,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'Kind.Parser.ADT.Datatype.build_term.constructor.go': Kind$Parser$ADT$Datatype$build_term$constructor$go,
        'Kind.Parser.ADT.Datatype.build_term.constructor': Kind$Parser$ADT$Datatype$build_term$constructor,
        'Kind.Parser.ADT.Datatype.build_term.constructors.go': Kind$Parser$ADT$Datatype$build_term$constructors$go,
        'Kind.Parser.ADT.Datatype.build_term.constructors': Kind$Parser$ADT$Datatype$build_term$constructors,
        'Kind.Parser.ADT.Datatype.build_term.go': Kind$Parser$ADT$Datatype$build_term$go,
        'Kind.Parser.ADT.Datatype.build_term': Kind$Parser$ADT$Datatype$build_term,
        'Kind.Parser.ADT.Datatype.build_type.go': Kind$Parser$ADT$Datatype$build_type$go,
        'Kind.Parser.ADT.Datatype.build_type': Kind$Parser$ADT$Datatype$build_type,
        'Kind.Parser.ADT.Constructor.build_term.opt.go': Kind$Parser$ADT$Constructor$build_term$opt$go,
        'Kind.Parser.ADT.Constructor.build_term.opt': Kind$Parser$ADT$Constructor$build_term$opt,
        'Kind.Parser.ADT.Constructor.build_term.go': Kind$Parser$ADT$Constructor$build_term$go,
        'Kind.Parser.ADT.Constructor.build_term': Kind$Parser$ADT$Constructor$build_term,
        'Kind.Parser.ADT.Constructor.build_type.go': Kind$Parser$ADT$Constructor$build_type$go,
        'Kind.Parser.ADT.Constructor.build_type': Kind$Parser$ADT$Constructor$build_type,
        'List.is_empty': List$is_empty,
        'Kind.Term.get_args.go': Kind$Term$get_args$go,
        'Kind.Term.get_args': Kind$Term$get_args,
        'Kind.Parser.ADT.Derive.stringifier.term.cont': Kind$Parser$ADT$Derive$stringifier$term$cont,
        'Kind.Parser.ADT.Derive.stringifier.term.args': Kind$Parser$ADT$Derive$stringifier$term$args,
        'Kind.Parser.ADT.Derive.stringifier.ctr': Kind$Parser$ADT$Derive$stringifier$ctr,
        'Kind.Parser.ADT.Derive.stringifier.term.ctrs': Kind$Parser$ADT$Derive$stringifier$term$ctrs,
        'Kind.Parser.ADT.Derive.stringifier.term': Kind$Parser$ADT$Derive$stringifier$term,
        'Kind.Parser.ADT.Derive.stringifier.type': Kind$Parser$ADT$Derive$stringifier$type,
        'Kind.Parser.ADT.Derived.new': Kind$Parser$ADT$Derived$new,
        'Kind.Parser.ADT.Derive.parser.term.cont': Kind$Parser$ADT$Derive$parser$term$cont,
        'Kind.Parser.ADT.Derive.parser.term.args': Kind$Parser$ADT$Derive$parser$term$args,
        'Kind.Parser.ADT.Derive.parser.term.cses': Kind$Parser$ADT$Derive$parser$term$cses,
        'Kind.Parser.ADT.Derive.parser.term': Kind$Parser$ADT$Derive$parser$term,
        'Kind.Parser.ADT.Derive.parser.type': Kind$Parser$ADT$Derive$parser$type,
        'Kind.Parser.ADT.Derive.serializer.term.cont': Kind$Parser$ADT$Derive$serializer$term$cont,
        'Kind.Parser.ADT.Derive.serializer.term.args': Kind$Parser$ADT$Derive$serializer$term$args,
        'Kind.Parser.ADT.Derive.serializer.ctr.bits': Kind$Parser$ADT$Derive$serializer$ctr$bits,
        'Kind.Parser.ADT.Derive.serializer.ctr': Kind$Parser$ADT$Derive$serializer$ctr,
        'Kind.Parser.ADT.Derive.serializer.term.ctrs': Kind$Parser$ADT$Derive$serializer$term$ctrs,
        'Bits.zeros': Bits$zeros,
        'Nat.div': Nat$div,
        'Nat.bitlen': Nat$bitlen,
        'Kind.Parser.ADT.Derive.serializer.term': Kind$Parser$ADT$Derive$serializer$term,
        'Kind.Parser.ADT.Derive.serializer.type': Kind$Parser$ADT$Derive$serializer$type,
        'Kind.Parser.ADT.Derive.serializer.term.bits': Kind$Parser$ADT$Derive$serializer$term$bits,
        'Kind.Parser.ADT.Derive.deserializer.term.cont': Kind$Parser$ADT$Derive$deserializer$term$cont,
        'Kind.Parser.ADT.Derive.deserializer.term.args': Kind$Parser$ADT$Derive$deserializer$term$args,
        'Kind.Parser.ADT.Derive.deserializer.term.cses': Kind$Parser$ADT$Derive$deserializer$term$cses,
        'Kind.Parser.ADT.Derive.deserializer.term': Kind$Parser$ADT$Derive$deserializer$term,
        'Kind.Parser.ADT.Derive.deserializer.type': Kind$Parser$ADT$Derive$deserializer$type,
        'Kind.Parser.ADT.Derive.by_name': Kind$Parser$ADT$Derive$by_name,
        'Kind.Parser.file.adt': Kind$Parser$file$adt,
        'Kind.Parser.file.end': Kind$Parser$file$end,
        'Kind.Parser.file': Kind$Parser$file,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Kind.Code.color': Kind$Code$color,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'Kind.Defs.read': Kind$Defs$read,
        'Kind.Synth.load.go': Kind$Synth$load$go,
        'Kind.Synth.files_of.make': Kind$Synth$files_of$make,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.split.go': String$split$go,
        'String.split': String$split,
        'Kind.Synth.files_of': Kind$Synth$files_of,
        'Kind.Synth.load': Kind$Synth$load,
        'Kind.Status.wait': Kind$Status$wait,
        'Kind.Check': Kind$Check,
        'Kind.Check.result': Kind$Check$result,
        'Kind.Error.undefined_reference': Kind$Error$undefined_reference,
        'Kind.Error.waiting': Kind$Error$waiting,
        'Kind.Error.indirect': Kind$Error$indirect,
        'Maybe.mapped': Maybe$mapped,
        'Kind.MPath.o': Kind$MPath$o,
        'Kind.MPath.i': Kind$MPath$i,
        'Kind.Error.patch': Kind$Error$patch,
        'Kind.MPath.to_bits': Kind$MPath$to_bits,
        'Kind.Term.check.patch': Kind$Term$check$patch,
        'Kind.Error.type_mismatch': Kind$Error$type_mismatch,
        'Kind.Error.show_goal': Kind$Error$show_goal,
        'Kind.Path.nil': Kind$Path$nil,
        'Kind.MPath.nil': Kind$MPath$nil,
        'Kind.Term.check.direct': Kind$Term$check$direct,
        'Kind.Term.check.get_name_of_self_type.slice': Kind$Term$check$get_name_of_self_type$slice,
        'Kind.Term.check.get_name_of_self_type': Kind$Term$check$get_name_of_self_type,
        'Kind.Term.check.expand.num.nat': Kind$Term$check$expand$num$nat,
        'Kind.Term.check.expand.num.int': Kind$Term$check$expand$num$int,
        'Kind.Term.check.expand.num.other': Kind$Term$check$expand$num$other,
        'Kind.Term.check.expand.num': Kind$Term$check$expand$num,
        'Kind.Term.check.infer_types_of_with': Kind$Term$check$infer_types_of_with,
        'Kind.Term.normalize': Kind$Term$normalize,
        'Kind.Term.check.expand.cse.motive.go': Kind$Term$check$expand$cse$motive$go,
        'List.tail': List$tail,
        'Kind.Term.SmartMotive.vals.cont': Kind$Term$SmartMotive$vals$cont,
        'Kind.Term.SmartMotive.vals': Kind$Term$SmartMotive$vals,
        'Kind.Term.SmartMotive.nams.cont': Kind$Term$SmartMotive$nams$cont,
        'Kind.Term.SmartMotive.nams': Kind$Term$SmartMotive$nams,
        'List.zip': List$zip,
        'Nat.gte': Nat$gte,
        'Bits.concat': Bits$concat,
        'Kind.Term.serialize.go': Kind$Term$serialize$go,
        'Kind.Term.serialize': Kind$Term$serialize,
        'Bits.eql': Bits$eql,
        'Kind.Term.identical': Kind$Term$identical,
        'Kind.Term.SmartMotive.replace': Kind$Term$SmartMotive$replace,
        'Kind.Term.SmartMotive.make': Kind$Term$SmartMotive$make,
        'Kind.Term.check.expand.cse.motive': Kind$Term$check$expand$cse$motive,
        'Kind.Term.check.expand.cse.argument': Kind$Term$check$expand$cse$argument,
        'Maybe.or': Maybe$or,
        'Kind.Term.check.expand.cse.cases': Kind$Term$check$expand$cse$cases,
        'Kind.Term.check.expand.cse': Kind$Term$check$expand$cse,
        'Kind.Error.cant_infer': Kind$Error$cant_infer,
        'Kind.Term.check.cant_infer': Kind$Term$check$cant_infer,
        'Kind.Term.get_bnds': Kind$Term$get_bnds,
        'List.last.go': List$last$go,
        'List.last': List$last,
        'Kind.Term.check.expand.set.count_params': Kind$Term$check$expand$set$count_params,
        'Nat.for': Nat$for,
        'List.get': List$get,
        'Kind.Term.check.expand.new.pair': Kind$Term$check$expand$new$pair,
        'Kind.Term.check.expand.new': Kind$Term$check$expand$new,
        'Kind.Term.check.expand.get.selector': Kind$Term$check$expand$get$selector,
        'Kind.Term.check.expand.get': Kind$Term$check$expand$get,
        'Kind.Term.check.expand.set.selector': Kind$Term$check$expand$set$selector,
        'Kind.Term.check.expand.set': Kind$Term$check$expand$set,
        'String.at': String$at,
        'String.last': String$last,
        'Kind.Term.check.expand.ope': Kind$Term$check$expand$ope,
        'BitsSet.has': BitsSet$has,
        'BitsSet.mut.has': BitsSet$mut$has,
        'Kind.Term.equal.extra_holes.funari': Kind$Term$equal$extra_holes$funari,
        'Kind.Term.has_holes': Kind$Term$has_holes,
        'Kind.Term.equal.hole': Kind$Term$equal$hole,
        'Kind.Term.equal.extra_holes.filler': Kind$Term$equal$extra_holes$filler,
        'Kind.Term.equal.extra_holes': Kind$Term$equal$extra_holes,
        'BitsSet.set': BitsSet$set,
        'BitsSet.mut.set': BitsSet$mut$set,
        'Bool.eql': Bool$eql,
        'Kind.Term.equal.go': Kind$Term$equal$go,
        'BitsSet.new': BitsSet$new,
        'BitsSet.mut.new': BitsSet$mut$new,
        'Kind.Term.check': Kind$Term$check,
        'Kind.Term.patch_at': Kind$Term$patch_at,
        'Kind.Synth.fix': Kind$Synth$fix,
        'Kind.Status.fail': Kind$Status$fail,
        'Kind.Synth.one': Kind$Synth$one,
        'BitsMap.from_list': BitsMap$from_list,
        'Kind.Term.inline.names': Kind$Term$inline$names,
        'Kind.Term.inline.reduce': Kind$Term$inline$reduce,
        'Kind.Term.inline': Kind$Term$inline,
        'BitsMap.values.go': BitsMap$values$go,
        'BitsMap.values': BitsMap$values,
        'Kind.Core.var_name': Kind$Core$var_name,
        'Kind.Name.show': Kind$Name$show,
        'Bits.to_nat': Bits$to_nat,
        'U16.show_hex': U16$show_hex,
        'Kind.Code.escape.char': Kind$Code$escape$char,
        'Kind.Code.escape.go': Kind$Code$escape$go,
        'Kind.Code.escape': Kind$Code$escape,
        'Kind.Core.show.go': Kind$Core$show$go,
        'Kind.Core.show': Kind$Core$show,
        'Kind.Defs.core': Kind$Defs$core,
        'Kind.api.io.term_to_core': Kind$api$io$term_to_core,
        'Kind.Comp.Defs.compile.defn.adjust': Kind$Comp$Defs$compile$defn$adjust,
        'Kind.Comp.var': Kind$Comp$var,
        'Kind.Comp.nil': Kind$Comp$nil,
        'Kind.Comp.ref': Kind$Comp$ref,
        'Kind.Comp.Prim.bool': Kind$Comp$Prim$bool,
        'Kind.Comp.Prim.nat': Kind$Comp$Prim$nat,
        'Kind.Comp.Prim.bits': Kind$Comp$Prim$bits,
        'Kind.Comp.Prim.u16': Kind$Comp$Prim$u16,
        'Kind.Comp.Prim.u32': Kind$Comp$Prim$u32,
        'Kind.Comp.Prim.string': Kind$Comp$Prim$string,
        'Kind.Comp.Prim.natives': Kind$Comp$Prim$natives,
        'Kind.Term.equal': Kind$Term$equal,
        'Kind.Comp.compile.prim_of': Kind$Comp$compile$prim_of,
        'String.ends_with': String$ends_with,
        'Kind.Comp.compile.adt.get_fields': Kind$Comp$compile$adt$get_fields,
        'Kind.Comp.compile.adt.get_constructors': Kind$Comp$compile$adt$get_constructors,
        'Kind.Comp.Prim.data': Kind$Comp$Prim$data,
        'Kind.Comp.compile.adt': Kind$Comp$compile$adt,
        'Kind.Comp.eli': Kind$Comp$eli,
        'Kind.Comp.app': Kind$Comp$app,
        'Kind.Comp.let': Kind$Comp$let,
        'Kind.Comp.nat': Kind$Comp$nat,
        'Kind.Comp.chr': Kind$Comp$chr,
        'Kind.Comp.str': Kind$Comp$str,
        'Kind.Comp.lam': Kind$Comp$lam,
        'Kind.Comp.ins': Kind$Comp$ins,
        'Kind.Comp.compile': Kind$Comp$compile,
        'Kind.Comp.Defs.compile.defn': Kind$Comp$Defs$compile$defn,
        'Kind.Comp.Defs.compile': Kind$Comp$Defs$compile,
        'Kind.Comp.dependency_sort.go': Kind$Comp$dependency_sort$go,
        'Kind.Comp.dependency_sort': Kind$Comp$dependency_sort,
        'String.take_while': String$take_while,
        'String.drop_while': String$drop_while,
        'Kind.Comp.replace': Kind$Comp$replace,
        'List.create.go': List$create$go,
        'List.create': List$create,
        'Kind.Comp.Prim.instantiator.go': Kind$Comp$Prim$instantiator$go,
        'Kind.Comp.Prim.instantiator': Kind$Comp$Prim$instantiator,
        'Kind.Comp.get_args.go': Kind$Comp$get_args$go,
        'Kind.Comp.get_args': Kind$Comp$get_args,
        'Kind.Comp.get_arity': Kind$Comp$get_arity,
        'Kind.Comp.get_vars': Kind$Comp$get_vars,
        'Kind.Comp.Prim.inst.go': Kind$Comp$Prim$inst$go,
        'Kind.Comp.Prim.inst': Kind$Comp$Prim$inst,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Kind.Comp.transpile.term': Kind$Comp$transpile$term,
        'List.map': List$map,
        'List.seq.go': List$seq$go,
        'List.seq': List$seq,
        'Kind.Comp.txt': Kind$Comp$txt,
        'Kind.Comp.subst': Kind$Comp$subst,
        'Kind.Comp.apply': Kind$Comp$apply,
        'Kind.Comp.Prim.elim': Kind$Comp$Prim$elim,
        'Kind.Comp.Prim.eliminator': Kind$Comp$Prim$eliminator,
        'BBT.lookup': BBT$lookup,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'BBT': BBT,
        'Map': Map,
        'Kind.Comp.transpile.global_definitions': Kind$Comp$transpile$global_definitions,
        'Kind.Comp.transpile': Kind$Comp$transpile,
        'Kind.Comp.Language.new': Kind$Comp$Language$new,
        'Kind.Comp.Grammar.new': Kind$Comp$Grammar$new,
        'Kind.Comp.Target.Scheme.null': Kind$Comp$Target$Scheme$null,
        'Kind.Comp.Target.Scheme.name': Kind$Comp$Target$Scheme$name,
        'Kind.Comp.Target.Scheme.inst_name': Kind$Comp$Target$Scheme$inst_name,
        'Kind.Comp.Target.Scheme.elim_name': Kind$Comp$Target$Scheme$elim_name,
        'Kind.Comp.Target.Scheme.lambda': Kind$Comp$Target$Scheme$lambda,
        'Kind.Comp.Target.Scheme.application': Kind$Comp$Target$Scheme$application,
        'Kind.Comp.Target.Scheme.local_definition': Kind$Comp$Target$Scheme$local_definition,
        'Kind.Comp.Target.Scheme.global_application': Kind$Comp$Target$Scheme$global_application,
        'Kind.Comp.Target.Scheme.nest_lambdas.aux': Kind$Comp$Target$Scheme$nest_lambdas$aux,
        'Kind.Comp.Target.Scheme.nest_lambdas': Kind$Comp$Target$Scheme$nest_lambdas,
        'Kind.Comp.Target.Scheme.global_function': Kind$Comp$Target$Scheme$global_function,
        'Kind.Comp.Target.Scheme.select': Kind$Comp$Target$Scheme$select,
        'Char.to_string': Char$to_string,
        'Kind.Comp.Target.Scheme.string_literal': Kind$Comp$Target$Scheme$string_literal,
        'Kind.Comp.Target.Scheme.nat': Kind$Comp$Target$Scheme$nat,
        'Kind.Comp.Target.Scheme.exports': Kind$Comp$Target$Scheme$exports,
        'Kind.Comp.Target.Scheme.module': Kind$Comp$Target$Scheme$module,
        'Kind.Comp.Target.Scheme.program': Kind$Comp$Target$Scheme$program,
        'Kind.Comp.Target.Scheme.grammar': Kind$Comp$Target$Scheme$grammar,
        'Kind.Comp.Native.new': Kind$Comp$Native$new,
        'Kind.Comp.Target.Scheme.natives': Kind$Comp$Target$Scheme$natives,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kind.Comp.Target.Scheme.optimizeds': Kind$Comp$Target$Scheme$optimizeds,
        'Kind.Comp.Target.Scheme.basics': Kind$Comp$Target$Scheme$basics,
        'Kind.Comp.Target.Scheme.Language': Kind$Comp$Target$Scheme$Language,
        'Kind.api.io.term_to_scheme': Kind$api$io$term_to_scheme,
        'Kind.Synth.many': Kind$Synth$many,
        'Kind.Comp.dependency_sort.module': Kind$Comp$dependency_sort$module,
        'Kind.Comp.transpile.module': Kind$Comp$transpile$module,
        'Kind.api.io.terms_to_scheme_lib': Kind$api$io$terms_to_scheme_lib,
        'BitsMap.keys.go': BitsMap$keys$go,
        'BitsMap.keys': BitsMap$keys,
        'Kind.Synth.file': Kind$Synth$file,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Kind.Term.show.as_nat.go': Kind$Term$show$as_nat$go,
        'Kind.Term.show.as_nat': Kind$Term$show$as_nat,
        'Kind.Term.show.is_ref': Kind$Term$show$is_ref,
        'Kind.Term.show.app.done': Kind$Term$show$app$done,
        'Kind.Term.show.app': Kind$Term$show$app,
        'BitsMap.to_list': BitsMap$to_list,
        'Kind.Term.show.go': Kind$Term$show$go,
        'Kind.Term.show': Kind$Term$show,
        'Kind.Defs.report.types': Kind$Defs$report$types,
        'List.filter': List$filter,
        'Kind.Error.is_undef': Kind$Error$is_undef,
        'Kind.Error.is_mistake': Kind$Error$is_mistake,
        'Kind.Error.is_goal': Kind$Error$is_goal,
        'Kind.Error.relevant': Kind$Error$relevant,
        'Kind.Context.show': Kind$Context$show,
        'Kind.Term.expand_at': Kind$Term$expand_at,
        'Kind.Term.expand_ct': Kind$Term$expand_ct,
        'Kind.Term.expand': Kind$Term$expand,
        'Kind.Error.show': Kind$Error$show,
        'Kind.Error.origin': Kind$Error$origin,
        'Kind.Defs.report.errors': Kind$Defs$report$errors,
        'Kind.Defs.report': Kind$Defs$report,
        'IO.set_file': IO$set_file,
        'Kind.Synth.load.cached.set_file': Kind$Synth$load$cached$set_file,
        'Bool.show': Bool$show,
        'Kind.Defs.cache.go': Kind$Defs$cache$go,
        'Kind.Defs.cache': Kind$Defs$cache,
        'Kind.api.io.check_file': Kind$api$io$check_file,
        'Kind.Synth.files.go': Kind$Synth$files$go,
        'Kind.Synth.remove_duplicate_names': Kind$Synth$remove_duplicate_names,
        'Kind.Synth.files': Kind$Synth$files,
        'Kind.api.io.check_files': Kind$api$io$check_files,
        'Kind.api.io.check_term': Kind$api$io$check_term,
        'Kind.api.io.show_term': Kind$api$io$show_term,
        'Kind.api.io.show_term_normal': Kind$api$io$show_term_normal,
        'IO.purify': IO$purify,
        'Kind.api.check_code': Kind$api$check_code,
        'Kind.Term.read': Kind$Term$read,
        'Kind.api.export': Kind$api$export,
    };
})();